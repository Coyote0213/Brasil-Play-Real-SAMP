#include <a_samp>
#include <a_http>
#include <core>
#include <float>
#include <time>
#include <file>
#include <a_objects>
#include <Dini>
#include <servermoneyGM>
#include <a_actor>
#include <sampvoice>
#include <streamer>
#include <DOF2>
#include <discord-connector>
#include <sscanf2>
#include <discord-cmd>
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define SVNOME "hostname Brasil Play Real RolePlay [VOIP ON]"
#define MPNOME "mapname Whitelist on"
#define SINOME "weburl discord.gg/MSh42WBfnw"
#define SVVERSAO "Whitelist on"
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#if defined MAX_PLAYERS
    #undef MAX_PLAYERS
    #define MAX_PLAYERS (101)
#endif
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#if defined MAX_VEHICLES
    #undef MAX_VEHICLES
    #define MAX_VEHICLES (1000)
#endif
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define BPR::%0(%1) 		forward %0(%1);\
							public %0(%1)
#define totalveiculos 710
#define totalveiculosh 720
#define totalveiculosc 730
#define CAR_AMOUNT 750
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define ForPlayers(%1) for(new %1 = 0; %1 < MAX_PLAYERS; %1++) if(IsPlayerConnected(%1) && !IsPlayerNPC(%1))
#define SearchTrue(%1,%2) if(strfind(%1,%2,true)!=-1)
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define ARMA 23
#define R_SOUND 50.0
#define WHITE -1
#define YELLOW 0xFFFF00AA
#define DISCORD_CMD_PREFIX "bpr!"
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- =-=-=-=-=-=-=-=
#define COR_PM                   0x9999FFF6
#define COR_BOPE                 0x666699F6
#define COR_EXE                  0x00660CF6
#define COR_MEDE                 0xCC6666F6
#define COR_AZULZAO              0x005FFFFF
#define ROXO                     0xC2A2DAAA
#define COR_CINZA1 		         0xB4B5B7FF
#define Cor_TDT 	         	 0x109FFFAA
#define COR_GI 	                 0x009999F6
#define COR_PRE 	             0x6699FFF6
#define COR_HITMAN 	             0xA9A9A9F6
#define COR_REP               	 0xFF9900AA
#define COR_TAXI 	             0x66FFFFF6
#define COR_PF 			         0x999966F6
#define COR_COSA 		         0x996600F6
#define COR_YAK 		         0x660066F6
#define COR_GRO 		         0x33FF00F6
#define COR_FARC 		         0xFFCC99F6
#define COR_PC 		             0x93833EF6
#define COR_BALLAS 		         0x9900CCF6
#define COR_VAGOS 		         0xFFFF33F6
#define COLOR_BLACK              0x000000AA
#define COR_SONS 		         0x980000AA
#define COR_PR 		             0xD8D800AA
#define COR_ELEMENT 	         0x50FF7BAA
#define COR_PCC 	             0x808000AA
#define COR_TDR 		         0xB8B1E0FF
#define COR_WHITE 		         0xFFF8F8AA
#define VERDE2 			         0x33FF00FF
#define COLOR_DEPTH 	         0x993333FF
#define COLOR_ALERTA		 	 0xFF0000FF
#define COR_ADMIN 		         0xFF34B3F6
#define COR_HELPER               0x33CCFFAA
#define COLOR_WHITE              0xFFFFFFAA
#define LARANJA 		         0xFF6600AA
#define VERDECLARO 		         0x00FF0CAA
#define VERDEFRACO               0x80cf80AA
#define COLOR_AMARELOR           0xFFFF00AA
#define VERDEFRACOR              0x80cf80AA
#define COR_3DLABEL              0xF68E00F6
#define COLOR_AZULBB             0xCCCCFFFF
#define TEAM_CYAN_COLOR          0xA92BF6F6
#define GCOP_COLOR 		         0x6666FFC8
#define COLOR_LIGHTRED 	         0xFF6347AA
#define COLORGZ_FamiliaShelby    0x006699C8
#define COLORGZ_PF               0x000000C8
#define COLOR_GREEN              0x33AA33AA
#define COLOR_PURPLE             0xC2A2DAAA
#define TEAM_GROVE_COLOR         0x00D900C8
#define TEAM_BALLAS_COLOR        0x9900FFC8
#define TEAM_TDT_color       	 0x2641FEC8
#define COLOR_GRAD1              0xB4B5B7FF
#define COLOR_GRAD2              0xBFC0C2FF
#define COLOR_GRAD3 	         0xBFC0C2FF
#define COLOR_GRAD4              0xD8D8D8FF
#define COLOR_GRAD5              0xF0F0F0FF
#define COLOR_GRAD6              0xF0F0F0FF
#define COLOR_LIGHTBLUE          0x33CCFFAA
#define COLOR_DBLUE              0x2641FEAA
#define COLOR_YELLOW             0xFFFF00AA
#define COLOR_GREY               0xAFAFAFAA
#define COLOR_RED                0xAA3333AA
#define COLOR_LIGHTGREEN         0x9ACD32AA
#define TEAM_VAGOS_COLOR         0xFFC801C8
#define CINZA                    0xAFAFAFAA
#define PRETO                    0x000000FF
#define COLOR_FADE4              0x8C8C8C8C
#define COLOR_FADE5              0x6E6E6E6E
#define COLOR_FADE3              0xAAAAAAAA
#define COLOR_RCARRO             0x80FF8096
#define TEAM_HIT_COLOR           0xFFFFFF00
#define CINZA2                   0xBFC0C2FF
#define COLOR_FADE2 	         0xC8C8C8C8
#define COLOR_NEWS 		         0xFFA500AA
#define COLOR_NEWS               0xFFA500AA
#define COLOR_ALLDEPT            0xFF8282AA
#define COLOR_FADE1              0xE6E6E6E6
#define COLOR_R                  0x6666CCFF
#define COLORGZ_FARC             0x685000C8
#define COLOR_MSG                0x934FF6F6
#define COLORGZ_GI               0x009999F6
#define AZUL3                    0x33CCFFAA
#define CINZA1                   0xB4B5B7FF
#define COLOR_RG1                0xFFF8F8AA
#define COLOR_RG2                0xB4B5B7FF
#define COLOR_YELLOW2            0xF5DEB3AA
#define COLOR_TAXISTA            0xF68E00F6
#define TEAM_BLUE_COLOR          0x8D8DFF00
#define COLORGZ_LH               0x00E7C6C8
#define COLORGZ_EXE              0x33AA33C8
#define COLOR_EXE                0x33AA33C8
#define COLOR_ALIANCA 	         0xA9A9A9FF
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FIM CORES =-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define TEAM_CYAN 					     1

#define MenuCoins                       15000
#define MenuConce                       15001
#define MenuGaragem                     15002

#define MenuGOV                         10001
#define MenuGOVSF                       10002
#define MenuMEDICOS                     10003
#define MenuMEDICOSSF                   10005
#define MenuTaxi                        10006
#define MenuLSNews                      10009
#define MenuPM                          10004
#define MenuPF                          10007
#define MenuPC                          10008
#define MenuBOPE                        10010
#define MenuEB                          10011
#define MenuMCN                         10012
#define MenuVagos                       10013
#define MenuCV                          10014
#define MenuSOA                         10015
#define MenuElements                    10016
#define MenuTriads                      10017
#define MenuPCC                         10018
#define MenuGrota 						10019
#define MenuGroove 						10019

#define DIALOG_CAIXA_ELETRONICO 		 172
#define DIALOG_CAIXA_ELETRONICO_INPUT 	 173
#define DIALOG_TRANSFERIR                176
#define DIALOG_RANGE 					 1264
#define MAX_INTEGRANTE_NOMES      		 26
#define MAX_ZONE_NAME 					 28
#define DIALOG_EQUIP                     166
#define DIALOG_INFO 				     167
#define DIALOG_ALUGAR 				     1212
#define DIALOG_ALUGAR2 				     1213
#define PEGARMAFIA 				         1741
#define DIALOG_ADVOGADO 				 177
#define DIALOG_ADVOGADO_2 				 178
#define DIALOG_ADVOGADO_3 				 179
#define DIALOG_ADVOGADO_4 				 180
#define DIALOG_ADVOGADO_5 				 181
#define typedef else
#define Controle 						 TogglePlayerControllable
#define TextCasaVenda               	 "[ CASA A VENDA ]\nTipo da Casa: %s\nPreco da Casa: R$%d\nNivel: %d\nID: %d\nPara comprar digite /comprarcasa"
#define TextCasa                         "Dono da Casa: %s\nNivel: %d\nID: %d"
#define TextCasaAl                       "Dono da Casa: %s\nAluguel da Casa: R$%d\nNivel: %d\nID: %d\nPara alugar digite /alugarquarto"
#define TextEmpresaVenda               	 "[ EMPRESA A VENDA ]\n%s\nPreco da Empresa: R$%d\nNivel: %d\nID: %d\nPara comprar digite /compraremp"
#define TextEmpresa                      "%s\nDono da Empresa: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nID: %d\nAperte Enter Para Entrar"
#define TextMEmpresaVenda                "[ MINI EMPRESA A VENDA ]\n%s\nPreco da Mini Empresa: R$%d\nNivel: %d\nID: %d\nPara comprar digite /compraremp"
#define TextMEmpresa                      "%s\nDono da Mini Empresa: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nID: %d"
#define char 						     255
#define SlotAKM4 				         1
#define MAX_MACONHAS 			         5000
#define MAX_SPIKESTRIPS 				 200
#define MAX_ORGS                         36
#define COLOR_MARROM 					 org
#define PICKUP_TYPE_NONE 				 0
#define PICKUP_TYPE_WEAPON 			     1
#define DIALOGID2 				         1389
#define SPECIAL_ACTION_PISSING2          68
#define KEY_HORN 						 2
#define CHECKPOINT_Nenhum                0
#define CHECKPOINT_HOME                  12
#define MAX_HOUSES                       291
#define MAX_BIZZES 						 8
#define MAX_SBIZZES 					 15
#define granacarro 						 200
#define precomorte 						 100
#define pingmaximo 					     1200
#define MAX_TRUNK_SLOTS					 (5)
#define GasMax 							 100
#define void        					 0
#define RunortTime 					     15000
#define RefuelWait 						 5000
#define MAX_STRING 						 255

#define D_TIROS 99

#define MOVE_SPEED              100.0
#define ACCEL_RATE              0.03

#define CAMERA_MODE_NONE    	0
#define CAMERA_MODE_FLY     	1

#define MOVE_FORWARD    		1
#define MOVE_BACK       		2
#define MOVE_LEFT       		3
#define MOVE_RIGHT      		4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8

#define DIALOG_MENU 1678
#define DIALOG_MOVE_SPEED 1679
#define DIALOG_ROT_SPEED 1680
#define DIALOG_EXPORTNAME 1681
#define DIALOG_CLOSE_NEW 1682
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FIM DEFINES =-=-=-=-=-=-=-=-=-=-=-=-=-=
static Diminuir, PenaEscolhida, PrecoAdvogado, Advogando, Ownado, PresidiarioID,SoltandoPreso,Presidiarios;
static Cidadao[MAX_PLAYER_NAME];
static PresoNome1[MAX_PLAYER_NAME], PresoNome2[MAX_PLAYER_NAME], PresoNome3[MAX_PLAYER_NAME];
static PresoNome4[MAX_PLAYER_NAME], PresoNome5[MAX_PLAYER_NAME], PresoNome6[MAX_PLAYER_NAME];
static PresoNome7[MAX_PLAYER_NAME], PresoNome8[MAX_PLAYER_NAME], PresoNome9[MAX_PLAYER_NAME], PresoNome10[MAX_PLAYER_NAME];
static PresoID1, PresoID2, PresoID3, PresoID4, PresoID5, PresoID6, PresoID7, PresoID8, PresoID9, PresoID10;

const Float:fScale = 5.0;

new DCC_Channel:g_WelcomeChannelId;
new TunarOffer[MAX_PLAYERS];
new TunarPrice[MAX_PLAYERS];
new FloodAn[MAX_PLAYERS];

new Text:Text_Disparo0;
new Text:Text_Disparo1;
new Text:Text_Disparo2;
new Text:Text_Disparo3;

new PlayerText:velo[MAX_PLAYERS][37];
new PlayerText:RodaPe[MAX_PLAYERS][1];

new RetirouCarro1[MAX_PLAYERS];
new RetirouCarro2[MAX_PLAYERS];
new RetirouCarro3[MAX_PLAYERS];
new RetirouCarro4[MAX_PLAYERS];

//new NCAtivo[MAX_PLAYERS];

new CarroPlayer[MAX_PLAYERS];
new BikeSpawn[MAX_PLAYERS];

//Sistema de Continuar
new timecont[MAX_PLAYERS];

new online;
//new uptime = 0;

/*new MenuTimer;
new Float:fPX, Float:fPY, Float:fPZ,
			Float:fVX, Float:fVY, Float:fVZ,
			Float:object_x, Float:object_y, Float:object_z;*/
new bool:IsCreating[MAX_PLAYERS] 		= false;
new bool:IsReSettingStart[MAX_PLAYERS] 	= false;
new bool:IsReSettingEnd[MAX_PLAYERS] 	= false;
new bool:SettingFirstLoc[MAX_PLAYERS] 	= false;
new bool:SettingLastLoc[MAX_PLAYERS] 	= false;
new bool:IsCamMoving[MAX_PLAYERS] 		= false;

enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];

enum Coordinates
{
	Float:StartX,
	Float:StartY,
	Float:StartZ,
	Float:EndX,
	Float:EndY,
	Float:EndZ,
	Float:StartLookX,
	Float:StartLookY,
	Float:StartLookZ,
	Float:EndLookX,
	Float:EndLookY,
	Float:EndLookZ,
	MoveSpeed,
	RotSpeed
}
new coordInfo[MAX_PLAYERS][Coordinates];

//* ======================================================================== *//
new Text:Textdraw0;
new Text:Textdraw1;
new Text:Textdraw2;
new Text:Textdraw3;
new Text:Textdraw4;
new Text:Textdraw5;
new Text:Textdraw6;
new Text:Textdraw7;
new Text:Textdraw8;
new Text:Textdraw9;
new Text:Textdraw10;
new Text:Textdraw11;
new Text:Textdraw12;
new Text:Textdraw13;
new Text:Textdraw14;
new Text:Textdraw15;
//* ======================================================================== *//

new Text:Text_RG[8];

new PlayerText:Nomep[MAX_PLAYERS];
new PlayerText:IDp[MAX_PLAYERS];
new PlayerText:Dinheirop[MAX_PLAYERS];

new bool:OlhandoRG[MAX_PLAYERS];

new Watching[MAX_PLAYERS];
new Goto[MAX_PLAYERS];
new pcbomba;
new psinc;
new txtcost = 2;
new GZFavela;
new GZConstrucao;
new GZPraia;
new GZPuteiro;
new GZNavio;
new GZSkate;
new GZAero;
new GZPark;
new donoskate;
new donoaero;
new donopark;
new pcorrida;
new phbomba;
new TimerJet;
new GuerranaConstrucao;
new GuerranaPraia;
new GuerranaPuteiro;
new GuerranaNavio;
new GuerranaFavela;
new GuerranoSkate;
new GuerranoAero;
new GuerranoPark;
new TempoGuerraFavela;
new TempoGuerraPraia;
new TempoGuerraPuteiro;
new TempoGuerraConstrucao;
new TempoGuerraNavio;
new TempoGuerraAero;
new TempoGuerraSkate;
new TempoGuerraPark;
new donoFavela;
new donoConstrucao;
new donoPraia;
new donoPuteiro;
new donoNavio;
new TempoAnReporter;
new TempoGuerraCasarao;
new psequestrar;
new pamarrar;
new pcorridaoni;
new GZGuerra;
new weaponhacktimer;
new TempoGuerraEstacao;
new GuerranoCasarao;
new GZEstacao;
new donoestacao;
new GZCasarao;
new donocasarao;
new GuerranaEstacao;
new tempovictim;
new TempoSinc;
new TempoSincronizar;
new TempoAdministrador;
new TempoHelper;
new TempoGuerra;
new tempozip;
new roubovictim;
new tempobinco;
new shifthour;
new year;
new month;
new day;
new hour;
new minute;
new second;
new roubozip;
new tempoloja2;
new roubobinco;
new tempoloja1;
new rouboloja2;
new tempolot;
new rouboloja1;
new tempobanco;
new roubolot;
new roubocaixa;
new roubobanco;
new pickups;
new TempoRecarga;
new TempoLogin;
new TempoAn;
new TempoCorrida;
new TempoSequestrar;
new TempoAmarrar;
new TempoServicoTaxi;
new TempoServicoOnibus;
new TempoServicoPolicia;
new TempoServicoMedico;
new TempoServicoMecanico;
new TempoMecanico;
new TempoMedico;
new TempoCorridaOni;
new TempoAnGov;
new Tempocbomba;
new Tempohbomba;
new TempoJetpack;
new v[6];
//=========================[Sistema de Salario]=================================
new SalarioCargo1 = 1000,
    SalarioCargo2 = 2000,
    SalarioCargo3 = 3000,
    SalarioCargo4 = 4000,
    SalarioCargo5 = 5000
;
//=========================[Sistema de Salario]=================================
new timer[500];
new PedirAvaliar = 999;
new CreatedCar = 0;
new usarbombas = 0;
new TendoGuerra = 0;
new temporoubobanco = 0;
new temporoubocaixa = 0;
new temporoubolot = 0;
new temporouboloja1 = 0;
new temporouboloja2 = 0;
new temporoubobinco = 0;
new temporoubozip = 0;
new temporoubovictim = 0;
new UsouComando[MAX_PLAYERS] = 0;
new Trancado[MAX_VEHICLES] = 0;
new Text:forum[MAX_PLAYERS];
new Text:BPRText[MAX_PLAYERS];
new Text:Speed[MAX_PLAYERS];
new PortaoTaxi;
new PortaoBOPE;
new PortaoSlander;
new PortaoDreigon;
new PortaoDreigon2;
new portaoPC2;
new portaoPC1;
new PortaoTaxiSF;
new prf1, prf2, prf3, prf4;
new PortaoSFN;
enum OldSpeedoPos{Float:sX,Float:sY,Float:sZ}
new Float:sVehicle_X[MAX_VEHICLES], Float:sVehicle_Y[MAX_VEHICLES], Float:sVehicle_Z[MAX_VEHICLES];
new TruckMission[MAX_PLAYERS];
new var1[MAX_PLAYERS];
new pban[MAX_PLAYERS];
new mudandonick[MAX_PLAYERS];
new gPlayerTerminal[MAX_PLAYERS];
new gPlayerRota[MAX_PLAYERS];
new gmsg[MAX_PLAYERS];
new gSpamCount[MAX_PLAYERS][2];
new Equipamentos[MAX_PLAYERS];
new Dia, Mes, Ano, Hora, Minuto, Segundo;
new CaixaEletronico_Ok[MAX_PLAYERS];
new TransferenciaID[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new StreetCallTime[MAX_PLAYERS];
new StreetAccepted[MAX_PLAYERS];
new PassadoUmDia;
new RecentlyShot[MAX_PLAYERS];
new Avaliado[MAX_PLAYERS];
new antifakekill[MAX_PLAYERS];
new TempoAvaliar[MAX_PLAYERS];
new Sequestrado[MAX_PLAYERS];
new Multa[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new pbomba[MAX_PLAYERS];
new pbomba2[MAX_PLAYERS];
new pbomba3[MAX_PLAYERS];
new Float:PosBombaX, Float:PosBombaY, Float:PosBombaZ;
new CapacetePlayer[MAX_PLAYERS];
new gpTimes[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteJob[MAX_PLAYERS];
new away[MAX_PLAYERS];
new storeexit[MAX_PLAYERS];
new barexit[MAX_PLAYERS];
new lotericaexit[MAX_PLAYERS];
new EmDialog[MAX_PLAYERS];
new Reduzido[MAX_PLAYERS];
new bool:KeyAtivada[MAX_PLAYERS];
new bool:TextShow[MAX_PLAYERS];
new SemBombas[MAX_PLAYERS];
new OfAssalto[MAX_PLAYERS];
new precoassalto[MAX_PLAYERS];
new AdvOffer[MAX_PLAYERS];
new AdvPrice[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new skinadm[MAX_PLAYERS];
new roubando[MAX_PLAYERS];
new ProvocoBanco[MAX_PLAYERS];
new ProvocoCaixa[MAX_PLAYERS];
new ProvocoCaixaP[MAX_PLAYERS];
new ProvocoCaixV[MAX_PLAYERS];
new ProvocoLot[MAX_PLAYERS];
new ProvocoLoja1[MAX_PLAYERS];
new ProvocoLoja2[MAX_PLAYERS];
new ProvocoBinco[MAX_PLAYERS];
new ProvocoZip[MAX_PLAYERS];
new ProvocoVictim[MAX_PLAYERS];
new ProvocoEstacao[MAX_PLAYERS];
new ProvocoCasarao[MAX_PLAYERS];
new spawnado[MAX_PLAYERS];
new admtrampando[MAX_PLAYERS];
new helpertrampando[MAX_PLAYERS];
new logouagora[MAX_PLAYERS];
new Float:FaceAngle[MAX_PLAYERS];
new Float:PlayerHPP[MAX_PLAYERS];
new vehicleTime[MAX_PLAYERS], lastVehicle[MAX_PLAYERS];
new VehicleIDD[MAX_PLAYERS];
new ammoo[13][MAX_PLAYERS];
new Float:APP[MAX_PLAYERS];
new vehicledd[MAX_PLAYERS];
new interior[MAX_PLAYERS];
new Float:xx[MAX_PLAYERS];
new Float:yy[MAX_PLAYERS];
new Float:zz[MAX_PLAYERS];
new skinneg[MAX_PLAYERS];
new gunsinc[13][MAX_PLAYERS];
new virt[MAX_PLAYERS];
new sincronizando[MAX_PLAYERS];
new OnEquipado[MAX_PLAYERS];
new OnMafiaEquipado[MAX_PLAYERS];
new MudarSenhaAceito[MAX_PLAYERS];
new MudarNickAceito[MAX_PLAYERS];
new Dominando[MAX_PLAYERS];
new ProvocoFavela[MAX_PLAYERS];
new ProvocoNavio[MAX_PLAYERS];
new ProvocoConstrucao[MAX_PLAYERS];
new ProvocoPraia[MAX_PLAYERS];
new ProvocoPuteiro[MAX_PLAYERS];
new ProvocoSkate[MAX_PLAYERS];
new ProvocoPark[MAX_PLAYERS];
new ProvocoAero[MAX_PLAYERS];
new PolicialInRonda[MAX_PLAYERS];
new Text3D:nivellabel[MAX_PLAYERS];
new Text3D:HouseLabel[MAX_HOUSES];
new Text3D:BizzLabel[MAX_BIZZES];
new Text3D:SBizzLabel[MAX_SBIZZES];
new HouseEntered[MAX_PLAYERS];
new bool:animm[MAX_PLAYERS];
//============Sistema de Eleicoes In-Game=======================================
new CandidatosRegistrados;
new Candidato1[MAX_PLAYER_NAME];
new Candidato2[MAX_PLAYER_NAME];
new Candidato3[MAX_PLAYER_NAME];
new Votos[3];
new Partido1[MAX_STRING];
new Partido2[MAX_STRING];
new Partido3[MAX_STRING];
new VTrancado[MAX_VEHICLES] = 0;
new CreatedCars[200];
new gstring[128];
enum TrInfo{Float:MinX,Float:MinY,Float:MaxX,Float:MaxY,exemortos,talmortos,almortos};
new Territorio[TrInfo];
enum BlInfo{pMotivo[126],pAdmBan[MAX_PLAYER_NAME],pData[20],pHora[20],pNick[64]};
new SenhasAtendimento = 0;
new                             MaiorID;
enum Kelvee
{
    pMotivo[126],
    pAdmBan[MAX_PLAYER_NAME],
    pData[20],
    pHora[20],
    pNick[64],
    IrIp[32],
    PergSenha[64],
    NumSenha
};
new InfoKelve[MAX_PLAYERS][Kelvee];
new BanInfo[MAX_PLAYERS][BlInfo];
enum sInfo{sCreated,Float:sX,Float:sY,Float:sZ,sObject,};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];
static gTeam[MAX_PLAYERS];
//new VagaSobrando;
enum vinfo
{
	vNick[MAX_PLAYER_NAME],
	vTipo
};
new VipInfo[51][vinfo];
BPR::VipCheck(playerid)
{
	new idx = 0;
    while(idx < sizeof(VipInfo))
	{
	    if(strcmp(VipInfo[idx][vNick],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}

BPR::VipVaga()
{
    for(new idx=0; idx<sizeof(VipInfo); idx++)
	{
	    if(strcmp(VipInfo[idx][vNick],"Ninguem", true ) == 0 )
		{
		    //VagaSobrando = 1;
			return 1;
		}
	}
	//VagaSobrando = 0;
	return 0;
}
BPR::SaveVip()
{
	new idx;
	new File: file2;
	while (idx < sizeof(VipInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",VipInfo[idx][vNick],VipInfo[idx][vTipo]);
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/Vips.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Vips.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

BPR::KickarWL(playerid)
{
	   Kick(playerid);
       return 1;
}

BPR::LoadVip()
{
	new arrCoords[2][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Vips.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(VipInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(VipInfo[idx][vNick], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    VipInfo[idx][vTipo] = strval(arrCoords[1]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
enum e_votacao
{
	bool:iniciada,
	sim,
	nao,
}
new bool:votou[MAX_PLAYERS];
new votacao[e_votacao];
enum CofreInfo{Dinheiro,Materiais,Maconha,Cocaina,Crack,};
new CofreOrg[MAX_ORGS][CofreInfo];
new pCofreOrg[MAX_PLAYERS];
enum Oinfo{Lider[MAX_PLAYER_NAME],Sub444[MAX_PLAYER_NAME],Sub555[MAX_PLAYER_NAME],Membro1[MAX_PLAYER_NAME],Membro2[MAX_PLAYER_NAME],
Membro3[MAX_PLAYER_NAME],Membro4[MAX_PLAYER_NAME],Membro5[MAX_PLAYER_NAME],Membro6[MAX_PLAYER_NAME],
Membro7[MAX_PLAYER_NAME],Membro8[MAX_PLAYER_NAME],Membro9[MAX_PLAYER_NAME],Membro10[MAX_PLAYER_NAME],
Membro11[MAX_PLAYER_NAME],Membro12[MAX_PLAYER_NAME],Membro13[MAX_PLAYER_NAME],Membro14[MAX_PLAYER_NAME],
Membro15[MAX_PLAYER_NAME],Membro16[MAX_PLAYER_NAME],Membro17[MAX_PLAYER_NAME],Membro18[MAX_PLAYER_NAME],
Membro19[MAX_PLAYER_NAME],
Membro20[MAX_PLAYER_NAME],};
new InfoOrg[36][Oinfo];
new admhide[MAX_PLAYERS];
new helperhide[MAX_PLAYERS];
stock Encrypt(string[])
{
    for(new x=0; x < strlen(string); x++)
    {
        string[x] += (3^x) * (x % 15);
        if(string[x] > (0xff))
        {
            string[x] -= 64;
        }
    }
    return 1;
}

stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT;
		else if(ud > 0) direction = MOVE_BACK_LEFT;
		else            direction = MOVE_LEFT;
	}
	else if(lr > 0)
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;
		else if(ud > 0) direction = MOVE_BACK_RIGHT;
		else			direction = MOVE_RIGHT;
	}
	else if(ud < 0) 	direction = MOVE_FORWARD;
	else if(ud > 0) 	direction = MOVE_BACK;

	return direction;
}

stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CT[3];
	GetPlayerCameraPos(playerid, CT[0], CT[1], CT[2]);
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;
	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CT, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}

//--------------------------------------------------

stock GetNextCameraPosition(move_mode, Float:CJ[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CJ[0]+OFFSET_X;
			Y = CJ[1]+OFFSET_Y;
			Z = CJ[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CJ[0]-OFFSET_X;
			Y = CJ[1]-OFFSET_Y;
			Z = CJ[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CJ[0]-OFFSET_Y;
			Y = CJ[1]+OFFSET_X;
			Z = CJ[2];
		}
		case MOVE_RIGHT:
		{
			X = CJ[0]+OFFSET_Y;
			Y = CJ[1]-OFFSET_X;
			Z = CJ[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CJ[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CJ[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CJ[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CJ[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CJ[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CJ[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CJ[0]+(OFFSET_X  - OFFSET_Y);
			Y = CJ[1]+(OFFSET_Y  + OFFSET_X);
			Z = CJ[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CJ[0]+(OFFSET_X  + OFFSET_Y);
			Y = CJ[1]+(OFFSET_Y  - OFFSET_X);
			Z = CJ[2]+OFFSET_Z;
		}
	}
}
//--------------------------------------------------

stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);
	//DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	IsReSettingStart[playerid] 	= false;
	IsReSettingEnd[playerid] 	= false;
	SettingFirstLoc[playerid] 	= false;
	SettingLastLoc[playerid] 	= false;
	return 1;
}

//--------------------------------------------------

stock FlyMode(playerid)
{
	new Float:X, Float:Y, Float:Z;
	IsCreating[playerid] = true;
	SettingFirstLoc[playerid] = true;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);
	TogglePlayerSpectating(playerid, true);
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	SendClientMessage(playerid, -1, "No Clip Ativado com sucesso!");
	return 1;
}

IsNumeric(szInput[]) {
	new iChar, i = 0;
	while ((iChar = szInput[i++])) if (!('0' <= iChar <= '9')) return 0;
	return 1;
}

stock SumirRG(playerid)
{
	TextDrawHideForPlayer(playerid, Text_RG[0]);
 	TextDrawHideForPlayer(playerid, Text_RG[1]);
  	TextDrawHideForPlayer(playerid, Text_RG[2]);
   	TextDrawHideForPlayer(playerid, Text_RG[3]);
   	TextDrawHideForPlayer(playerid, Text_RG[4]);
    TextDrawHideForPlayer(playerid, Text_RG[5]);
    TextDrawHideForPlayer(playerid, Text_RG[6]);
    TextDrawHideForPlayer(playerid, Text_RG[7]);

	PlayerTextDrawHide(playerid, Nomep[playerid]);
 	PlayerTextDrawHide(playerid, IDp[playerid]);
  	PlayerTextDrawHide(playerid, Dinheirop[playerid]);
  	return 1;
}

stock ColocarAureola(playerid)
{
    SetPlayerAttachedObject(playerid,7,2992,2,0.306000,-0.012000,0.009000,0.000000,-95.299942,-1.399999,1.000000,1.000000,1.000000);
    SetPlayerAttachedObject(playerid,9,2992,2,0.313000,-0.007000,0.032999,-0.299999,83.700019,0.000000,1.000000,1.000000,1.000000);
}
stock TirarAureola(playerid)
{
    RemovePlayerAttachedObject(playerid, 7);
	RemovePlayerAttachedObject(playerid, 9);
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FORWARD'S =-=-=-=-=-=-=-=-=-=-=-=-=-=-=
forward ABroadCastah(COLOR,const string[],level);
forward Desmanche(playerid);
forward MontarArma(playerid);
forward KickarWL(playerid);
forward RC(playerid);
forward CheckMoney();
forward OnPlayerShootPlayer(Shooter,Target,Float:HealthLost,Float:ArmourLost);
forward prfClosed();
forward prfClosed2();
forward PoliciaFederalClosed();
forward IsACopSFCar(carid);
forward IsACopSF(playerid);
forward IsACopLS(playerid);
forward PortaoTaxiSF2();
forward IsASFN(playerid);
forward IsASFNCar(carid);
forward DrogasCombate(playerid,org);
forward FDP(playerid);
forward OnEnterExitModShop(playerid, enterexit, interiorid);
forward AnimRouboBanco(playerid);
forward AnimRouboLot(playerid);
forward AnimRouboLoja(playerid);
forward AnimRouboAmmu(playerid);
forward IsaMatObterPlace(playerid);
forward IsaMatEntregarPlace(playerid);
forward IsaMafMatObterPlace(playerid);
forward IsaMafMatEntregarPlace(playerid);
forward AnimRouboBinco(playerid);
forward AnimRouboZip(playerid);
forward AnimRouboVictim(playerid);
forward PortaoBOPE2();
forward PortaoCoyote();
forward PortaoTaxi2();
forward PortaoSFN2();
forward Velocimetro(playerid);
forward SendHelperMessage(COLOR, string[]);
forward SendStarCityMessage(COLOR, string[]);
forward MostrarRG(playerid,targetid);
forward usebomb(playerid);
forward VipCheck(playerid);
forward VipVaga();
forward LoadVip();
forward SaveVip();
forward SaveCars();
forward LoadCar();
forward HelperCheck(playerid);
forward HelpersVaga();
forward AdmCheck(playerid);
forward AdmsVaga();
forward LoadAdm();
forward SaveAdm();
forward LoadHelper();
forward SaveHelper();
forward SendMensagens();
forward ReduzTempo(playerid);
forward UsarNovamente(playerid);
forward VoltarBombas(playerid);
forward PresoMulta(playerid);
forward Sincronizar(playerid);
forward CheckOwner(playerid);
forward verping();
forward kickping(playerid);
forward Fixhour(hora);
forward Aroubo();
forward Aroubo2();
forward Aroubo3();
forward Aroubo4();
forward Aroubo5();
forward Aroubo6();
forward Aroubo7();
forward Aroubo8();
forward AcabarMochila(playerid);
forward RouboBanco(playerid);
forward RouboLot(playerid);
forward RouboLoja1(playerid);
forward RouboLoja2(playerid);
forward RouboBinco(playerid);
forward RouboZip(playerid);
forward RouboVictim(playerid);
forward LoginAgora(playerid);
forward Corrida();
forward Sequestrar();
forward Amarrar();
forward CorridaOni();
forward hbomba();
forward cbomba();
forward Sinc();
forward Administrador(playerid);
forward CheckOwnerb(playerid);
forward CheckOwnerh(playerid);
forward GuerraTerrorista(playerid);
forward SendVIPMessage(color, string[]);
forward CheckHack();
forward GuerraFavela(playerid);
forward GuerraConstrucao(playerid);
forward GuerraPraia(playerid);
forward GuerraPuteiro(playerid);
forward GuerraNavio(playerid);
forward GuerraSkate(playerid);
forward GuerraPark(playerid);
forward GuerraAero(playerid);
forward ColocarGang(playerid, Vaga, Nome);
forward RecriarObjeto();
forward DestruirObjeto(objid);
forward CriarExplosao(Float:X,Float:Y,Float:Z,tipo,Float:diam);
forward NSemAn(playerid);
forward OnPlayerTeamPrivmsg(playerid,text[]);
forward ScoreLevel(playerid);
forward IsAVIP(playerid);
forward IsAGOV(playerid);
forward IsAGOVSF(playerid);
forward IsAElements(playerid);
forward IsABOPE(playerid);
forward IsABOPESF(playerid);
forward IsAEx(playerid);
forward IsAJornal(playerid);
//forward IsAJornalCar(carid);
forward IsAHit(playerid);
forward IsABikeCar(carid);
forward IsAGI(playerid);
forward IsASONS(playerid);
forward IsAPCC(playerid);
forward IsAComandoVermelho(playerid);
forward IsAgrota(playerid);
forward IsAtcp(playerid);
forward IsATriad(playerid);
forward IsAYa(playerid);
forward IsAOni(playerid);
forward IsAOniCar(carid);
forward IsATaxi(playerid);
forward IsATaxiCar(carid);
forward IsATaxiSF(playerid);          
forward IsATaxiSFCar(carid);
forward gasolina(playerid);
forward IsAVagos(playerid);
forward IsAFDN(playerid);
forward IsABallas(playerid);
forward IsAHelperCar(carid);
forward IsAHelper(playerid);
forward IsAada(playerid);
forward IsAadaCar(carid);
forward carroVIP(carid);
forward IsAPoliciaCivilCar(carid);
forward GuerraEstacao(playerid);
forward GuerraCasarao(playerid);
forward IsAAl(playerid);
forward IsAAlCar(carid);
forward IsAGroove(playerid);
forward IsAGrooveCar(carid);
forward IsAB40(playerid);
forward IsAB40Car(carid);
forward IsATDT(playerid);
forward IsATDTCar(carid);
forward IsAmilicia(playerid);
forward IsAmiliciaCar(carid);
forward PDEx2();
forward PortaoReporter2();
forward PortaoBallas();
forward PortaoPoliciaC1();
forward PortaoPoliciaC2();
forward pd1();
forward pd2();
forward gt3gate2();
forward gt3gate4();
forward pd3();
forward pd4();
forward pd5();
forward pd6();
forward pd7();
forward GaragemDpClosed();
forward GaragemDpClosed2();
forward Elementslosed();
forward Elementslosed();
forward Elementslosed2();
forward PortaoGov2();
forward Portao2();
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward PortaooPC2();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward fecharFamiliaShelby1();
forward fecharFamiliaShelby3();
forward SaveTrunk();
forward LoadTrunk();
forward ReduceTimer(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward CarroMala(vehicleid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward ABroadCast(COLOR,const string[],level);
forward HelperBroadCast(COLOR,const string[],level);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward SBan(playerid, string[], string2[]);
forward BanLog(string[]);
forward VipsLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward IsAnAmBPRanceCar(carid);
forward IsAnAmBPRanceSFCar(carid);
forward IsAAmbu(playerid);
forward IsAAmbuSF(playerid);
forward IsAGOV(playerid);
forward IsAGatev(carid);
forward PortaoDreigon3();
forward IsACopCar(carid);
forward IsArma(playerid);
forward IsAEnforcerCar(carid);
forward IsACaminhaozinhoCar(carid);
//forward IsAMenuCar(playerid);
forward IsAMecCar(carid);
forward IsAMec(playerid);
forward IsAPFCar(carid);
forward IsACosaNostraCar(carid);
forward IsACosaNostra(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAAdm(playerid);
forward IsABandido(playerid);
forward IsAMember(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(COLOR,const string[]);
forward OOCNews(COLOR,const string[]);
forward SendEmpregoMessage(Emprego, COLOR, string[]);
forward SendFamilyMessage(family, COLOR, string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearMarriage(playerid);
forward ClearCrime(playerid);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward CheckGas();
forward Fillup();
forward CorridaTrack();
forward SyncTime();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward ini_GetKey(line[]);
forward ini_GetValue(line[]);
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
forward RemoveRoadblock(playerid);
forward RemoveRoadCones(playerid);
forward RemoveRoadPregos(playerid);
forward BackupClear(playerid, calledbytimer);
forward ClearChatbox(playerid, lines);
/*>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= FIM FORWARD'S =-=-=-=-=-=-=-=-=-=-=-=-=
new Cores[] = {0xF8F8FFAA,0x95FF90AA,0x78B4FFAA, 0xFFA0FAAA, 0xF8F8FFAA,0x95FF90AA, 0x78B4FFAA, 0xFFA0FAAA,
0xF8F8FFAA,0x95FF90AA, 0x78B4FFAA, 0xFFA0FAAA, 0xF8F8FFAA,0x95FF90AA,0x78B4FFAA, 0xFFA0FAAA, 0x78B4FFAA,};
>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
new Mensagenscima[8][128] ={
    "[BPR] CHAME SEUS AMIGOS PARA JOGAREM AQUI, VOCE AJUDARA O SERVIDOR A CRESCER!",
	"[BPR] NOVATO? PRECISA DE AJUDA? USE: /relatorio",
	"[BPR] DIVULGUE NOSSO SERVIDOR PARA SEUS AMIGOS",
	"[BPR] VOCE GANHA BENEFICIOS DIVULGANDO NOSSO SERVIDOR!!",
	"[BPR] ESTA PERDIDO? USE: /GPS",
	"[BPR] PRECISANDO DE AJUDA? DIGITE /AJUDA",
	"[BPR] VISITE NOSSO FORUM: https://discord.gg/MSh42WBfnw",
	"[BPR] PARA VER QUANTOS POLICIAS TEM ONLINE USE /online"
};
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::SendMensagens()
{
    new random1 = random(sizeof(Mensagenscima));new random2 = random(sizeof(Cores));
    format(gstring, sizeof(gstring), "%s", Mensagenscima[random1]);
    SendClientMessageToAll(Cores[random2],gstring);OnPropUpdate();SaveCars();return true;
}*/
new CarOffered[MAX_PLAYERS];
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
enum Admin
{
	gMembro[MAX_PLAYER_NAME],
	AdminVaga,
};
new AdmInfo[31][Admin];
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
enum Helper
{
	hMembro[MAX_PLAYER_NAME],
	HelperVaga,
};
new HelperInfo[21][Helper];
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::HelperCheck(playerid)
{
    new idx = 0;
    while(idx < sizeof(HelperInfo))
	{
	    if(strcmp(HelperInfo[idx][hMembro],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::HelpersVaga()
{
	new storedcopname[64];
	new File: file = fopen("Configuracoes/Helpers.cfg", io_read);
	if (file)
	{
		new valtmp[MAX_PLAYER_NAME];
		while (fread(file, valtmp) > 0)
		{
			strmid(storedcopname, valtmp, 0, strlen("Vazio"), 255);
			if ((strcmp(storedcopname, "Vazio", true, strlen("Vazio")) == 0) && (strlen("Vazio") == strlen(storedcopname)))
			{
				fclose(file);
				//VagaSobrando = 1;
				return 1;
			}
		}
	}
	fclose(file);
	//VagaSobrando = 0;
	return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::AdmCheck(playerid)
{
    new idx = 0;
    while(idx < sizeof(AdmInfo))
	{
	    if(strcmp(AdmInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::AdmsVaga()
{
	new storedcopname[64];
	new File: file = fopen("Configuracoes/Admins.cfg", io_read);
	if (file)
	{
		new valtmp[MAX_PLAYER_NAME];
		while (fread(file, valtmp) > 0)
		{
			strmid(storedcopname, valtmp, 0, strlen("Vazio"), 255);
			if ((strcmp(storedcopname, "Vazio", true, strlen("Vazio")) == 0) && (strlen("Vazio") == strlen(storedcopname)))
			{
				fclose(file);
				//VagaSobrando = 1;
				return 1;
			}
		}
	}
	fclose(file);
	//VagaSobrando = 0;
	return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::SaveAdm()
{
	new idx;
	new File: file2;
	while (idx < sizeof(AdmInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",AdmInfo[idx][gMembro],AdmInfo[idx][AdminVaga]);
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/Admins.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Admins.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::LoadAdm()
{
	new arrCoords[2][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Admins.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(AdmInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(AdmInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    AdmInfo[idx][AdminVaga] = strval(arrCoords[1]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::SaveHelper()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HelperInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",HelperInfo[idx][hMembro],HelperInfo[idx][HelperVaga]);
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/Helpers.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Helpers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
BPR::LoadHelper()
{
	new arrCoords[2][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Helpers.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(HelperInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(HelperInfo[idx][hMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    HelperInfo[idx][HelperVaga] = strval(arrCoords[1]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
enum SAZONE_MAIN {SAZONE_NAME[28],Float:SAZONE_AREA[6]};
static const gSAZones[][SAZONE_MAIN] = {
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield",     				{1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield",   				{1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield",     				{1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield",     				{1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Castelo",           			{2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint ",          			{-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Parque Gleen",               	{1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Parque Gleen",               	{1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Parque Gleen",              	{1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Morro",                 		{1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Morro",                 		{2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Morro",                 		{2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Morro",                 		{2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Morro",                 		{2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Morro",                 		{2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Morro",                 		{2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Aeroporto Los Santos",    	{1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Aeroporto Los Santos",    	{1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Aeroporto Los Santos",    	{1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Aeroporto Los Santos",    	{1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Aeroporto Los Santos",    	{1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Aeroporto Los Santos",    	{2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery",     				{1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery",     				{1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada",         				{-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Citys Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
stock right(sorrce[], len){new retval[MAX_STRING], srclen;srclen = strlen(sorrce);strmid(retval, sorrce, srclen - len, srclen, MAX_STRING);return retval;}
stock ini_GetKey( line[] ){new keyRes[128];keyRes[0] = 0;if ( strfind( line , "=" , true ) == -1 ) return keyRes;strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );return keyRes;}
stock ini_GetValue( line[] ){new valRes[128];valRes[0]=0;if ( strfind( line , "=" , true ) == -1 ) return valRes;strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );return valRes;}
stock IsPlayerInFavela(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 2117.333 && y >= -1069.962 && x <= 2261.841 && y <= -959.4252) return true;else return 0;}
stock IsPlayerInAero(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 1395.7454 && y >= -2368.6396 && x <= 1566.4358 && y <= -2204.4346) return true;else return 0;}
stock IsPlayerInSkate(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 1861.9410 && y >= -1450.6462 && x <= 1976.5867 && y <= -1351.4069) return true;else return 0;}
stock IsPlayerInPark(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 1847.332 && y >= -1267.349 && x <= 2060.291 && y <= -1137.074) return true;else return 0;}
stock IsPlayerInEstacao(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 1687.613 && y >= -1958.204 && x <= 1813.106 && y <= -1859.51) return true;else return 0;}
stock IsPlayerInCasarao(playerid){new Float:x,Float:y,Float:z;GetPlayerPos(playerid, x, y, z);if(x >= 1098.173 && y >= -2084.531 && x <= 1299.723 && y <= -2005.577) return true;else return 0;}


stock IsPlayerInConstrucao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -2140.7778 && y >= 130.1505 && x <= -2024.3932 && y <= 310.5679) return 1;
    else return 0;
}

stock IsPlayerInNavio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -1679.5659 && y >= 77.0877 && x <= -1468.2355 && y <= 193.9810) return 1;
    else return 0;
}
    
stock IsPlayerInPraia(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -2976.2480 && y >= 390.3303 && x <= -2804.0000 && y <= 662.8046) return 1;
    else return 0;
}

stock IsPlayerInPuteiro(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -2728.6143 && y >= 1312.8477 && x <= -2574.5186 && y <= 1494.8794) return 1;
    else return 0;
}

stock IsPlayerInLosSantos(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 44.60 && y >= -2892.90 && x <= 2997.00 && y <= -768.00) return 1;
    else return 0;
}
stock IsPlayerInSanFierro(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -2997.40 && y >= -1115.50 && x <= -1213.90 && y <= 1659.60) return 1;
    else return 0;
}
stock GetPlayer2DZone(playerid, zone[], len)
{
    new Float:x, Float:y, Float:z;GetPlayerPos(playerid, x, y, z);for(new i = 0; i != sizeof(gSAZones); i++) {
        if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4]) {
            return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
        }
    }
    return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
stock GetPena(id)
{
	new Pena[3];
	switch(id)
	{
	    case 1:{format(Pena,sizeof(Pena),"10");return Pena;}
		case 2:{format(Pena,sizeof(Pena),"20");return Pena;}
        case 3:{format(Pena,sizeof(Pena),"30");return Pena;}
		case 4:{format(Pena,sizeof(Pena),"40");return Pena;}
		case 5:{format(Pena,sizeof(Pena),"50");return Pena;}
	}
	format(Pena, sizeof(Pena), "");
	return Pena;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
stock ChecarveiculoMatheus(Float:radi, playerid, vehicleid)
{
    if(IsPlayerConnected(playerid)) {
        new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;GetPlayerPos(playerid,PX,PY,PZ);GetVehiclePos(vehicleid, X,Y,Z);new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);if(Distance <= radi*radi) {
            return true;
        }
    }
    return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
stock GetWeaponModel(weaponid)
{
    switch(weaponid) {
        case 1:
            return 331;
        case 2..8:
            return weaponid+331;
        case 9:
            return 341;
        case 10..15:
            return weaponid+311;
        case 16..18:
            return weaponid+326;
        case 22..29:
            return weaponid+324;
        case 30,31:
            return weaponid+325;
        case 32:
            return 372;
        case 33..45:
            return weaponid+324;
        case 46:
            return 371;
    }
    return 0;
}
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
new vehName[][] ={"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus","Voodoo","Pony","Mule","Cheetah","AmBPRance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider","Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer","Hotring Racer",
"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain","NeBPRa","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","BPRlet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor",
"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car","Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer","Luggage Trailer",
"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-
enum cInfo{cModel,Float:cLocationx,Float:cLocationy,Float:cLocationz,Float:cAngle,cColorOne,cColorTwo,cOwner[MAX_PLAYER_NAME],cDescription[MAX_PLAYER_NAME],cValue,cLicense,cRegistration,cOwned,cLock,ownedvehicle,Float:lx,Float:ly,Float:lz,Float:langle,cGrana,cID,};
new CarInfo[50][cInfo];
enum StreetInfo{Tels[20],PLojaA1,PLojaA2,PLojaA3,PLojaA4,PpLoja247,PpLoja2472,ArmaLoja[52],InicioGuerra,PAbriuRG,};
new VisionInfo[MAX_PLAYERS][StreetInfo];
new aNames[55][] ={
"Desarmado", "Soqueira", "Taco de Golf", "Cacetete",
"Faca", "Taco de Base-Ball", "Pa de pedreiro", "Cano", "Espada", "Motoserra", "Vibrador", "Vibrador", "Vibrador", "Vibrador",
"Flores", "Pe de cabra", "Granada", "Bomba de Gas", "Coquetel-Molotov", "Desconhecido 19", "Desconhecido 20", "Jetpack", "Pistola 9mm", "Pistola 9mm com Silenciador",
"Desert Eagle", "Shotgun", "Escopeta do cano serrado", "Escopeta de combate", "Micro Uzi", "MP5", "Ak-47", "M4", "Tec9", "Rifle", "Rifle-Sniper",
"Lanca Missil", "Lanca Missil RPG", "Lanca Chamas", "Minigun", "Explosivo Remoto", "Detonador", "Spray", "Extintor", "Camera", "oculos de Visao noturna", "oculos Infra Vermelho",
"Paraquedas", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido"};
new NicksProibidos[42][MAX_PLAYER_NAME]  ={
"com1","com2","com3","com4","com5","com6","com7","com8","com9","lpt1","lpt2","lpt3","lpt4","lpt5","lpt6","lpt7",
"lpt8","lpt9","clock$","prn","nul","con","[BOT]","Carl","Rocky","Sony","BOT","CON","con","con1","aux","aux1","prn","PRN","AUX","BPF","BPS","BPL",
"Server_Lixao","crashar_servidor","Crashar_Servidor","Homem_Aranha"};


new kickname[MAX_PLAYER_NAME];new sendername[MAX_PLAYER_NAME];new SemAn[MAX_PLAYERS];new PortaooPC;new Float:BusShowLocation[MAX_PLAYERS][4];new BusShowLocationC[MAX_PLAYERS];new BusrouteWest[MAX_PLAYERS][2];new BusrouteEast[MAX_PLAYERS][2];new NomeCarro[128];
new pFamiliaShelby1, pFamiliaShelby3, acn;new PDEx;new pfdoor; new pfdoor2;new PortaoReporter;new PDDOORa;new PDDOORb;new PDDOORc;new PDPMLS;new PDGARAGE;new PDELEVATOR;new gt3gate;new gt3gate3;new PortaoGov;
new StreetCall = 999; new Tax = 0;new TaxValue = 0;new Jackpot = 0;new hitfound = 0;new hitid = 999;new Copsronda = 0;new CopsrondaCall = 999;new CopsrondaCallTime[MAX_PLAYERS];new CopsrondaAccepted[MAX_PLAYERS];new Medics = 0;new MedicCall = 999;new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];new Mechanics = 0;new MechanicCall = 999;new MechanicCallTime[MAX_PLAYERS];new MechanicAccepted[MAX_PLAYERS];new TaxiDrivers = 0;new TaxiCall = 999;new TaxiCallTime[MAX_PLAYERS];new TaxiAccepted[MAX_PLAYERS];new BusDrivers = 0;new BusCall = 999;new BusCallTime[MAX_PLAYERS];new BusAccepted[MAX_PLAYERS];new EmRota[MAX_PLAYERS];new TransportDuty[MAX_PLAYERS];new TransportValue[MAX_PLAYERS];new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];new TransportCost[MAX_PLAYERS];new TransportDriver[MAX_PLAYERS];new EmpregoDuty[MAX_PLAYERS];new RegistrationStep[MAX_PLAYERS];new ID[MAX_PLAYERS];new Whitelist[MAX_PLAYERS];new MapIconsShown[MAX_PLAYERS];new UsedFind[MAX_PLAYERS];new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];new MatsHolding[MAX_PLAYERS];new DivorceOffer[MAX_PLAYERS];new MarriageCeremoney[MAX_PLAYERS];new ProposeOffer[MAX_PLAYERS];new ProposedTo[MAX_PLAYERS];new GotProposedBy[MAX_PLAYERS];new MarryWitness[MAX_PLAYERS];new MarryWitnessOffer[MAX_PLAYERS];new TicketOffer[MAX_PLAYERS];new TicketMoney[MAX_PLAYERS];new PlayerStoned[MAX_PLAYERS];new ConsumingMoney[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];new PlayerDrunkTime[MAX_PLAYERS];new PlayerTazeTime[MAX_PLAYERS];new FindTimePoints[MAX_PLAYERS];new FindTime[MAX_PLAYERS];new BoxWaitTime[MAX_PLAYERS];new CarOffer[MAX_PLAYERS];new CarPrice[MAX_PLAYERS];new CarID[MAX_PLAYERS];new CarCalls[MAX_PLAYERS];new GotHit[MAX_PLAYERS];new GanhouArmamento;new FH = 0;new FK = 0;new Avisouc = 0;
new ColocouContrato = 999;new CHitman;new CTriad;new GoChase[MAX_PLAYERS];new GetChased[MAX_PLAYERS];new OrderReady[MAX_PLAYERS];new ConnectedToPC[MAX_PLAYERS];new MedicTime[MAX_PLAYERS];new NeedMedicTime[MAX_PLAYERS];new MedicBill[MAX_PLAYERS];new PlayerTied[MAX_PLAYERS];new PlayerCuffed[MAX_PLAYERS];new PlayerAtingidoTime[MAX_PLAYERS];new PlayerAtingido[MAX_PLAYERS];new PlayerCuffedTime[MAX_PLAYERS];new LiveOffer[MAX_PLAYERS];new TalkingLive[MAX_PLAYERS];new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];new SelectCharID[MAX_PLAYERS];new SelectCharPlace[MAX_PLAYERS];new ChosenSkin[MAX_PLAYERS];new GettingEmprego[MAX_PLAYERS];new GuardOffer[MAX_PLAYERS];new GuardPrice[MAX_PLAYERS];new ApprovedAdvogado[MAX_PLAYERS];new CallAdvogado[MAX_PLAYERS];new WantAdvogado[MAX_PLAYERS];new CurrentMoney[MAX_PLAYERS];new KickPlayer[MAX_PLAYERS];new Robbed[MAX_PLAYERS];new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];new Condom[MAX_PLAYERS];new SexOffer[MAX_PLAYERS];new SexPrice[MAX_PLAYERS];new RepairOffer[MAX_PLAYERS];new RepairPrice[MAX_PLAYERS];new RefillOffer[MAX_PLAYERS];new RefillPrice[MAX_PLAYERS];new RepairCar[MAX_PLAYERS];new RingTone[MAX_PLAYERS];new DrugOffer[MAX_PLAYERS];new DrugPrice[MAX_PLAYERS];new DrugGram[MAX_PLAYERS];new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];new OnDuty[MAX_PLAYERS];new gPlayerCheckpointStatus[MAX_PLAYERS];new gPlayerLogged[MAX_PLAYERS];new gPlayerLogTries[MAX_PLAYERS];new gPlayerSpawned[MAX_PLAYERS];new gActivePlayers[MAX_PLAYERS];new gLastCar[301];new gNews[MAX_PLAYERS];new gFam[MAX_PLAYERS];new BigEar[MAX_PLAYERS];new Spectate[MAX_PLAYERS];new CellTime[MAX_PLAYERS];new HireCar[MAX_PLAYERS];new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];new gDice[MAX_PLAYERS];new gSpentCash[MAX_PLAYERS];new SwitchKey[MAX_PLAYERS];new Fixr[MAX_PLAYERS];new Locator[MAX_PLAYERS];new Mobile[MAX_PLAYERS];new CallCost[MAX_PLAYERS];new gPlayerConta[MAX_PLAYERS];new gPlayerMission[MAX_PLAYERS];new gLastDriver[302];new ghour = 0;new numplayers = 0;new levelcost = 25000;
new callcost = 10; new realchat = 1;new timeshift = 0;new othtimer;new newmistimer;new unjailtimer;new turftimer;new pickuptimer;new spectatetimer;new productiontimer;new Contastimer;new checkgastimer;new stoppedvehtimer;new cartimer;new cchargetime = 60;new Float:ChangePos[MAX_PLAYERS][3];new ChangePos2[MAX_PLAYERS][2];new Float:TeleportDest[MAX_PLAYERS][3];new Float:TelePos[MAX_PLAYERS][6];
new pRoadblock[MAX_PLAYERS];
new pRoadCones[MAX_PLAYERS];
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
new ReduceTime[MAX_PLAYERS];
new Gas[CAR_AMOUNT];
new Refueling[MAX_PLAYERS];
BPR::Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
new Music[MAX_PLAYERS];
new Songs[7][1] = {{1187},{1185},{1183},{1097},{1076},{1068},{1062}};

new Float:gPresoPmSpawns[3][4] = {
{264.0141,82.0856,1001.0391,267.1115},
{264.1883,86.7433,1001.0391,268.5763},
{264.6288,77.5742,1001.0391,268.5763}};
new Float:gPresoprfSpawns[3][4] = {
{264.0141,82.0856,1001.0391,267.1115},
{264.1883,86.7433,1001.0391,268.5763},
{264.6288,77.5742,1001.0391,268.5763}};
new Float:gPresoBOPESpawns[3][4] = {
{219.1653,109.2390,999.0156,358.9629},
{223.2178,110.6664,999.0156,355.7435},
{227.1820,110.4537,999.0156,7.7288}};
new Float:gPresoBOPESFSpawns[3][4] = {
{219.1653,109.2390,999.0156,358.9629},
{223.2178,110.6664,999.0156,355.7435},
{227.1820,110.4537,999.0156,7.7288}};
new Float:gPresoPcSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}};
new Float:gPresoPfSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}};
new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}};
new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}};
enum pCooking{pCook1[20],pCook2[20],pCook3[20],pCook4[20],pCook5[20],pCWeight1,pCWeight2,pCWeight3,pCWeight4,pCWeight5,pCookID1,pCookID2,pCookID3,pCookID4,pCookID5,};
new Cooking[MAX_PLAYERS][pCooking];
enum pGroceries{pChickens,pChicken,pHamburgers,pHamburger,pPizzas,pPizza,};
new Groceries[MAX_PLAYERS][pGroceries];
enum pSpec{Float:Coords[3],Float:sPx,	Float:sPy,Float:sPz,sPint,sLocal,sCam,};
new Unspec[MAX_PLAYERS][pSpec];
enum eCars{model_id,Float:pos_x,Float:pos_y,	Float:pos_z,Float:z_angle,};
enum hNews{hTaken1,hTaken2,hTaken3,hTaken4,hTaken5,hAdd1[128],hAdd2[128],hAdd3[128],hAdd4[128],hAdd5[128],hContact1[128],hContact2[128],hContact3[128],hContact4[128],hContact5[128],};
new News[hNews];
enum pInfo{pKey[128],pID,pLevel,pAdmin,pHelper,pScripter,pMapper,pMod,pResp,pEquipe,pVIP,pGrampo,gPupgrade,pConnectTime,pReg,pSex,pAge,pOrigem,pMuted,pAjustado,pVoto,
pRecebeuSalario,pSequestrado,pExp,pDsujo,pCoins,pCash,pConta,pCrimes,pKills,pDeaths,pPhoneBook,pLottoNr,pEmprego,
pSalario,pHeadValue,pHeadValueT,pJailed,pJailTime,pPecas,pMats,pDrogas,pDrogas2,pDrogas3,pLider,pGerente,pMembro,pCargo,
pSkin,pGold,pContractTime,pDetSkill,pSexSkill,pBoxSkill,pLawSkill,pMechSkill,pNewsSkill,pDrogasSkill,pCookSkill,
Float:pSHealth,pInt,pLocal,pTeam,pPnumber,pPHousekey,pPbiskey,Float:pPos_x,Float:pPos_y,
Float:pPos_z,pCarLic,pFlyLic,pBoatLic,pGunLic,pPayDay,pCDPlayer,pWins,pLoses,pAlcoholPerk,pDrugPerk,
pMiserPerk,pPainPerk,pTraderPerk,pTut,pWarns,pMarried,pRequestingBackup,pMask,pMaskuse,
pMarriedTo[64],pSpawn,pSafeDrogas,pSafeDrogas2,pSafeDrogas3,pVeiculo,pVeiculo2,pVeiculo3,pCarKey,pCarKey2,
psMats,pPHouseCarkey,pLuta,pDorgado,pDorgado2,pDoenca,pLastLogin[20],pGun1,pGun2,pGun3,pGun4,pGun5,
pGun6,pGun7,pGun8,pGun9,pGun10,pGun11,pGun12,pAmmo1,pAmmo2,pAmmo3,pAmmo4,pAmmo5,pAmmo6,	pAmmo7,pAmmo8,pAmmo9,
pAmmo10,pAmmo11,pAmmo12,pCar1,pCar2,pCar3,pCar4,pCheckInfoOrg,pBan,};
new PlayerInfo[MAX_PLAYERS][pInfo];
enum pHaul{pCapasity,pLoad,};
//new PlayerHaul[CAR_AMOUNT][pHaul];
enum hInfo{Float:hEntrancex,Float:hEntrancey,Float:hEntrancez,Float:hExitx,Float:hExity,Float:hExitz,
hHealthx,hHealthy,hHealthz,hArmorrx,hArmorry,hArmorrz,hOwner[MAX_PLAYER_NAME],hDiscription[MAX_PLAYER_NAME],
hValue,hHel,hArm,hInt,hLock,hOwned,hRooms,hRent,hRentabil,hTakings,hVec,hVcol1,hVcol2,hDate,hLevel,hWorld};
new HouseInfo[291][hInfo];
enum bInfo{bOwned,	bOwner[64],bMessage[128],bExtortion[MAX_PLAYER_NAME],Float:bEntranceX,Float:bEntranceY,Float:bEntranceZ,Float:bExitX,Float:bExitY,Float:bExitZ,bLevelNeeded,bBuyPrice,bEntranceCost,bTill,bLocked,bInterior,};
new BizzInfo[8][bInfo];
enum sbInfo{sbOwned,sbOwner[64],sbMessage[128],sbExtortion[MAX_PLAYER_NAME],Float:sbEntranceX,Float:sbEntranceY,Float:sbEntranceZ,sbLevelNeeded,sbBuyPrice,sbEntranceCost,sbTill,sbLocked,};
new SBizzInfo[15][sbInfo];
enum pCrime{pBplayer[32],pAccusing[32],pAccusedof[32],pVictim[32],};
new PlayerCrime[MAX_PLAYERS][pCrime];
enum iInfo{iAdmin[128],iMOTD[128],iPassword[128],iNeedPass,iLock,iPlayers,};

new GunPrice[30][1] = {
{124}, //parachute
{100}, //golfclub
{75}, //nigHCtick
{50}, //knife
{175}, //baseballbat
{75}, //shovel
{25}, //poolcue
{100}, //purpledildo
{125}, //whitedildo
{125}, //longwhitedildo
{125}, //whitedildo2
{50}, //flowers
{150}, //cane
{250}, //sdpistol
{250}, //colt45
{1000}, //deagle
{500}, //Tec9
{750}, //uzi
{750}, //mp5
{750}, //shotgun
{1500}, //spas12
{1000}, //sawnoff
{800}, //ak47
{800}, //m4
{250}, //rifle
{25}, //pistolammo
{20}, //shotgunammo
{12}, //smgammo
{20}, //assaultammo
{25} //rifle
};

new Peds[223][1] = {
{6},//Skin do Civil
{265},//TEAM_ADMIN
{267},{240},{228},{114},{120},{147},{294},{227},{61},{171},{270},{123},{59},{102},{108},{117},
{26},//Civis DOWN aqui
{26},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};
new Float:HouseCarSpawns[291][8] = {
//CASAS LOS SANTOS
{2200.1003,-1451.6707,24.3589,269.1703},//House 0
{1849.4982,-1925.5737,13.2900,269.0401},//House 1
{1871.3917,-1925.8879,13.2899,269.1748},//House 2
{1892.9766,-1926.0437,13.2903,271.2716},//House 3
{1914.0115,-1924.4537,13.2899,270.2092},//House 4
{1929.7886,-1926.0729,13.2902,270.7549},//House 5
{1939.3484,-1925.9573,13.2898,269.9824},//House 6
{1910.4330,-1118.2250,25.5575,181.0549},//House 7
{1180.7435,-1252.5255,14.9737,182.7825},//House 8
{1192.6936,-1273.5597,13.3416,87.6046},//House 9
{1175.0167,-1272.9294,13.3417,90.2634},//House 10
{2498.9478,-1249.5275,34.0686,270.1946},//House 11
{1170.9451,-1239.2083,18.3494,273.3052},//House 12
{1196.9413,-1238.5664,18.3943,273.2929},//House 13
{1176.4779,-1219.5706,18.4081,272.2165},//House 14
{1190.4327,-1219.2605,18.3734,91.7042},//House 15
{2787.4866,-1288.4287,42.1518,268.7791},//House 16
{2805.5789,-1288.3579,42.0388,88.0861}, //House 17
{2787.0332,-1313.7335,36.2163,272.2736},//House 18
{2805.9197,-1310.0641,36.9896,83.7590},//House 19
{2786.4358,-1340.6472,29.8615,271.9752},//House 20
{2805.2693,-1331.9712,31.8388,84.1128},//House 21
{2786.0234,-1365.7836,23.9176,273.3652},//House 22
{2801.8293,-1355.6475,26.0534,359.1473},//House 23
{1110.0980,-726.4769,100.2775,90.1167},//House 24
{259.7329,-1221.1926,74.6363,201.0530},//House 25
{1463.6920,-901.7015,54.6260,358.9970},//House 26
{1440.1053,-890.6041,50.4033,359.9137},//House 27
{251.8644,-1359.2205,52.9348,303.7466},//House 28
{225.6491,-1263.4418,66.3373,141.0180}, //House 29
{244.5874,-1265.7161,68.6251,129.7593},//House 30
{311.3341,-1335.1876,53.2553,38.0402},//House 31
{405.7558,-1263.5070,50.4031,21.9046}, //House 32
{658.3419,-1065.0410,48.6738,141.5126},//House 33
{283.7148,-1160.7074,80.6563,224.1292},//House 34
{322.6475,-1765.9531,4.4238,178.5158},//House 35
{295.5023,-1775.9580,4.2171,93.4352},//House 36
{280.8075,-1775.3854,4.0512,87.9319},//House 37
{207.1892,-1774.6537,3.6090,91.3147},//House 38
{192.9391,-1774.9485,3.4986,92.1630},//House 39
{158.1870,-1770.4294,4.1838,180.5296},//House 40
{232.5652,-1406.9209,51.4151,332.2393},//House 41
{893.5425,-1648.2144,13.3423,90.9365},//House 42
{865.2274,-1647.5223,13.3278,87.6618},//House 43
{858.6662,-1717.7675,13.3167,176.8085},//House 44
{859.5588,-1793.5956,13.7028,265.4355},//House 45
{886.3644,-1795.3136,13.4518,263.3625},//House 46
{186.3153,-1744.9629,4.1400,358.8522},//House 47
{-2662.8369,-286.4962,7.1653,45.2360},//House 48
{-2656.7075,-292.1844,7.1234,45.2123},//House 49
{762.1455,-1750.7178,12.5131,1.1641},//House 50
{762.5828,-1704.2640,5.4890,353.6793},//House 51
{763.5857,-1660.6586,4.2317,90.7014},//House 52
{757.2587,-1604.3864,13.0929,5.9952},//House 53
{688.2308,-1597.6438,13.9033,2.2492},//House 54
{644.3828,-1619.9209,14.9068,178.7542},//House 55
{651.8380,-1656.6346,14.5463,84.2223},//House 56
{640.4855,-1715.3002,14.0018,350.2966},//House 57
{263.4509,-1775.2330,4.0219,87.2185},//House 58
{229.2565,-1774.8066,3.9794,89.9125},//House 59
{1177.8580,-1108.5828,25.0556,96.3383},//House 60
{1148.6967,-1101.2035,25.3972,271.7426},//House 61
{1177.7563,-1067.5601,28.7511,89.4310},//House 62
{1148.2141,-1061.2251,29.4986,274.9547},//House 63
{1098.0648,-1060.9714,29.4398,89.6238},//House 64
{1098.4087,-1101.3031,25.3413,89.5804},//House 65
{1278.5043,-1098.5215,25.8433,86.8810},//House 66
{1247.6974,-1107.8274,25.2462,268.3052},//House 67
{1247.3267,-1067.8013,28.9153,269.5094},//House 68
{1278.1199,-1058.3632,29.5117,88.9960},//House 69
{1934.4705,-1122.1460,26.0856,180.4290},//House 70
{1991.4327,-1119.3549,26.5167,270.0136},//House 71
{2021.6805,-1128.7836,24.6966,88.9300},//House 72
{2051.9412,-1119.8440,24.5100,181.1352},//House 73
{2078.9299,-1128.1758,23.6885,2.2788},//House 74
{2089.0764,-1141.4445,25.2655,90.6571},//House 75
{479.7771,-1091.5778,82.2181,358.6423},//House 76
{2077.2048,-1188.1725,23.5396,180.4763},//House 77
{2091.2695,-1227.8802,23.7770,269.2285},//House 78
{2104.8574,-1238.3297,24.4608,359.5674},//House 79
{2185.0420,-1465.7026,25.2823,272.7695},//House 80
{2148.4448,-1238.5730,24.2841,0.6127},//House 81
{2138.3110,-1284.9482,24.4670,181.0458},//House 82
{2103.9817,-1276.1344,25.2348,179.9895},//House 83
{2094.7827,-1285.0341,24.7188,179.0456},//House 84
{2095.7930,-1316.7681,24.5058,0.8542},//House 85
{2141.3748,-1327.7395,25.2884,359.9716},//House 86
{2196.6633,-1280.3999,24.2767,181.8215},//House 87
{2216.8311,-1282.2571,24.3189,183.4800},//House 88
{2231.6025,-1293.4851,23.7217,271.0650},//House 89
{2255.3960,-1282.0201,25.0892,183.8116},//House 90
{2259.2869,-1392.6798,23.7864,87.6052},//House 91
{2245.5818,-1392.7546,23.8039,89.3087},//House 92
{2232.2793,-1392.7249,23.8124,91.1336},//House 93
{2451.4126,-2023.5222,13.3839,3.0543},//House 94
{2462.6924,-2015.7365,13.3705,269.7538},//House 95
{2497.5188,-2023.6563,13.3154,359.1064},//House 96
{2507.5095,-2016.0697,13.3386,272.9436},//House 97
{2473.3721,-1996.3116,13.3839,177.1863},//House 98
{166.8582,-1341.0671,69.5281,179.6169},//House 99
{1533.0730,-841.5164,65.0301,85.6957},//House 100
{1529.4301,-813.3212,71.6962,87.5072},//House 101
{1514.4915,-768.3907,80.1071,139.3631},//House 102
{1460.1550,-634.8544,95.6349,180.3095},//House 103
{1028.4092,-809.3570,101.6375,22.4174},//House 104
{1023.4676,-776.5500,102.8895,85.9234},//House 105
{976.9719,-826.1484,96.1396,27.7099},//House 106
{942.2021,-839.4097,94.3384,29.2666},//House 107
{967.4248,-759.9371,110.7354,97.0316},//House 108
{1354.3202,-629.7422,108.8383,15.4581},//House 109
{857.5845,-818.4150,88.4680,19.7793},//House 110
{873.1438,-868.6379,77.2717,25.7657},//House 111
{832.5815,-860.8075,69.6735,186.3269},//House 112
{830.2504,-886.6093,68.6002,240.1175},//House 113
{724.9798,-993.8918,52.4405,236.0503},//House 114
{1102.2498,-820.1213,86.7616,94.0184},//House 115
{686.1296,-1072.7681,49.3897,60.1605},//House 116
{619.2938,-1102.0067,46.5483,121.8466},//House 117
{635.1069,-1121.2477,44.9110,48.1246},//House 118
{542.3256,-1200.5511,44.2029,108.8708},//House 119
{422.6566,-1262.1964,51.4085,22.9768},//House 120
{568.3619,-1131.6035,50.4823,123.9380},//House 121
{1102.6473,-643.8488,112.7890,42.6801},//House 122
{1053.1963,-637.6051,119.9118,89.0114},//House 123
{1008.9766,-660.4042,120.9398,118.8311},//House 124
{912.9079,-665.6145,116.8016,237.1444},//House 125
{940.3124,-708.1927,122.0105,25.6720},//House 126
{866.5078,-710.9155,105.5066,329.7114},//House 127
{402.2745,-1148.2843,76.8555,146.8472},//House 128
{837.4636,-759.5170,84.9513,234.4386},//House 129
{2375.2605,-1146.4277,27.3545,178.0937},//House 130
{2400.0210,-1136.1881,29.8213,179.4731},//House 131
{2422.5791,-1131.1589,34.1230,182.4121},//House 132
{2490.6006,-1142.1642,38.0013,91.7532},//House 133
{2502.4731,-1133.9078,38.9480,153.9394},//House 134
{1855.3026,-2143.7849,13.2740,90.9317},//House 135
{1876.6418,-2143.8484,13.2740,90.6687},//House 136
{1898.3320,-2143.6541,13.2740,90.0334},//House 137
{1899.8561,-2060.0862,13.2752,269.2708},//House 138
{1877.6840,-2060.2092,13.2740,271.4854},//House 139
{1856.8407,-2060.2251,13.2739,269.8126},//House 140
{342.3443,-1876.0426,2.2556,185.0970},//House 141
{294.5735,-1876.1187,1.9910,179.1540},//House 142
{250.3848,-1875.6232,1.5720,182.1286},//House 143
{205.9865,-1876.2771,1.8068,180.8197},//House 144
{1184.6124,-1252.5688,14.9079,182.0491},//House 145
{643.0599,-1692.1389,14.6595,355.8115},//House 146
{2432.4036,-1058.5281,54.0708,1.0216},//House 147
{2428.7241,-1016.5968,54.0287,193.6693},//House 148
{2452.0002,-1056.6379,59.4693,356.1369},//House 149
{2454.2297,-1013.0950,59.4570,178.5090},//House 150
{2485.7505,-1015.7893,65.0382,152.5809},//House 151
{2475.2380,-1059.4473,66.5169,343.6566},//House 152
{2503.7432,-1025.2019,69.8130,177.6173},//House 153
{2497.3608,-1063.0977,69.8599,0.1788},//House 154
{2351.5698,-655.9164,127.7797,179.7699},//House 155
{2067.6392,-1738.8765,13.6783,269.7427},//House 156
{2074.2124,-1714.0375,13.2683,180.2601},//House 157
{2052.5747,-1695.1714,13.2751,269.9927},//House 158
{2069.8877,-1653.6063,13.2616,270.4084},//House 159
{2074.3994,-1644.2268,13.3056,1.5210},//House 160
{2074.3162,-1627.4417,13.2695,0.3678},//House 161
{2009.4080,-1630.3995,13.2679,180.4287},//House 162
{2009.4829,-1640.2030,13.2681,180.4762},//House 163
{2009.6040,-1655.1643,13.2671,180.4767},//House 164
{2016.5885,-1707.6719,13.2685,90.1251},//House 165
{2009.2926,-1721.1993,13.2741,181.4235},//House 166
{2013.9171,-1737.2247,13.2739,91.1623},//House 167
{1965.1614,-1709.1593,15.6874,89.7320},//House 168
{1977.4946,-1708.0625,15.6905,270.3337},//House 169
{1966.4865,-1674.2998,15.6943,91.0181},//House 170
{1977.1470,-1674.1792,15.6924,272.6857},//House 171
{1965.3494,-1657.7709,15.6889,89.0905},//House 172
{1976.4122,-1657.5651,15.6904,268.6701},//House 173
{1964.0996,-1637.5804,15.6914,90.1747},//House 174
{1977.0326,-1637.9534,15.6924,90.9899},//House 175
{1983.6398,-1714.9231,15.6906,0.4947},//House 176
{1966.3846,-1682.8446,15.6877,359.3173},//House 177
{1962.2632,-1628.0461,15.6673,359.4508},//House 178
{2137.0073,-1483.8253,23.7542,1.6942},//House 179
{2142.0134,-1437.3711,24.4159,93.3585},//House 180
{2155.6753,-1423.6860,25.3094,89.9264},//House 181
{2150.2600,-1408.6781,24.9393,87.1573},//House 182
{2136.6177,-1359.7472,25.3103,181.0419},//House 183
{2138.8279,-1371.9531,24.0338,182.4558},//House 184
{2189.1489,-1376.1112,23.7610,90.5970},//House 185
//CASAS LAS VENTURAS
{1316.4514,1928.9071,11.1678,359.3821},//House 186
{1343.9460,1929.2151,11.1668,0.5317},//House 187
{1360.0254,1939.3275,11.1743,271.6445},//House 188
{1317.4285,1967.9044,11.1746,90.6796},//House 189
{1321.8756,2012.8790,11.1680,88.2824},//House 190
{1325.1819,2020.3640,11.1742,90.8816},//House 191
{1367.4324,1904.8032,11.1764,269.8344},//House 192
{1412.5513,1902.3427,11.1673,90.6011},//House 193
{1406.6125,1912.0352,11.1747,89.9678},//House 194
{1419.4921,1949.1161,11.1605,1.5568},//House 195
{1446.7512,1948.6653,11.1677,1.3792},//House 196
{1454.4426,1945.8271,11.1746,1.4680},//House 197
{1362.7479,1966.9457,11.1667,271.3380},//House 198
{1366.8981,2011.8795,11.1668,269.1770},//House 199
{1362.9326,2020.8693,11.1676,270.0309},//House 200
{1645.9689,2037.1508,10.9448,89.1319},//House 201
{1642.8617,2082.7473,11.0186,90.4613},//House 202
{1643.2457,2109.8618,11.0187,91.5197},//House 203
{1647.2789,2133.9436,10.9096,90.2143},//House 204
{1638.3484,2141.6824,11.0202,90.2695},//House 205
{1593.6583,2140.3987,11.1675,269.4533},//House 206
{1598.0974,2131.6152,11.1676,270.6885},//House 207
{1593.8116,2086.3438,11.0196,270.7290},//House 208
{1591.0438,2078.7405,11.0255,272.3578},//House 209
{1598.5099,2046.5698,11.1757,267.8314},//House 210
{1243.0144,-805.4203,84.2336,182.0296},//House 211
{1547.3228,2088.0593,11.1684,90.2906},//House 212
{1551.9301,2132.9434,11.1677,89.2591},//House 213
{1725.7017,2701.2473,10.5269,359.8249},//House 214
{1708.0306,2699.5769,10.5274,0.1384},//House 215
{1672.4937,2693.1411,10.5266,359.9836},//House 216
{1656.1799,2719.1204,10.5263,1.5992},//House 217
{1621.2321,2713.4714,10.5265,1.0226},//House 218
{1605.1194,2719.2874,10.5272,0.2322},//House 219
{1584.2406,2719.2595,10.5261,2.6170},//House 220
{1559.5135,2721.0173,10.5268,359.3929},//House 221
{1556.4414,2747.3325,10.5264,90.1014},//House 222
{1558.4442,2765.9548,10.5331,89.8637},//House 223
{1555.9144,2784.3489,10.5271,90.5344},//House 224
{1546.1473,2835.0903,10.5269,181.4440},//House 225
{1581.9619,2841.9070,10.5261,180.4611},//House 226
{1597.5784,2835.7932,10.5261,182.4884},//House 227
{1619.0841,2835.0186,10.5263,181.1337},//House 228
{1643.4871,2833.4863,10.5277,178.7233},//House 229
{1660.4923,2834.6108,10.5276,178.5860},//House 230
{1663.7198,2810.0251,10.5264,358.7938},//House 231
{1645.0134,2809.9453,10.5273,1.8610},//House 232
{1627.7561,2807.6475,10.5332,359.4688},//House 233
{1608.5125,2809.9961,10.5266,359.7656},//House 234
{1592.4220,2808.3508,10.5260,358.7701},//House 235
{1588.9063,2746.4153,10.5264,180.6354},//House 236
{1618.3075,2744.6763,10.5263,180.0630},//House 237
{1636.0546,2744.8970,10.5265,180.7784},//House 238
{1654.4192,2745.9187,10.5341,181.8013},//House 239
{1672.9607,2744.7471,10.5269,180.8898},//House 240
//Casas en SF
{-2667.1531,204.3000,4.2568,179.6822}, // Carro Casa 1 SF
{-2663.1377,204.5421,4.0407,179.9809}, // Carro Casa 2 SF
{-2693.7639,98.5935,4.0408,270.7048}, // Carro Casa 3 SF
{-2718.6523,-19.6912,4.0582,91.4888}, // Carro Casa 4 SF
{-2693.6033,-156.3981,4.0572,270.1801}, // Carro Casa 5 SF
{-2719.1304,-171.5619,4.0557,90.2135}, // Carro Casa 6 SF
{-2718.3579,-89.8715,4.0412,90.4285}, // Carro Casa 7 SF
{-2795.8511,197.0623,6.8923,269.6846}, // Carro Casa 8 SF
{-2795.9170,209.6581,6.8924,269.5456}, // Carro Casa 9 SF
{-2795.6348,101.3647,6.8961,269.8806}, // Carro Casa 10
{-2795.7693,-12.8038,6.8924,271.1697}, // Carro Casa 11 SF
{-2796.6553,-55.5979,6.8925,268.8203}, // Carro Casa 12 SF
{-2796.0393,-149.5142,6.8918,269.0115}, // Carro Casa 13 SF
{-2354.0024,1232.2059,31.8091,266.3798}, // Carro Casa 14 SF
{-2380.7295,1250.5070,28.3904,92.1875}, // Carro Casa 15 SF
{-2353.5317,1287.0386,21.6009,269.8732}, // Carro Casa 16 SF
{-2379.7126,1342.6752,11.1593,91.6003}, // Carro Casa 17 SF
{-2353.9678,1342.2229,11.2329,270.0484}, // Carro Casa 18 SF
{-2514.0459,1139.3313,55.4315,355.4742}, // Carro Casa 19 SF
{-2471.6140,1139.3647,55.4365,359.3210}, // Carro Casa 20 SF
{-2420.8411,1136.4485,55.4333,350.7866}, // Carro Casa 21 SF
{-2381.0361,1124.5336,55.4308,340.5957}, // Carro Casa 22 SF
{-2552.2607,817.3782,49.6931,0.5000}, // Carro Casa 23 SF
{-2587.4429,817.3764,49.6898,358.8255}, // Carro Casa 24 SF
{-2734.0857,820.6509,53.0792,359.9044}, // Carro Casa 25 SF
{-2837.4929,863.7566,43.7595,89.7092}, // Carro Casa 26 SF
{-2862.6833,825.5489,39.2420,60.3144}, // Carro Casa 27 SF
{-2860.2056,680.2744,22.9596,115.5228}, // Carro Casa 28 SF
{-2012.0157,888.7217,45.0737,179.2289}, // Carro Casa 29 SF
{-2047.7040,899.6171,53.1347,176.4036}, // Carro Casa 30 SF
{-2081.7698,901.5803,63.8277,182.0006}, // Carro Casa 31 SF
{-2077.8743,901.2955,63.8375,179.6741}, // Carro Casa 32 SF
{-1740.6171,1112.9572,45.1494,0.1452}, // Carro Casa 33 SF
{-1768.0313,1113.1605,45.1492,359.3236}, // Carro Casa 34 SF
{-1847.2587,1113.0436,45.1576,359.3436}, // Carro Casa 35 SF
{-1855.9530,1113.1559,45.1497,0.0646}, // Carro Casa 36 SF
{-2428.2581,-34.8228,35.0258,89.9063}, // Carro Casa 37 SF
{-2428.7158,-11.9580,35.0245,89.9048}, // Carro Casa 38 SF
{-2156.6960,781.2172,69.2511,88.7339}, // Carro Casa 39 SF
{-2156.6938,748.7499,69.2519,89.2688}, // Carro Casa 40 SF
{-2157.6038,978.7982,79.7080,90.7597}, // Carro Casa 41 SF
{-2128.8250,1037.3210,79.7090,271.8582}, // Carro Casa 42 SF
{-2204.7178,1082.3644,79.7152,178.9152}, // Carro Casa 43 SF
{-2193.3647,1105.4656,79.7058,0.4251}, // Carro Casa 44 SF
{-2233.0703,1105.6364,79.7062,0.0070}, // Carro Casa 45 SF
{-2217.8608,1166.6125,55.4381,182.0794}, // Carro Cassa 46 SF
{-2168.0081,1166.2211,55.4317,180.4399}, // Carro Cassa 47 SF
{-2061.0615,1162.8242,45.8036,180.1453}, // Carro Cassa 48 SF
{-1920.3845,1187.8998,45.1508,0.0647}, // Carro Cassa 49 SFF
{-2354.2783,659.7632,35.2535,180.7247} // Carro Cassa 50 SF
};
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//static DCC_Channel:commandChannel;
static DCC_Channel:chatChannel;
//Whitelist Channels
static DCC_Channel:wlChannel;
static DCC_Channel:wlrChannel;
static DCC_Channel:cmdChannel;
//---------------------------------------
//Log Channels
static DCC_Channel:logBp;
static DCC_Channel:logAn;
static DCC_Channel:logRoubos;
static DCC_Channel:logLogin;
static DCC_Channel:logCadeia;
static DCC_Channel:logBan;
static DCC_Channel:logKick;
static DCC_Channel:logWl;
static DCC_Channel:logCMDAdmin;
static DCC_Channel:logPonto;
//---------------------------------------
static DCC_Guild:guildName;
static DCC_Role:adminRole;
//static DCC_Role:staffRole;
main()
{
	//commandChannel = DCC_FindChannelById("869315453443510282");
	chatChannel = DCC_FindChannelById("865653977224052757");
	cmdChannel = DCC_FindChannelById("885828129732587530");
	wlChannel = DCC_FindChannelById("869315427153637436");
	wlrChannel = DCC_FindChannelById("869315438918656060");

	//Log Channels
	logBp = DCC_FindChannelById("869315025611935806");
	logAn = DCC_FindChannelById("869314848192880690");
	logRoubos = DCC_FindChannelById("869314886176493618");
	logLogin = DCC_FindChannelById("877681415016312873");
	logCadeia = DCC_FindChannelById("869314905940058153");
	logBan = DCC_FindChannelById("869314918678163477");
	logKick = DCC_FindChannelById("869315009619066930");
	logWl = DCC_FindChannelById("869314934922674176");
	logCMDAdmin = DCC_FindChannelById("869315060797952000");
	logPonto = DCC_FindChannelById("865653965353386024");
	//-------------------------------------------------------

    guildName = DCC_FindGuildById("809654529041235989");
    adminRole = DCC_FindRoleById("865653598808965171");
	//staffRole = DCC_FindRoleById("879883423097970708");

	print("************************************");
	print("*[<<<**************************>>>]*");
	print("*|    Brasil Play Real RP    |*");
	print("*|         Por Logan_Walker     |*");
	print("*[<<<**************************>>>]*");
	print("************************************");
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::ABroadCastah(COLOR,const string[],level)
{
	for(new i = 0; i < MaiorID; i++)
  	{
    	if(IsPlayerConnected(i))
    	{
        	if (PlayerInfo[i][pHelper] >= level || PlayerInfo[i][pAdmin] >= level || PlayerInfo[i][pMod] >= level
			 || PlayerInfo[i][pScripter] >= level || PlayerInfo[i][pMapper] >= level)
			 {
            	SendClientMessage(i, COLOR, string);
            	printf("%s", string);
        	}
    	}
  	}
	return true;
}
	
BPR::SearchingHit(playerid)
{
    new string[256];new giveplayer[MAX_PLAYER_NAME];new searchhit = 0;
    for(new i=0; i<MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(searchhit == 0) {
                if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0) {
                    GetPlayerName(i, giveplayer, sizeof(giveplayer));searchhit = 1;hitfound = 1;hitid = i;
                    for(new k=0; k<MAX_PLAYERS; k++) {
                        if(IsPlayerConnected(k)) {
                            if(GetPlayerOrg(k) == 8 && FH == 1) {
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~> Agencia de Hitmans <~~~~~~~~~~~~~~~~~~~~~~~");
                                SendClientMessage(k, COLOR_DBLUE, "*~*~* Mensagem: Esta disponivel um novo contrato! *~*~*");
                                format(string, sizeof(string), "Contrato: %s   ID: %d   Valor: R$%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
                                SendClientMessage(k, COLOR_DBLUE, string);
                                SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para atribuir o contrato a um dos Hitmans.");
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                                FH = 0;return true;
                            }
                            if(GetPlayerOrg(k) == 22 && FK == 1) {
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~> Agencia dos Triads <~~~~~~~~~~~~~~~~~~~~~~~~~");
                                SendClientMessage(k, COLOR_DBLUE, "*~*~* Mensagem: Esta disponivel um novo contrato! *~*~*");
                                format(string, sizeof(string), "Contrato: %s   ID: %d   Valor: R$%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
                                SendClientMessage(k, COLOR_DBLUE, string);
                                SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para atribuir o contrato a um dos Assassinos.");
                                SendClientMessage(k, COLOR_WHITE, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
                                FK = 0;return true;
                            }
                        }
                    }
                    return 0;
                }
            }
        }
    }
    if(searchhit == 0) {
        SendClientMessage(playerid, COLOR_GREY, "   Nao ha contratos disponiveis!");
    }
    return 0;
}

/*showRodape(playerid)
{
	for(new x; x != 1; x++)
	{
		new newtext[300], name[MAX_PLAYER_NAME];
		new minuto, hora, segundo;
		gettime(hora, minuto, segundo);
		GetPlayerName(playerid, name, MAX_PLAYER_NAME);
		format(newtext, sizeof(newtext), "ID:_%d_NOME:_%s_PING:_%d_Level:_%d_____________________________________________________%02d:%02d:%02d", PlayerInfo[playerid][pID], name, GetPlayerPing(playerid), GetPlayerScore(playerid), hora, minuto, segundo);
		PlayerTextDrawSetString(playerid, RodaPe[playerid][0], newtext);
		PlayerTextDrawShow(playerid, RodaPe[playerid][x]);
	}
}*/

forward CriarID(playerid);
BPR::CriarID(playerid)
{
    new plname[MAX_PLAYER_NAME];
	new file[64];
	format(file,sizeof(file),"IDS/%d %s.ini",PlayerInfo[playerid][pID],plname);
	fopen(file);
	return 1;
}

BPR::Desmanche(playerid)
{
       DestroyVehicle(GetPlayerVehicleID(playerid));
       SendClientMessage(playerid, -1, "Veiculo foi desmanchado com sucesso!");
       //GivePlayerMoney(playerid, 60000);
	   PlayerInfo[playerid][pDsujo] += 10000;
       SendClientMessage(playerid, -1, "Voce recebeu mais 10000 de dinheiro sujo pelo desmanche!");
       Controle(playerid, 1);
       return 1;
}

forward EsconderQRU(playerid);
BPR::EsconderQRU(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(OnDuty[i] >= 1)
			{
				TextDrawHideForPlayer(i, Text_Disparo0);
				TextDrawHideForPlayer(i, Text_Disparo1);
				TextDrawHideForPlayer(i, Text_Disparo2);
				TextDrawHideForPlayer(i, Text_Disparo3);
			}
		}
	}
	return 1;
}

BPR::OnPlayerWeaponShot(playerid, weaponid, hittype, hiteid, Float:fX, Float:fY, Float:fZ)
{
    if(!IsACop(playerid))
    {
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(OnDuty[i] >= 1)
				{
					//new string[120];
					//QRU Disparo
					/*format(string, sizeof(string), "{0000FF}[COPOM] {FFFFFF}Disparos na regiao da cidade!");
					SendFamilyMessage(2, -1, string);
					SendFamilyMessage(1, -1, string);
					SendFamilyMessage(34, -1, string);
					SendFamilyMessage(3, -1, string);
					SendFamilyMessage(16, -1, string);
					SendFamilyMessage(7, -1, string);
					SendFamilyMessage(30, -1, string);
					SendFamilyMessage(11, -1, string);
					SendFamilyMessage(4, -1, string);
					SendFamilyMessage(27, -1, string);
					SendFamilyMessage(35, -1, string);*/
					TextDrawShowForPlayer(i, Text_Disparo0);
					TextDrawShowForPlayer(i, Text_Disparo1);
					TextDrawShowForPlayer(i, Text_Disparo2);
					TextDrawShowForPlayer(i, Text_Disparo3);
					SetPlayerMapIcon(i, D_TIROS, fX, fY, fZ, 0, -3, 3);
					SetTimerEx("EsconderQRU", 20000,false,"i",i);
				}
			}
		}
    }
    return 1;
}

forward gmxtimer(playerid);
BPR::gmxtimer(playerid)
{
	GameModeExitFunc();
	SaveAccounts();
	OnPlayerSave(playerid);
	return 1;
}

BPR::MontarArma(playerid)
{
       SendClientMessage(playerid, -1, "Voce montou uma AK-47 com sucesso!");
	   ClearAnimations(playerid);
	   PlayerInfo[playerid][pPecas] -= 100;
	   GivePlayerWeapon(playerid, 30, 250);
       Controle(playerid, 1);
       return 1;
}

//Discord Bot
forward DCC_OnMessageCreate(DCC_Message:message);
BPR::DCC_OnMessageCreate(DCC_Message:message){
 
    new DCC_Channel:channel;
 
    DCC_GetMessageChannel(message, channel);
 
    new DCC_User:author;
    DCC_GetMessageAuthor(message, author);


    new bool:hasRole;
    DCC_HasGuildMemberRole(guildName, author, adminRole, hasRole);

	//new bool:hasAdminRole;
    //DCC_HasGuildMemberRole(guildName, author, staffRole, hasRole);
	
	new str[256];
    new command[32], params[128];
 
    DCC_GetMessageContent(message, str); 
 
    sscanf(str, "s[32]s[128]", command, params);
	if(channel == cmdChannel){
		if(!strcmp(command, "bpr!pv", true)){
			if(!hasRole){
				return 1;
			}
			new playerID, _message[128];

			sscanf(params, "us[128]", playerID, _message);

			if(!IsPlayerConnected(playerID))
			return DCC_SendChannelMessage(channel, "Esse player não esta online!");

			new pvstring[128];
			format(pvstring, sizeof(pvstring), "[{0000ff}MENSAGEM DISCORD{FFFFFF}] %s", _message);
			SendClientMessage(playerID, -1, pvstring);
		}

		if(!strcmp(command, "bpr!desbug", true)){
			return 1;
		}

		if(!strcmp(command, "bpr!kick", true)){
			if(!hasRole){
				return 1;
			}
			new playerID, _message[128];

			sscanf(params, "us[128]", playerID, _message);

			if(!IsPlayerConnected(playerID))
			return DCC_SendChannelMessage(channel, "Esse player não esta online!");

			new kickstring[128];
			format(kickstring, sizeof(kickstring), "ADMIN: %s foi kickado do servidor pelo Discord! Motivo: %s", PlayerName(playerID), _message);
			SendClientMessageToAll(COLOR_LIGHTRED, kickstring);

			new dsstring[128];
			format(dsstring, sizeof(dsstring), "%s foi kickado com sucesso! Motivo: %s", PlayerName(playerID), _message);
			DCC_SendChannelMessage(channel, dsstring);
			SetTimerEx("KickarWL", 1000, 0, "i", playerID);
			return 1;
		}

		if(!strcmp(command, "bpr!chat", true)){
			if(!hasRole){
				return 1;
			}
			new string[128];
			format(string, sizeof(string), "[{0000FF}AVISO DISCORD{FFFFFF}] - %s", params);
			SendClientMessageToAll(-1, string);
		}
		if(!strcmp(command, "bpr!gerarcodigo", true)){
			if(!hasRole){
				return 1;
			}

			new valords[128];
			sscanf(params, "d", valords);

			//Define o Código e o valor que será criado
			new Arquivin[64];
			new codigo = 100000 + random(100000000);
			format(Arquivin,sizeof(Arquivin),"Codigos/%d.ini",codigo);

			//Coloca o Código na pasta
			dini_Create(Arquivin);
			dini_Set(Arquivin,"Valor", params);
			
			//Mensagem no Chat para a pessoa
			new Str[999];
			format(Str,sizeof(Str),"Voce criou o codigo %d com sucesso com o valor %d!",codigo, valords);
			DCC_SendChannelMessage(channel, Str);

			//Log
			new stri[128];
			new codiguin[128];
			new valorzin[128];
			new DCC_Embed:embed = DCC_CreateEmbed();
			DCC_SetEmbedTitle(embed, "Log Códigos");
			DCC_SetEmbedColor(embed, 0xFF0000);
			format(stri, sizeof stri, "Um novo Código de Coins Criado!");
			DCC_SetEmbedDescription(embed, stri);
			format(codiguin, sizeof codiguin, "`%d`", codigo);
			DCC_AddEmbedField(embed, "Código:", codiguin, false);
			format(valorzin, sizeof valorzin, "`%d`", valords);
			DCC_AddEmbedField(embed, "Valor:", valorzin, false);
			DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
			return 1;
		}
		if(!strcmp(command, "bpr!gmx", true)){
			if(channel != chatChannel){
				return 1;
			}

			if(!hasRole){
				return 1;
			}
			new AVISOMenssage[999];
			SendClientMessageToAll(COLOR_WHITE,"{0000FF}DISCORD AVISO{FFFFFF}: Servidor reiniciando {0000FF}AGORA");
			format(AVISOMenssage,sizeof(AVISOMenssage),"{0000FF}AVISO:{FFFFFF} Servidor reiniciando agora!!");
			SendClientMessageToAll(COLOR_WHITE,AVISOMenssage);
			//DCC_SendChannelMessage(chatChannel, "Servidor reiniciando agora!");
			DCC_SendChannelMessage(channel, "Servidor reiniciado com sucesso!");
			GameModeExitFunc();
			SaveAccounts();
		}
	}
	if(channel == wlChannel)
	{
		if(!strcmp(command, "bpr!wladd", true)){
			new nomeplayer[128];
			sscanf(params, "u", nomeplayer);
			new file[128];
			format(file,sizeof(file),"Whitelist/%s.ini",nomeplayer);
			fopen(file);
			new WLMessage[999];
			format(WLMessage,sizeof(WLMessage),"{0000FF}AVISO:{FFFFFF} O usuario %s foi adicionado na Whitelist por BOT_DISCORD!", nomeplayer);
			SendClientMessageToAll(COLOR_WHITE,WLMessage);
			//DCC_SendChannelMessage(commandChannel, "%d Adicionado na Whitelist!", nomeplayer);
		}
	}
	if(channel == wlrChannel)
	{
		if(!strcmp(command, "bpr!removewl", true)){
			new nomeplayer[128];

			sscanf(params, "s", nomeplayer); 
			new file[128];
			//DCC_SendChannelMessage(commandChannel, "%d Teste", nomeplayer);
			format(file,sizeof(file),"Whitelist/%s.ini",nomeplayer);
			fremove(file);
			new WLMessage[999];
			format(WLMessage,sizeof(WLMessage),"{0000FF}AVISO:{FFFFFF} O usuario %s foi removido na Whitelist por BOT_DISCORD!", nomeplayer);
			ABroadCast(-1,WLMessage,1);
			//DCC_SendChannelMessage(commandChannel, "%s removido da Whitelist!", nomeplayer);
		}
	}
    return 1;
}

forward BotStatus();
BPR::BotStatus()
{
	new statuz[256];
	format(statuz,sizeof(statuz),"Possuimos %d players online agora!",online);
	DCC_SetBotActivity(statuz);
}

forward UpdateRodape(playerid);
BPR::UpdateRodape(playerid)
{
	new minuto, hora, segundo;
	new newtext[300], name[MAX_PLAYER_NAME];
	gettime(hora, minuto, segundo);
	GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	format(newtext, sizeof(newtext), "__________________________________________ID:_%d_NOME:_%s_PING:_%d_Level:_%d_____________________________________________________%02d:%02d:%02d",PlayerInfo[playerid][pID], name, GetPlayerPing(playerid), GetPlayerScore(playerid), hora, minuto, segundo);
	PlayerTextDrawSetString(playerid, RodaPe[playerid][0], newtext);
	return 1;
}


BPR::ExtortionBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Nenhum");if(strcmp(BizzInfo[bizid][bExtortion],gstring, true ) == 0) {
        return 0;
    }
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            new wstring[MAX_PLAYER_NAME];format(gstring, sizeof(gstring), "%s", PlayerName(i));strmid(wstring, gstring, 0, strlen(gstring), 255);if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 ) {
                new value = money / 100;value = value * 10;GivePlayerMoney(i, value);BizzInfo[bizid][bTill] -= value;
            }
        }
    }
    return true;
}


BPR::ExtortionSBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Ninguem");if(strcmp(SBizzInfo[bizid][sbExtortion],gstring, true ) == 0 ) {
        return 0;
    }
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            new wstring[MAX_PLAYER_NAME];format(gstring, sizeof(gstring), "%s", PlayerName(i));strmid(wstring, gstring, 0, strlen(gstring), 255);
            if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 ){new value = money / 100;value = value * 10;GivePlayerMoney(i, value);SBizzInfo[bizid][sbTill] -= value;}
        }
    }
    return true;
}

BPR::SendVIPMessage(color, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(PlayerInfo[i][pVIP] >= 1) {
                SendClientMessage(i, color, string);
            }
        }
    }
}

forward SairNoClip(playerid);
BPR::SairNoClip(playerid)
{
    SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
    return 1;
}
//==============================================================================
BPR::OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    Controle(playerid, 1);
	new string[128];
	new stringe[128];
	new stringa[900];
	new giveplayer[MAX_PLAYER_NAME];
	new para1;
	if(dialogid == DIALOG_CAIXA_ELETRONICO)
	{
		CaixaEletronico_Ok[playerid] = 0;
		if(response == 0)
  		{
    		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        	return 1;
	  	}
    	if(response == 1)
    	{
    		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    	if(listitem >= 0 && listitem <= 3)
	    	{
		  		if(listitem == 0)
				{
					CaixaEletronico_Ok[playerid] = 1;
					ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Saque","Digite a Quantia que Deseja Sacar:", "Confirma", "Sair");
				}
				if(listitem == 1)
				{
					CaixaEletronico_Ok[playerid] = 2;
					ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Deposito","Digite a Quantia que Deseja Depositar:", "Confirma", "Sair");
				}
				if(listitem == 2)
				{
    				CaixaEletronico_Ok[playerid] = 3;
        			format(stringe, sizeof(stringe), "Seu saldo e de: %d", PlayerInfo[playerid][pConta]);
					ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_MSGBOX, "Informacao do Saldo:",stringe, "Confirma", "Sair");
				}
				if(listitem == 3)
				{
					CaixaEletronico_Ok[playerid] = 4;
					ShowPlayerDialog(playerid, DIALOG_TRANSFERIR, DIALOG_STYLE_INPUT, "   Transferencia","Digite o ID de quem recebera o dinheiro transferido:", "Confirma", "Sair");
				}
				if(listitem == 4)
				{
					//CaixaEletronico_Ok[playerid] = 5;
					ShowPlayerDialog(playerid, 5555, DIALOG_STYLE_MSGBOX, "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real Aviso", "{FFFFFF} Ola, nao possuimos roubo a caixa eletronico, mas possuimos roubo a caixinha de mercado, se encontram em nossas lojas!", "Entendido", "Sair");
				}
				return 1;
			}
		}
	}
//==============================================================================
	if(dialogid == DIALOG_CAIXA_ELETRONICO_INPUT)
	{
		if(response == 0)
		{
	   		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    	CaixaEletronico_Ok[playerid] = 0;
	   		return 1;
	  	}
    	if(response >= 1)
    	{
     		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
       		if(CaixaEletronico_Ok[playerid] != 3)
	        {
	         	if(CaixaEletronico_Ok[playerid] == 1)
		     	{
		      		format(stringe, sizeof(stringe), "/sacar_input_type %d", strval(inputtext));
	           		OnPlayerCommandText(playerid,stringe);
				}
				else if(CaixaEletronico_Ok[playerid] == 2)
				{
	            	if (strval(inputtext) > GetPlayerMoneyEx(playerid) || strval(inputtext) < 1)
					{
						CaixaEletronico_Ok[playerid] = 0;
						SendClientMessage(playerid, COLOR_GRAD2, "   Voce  nao tem tudo isso na sua conta!");
						return 1;
					}
					GivePlayerMoneyEx(playerid,-strval(inputtext));
					new curfunds = PlayerInfo[playerid][pConta];
					PlayerInfo[playerid][pConta]=strval(inputtext)+PlayerInfo[playerid][pConta];
					SendClientMessage(playerid, COLOR_WHITE, "|___ BANCO  INFO ___|");
					format(string, sizeof(string), "  Conta: R$%d", curfunds);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "  Deposito: R$%d",strval(inputtext));
					SendClientMessage(playerid, COLOR_GRAD4, string);
					//SendClientMessage(playerid, COLOR_GRAD6, "|.�.�.�.�.�.�.�.�.�.�.�.�.�.�.�.�.�.�|");
					format(string, sizeof(string), "  Nova conta: R$%d", PlayerInfo[playerid][pConta]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else if(CaixaEletronico_Ok[playerid] == 4)
				{
					if (IsPlayerConnected(TransferenciaID[playerid]))
					{
	    				if(TransferenciaID[playerid] != INVALID_PLAYER_ID)
					    {
							if (strval(inputtext) > 0 && PlayerInfo[playerid][pConta] >= strval(inputtext))
							{
								PlayerInfo[playerid][pConta] -= strval(inputtext);
								PlayerInfo[TransferenciaID[playerid]][pConta] += strval(inputtext);
								format(string, sizeof(string), "   Voce transferiu R$%d para %s's ", strval(inputtext), GetName(TransferenciaID[playerid]),TransferenciaID[playerid]);
								PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD1, string);
								format(string, sizeof(string), "   Voce recebeu R$%d pela sua conta de %s", strval(inputtext), GetName(playerid), playerid);
								SendClientMessage(TransferenciaID[playerid], COLOR_GRAD1, string);
								format(string, sizeof(string), "%s Transferido R$%d to %s", GetName(playerid), strval(inputtext), GetName(TransferenciaID[playerid]));
        						if(strval(inputtext) >= 500000)
								{
									ABroadCast(COLOR_YELLOW,string,1);
								}
								printf("%s", string);
								PayLog(string);
								PlayerPlaySound(TransferenciaID[playerid], 1052, 0.0, 0.0, 0.0);
								}
								else
								{
									SendClientMessage(playerid, COLOR_GRAD1, "   Transferencia Invalida!.");
								}
							}
						}
						else
						{
						format(string, sizeof(string), "   %d Nao esta ativo", TransferenciaID[playerid]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
			CaixaEletronico_Ok[playerid] = 0;
			return 1;
		}
		return 1;
	}
//==============================================================================
	if(dialogid == DIALOG_TRANSFERIR)
	{
		if(response == 0)
	 	{
	  		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    	CaixaEletronico_Ok[playerid] = 0;
      		return 1;
        }
        if(response >= 1)
        {
        	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
         	if(CaixaEletronico_Ok[playerid] == 4)
         	{
          		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            	TransferenciaID[playerid] = strval(inputtext);
	            ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO_INPUT, DIALOG_STYLE_INPUT, "   Transferencia",
		 		"Digite a Quantia que Deseja Transferir:", "Confirma", "Sair");
			}
   			return 1;
	        }
		return 1;
	}
//==============================================================================
	if(dialogid == DIALOG_RANGE)
	{
    	if(!response)return 0;
		if(listitem == 0)
		{
        	new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;
        	vehicleid = GetPlayerVehicleID(playerid);GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);if(GetPVarInt(playerid,"Lights") == 1) {
          	SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);SetPVarInt(playerid,"Lights",0);
      	}
	     	else if(GetPVarInt(playerid,"Lights") == 0)
		{
        	SetVehicleParamsEx(vehicleid, engine, VEHICLE_PARAMS_ON, alarm, doors, bonnet, boot, objective);
       		SetPVarInt(playerid,"Lights",1);
       		}
       		return true;
    	}
	    if(listitem == 1)
		{
        	new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;vehicleid = GetPlayerVehicleID(playerid);GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);if(GetPVarInt(playerid,"Alarm") == 1) {
            SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_OFF, doors, bonnet, boot, objective);SetPVarInt(playerid,"Alarm",0);
        }
        	else if(GetPVarInt(playerid,"Alarm") == 0)
		{
      		SetVehicleParamsEx(vehicleid, engine, lights, VEHICLE_PARAMS_ON, doors, bonnet, boot, objective);SetPVarInt(playerid,"Alarm",1);
      		}
   			return true;
   	 	}
    	if(listitem == 2)
		{
        	new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;vehicleid = GetPlayerVehicleID(playerid);GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        	if(GetPVarInt(playerid,"Bonnet") == 1)
			{
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_OFF, boot, objective);
			SetPVarInt(playerid,"Bonnet",0);
			}
        	else if(GetPVarInt(playerid,"Bonnet") == 0)
			{
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);SetPVarInt(playerid,"Bonnet",1);
        	}
        	return true;
   	 	}
    	if(listitem == 3)
		{
        	new engine, lights, alarm, doors, bonnet, boot, objective,vehicleid;vehicleid = GetPlayerVehicleID(playerid);GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);if(GetPVarInt(playerid,"Boot") == 1) {
            SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);SetPVarInt(playerid,"Boot",0);
        }
	        else if(GetPVarInt(playerid,"Boot") == 0)
		{
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
			SetPVarInt(playerid,"Boot",1);
			}
        	return true;
    	}
    	return true;
	}
//==============================================================================
	if(dialogid == 9282)
	{
    	if(IsPlayerConnected(PedirAvaliar))
		{
        if(response >= 1)
		{
            SendClientMessage(playerid, COLOR_DBLUE, "Obrigado pela sua Avaliacao Positiva!");
            SendClientMessage(PedirAvaliar, COLOR_WHITE, "Voce foi avaliado positivamente e ganhou 1 Nivel de Helper!");PlayerInfo[PedirAvaliar][pHelper] += 1;return true;
        }
        if(response == 0)
		{
            SendClientMessage(playerid, COLOR_DBLUE, "Voce avaliou o Helper {E31919}Negativamente!");
            SendClientMessage(PedirAvaliar, COLOR_WHITE, "Voce foi avaliado negativamente e perdeu 1 nivel de Helper");PlayerInfo[PedirAvaliar][pHelper] -= 1;return true;
        	}
    	}
	    return true;
	}
//==============================================================================
	if(dialogid == MenuGOV)
	{
	    if(response)
	    {
	        if(listitem == 0)//Sultan
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(560,1535.7097,-1846.8744,13.3504,181.7076,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Limousine
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(409,1532.1809,-1845.9813,13.3320,178.0685,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//NRG 500
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(522,1523.3295,-1848.7205,13.1189,178.2015,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}
	
	if(dialogid == MenuGOV)
	{
	    if(response)
	    {
	        if(listitem == 0)//Sultan
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(560,1535.7097,-1846.8744,13.3504,181.7076,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Limousine
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(409,1532.1809,-1845.9813,13.3320,178.0685,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//NRG 500
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(522,1523.3295,-1848.7205,13.1189,178.2015,1,1);
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuPF)
	{
	    if(response)
	    {
	        if(listitem == 0)//Police car
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(596,-2442.6738,526.4616,29.9201,195.4541,0,0); // Police Car
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Police ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(599,-2442.6738,526.4616,29.9201,195.4541,0,0); // Police Ranger
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//HPV1000
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(523,-2442.6738,526.4616,29.9201,195.4541,0,0); // HPV1000
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 3)//FBI Ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(490,-2442.6738,526.4616,29.9201,195.4541,0,0); // FBI Rancher
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 4)//Enforcer
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(427,-2442.6738,526.4616,29.9201,195.4541,0,0); // Enforcer
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 6)//FBI Truck
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(528,-2442.6738,526.4616,29.9201,195.4541,0,0); // FBI Truck
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuPC)
	{
	    if(response)
	    {
	        if(listitem == 0)//Police car
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(596,900.5388,-1257.6967,14.9560,345.9801,0,0); // Police Car
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Police ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(599,900.5388,-1257.6967,14.9560,345.9801,0,0); // Police Ranger
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//HPV1000
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(523,900.5388,-1257.6967,14.9560,345.9801,0,0); // HPV1000
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 3)//FBI Ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(490,900.5388,-1257.6967,14.9560,345.9801,0,0); // FBI Rancher
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 4)//Enforcer
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(427,900.5388,-1257.6967,14.9560,345.9801,0,0); // Enforcer
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 6)//FBI Truck
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(528,900.5388,-1257.6967,14.9560,345.9801,0,0); // FBI Truck
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuBOPE)
	{
	    if(response)
	    {
	        if(listitem == 0)//Police car
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(596,300.9082,-1492.3870,24.5938,293.7575,0,0); // Police Car
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Police ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(599,300.9082,-1492.3870,24.5938,293.7575,0,0); // Police Ranger
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//HPV1000
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(523,300.9082,-1492.3870,24.5938,293.7575,0,0); // HPV1000
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 3)//FBI Ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(490,300.9082,-1492.3870,24.5938,293.7575,0,0); // FBI Rancher
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 4)//Enforcer
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(427,300.9082,-1492.3870,24.5938,293.7575,0,0); // Enforcer
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 6)//FBI Truck
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(528,300.9082,-1492.3870,24.5938,293.7575,0,0); // FBI Truck
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuEB)
	{
	    if(response)
	    {
	        if(listitem == 0)//Patriot
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(470,-1533.7620,422.3723,7.1875,181.0172,16,16); //Patriot
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			if(listitem == 1)//VTR
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(596,-1533.7620,422.3723,7.1875,181.0172,16,16); //Patriot
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			if(listitem == 2)//Moto
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(523,-1533.7620,422.3723,7.1875,181.0172,16,16); //Patriot
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuPM)
	{
	    if(response)
	    {
	        if(listitem == 0)//Police car
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(596,1529.3033,-1684.0060,5.7087,268.8338,0,0); // Police Car
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Police ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(599,1529.1931,-1688.0342,6.0811,270.4332,0,0); // Police Ranger
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//HPV1000
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(523,1545.9861,-1684.4612,5.4769,92.8782,0,0); // HPV1000
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 3)//FBI Ranger
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(490,1545.4159,-1680.0541,5.7953,87.6136,0,0); // FBI Rancher
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 4)//Enforcer
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(427,1544.9612,-1676.1880,5.5116,89.0768,0,0); // Enforcer
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 6)//FBI Truck
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(528,1545.9091,-1671.8762,6.0335,90.0443,0,0); // FBI Truck
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}
	
	
	if(dialogid == MenuMEDICOS)
	{
	    if(response)
	    {
	        if(listitem == 0)//Ambulancia
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(416,2035.5190,-1424.1974,17.1388,182.7904,1,3); // Ambulancia
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Moto
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(586,2030.7274,-1410.6714,16.5189,71.8915,1,1); // Moto
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//Helicoptero
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(487,2031.7279,-1379.8784,48.5859,0.0002,1,3); // Helicoptero
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuMCN)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,282.5849,-1163.2761,80.9141,221.1106,2,2); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,282.5849,-1163.2761,80.9141,221.1106,2,2); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,282.5849,-1163.2761,80.9141,221.1106,2,2); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuVagos)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,2806.4182,-1183.8268,25.4097,286.7000,6,6); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,2806.4182,-1183.8268,25.4097,286.7000,6,6); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,2806.4182,-1183.8268,25.4097,286.7000,6,6); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuCV)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,2157.9736,-1800.8035,13.3718,272.6996,3,3); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,2157.9736,-1800.8035,13.3718,272.6996,3,3); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,2157.9736,-1800.8035,13.3718,272.6996,3,3); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuSOA)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,709.2042,-458.0265,16.3359,85.2208,4,4); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,709.2042,-458.0265,16.3359,85.2208,4,4); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,709.2042,-458.0265,16.3359,85.2208,4,4); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuElements)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,2795.2830,-1588.8105,10.9270,274.5845,43,43); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,2795.2830,-1588.8105,10.9270,274.5845,43,43); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,2795.2830,-1588.8105,10.9270,274.5845,43,43); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuTriads)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,-1699.1467,1332.3953,7.1791,129.2833,16,16); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,-1699.1467,1332.3953,7.1791,129.2833,16,16); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,-1699.1467,1332.3953,7.1791,129.2833,16,16); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuPCC)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,1309.8995,-856.0664,39.5781,154.5418,12,12); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,1309.8995,-856.0664,39.5781,154.5418,12,12); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,1309.8995,-856.0664,39.5781,154.5418,12,12); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuGrota)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,-2515.5208,1209.7000,37.4219,259.0331,79,79); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,-2515.5208,1209.7000,37.4219,259.0331,79,79); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,-2515.5208,1209.7000,37.4219,259.0331,79,79); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuGroove)
	{
	    if(response)
	    {
	        if(listitem == 0)//Landstalker
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(400,2462.7847,-1700.2332,13.5188,348.3169,114,114); //Landstalker
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Burrito
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(482,2462.7847,-1700.2332,13.5188,348.3169,114,114); //Burrito
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//FCR-900
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(521,2462.7847,-1700.2332,13.5188,348.3169,114,114); // FCR-900
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuMEDICOSSF)
	{
	    if(response)
	    {
	        if(listitem == 0)//Ambulancia
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(416,-2657.1841,615.0660,14.6025,359.8490,1,1); // Abulancia SF
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Moto
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(586,-2662.6228,616.6717,13.9747,356.4046,1,1); // Moto medicos sf
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//Helicoptero
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(487,-2704.3662,624.3058,14.6464,0.1720,1,1); // maverick medicos sf
	        	//PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuTaxi)
	{
	    if(response)
	    {
	        if(listitem == 0)//Taxi
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(420,1789.2245,-1690.6526,13.2406,359.9352,6,6); // Spawn Taxi
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Moto
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(581,1784.9564,-1690.3467,13.1710,348.1017,6,6); // Moto Taxi
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}

	if(dialogid == MenuLSNews)
	{
	    if(response)
	    {
	        if(listitem == 0)//Van
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(582,741.7016,-1334.9618,13.5394,226.7928,6,6); //Van
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 1)//Sultan
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(560,741.7016,-1334.9618,13.5394,226.7928,6,6); //Sultan
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
			else if(listitem == 2)//Moto
	        {
	        	DestroyVehicle(CarroPlayer[playerid]);
	        	CarroPlayer[playerid] = -1;
	        	SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi spawnado com sucesso!");
	        	CarroPlayer[playerid] = AddStaticVehicle(461,741.7016,-1334.9618,13.5394,226.7928,6,6); //Moto
	        	PutPlayerInVehicle(playerid, CarroPlayer[playerid], 0);
			}
		}
	}
//==============================================================================
	if(dialogid == 642)
	{
		if(response == 0)
		{
		}
		if(response == 1)
		{
 			OnPlayerCommandText(playerid,"/aceitar convite");
			//ShowPlayerDialog(playerid, 643, DIALOG_STYLE_MSGBOX, "Escolha Sua Skin", "Proximo: Para trocar sua skin.\nConfirmar: Para confirmar sua skin.", "Confirmar", "Proximo");
    	}
    	return true;
	}
//==============================================================================
	/*if(dialogid == 643)
	{
		if(response == 0)
		{
        	OnPlayerText(playerid,"proximo");
			ShowPlayerDialog(playerid, 643, DIALOG_STYLE_MSGBOX, "Escolha Sua Skin", "Proximo: Para trocar sua skin.\nConfirmar: Para confirmar sua skin.", "Confirmar", "Proximo");
    	}
    	if(response == 1)
		{
        	OnPlayerText(playerid,"Confirma");
    	}
    	return true;
	}*/
//==============================================================================
	if(dialogid == 644)
	{
		if(response == 0)
		{
			new lolz = GetPlayerOrg(playerid);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* Voce convidou %s para sua organizacao: %s.", giveplayer,NomeORG(playerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			new convitestring[256];
		 	format(convitestring,sizeof(convitestring), "Voce foi convidado para uma organizacao: %s\nDeseja entrar para a organizacao ?",NomeORG(playerid));
		   	ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",convitestring,"Sim","Nao");
			InviteOffer[para1] = playerid;
			InviteJob[para1] = lolz;
			OnPlayerCommandText(playerid,"/convidar");
    	}
    	if(response == 1)
		{
    	}
    	return true;
	}
//==============================================================================
    if(dialogid == 5025)
    {
		if(response == 1)
		{
              OnPlayerCommandText(playerid,"/desalugarheli");
              Controle(playerid, 1);
              SendClientMessage(playerid, COLOR_GRAD1, "Helicoptero desalugado");
              RemovePlayerFromVehicle(playerid);
	          return 0;
	    }
		else if(response == 0)
		{
              RemovePlayerFromVehicle(playerid);
			  Controle(playerid, 1);
	          return 0;
        }
        return 0;
    }
//==============================================================================
    if(dialogid == DIALOG_ALUGAR)
    {
		if(response == 1)
		{
       		OnPlayerCommandText(playerid,"/alugarcarro");
        	Controle(playerid, 1);
	    	return 0;
	    }
		else if(response == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voce optou por nao alugar");
			Controle(playerid, 1);
			RemovePlayerFromVehicle(playerid);
	      	return 0;
        }
        return 0;
	}
//==============================================================================
    if(dialogid == DIALOG_ALUGAR2)
	{
		if(response == 1)
		{
          	OnPlayerCommandText(playerid,"/alugaraero");
          	Controle(playerid, 1);
	       	return 0;
	    }
		else if(response == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voce optou por nao alugar");
			Controle(playerid, 1);
			RemovePlayerFromVehicle(playerid);
	      	return 0;
        }
        return 0;
	}
//==============================================================================
 	if(dialogid == 2624)
	{
		if(response == 1)
		{
           	OnPlayerCommandText(playerid,"/veiculo comprar");
          	Controle(playerid, 1);
	      	return 0;
	    }
		else if(response == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce optou por nao comprar o veiculo");
			Controle(playerid, 1);
			RemovePlayerFromVehicle(playerid);
	     	return 0;
        }
        return 0;
	}
//==============================================================================
    if(dialogid == 1)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ok, Caso queira fazer login posteriormente use /logar [senha]!");
            return true;
        }
        if(response >= 1)
		{
  			if(strlen(inputtext) == 0)
			{
			    SetPlayerPos(playerid, 1684.77710, -2300.68237, 22.02340);
				SetPlayerInterior(playerid, 0);
        		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Fazendo Seu Login", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nConta registrada, para logar digite sua senha corretamente!", "Logar", "Esperar");
        		return true;
        	}
        	format(gstring,sizeof(gstring),"/logar %s",inputtext);
        	OnPlayerCommandText(playerid,gstring);
        	return true;
		}
		return true;
	}
//==============================================================================
    if(dialogid == DIALOGID2)
	{
        if(response)
		{
            if(listitem == 0)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                PlayerInfo[playerid][pLuta] = 1;
            }
            if(listitem == 1)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                PlayerInfo[playerid][pLuta] = 3;
            }
            if(listitem == 2)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                PlayerInfo[playerid][pLuta] = 4;
            }
            if(listitem == 3)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                PlayerInfo[playerid][pLuta] = 5;
            }
            if(listitem == 4)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                PlayerInfo[playerid][pLuta] = 6;
            }
        }
        return true;
    }
    
    if(dialogid == 5062)
	{
        if(response == 0)
		{
			Kick(playerid);
            return true;
        }
        if(response >= 1)
		{
  			Kick(playerid);
        	return true;
		}
		return true;
	}
//==============================================================================
    if(dialogid == 2)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ok, Caso queira se registrar posteriormente use /registrar [senha]!");
            return true;
        }
        if(response >= 1)
		{
            if(strlen(inputtext) == 0)
			{
				SetPlayerPos(playerid, 1684.77710, -2300.68237, 22.02340);
				SetPlayerInterior(playerid, 0);
                ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Fazendo Seu registro", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nPara se registrar digite uma senha!\nLembrando seu nome deve ser um nome RP!", "Registrar", "Cancelar");
				return true;
            }
            format(gstring,sizeof(gstring),"/registrar %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
            return true;
        }
        return true;
    }
//==============================================================================
	if(dialogid == DIALOG_ADVOGADO)
	{
 		SoltandoPreso = 0;
   		if(response == 0)
     	{
      		PenaEscolhida = void;
      		Diminuir = void;
          	PrecoAdvogado = void;
          	Advogando = void;
          	Presidiarios = void;
          	Ownado = void;
          	SoltandoPreso = void;
          	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
          	return 1;
     	}
     	if(response == 1)
    	{
       		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
         	if(listitem >= 0 && listitem <= 9)
          	{
           		if(listitem == 0)
             	{
              		SoltandoPreso = 1;
                	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome1);
                 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                  	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                   	,"Confirmar", "Cancelar");
            	}
             	if(listitem == 1)
            	{
              		SoltandoPreso = 2;
                	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome2);
                	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                   	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                   	,"Confirmar", "Cancelar");
              	}
              	if(listitem == 2)
             	{
             		SoltandoPreso = 3;
               		format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome3);
               		ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
               		"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
               		,"Confirmar", "Cancelar");
            	}
            	if(listitem == 3)
             	{
              		SoltandoPreso = 4;
                  	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome4);
                 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                 	,"Confirmar", "Cancelar");
             	}
          		if(listitem == 4)
            	{
             		SoltandoPreso = 5;
              		format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome5);
                	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
               		"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
              		,"Confirmar", "Cancelar");
             	}
           		if(listitem == 5)
             	{
             		SoltandoPreso = 6;
             		format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome6);
            		ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
              		"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
              		,"Confirmar", "Cancelar");
            	}
          		if(listitem == 6)
            	{
               		SoltandoPreso = 7;
               		format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome7);
                 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                 	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                 	,"Confirmar", "Cancelar");
           		}
          		if(listitem == 7)
             	{
              		SoltandoPreso = 8;
                	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome8);
                  	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                	,"Confirmar", "Cancelar");
            	}
             	if(listitem == 8)
              	{
             		SoltandoPreso = 9;
                 	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome9);
                 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                  	,"Confirmar", "Cancelar");
              	}
               	if(listitem == 9)
             	{
                	SoltandoPreso = 10;
                 	format(string, sizeof(string),"Voce quer diminuir a pena de %s em.", PresoNome10);
                 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO_2,DIALOG_STYLE_LIST,string,
                 	"Diminuir 10%\nDiminuir 20%\nDiminuir 30%\nDiminuir 40%\nDiminuir 50%\nDiminuir 60%"
                 	,"Confirmar", "Cancelar");
               	}
             	return 1;
         	}
       	}
	}
//==============================================================================
	if(dialogid == DIALOG_ADVOGADO_2)
	{
   		SoltandoPreso = 0;
      	if(response == 0)
       	{
        	PenaEscolhida = void;
         	Diminuir = void;
          	PrecoAdvogado = void;
          	Advogando = void;
           	Presidiarios = void;
           	Ownado = void;
           	SoltandoPreso = void;
           	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
           	return 1;
   		}
     	if(response == 1)
   		{
      		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
          	switch(SoltandoPreso)
            {
            	case 1:{format(Cidadao, sizeof(Cidadao), PresoNome1);/*PresidiarioID = PresoID1;*/}
             	case 2:{format(Cidadao, sizeof(Cidadao), PresoNome2);/*PresidiarioID = PresoID2;*/}
              	case 3:{format(Cidadao, sizeof(Cidadao), PresoNome3);/*PresidiarioID = PresoID3;*/}
               	case 4:{format(Cidadao, sizeof(Cidadao), PresoNome4);/*PresidiarioID = PresoID4;*/}
                case 5:{format(Cidadao, sizeof(Cidadao), PresoNome5);/*PresidiarioID = PresoID5;*/}
                case 6:{format(Cidadao, sizeof(Cidadao), PresoNome6);/*PresidiarioID = PresoID6;*/}
                case 7:{format(Cidadao, sizeof(Cidadao), PresoNome7);/*PresidiarioID = PresoID7;*/}
                case 8:{format(Cidadao, sizeof(Cidadao), PresoNome8);/*PresidiarioID = PresoID8;*/}
                case 9:{format(Cidadao, sizeof(Cidadao), PresoNome9);/*PresidiarioID = PresoID9;*/}
                case 10:{format(Cidadao, sizeof(Cidadao), PresoNome10);/*PresidiarioID = PresoID10;*/}
            }
            if(PlayerInfo[PresidiarioID][pAjustado] == char)
            {
            	PenaEscolhida = void;
            	Diminuir = void;
             	PrecoAdvogado = void;
              	Advogando = void;
              	Presidiarios = void;
               	Ownado = void;
               	SoltandoPreso = void;
                SendClientMessage(playerid, COLOR_GRAD1, "[BPR] Este preso ja foi ajustado !");
                return 1;
			}
   			PresidiarioID = GetPlayerID(Cidadao);
      		if(listitem >= 0 && listitem <= 5)
        	{
                if(listitem == 0)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*10/100;
                    PenaEscolhida = 1;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
                }
                if(listitem == 1)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*20/100;
                    PenaEscolhida = 2;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
                }
                if(listitem == 2)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*30/100;
                    PenaEscolhida = 3;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
                }
                if(listitem == 3)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*40/100;
                    PenaEscolhida = 4;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
                }
                if(listitem == 4)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*50/100;
                    PenaEscolhida = 5;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
                }
                if(listitem == 5)
                {
                    Diminuir = PlayerInfo[PresidiarioID][pJailTime]-PlayerInfo[PresidiarioID][pJailTime]*60/100;
                    PenaEscolhida = 6;
                    format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
                    Cidadao, GetPena(PenaEscolhida));
                    ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
            	}
       			return 1;
			}
		}
	}
//==============================================================================
  	if(dialogid == DIALOG_ADVOGADO_3)
  	{
        if(response == 0)
        {
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            PenaEscolhida = void;
            Diminuir = void;
            PrecoAdvogado = void;
            Advogando = void;
            Presidiarios = void;
            Ownado = void;
            SoltandoPreso = void;
            return 1;
        }
        if(response >= 1)
        {
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            if(strval(inputtext) >= 3000 && strval(inputtext) <= 30000)
            {
                PrecoAdvogado = strval(inputtext);
                AdvOffer[PresidiarioID] = playerid;
                AdvPrice[PresidiarioID] = PrecoAdvogado;
                format(stringe,sizeof(stringe),"Atencao seu cliente e %s [ID %d]\nvoce quer livra-lo de %s porcento de sua pena\npor um valor de $%d\nAguarde uma resposta!", Cidadao, PresidiarioID,GetPena(PenaEscolhida), PrecoAdvogado);
                ShowPlayerDialog(playerid,DIALOG_ADVOGADO_4,DIALOG_STYLE_MSGBOX,"Aceitar advogado", stringe,"OK","Cancelar");
                format(stringe,sizeof(stringe),"Atencao seu advogado e %s [ID %d]\ne o mesmo quer livra-lo de %s porcento de sua pena\npor um valor de $%d\nAguarde uma resposta!", GetName(playerid), playerid, GetPena(PenaEscolhida), PrecoAdvogado);
                ShowPlayerDialog(PresidiarioID,DIALOG_ADVOGADO_5,DIALOG_STYLE_MSGBOX,"Aceitar advogado", stringe,"OK","Cancelar");
                return 1;
         	}
         	else
        	{
                format(string, sizeof(string),"OK, Voce escolheu livrar %s de %s porcento de sua pena\nAgora escolha um valor para este servico\n***OBS: Este valor deve estar entre 3000 e 30000",
          		Cidadao, GetPena(PenaEscolhida));
          		ShowPlayerDialog(playerid, DIALOG_ADVOGADO_3, DIALOG_STYLE_INPUT, "Preco pela liberdade.", string, "Confirmar", "Cancelar");
			}
		}
		return 1;
	}
//==============================================================================
	if(dialogid == DIALOG_ADVOGADO_4)
 	{
        if(response == 0)
        {
            PenaEscolhida = void;
            Diminuir = void;
            PrecoAdvogado = void;
            Advogando = void;
            Presidiarios = void;
            Ownado = void;
            SoltandoPreso = void;
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            return 1;
        }
        if(response == 1)
		{
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            PenaEscolhida = void;
            Diminuir = void;
            PrecoAdvogado = void;
            Advogando = void;
            Presidiarios = void;
            Ownado = void;
            SoltandoPreso = void;
            return 1;
        }
        return 1;
  	}
//==============================================================================
  	if(dialogid == DIALOG_ADVOGADO_5)
  	{
        if(response == 0)
        {
            PenaEscolhida = void;
            Diminuir = void;
            PrecoAdvogado = void;
            Advogando = void;
            Presidiarios = void;
            Ownado = void;
            SoltandoPreso = void;
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            return 1;
        }
        if(response == 1)
        {
            PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
            if(AdvOffer[playerid] < 999)
            {
                if(GetPlayerMoney(playerid) > AdvPrice[playerid])
                {
                    format(string, sizeof(string), "Voce teve sua pena diminuida em %s porcento por R$%d pelo Advogado: %s.",GetPena(PenaEscolhida), AdvPrice[playerid], GetName(AdvOffer[playerid]));
                    SendClientMessage(playerid, 0x00FFFFFF, string);
                    format(string, sizeof(string), "Atencao, %s aceitou sua proposta de diminuicao de %s de sua pena por $%d!",GetName(playerid), GetPena(PenaEscolhida), AdvPrice[playerid]);
                    SendClientMessage(AdvOffer[playerid], 0x00FFFFFF, string);
                    GivePlayerMoney(playerid, -AdvPrice[playerid]);
                    ApprovedAdvogado[AdvOffer[playerid]] = 0;
                    WantAdvogado[playerid] = 0;
                    CallAdvogado[playerid] = 0;
                    PlayerInfo[playerid][pJailTime] = Diminuir;
                    PlayerInfo[playerid][pAjustado] = char;
                    PlayerInfo[AdvOffer[playerid]][pLawSkill] ++;
                    AdvOffer[playerid] = 999;
             		AdvPrice[playerid] = 0;
      			}
    		}
    		PenaEscolhida = void;
     		Diminuir = void;
     		PrecoAdvogado = void;
    		Advogando = void;
      		Presidiarios = void;
      		Ownado = void;
     		SoltandoPreso = void;
			return 1;
		}
		return 1;
	}
//==============================================================================
    if(dialogid == 900)
	{
    if(response == 1)
	{
		new tutorial1[800];
		strcat(string,"Ola amigo seja muito bem vindo ao Brasil Play Real\n\nEste e um pequeno tutorial para que voce possa entender como jogar em\n\nnosso servidor e para que nao tenha duvidas futuras e que entenda nossas regras.\n\n"); strcat(tutorial1, stringa);
        format(stringa, sizeof(stringa), "e altamente recomendado que voce leia este tutorial atentamente pois ele ira\n\nvaler muito em seu comeco em nosso servidor.\n\nAtencao este tutorial voce so podera ve-lo uma unica vez.\n\nNao avance este tutorial rapidamente."); strcat(tutorial1, stringa);
        ShowPlayerDialog(playerid,901, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial1, "Avancar", "Cancelar");
        PlayerInfo[playerid][pEmprego] = 0;
        return 0;
    }
    else if(response == 0)
	{
        Kick(playerid);
        return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 901)
	{
	if(response == 1)
	{
	    new tutorial2[800];
		format(stringa, sizeof(stringa), "Este e um servidor RP, ele tenta simular uma vida real.\n\nAqui temos regras, players e administradores.\n\nNosso servidor e vivido em duas cidades sendo elas, Los Santos e San Fierro\n\nMais a frente iremos te mostrar onde fica localizado os lugares deste servidor."); strcat(tutorial2, stringa);
        ShowPlayerDialog(playerid,902, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial2, "Avancar", "Cancelar");
		return 0;
    }
	else if(response == 0)
	{
		  Kick(playerid);
          return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 902)
    {
    if(response == 1)
	{
	    new tutorial3[800];
		format(stringa, sizeof(stringa), "Neste servidor e possivel voce comprar armas, drogas e voce pode tambem revende-las.\n\nTemos Prefeitos, Vereadores, Policias, Gangster, Terroristas, Servidores Publicos e muito mais.\n\nTemos varios empregos e ocupacoes no servidor, para pegar algum destes"); strcat(tutorial3, stringa);
        format(stringa, sizeof(stringa), "\n\ne so voce ir em nossa prefeitura e ir em nossa agencia de empregos e escolher.\n\nNo comeco voce vai achar estranho ou ate mesmo um pouco dificil jogar no servidor\n\nmas se caso voce seguir nossas regras e ler este tutorial atentamente, voce ira se dar bem."); strcat(tutorial3, stringa);
		ShowPlayerDialog(playerid,903, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial3, "Avancar", "Cancelar");
        return 0;
    }
    else if(response == 0) {
        Kick(playerid);
        return 0;
    }
    return 0;
	}
//==============================================================================
  	if(dialogid == 903)
	{
	if(response == 1)
	{
	    new tutorial4[800];
		format(stringa, sizeof(stringa), "Neste servidor temos regras que devem ser seguidas a risca para\n\nque todos os jogadores possam jogar em paz e nao serem prejudicados pelos outros.\n\nAqui neste servidor voce nao pode sair matando qualquer um que voce ver na rua\n\nIsto se chama DM ou Death Match, que quer dizer 'matar sem Motivo'\n\n"); strcat(tutorial4, stringa);
        format(stringa, sizeof(stringa), "Se caso algum admin te pegar fazendo este tipo de coisa voce sera punido\n\nAs punicoes sao variadas, tudo depende da frequencia e da maneira que a pessoa\n\ncomete estes erros dentro do servidor, as punicoes podem ser:\n\nKick, Cadeia, Aviso e Ban. Estas punicoes dependem de como o fato ocorreu"); strcat(tutorial4, stringa);
		ShowPlayerDialog(playerid,904, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial4, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
	return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 904)
	{
	if(response == 1)
	{
	    new tutorial5[800];
		format(stringa, sizeof(stringa), "Como parte fundamental de nosso servidor temos o nosso forum que e onde nos\n\ndiscutimos assuntos relacionados ao servidor e tambem aos nossos players.\nExistem diversas areas em nosso forum para cada questao que for aberta no mesmo"); strcat(tutorial5, stringa);
		format(stringa, sizeof(stringa), "\n\nPortanto ao postar la tome cuidado para nao postar o assunto no lugar errado.\n\n"); strcat(tutorial5, stringa);
        format(stringa, sizeof(stringa), "Em nosso forum assim como em nosso servidor temos regras que devem se cumpridas\n\nQuando voce descumpre uma regra de nosso forum voce pode ser punido severamente\n\nEntao tome muito cuidado quanto ao conteudo de sua postagem para nao ter problemas."); strcat(tutorial5, stringa);
		format(stringa, sizeof(stringa), "\n\nAcesse nosso Discord e fique por dentro do que ocorre em nosso servidor.\n\nhttps://discord.gg/MSh42WBfnw"); strcat(tutorial5, stringa);
		ShowPlayerDialog(playerid,905, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial5, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
    return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 905)
	{
	if(response == 1)
	{
	    new tutorial6[800];
		format(stringa, sizeof(stringa), "Em nosso servidor temos varias organizacoes e gangs, para que os players possam entrar\n\nCada uma tem seu chat interno, regras, manuais e lider.\n\nO lider de uma organizacao e quem convida, demite e promove participantes\n\nele tambem pode colocar sub-lideres e gerentes em suas organizacoes/gangs\n\n"); strcat(tutorial6, stringa);
        format(stringa, sizeof(stringa), "e possivel voce entrar em alguma destas, bate voce ler o manual e fazer o teste.\n\nEste teste pode ser feito com um lider ou com um sub-lider\n\nOs manuais se encontram no forum em suas respectivas areas.\n\nCada organizacao ou gang tem seus requisitos minimos\n\npara entrar nela mesma que devem estar em seus respectivos manuais."); strcat(tutorial6, stringa);
		ShowPlayerDialog(playerid,906, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial6, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
	return 0;
    }
    return 0;
	}
//==============================================================================
 	if(dialogid == 906)
	{
	if(response == 1)
	{
	    new tutorial7[800];
		format(stringa, sizeof(stringa), "Como ja foi dito em nosso tutorial, este servidor e um servidor RP\n\ne como todo servidor RP esta aqui tambem tem empregos e ocupacoes.\n\nPara conseguir um emprego voce deve ir na prefeitura e pegar o seu\n\nO emprego e uma maneira de voce agilizar o seu dinheiro aqui no servidor.\n\n"); strcat(tutorial7, stringa);
        format(stringa, sizeof(stringa), "existem variados tipos de empregos e multiplas funcoes para cada um.\n\nIndependente do valor que voce ganha com o emprego a cada hora jogada\n\nVoce ganha um vamlor que nos chamamos de PayDay.\n\nEste valor e dado a cada hora exata no servidor."); strcat(tutorial7, stringa);
		ShowPlayerDialog(playerid,907, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial7, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
    return 0;
    }
    return 0;
	}
//==============================================================================
	if(dialogid == 907)
	{
	if(response == 1)
	{
	    new tutorial8[800];
		format(stringa, sizeof(stringa), "Em nosso servidor temos inumeros comandos com funcoes de melhorar a jogabilidade\n\nPrimeiramente voce deve aprender que toda hora que voce dizer\n\ndigitar algum comando voce deve apertar a letra 'T' no seu teclado.\n\n"); strcat(tutorial8, stringa);
        format(stringa, sizeof(stringa), "Segue abaixo alguns comandos basicos.\n\n/rg = Visualiza o seu status no jogo e contem algumas informacoes suas.\n\n/relatorio [texto] = Com este comando voce fala direto com os administradores do jogo.\n\n/ajuda = Mostra outros comandos dentro do servidor\n\n"); strcat(tutorial8, stringa);
        format(stringa, sizeof(stringa), "/pagar [id] [quantia] = Paga alguma quantia para o player desejado\n\n/admins = Visualisa a lista de lideres online\n\n/lideres = Visualiza a lista de liders online.\n\n/gps = Maraca no seu mapa o lugar desejado para voce se orientar.\n\n"); strcat(tutorial8, stringa);
        format(stringa, sizeof(stringa), "Existem varios outros comandos no servidor use /ajuda para mais ajuda\n\n***OBS: Para ver a ID de alguem use a tecla TAB do seu teclado."); strcat(tutorial8, stringa);
		ShowPlayerDialog(playerid,908, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial8, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
    return 0;
    }
    return 0;
	}
//==============================================================================
    if(dialogid == 908)
	{
	if(response == 1)
	{
	    new tutorial9[800];
		format(stringa, sizeof(stringa), "Bom este e o fim de nosso tutorial, esperamos que voce tenha aprendido bem.\n\nSe caso voce ter alguma duvida posteriormente chame um admin usando /relatorio\n\ne ele ira te ajudar, se caso voce quizer saber os locais importantes do server use /gps\n\n"); strcat(tutorial9, stringa);
        format(stringa, sizeof(stringa), "e se caso voce queira ver alguns outros comandos use /ajuda\n\nSeja Bem Vindo ao Brasil Play Real RP, esperamos que voce se de bem por aqui."); strcat(tutorial9, stringa);
		ShowPlayerDialog(playerid,909, DIALOG_STYLE_MSGBOX, "Tutorial", tutorial9, "Avancar", "Cancelar");
		return 0;
	}
	else if(response == 0)
	{
    Kick(playerid);
	return 0;
    }
    return 0;
	}
//==============================================================================
	if(dialogid == 909)
	{
	if(response == 1)
	{
		TextDrawShowForPlayer(playerid, forum[playerid]);
		SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
		SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
        Controle(playerid, 1);
	    ClearChatbox(playerid, 100);
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, COLOR_RED, "Seja muito bem-vindo ao Brasil Play Real");
		SendClientMessage(playerid, COLOR_WHITE, "Caso precise de ajuda use /relatorio");
		SendClientMessage(playerid, COLOR_WHITE, "Tenha um otimo RolePlay!");
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, COLOR_WHITE, "Obrigado pela Preferencia!");
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		PlayerInfo[playerid][pTut] = 1;
		gNews[playerid] = 0; gFam[playerid] = 0;
		Controle(playerid, 1);
		SetPlayerVirtualWorld(playerid,0);
		MedicBill[playerid] = 0;
		SetPlayerSpawn(playerid);
		SetCameraBehindPlayer(playerid);
		PlayerInfo[playerid][pConta] = 5000;
		PlayerInfo[playerid][pLevel] = 0;
		SetPlayerScore(playerid, 5);
        PlayerPlayMusic(playerid);
        RegistrationStep[playerid] = 4;
        Whitelist[playerid] = 1;
	    ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, 1500);
        return 0;
	}
	else if(response == 0)
	{
    	TextDrawShowForPlayer(playerid, forum[playerid]);
		SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
		SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
        Controle(playerid, 1);
	    ClearChatbox(playerid, 100);
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, COLOR_RED, "Seja muito bem-vindo ao Brasil Play Real");
		SendClientMessage(playerid, COLOR_WHITE, "Caso precise de ajuda use /relatorio");
		SendClientMessage(playerid, COLOR_WHITE, "Tenha um otimo RolePlay!");
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, COLOR_WHITE, "Obrigado pela Preferencia!");
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		PlayerInfo[playerid][pTut] = 1;
		gNews[playerid] = 0; gFam[playerid] = 0;
		Controle(playerid, 1);
		SetPlayerVirtualWorld(playerid,0);
		MedicBill[playerid] = 0;
		SetPlayerSpawn(playerid);
		SetCameraBehindPlayer(playerid);
		PlayerInfo[playerid][pConta] = 5000;
		PlayerInfo[playerid][pLevel] = 0;
		SetPlayerScore(playerid, 5);
        PlayerPlayMusic(playerid);
        RegistrationStep[playerid] = 4;
        Whitelist[playerid] = 1;
	    ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, 1500);
		return 0;
	}	
	return 0;
	}
//==============================================================================
    if(dialogid == 3)
    {
        if(response == 0)
		{
            VisionInfo[playerid][Tels] = 0;
            return true;
        }
        if(response >= 1)
		{
            if(listitem == 0)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    format(gstring,sizeof(gstring),"/ligar %d",VisionInfo[playerid][Tels]);
                    OnPlayerCommandText(playerid,gstring);
                    return true;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem lista telefonica !");
                    return true;
                }
            }
            if(listitem == 1)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    ShowPlayerDialog(playerid, 4, DIALOG_STYLE_INPUT, "Menu SMS", "Digite a Mensagem", "Enviar", "Cancelar");
                    return true;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma agenda !");
                    return true;
                }
            }
            return true;
        }
	    return true;
    }
//==============================================================================
    if(dialogid == 4)
	{
        if(response == 0)
		{
            VisionInfo[playerid][Tels] = 0;
            return true;
        }
        if(response >= 1)
		{
            format(gstring,sizeof(gstring),"/sms %d %s",VisionInfo[playerid][Tels],inputtext);
            OnPlayerCommandText(playerid,gstring);
            return true;
        }
        return true;
    }
//==============================================================================
    if(dialogid == 9)
	{
	    	if(response == 0)
     		{
			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
            PlayerInfo[playerid][pSex] = 2;
            SetPlayerSkin(playerid, 40);
            PlayerInfo[playerid][pOrigem] = 1;
            PlayerInfo[playerid][pSkin] = 40;
            SendClientMessage(playerid, COLOR_WHITE, "Certo, Voce e Mulher !");
            SetPlayerInterior(playerid, 0);
            TextDrawHideForPlayer(playerid, forum[playerid]);
            ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Finalizacao", "Aqui voce estara confirmando que voce e mulher e ira nascer em nossa cidade, tenha um bom RP", "Confirmar", "Cancelar");
            return true;
	    	}
	    	if(response == 1)
     		{
  			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
            PlayerInfo[playerid][pSex] = 1;
            SetPlayerSkin(playerid, 23);
            PlayerInfo[playerid][pOrigem] = 1;
            PlayerInfo[playerid][pSkin] = 23;
            SetPlayerInterior(playerid, 0);
            SendClientMessage(playerid, COLOR_WHITE, "Certo, Voce e Homem !");
            TextDrawHideForPlayer(playerid, forum[playerid]);
            ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Finalizacao", "Aqui voce estara confirmando que voce e Homem e ira nascer em nossa cidade, tenha um bom RP", "Confirmar", "Cancelar");
			return true;
			}
			return true;
	}
//==============================================================================
	if(dialogid == 999)
	{
		if(response == 0)
		{
  			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
        	PlayerInfo[playerid][pOrigem] = 2;
        	RegistrationStep[playerid] = 0;
        	Whitelist[playerid] = 1;
        	SendClientMessage(playerid, COLOR_WHITE, "Voce ira nascer em San Fierro!");
           	TextDrawHideForPlayer(playerid, forum[playerid]);
           	ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Bem Vindo", "Este servidor e extremamente feito para voce !\n\n\nTudo que foi feito aqui ate hoje, tem a finalidade de que voces possam ter uma jogabilidade altamente boa.\n\n\nAqui voce vai ter uma segunda vida, com amigos, esposas, trafico, roubo, sequestros, etc...\n\n\nNossa equipe esta disposta a te ajudar, vamos fazer o possivel para agradar voces.", "Avancar", "Cancelar");
      		return true;
		}
		if(response == 1)
		{
			Controle(playerid, 0);
        	ClearChatbox(playerid, 100);
         	PlayerInfo[playerid][pOrigem] = 1;
      		SendClientMessage(playerid, COLOR_WHITE, "Voce ira nascer em Los Santos!");
        	RegistrationStep[playerid] = 0;
        	Whitelist[playerid] = 1;
          	TextDrawHideForPlayer(playerid, forum[playerid]);
        	ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "Bem Vindo", "Este servidor e extremamente feito para voce !\n\n\nTudo que foi feito aqui ate hoje, tem a finalidade de que voces possam ter uma jogabilidade altamente boa.\n\n\nAqui voce vai ter uma segunda vida, com amigos, esposas, trafico, roubo, sequestros, etc...\n\n\nNossa equipe esta disposta a te ajudar, vamos fazer o possivel para agradar voces.", "Avancar", "Cancelar");
			return 1;
		}
		return 1;
    }
//==============================================================================
	if(dialogid == 423)
	{
		if(response == 0)
		{
      		return true;
		}
		if(response == 1)
		{
			OnPlayerCommandText(playerid,"/limpartodas");
			return 1;
		}
		return 1;
    }
//==============================================================================
	if(dialogid == 8989)
	{
		if(response == 0)
	    {
	        return true;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/lvaga 1");
     			return true;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 2");
			    return true;
		    }
		    if(listitem == 2)
		    {
			   	OnPlayerCommandText(playerid,"/lvaga 3");
			    return true;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 4");
       			return true;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 5");
      			return true;
		    }
		    if(listitem == 5)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 6");
			    return true;
		    }
		    if(listitem == 6)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 7");
			    return true;
		    }
		    if(listitem == 7)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 8");
			    return true;
		    }
		    if(listitem == 8)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 9");
			    return true;
		    }
		    if(listitem == 9)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 10");
			    return true;
		    }
		    if(listitem == 10)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 11");
			    return true;
		    }
	    	if(listitem == 11)
		    {
      			OnPlayerCommandText(playerid,"/lvaga 12");
     			return true;
		    }
		    if(listitem == 12)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 13");
			    return true;
		    }
		    if(listitem == 13)
		    {
			   	OnPlayerCommandText(playerid,"/lvaga 14");
			    return true;
		    }
		    if(listitem == 14)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 15");
       			return true;
		    }
		    if(listitem == 15)
		    {
	    		OnPlayerCommandText(playerid,"/lvaga 16");
      			return true;
		    }
		    if(listitem == 16)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 17");
			    return true;
		    }
		    if(listitem == 17)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 18");
			    return true;
		    }
		    if(listitem == 18)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 19");
			    return true;
		    }
		    if(listitem == 19)
		    {
			    OnPlayerCommandText(playerid,"/lvaga 20");
			    return true;
		    }
      		return true;
      	}
	}
//==============================================================================
	if(dialogid == 5)
	{
		if(response == 0)
	    {
	    	VisionInfo[playerid][PpLoja2472] = 0;
	        return true;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/comprar 1");
      			VisionInfo[playerid][PpLoja2472] = 0;
     			return true;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 2");
			    VisionInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 2)
		    {
			   	OnPlayerCommandText(playerid,"/comprar 3");
			   	VisionInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 4");
		    	VisionInfo[playerid][PpLoja2472] = 0;
       			return true;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 5");
	    		VisionInfo[playerid][PpLoja2472] = 0;
      			return true;
		    }
		    if(listitem == 5)
		    {
			    OnPlayerCommandText(playerid,"/comprar 6");
			    VisionInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 6)
		    {
			    OnPlayerCommandText(playerid,"/comprar 7");
			    VisionInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    if(listitem == 7)
		    {
			    OnPlayerCommandText(playerid,"/comprar 8");
			    VisionInfo[playerid][PpLoja2472] = 0;
			    return true;
		    }
		    VisionInfo[playerid][PpLoja2472] = 0;
      		return true;
      	}
	}
//==============================================================================
	if(dialogid == 6)
	{
		if(response == 0)
		{
    	    VisionInfo[playerid][PLojaA1] = 0;
		    VisionInfo[playerid][PLojaA2] = 0;
    	    VisionInfo[playerid][PLojaA3] = 0;
		    VisionInfo[playerid][PLojaA4] = 0;
		    return true;
		}
		if(response == 1)
		{
			if(listitem == 0)
		    {
   				ShowPlayerDialog(playerid, 8, DIALOG_STYLE_LIST, "Escolha seu Kit Vip", "Kit Vip\nKit Vip", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 1)
		    {
		        strmid(VisionInfo[playerid][ArmaLoja], "eagle", 0, strlen("eagle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 2)
		    {
		        strmid(VisionInfo[playerid][ArmaLoja], "mp5", 0, strlen("mp5"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 3)
		    {
		    	strmid(VisionInfo[playerid][ArmaLoja], "shotgun", 0, strlen("shotgun"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 4)
		    {
		        strmid(VisionInfo[playerid][ArmaLoja], "ak47", 0, strlen("ak47"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 5)
		    {
		        strmid(VisionInfo[playerid][ArmaLoja], "m4", 0, strlen("m4"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
		    if(listitem == 6)
		    {
		        strmid(VisionInfo[playerid][ArmaLoja], "rifle", 0, strlen("rifle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Municao", "Digite a quantidade de Municao que voce deseja!", "Confirmar", "Cancelar");
		        return true;
		    }
    	    VisionInfo[playerid][PLojaA1] = 0;
		    VisionInfo[playerid][PLojaA2] = 0;
 	    	VisionInfo[playerid][PLojaA3] = 0;
		    VisionInfo[playerid][PLojaA4] = 0;
		    return true;
		}
        return true;
    }
//==============================================================================
    if(dialogid == 7)
    {
        if(response == 0)
        {
            VisionInfo[playerid][PLojaA1] = 0;
		    VisionInfo[playerid][PLojaA2] = 0;
		    VisionInfo[playerid][PLojaA3] = 0;
		    VisionInfo[playerid][PLojaA4] = 0;
		    VisionInfo[playerid][ArmaLoja] = 0;
            return true;
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/comprararma %s %d",VisionInfo[playerid][ArmaLoja],strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            VisionInfo[playerid][PLojaA1] = 0;
		    VisionInfo[playerid][PLojaA2] = 0;
		    VisionInfo[playerid][PLojaA3] = 0;
		    VisionInfo[playerid][PLojaA4] = 0;
		    VisionInfo[playerid][ArmaLoja] = 0;
            return true;
        }
        VisionInfo[playerid][PLojaA1] = 0;
    	VisionInfo[playerid][PLojaA2] = 0;
    	VisionInfo[playerid][PLojaA3] = 0;
    	VisionInfo[playerid][PLojaA4] = 0;
    	VisionInfo[playerid][ArmaLoja] = 0;
        return true;
    }
//==============================================================================
    if(dialogid == 8)
    {
        if(response == 0)
        {
            VisionInfo[playerid][PLojaA1] = 0;
		    VisionInfo[playerid][PLojaA2] = 0;
		    VisionInfo[playerid][PLojaA3] = 0;
		    VisionInfo[playerid][PLojaA4] = 0;
            return true;
        }
        if(response == 1)
        {
            if(listitem == 0)
		    {
            	OnPlayerCommandText(playerid,"/kitvip");
            	VisionInfo[playerid][PLojaA1] = 0;
		    	VisionInfo[playerid][PLojaA2] = 0;
		    	VisionInfo[playerid][PLojaA3] = 0;
		    	VisionInfo[playerid][PLojaA4] = 0;
		    	VisionInfo[playerid][ArmaLoja] = 0;
            	return true;
			}
   			if(listitem == 1)
		    {
            	OnPlayerCommandText(playerid,"/kitvip");
            	VisionInfo[playerid][PLojaA1] = 0;
		   	 	VisionInfo[playerid][PLojaA2] = 0;
		    	VisionInfo[playerid][PLojaA3] = 0;
		    	VisionInfo[playerid][PLojaA4] = 0;
		    	VisionInfo[playerid][ArmaLoja] = 0;
            	return true;
			}
			return true;
        }
        VisionInfo[playerid][PLojaA1] = 0;
   		VisionInfo[playerid][PLojaA2] = 0;
   		VisionInfo[playerid][PLojaA3] = 0;
	    VisionInfo[playerid][PLojaA4] = 0;
    	VisionInfo[playerid][ArmaLoja] = 0;
        return true;
    }
//==============================================================================
 	if(dialogid == 9001)
	{
	    Controle(playerid, 1);
	    switch(listitem)
        {
            case 0:
			{
			    ShowPlayerDialog(playerid,9002,DIALOG_STYLE_LIST,"Los Santos","Locais em Geral\nHQ'S Organizacoes","Selecionar","Cancelar");
			}
			case 1:
			{
			    ShowPlayerDialog(playerid,9003,DIALOG_STYLE_LIST,"San Fierro","Locais em Geral\nHQ'S Organizacoes","Selecionar","Cancelar");
			}
		}
	}

	if(dialogid == 9010)
	{
	    Controle(playerid, 1);
	    if(response)
        {
			//Geraal -------- OK
            if(listitem == 0)
			{
			    ShowPlayerDialog(playerid,9011,DIALOG_STYLE_LIST,"Locais em Geral","Prefeitura\nDepartamento de Policia\nLoja de Armas\nBanco\nBinco\nPegar Materiais\nEntregar Materiais\nLoterica\nConcessionaria","Selecionar","Cancelar");
			}
			//Empregos -------- OK
			if(listitem == 1)
			{
			    ShowPlayerDialog(playerid,9012,DIALOG_STYLE_LIST,"Empregos","Mecanico\nMotorista de Onibus\nCaminhoneiro","Selecionar","Cancelar");
			}
			//HQS -------- OK
			if(listitem == 2)
			{
			    ShowPlayerDialog(playerid,9013,DIALOG_STYLE_LIST,"HQs","Governo\nMedicos\nTaxistas\nPolicia Militar\nPolicia Federal\nPolicia Civil\nBOPE\nForcas Armadas","Selecionar","Cancelar");//\nMafia Cosa Nostra\nGroove\nVagos\nComando Vermelho\nSons of Anarchy\nElements\nTriads\nPrimeiro Comando Capital\nGrota
			}
			//Estacionamento -------- OK
			if(listitem == 3)
			{
			    ShowPlayerDialog(playerid,9014,DIALOG_STYLE_LIST,"Estacionamentos","Estacionamento Aeroporto\nEstacionamento Praca\nEstacionamento Hospital\nEstacionamento Praia","Selecionar","Cancelar");
			}
			//Lojas -------- OK
			if(listitem == 4)
			{
			    ShowPlayerDialog(playerid,9015,DIALOG_STYLE_LIST,"24/7","Loja Praca\nLoja Market\nLoja Verona Beach\nLoja Pier","Selecionar","Cancelar");
			}
		}
	}

	if(dialogid == 9013)
	{
	    Controle(playerid, 1);
	    if(response)
        {
            if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 1538.8450,-1839.0231,13.5469,8.0);// Governo
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid, 2005.6724,-1441.6981,13.5632,8.0);// Medicos
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid, 1803.5790,-1720.5454,13.5346,8.0);// Taxista
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid, 779.9213,-1330.8131,13.5485,8.0);// Reporter
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 4)
			{
			    SetPlayerCheckpoint(playerid, 1548.5258,-1630.7941,13.3828,8.0);// Policia Militar
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 5)
			{
			    SetPlayerCheckpoint(playerid, -2435.2920,496.3683,29.9401,8.0);// Policia Federal
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 6)
			{
			    SetPlayerCheckpoint(playerid, 923.3397,-1223.1852,16.9766,8.0);// Policia Civil
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 7)
			{
			    SetPlayerCheckpoint(playerid, 332.4688,-1514.3250,35.8672,8.0);// BOPE
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 8)
			{
			    SetPlayerCheckpoint(playerid, -1549.2496,514.7599,7.1258,8.0);// Forcas Armadas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
		}
	}
	
	if(dialogid == 9011)
	{
	    Controle(playerid, 1);
	    if(response)
        {
            if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 1479.6257,-1743.7031,13.5469,8.0);// Prefeitura
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid, 1544.5265,-1675.7528,13.5586,8.0);// Departamento de Policia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid, 1366.0013,-1280.2899,13.5469,8.0);// Loja de Armas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid, 1461.8153,-1024.6210,23.8281,8.0);// Banco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 4)
			{
			    SetPlayerCheckpoint(playerid, 2244.8364,-1663.8789,15.4766,8.0);// Binco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 5)
			{
			    SetPlayerCheckpoint(playerid, 1949.3973,-2061.4451,13.5469,8.0);// Pegar Materiais
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 6)
			{
			    SetPlayerCheckpoint(playerid, 1747.8041,-1944.0286,13.5681,8.0);// Entregar Materiais
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 7)
			{
			    SetPlayerCheckpoint(playerid, 1631.3339,-1168.9401,24.0781,8.0);// Loterica
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 8)
			{
			    SetPlayerCheckpoint(playerid, 555.7414,-1258.4478,17.2422,8.0);// Concessionaria
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
		}
	}

	if(dialogid == 9014)
	{
	    Controle(playerid, 1);
	    if(response)
        {
            if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 1561.7953,-2326.0510,13.5497,8.0);// Garagem Aeroporto
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid, 1541.6699,-1565.8655,13.5836,8.0);// Garagem Praca
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid, 1223.7673,-1423.6736,13.6048,8.0);// Garagem Hospital
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid, 313.1900,-1796.5846,4.5640,8.0);// Garagem Praia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
		}
	}

	if(dialogid == 9015)
	{
	    Controle(playerid, 1);
	    if(response)
        {
            if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 1348.2583,-1747.8944,13.3725,8.0);// Loja Praca
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid, 1113.0105,-1381.9172,13.7430,8.0);// Loja Hospital
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid, 1033.1779,-2002.5939,13.1968,8.0);// Loja Verona
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 3)
			{
			    SetPlayerCheckpoint(playerid, 837.9006,-2034.3790,12.8672,8.0);// Loja Pier
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
		}
	}
	
	if(dialogid == 9012)
	{
	    Controle(playerid, 1);
	    if(response)
        {
            if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 957.3555,-1534.6702,13.5798,8.0);// Mecanico
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 1)
			{
			    SetPlayerCheckpoint(playerid, 1195.7765,-1730.7926,13.5706,8.0);// Motorista de Onibus
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
			if(listitem == 2)
			{
			    SetPlayerCheckpoint(playerid, -87.8571,-1124.9036,1.0855,8.0);// Caminhoneiro
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu GPS.");
			}
		}
	}

	if(dialogid == MenuCoins)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
            	ShowPlayerDialog(playerid,6565,DIALOG_STYLE_LIST,"Comprar Vip","{FFFF00}Vip            = {008B00}10.000 Coins\n{FFFF00}Socio          = {008B00}20.000 Coins","Comprar","Cancelar");
            }
            else if(listitem == 1)
			{
				ShowPlayerDialog(playerid,5050,DIALOG_STYLE_LIST,"Comprar Dinheiro","{FFFF00}R$250.000          = {008B00}5.000 Coins\n{FFFF00}R$700.000          = {008B00}7.000 Coins\n{FFFF00}R$1.500.000        = {008B00}15.000 Coins","Comprar","Cancelar");
            }
            else if(listitem == 2)
			{
				ShowPlayerDialog(playerid,5656,DIALOG_STYLE_LIST,"Comprar Level","{FFFF00}5 Levels        = {008B00}5.000 Coins\n{FFFF00}10 Levels       {008B00}10.000 Coins\n{FFFF00}15 Levels       = {008B00}15.000 Coins","Comprar","Cancelar");
            }
        }
	}
	
	if(dialogid == MenuGaragem)
	{
	    Controle(playerid, 1);
		if(response)
        {
			new carid1 = PlayerInfo[playerid][pCar1];
			new carid2 = PlayerInfo[playerid][pCar2];
			new carid3 = PlayerInfo[playerid][pCar3];
			new carid4 = PlayerInfo[playerid][pCar4];
            if(listitem == 0)
			{
			    //Estacionamento Praca
			    if(PlayerToPoint(2.0,playerid,1541.4535,-1563.2844,13.7479))
			    {
	       			if(PlayerInfo[playerid][pCar1] > 0)
	       			{
						if(RetirouCarro1[playerid] == 0)
						{
			            	RetirouCarro1[playerid] = AddStaticVehicle(carid1,1537.1982,-1551.3496,13.2279,90.9441,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							////RetirouCarro1[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Hospital
				else if(PlayerToPoint(2.0,playerid,1225.1034,-1433.0675,13.7690))
			    {
	       			if(PlayerInfo[playerid][pCar1] > 0)
	       			{
						if(RetirouCarro1[playerid] == 0)
						{
			            	RetirouCarro1[playerid] = AddStaticVehicle(carid1,1228.4786,-1436.0854,13.2490,269.0342,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro1[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento praia
				else if(PlayerToPoint(2.0,playerid,310.3948,-1799.8964,4.5043))
			    {
	       			if(PlayerInfo[playerid][pCar1] > 0)
	       			{
						if(RetirouCarro1[playerid] == 0)
						{
			            	RetirouCarro1[playerid] = AddStaticVehicle(carid1,311.7062,-1788.6992,4.2267,358.3541,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro1[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Spawn
				else if(PlayerToPoint(2.0,playerid,1563.0857,-2323.9531,13.5531))
			    {
	       			if(PlayerInfo[playerid][pCar1] > 0)
	       			{
						if(RetirouCarro1[playerid] == 0)
						{
			            	RetirouCarro1[playerid] = AddStaticVehicle(carid1,1560.0160,-2315.5276,13.1999,89.8470,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro1[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Garagem
				else if(PlayerToPoint(2.0,playerid,535.3613,-1274.7592,17.2422))
			    {
	       			if(PlayerInfo[playerid][pCar1] > 0)
	       			{
						if(RetirouCarro1[playerid] == 0)
						{
			            	RetirouCarro1[playerid] = AddStaticVehicle(carid1,535.3613,-1274.7592,17.2422,225.6388,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro1[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
            }
            else if(listitem == 1)
			{
			    //Estacionamento Praca
			    if(PlayerToPoint(2.0,playerid,1541.4535,-1563.2844,13.7479))
			    {
				    if(PlayerInfo[playerid][pCar2] > 0)
	       			{
						if(RetirouCarro2[playerid] == 0)
						{
							RetirouCarro2[playerid] = AddStaticVehicle(carid2,1537.1982,-1551.3496,13.2279,90.9441,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro2[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Hospital
				else if(PlayerToPoint(2.0,playerid,1225.1034,-1433.0675,13.7690))
			    {
				    if(PlayerInfo[playerid][pCar2] > 0)
	       			{
						if(RetirouCarro2[playerid] == 0)
						{
							RetirouCarro2[playerid] = AddStaticVehicle(carid2,1228.4786,-1436.0854,13.2490,269.0342,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro2[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Praia
				else if(PlayerToPoint(2.0,playerid,310.3948,-1799.8964,4.5043))
			    {
				    if(PlayerInfo[playerid][pCar2] > 0)
	       			{
						if(RetirouCarro2[playerid] == 0)
						{
							RetirouCarro2[playerid] = AddStaticVehicle(carid2,311.7062,-1788.6992,4.2267,358.3541,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro2[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Spawn
				else if(PlayerToPoint(2.0,playerid,1563.0857,-2323.9531,13.5531))
			    {
				    if(PlayerInfo[playerid][pCar2] > 0)
	       			{
						if(RetirouCarro2[playerid] == 0)
						{
							RetirouCarro2[playerid] = AddStaticVehicle(carid2,1560.0160,-2315.5276,13.1999,89.8470,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro2[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Garagem
				else if(PlayerToPoint(2.0,playerid,535.3613,-1274.7592,17.2422))
			    {
	       			if(PlayerInfo[playerid][pCar2] > 0)
	       			{
						if(RetirouCarro2[playerid] == 0)
						{
			            	RetirouCarro2[playerid] = AddStaticVehicle(carid2,535.3613,-1274.7592,17.2422,225.6388,0,0);
			            	SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro2[playerid] = 1;
		            	}
		            	else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
	         		}
	         		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
     		}
			else if(listitem == 2)
			{
			    //Estacionamento Praca
			    if(PlayerToPoint(2.0,playerid,1541.4535,-1563.2844,13.7479))
			    {
				    if(PlayerInfo[playerid][pCar3] > 0)
	       			{
						if(RetirouCarro3[playerid] == 0)
						{
							RetirouCarro3[playerid] = AddStaticVehicle(carid3,1537.1982,-1551.3496,13.2279,90.9441,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro3[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Hospital
				else if(PlayerToPoint(2.0,playerid,1225.1034,-1433.0675,13.7690))
			    {
				    if(PlayerInfo[playerid][pCar3] > 0)
	       			{
						if(RetirouCarro3[playerid] == 0)
						{
							RetirouCarro3[playerid] = AddStaticVehicle(carid3,1228.4786,-1436.0854,13.2490,269.0342,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro3[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Praia
				else if(PlayerToPoint(2.0,playerid,310.3948,-1799.8964,4.5043))
			    {
				    if(PlayerInfo[playerid][pCar3] > 0)
	       			{
						if(RetirouCarro3[playerid] == 0)
						{
							RetirouCarro3[playerid] = AddStaticVehicle(carid3,311.7062,-1788.6992,4.2267,358.3541,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro3[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Spawn
				else if(PlayerToPoint(2.0,playerid,1563.0857,-2323.9531,13.5531))
			    {
				    if(PlayerInfo[playerid][pCar3] > 0)
	       			{
						if(RetirouCarro3[playerid] == 0)
						{
							RetirouCarro3[playerid] = AddStaticVehicle(carid3,1560.0160,-2315.5276,13.1999,89.8470,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro3[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Garagem
				else if(PlayerToPoint(2.0,playerid,535.3613,-1274.7592,17.2422))
			    {
				    if(PlayerInfo[playerid][pCar3] > 0)
	       			{
						if(RetirouCarro3[playerid] == 0)
						{
							RetirouCarro3[playerid] = AddStaticVehicle(carid3,535.3613,-1274.7592,17.2422,225.6388,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro3[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
     		}
			else if(listitem == 3)
			{
			    //Estacionamento Praca
			    if(PlayerToPoint(2.0,playerid,1541.4535,-1563.2844,13.7479))
			    {
				    if(PlayerInfo[playerid][pCar4] > 0)
	       			{
						if(RetirouCarro4[playerid] == 0)
						{
							RetirouCarro4[playerid] = AddStaticVehicle(carid4,1537.1982,-1551.3496,13.2279,90.9441,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro4[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Hospital
				else if(PlayerToPoint(2.0,playerid,1225.1034,-1433.0675,13.7690))
			    {
				    if(PlayerInfo[playerid][pCar4] > 0)
	       			{
						if(RetirouCarro4[playerid] == 0)
						{
							RetirouCarro4[playerid] = AddStaticVehicle(carid4,1228.4786,-1436.0854,13.2490,269.0342,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro4[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Praia
				else if(PlayerToPoint(2.0,playerid,310.3948,-1799.8964,4.5043))
			    {
				    if(PlayerInfo[playerid][pCar4] > 0)
	       			{
						if(RetirouCarro4[playerid] == 0)
						{
							RetirouCarro4[playerid] = AddStaticVehicle(carid4,311.7062,-1788.6992,4.2267,358.3541,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro4[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Spawn
				else if(PlayerToPoint(2.0,playerid,1563.0857,-2323.9531,13.5531))
			    {
				    if(PlayerInfo[playerid][pCar4] > 0)
	       			{
						if(RetirouCarro4[playerid] == 0)
						{
							RetirouCarro4[playerid] = AddStaticVehicle(carid4,1560.0160,-2315.5276,13.1999,89.8470,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro4[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
				//Estacionamento Garagem
				else if(PlayerToPoint(2.0,playerid,535.3613,-1274.7592,17.2422))
			    {
				    if(PlayerInfo[playerid][pCar4] > 0)
	       			{
						if(RetirouCarro4[playerid] == 0)
						{
							RetirouCarro4[playerid] = AddStaticVehicle(carid4,535.3613,-1274.7592,17.2422,225.6388,0,0);
							SendClientMessage(playerid, COLOR_WHITE, "Voce pegou seu veiculo com sucesso!");
							//RetirouCarro4[playerid] = 1;
						}
						else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce ja possui um veiculo desse fora da Garagem!");
					}
					else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao possui um veiculo nesse slot!");
				}
     		}
        }
	}
	
	//Comprar Vip
	if(dialogid == 6565)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCoins] < 10000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 10.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] >= 10000)
			    {
			        PlayerInfo[playerid][pCoins] -= 10000;
				    PlayerInfo[playerid][pVIP] = 1;
					GivePlayerMoney(playerid, 100000);
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "{00FF00}Voce acaba de adquirir uma conta:");
				    SendClientMessage(playerid, COLOR_GREEN, "{FFFF00}Vip{00FF00} por 30 Dia[s] Aproveite!! /ajudavip");
					SendClientMessage(playerid, COLOR_GREEN, "{00FF00}Voce recebeu {00FF00}R$100000 pela compra!");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
	    		}
            }
            else if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCoins] < 20000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 20.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] >= 20000)
			    {
	   			    PlayerInfo[playerid][pCoins] -= 20000;
				    PlayerInfo[playerid][pVIP] = 2;
					GivePlayerMoney(playerid, 300000);
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "{00FF00}Voce acaba de adquirir uma conta:");
				    SendClientMessage(playerid, COLOR_GREEN, "{00FFFF}Socio {00FF00}por 30 Dia[s] Aproveite!! /ajudasocio");
					SendClientMessage(playerid, COLOR_GREEN, "{00FF00}Voce recebeu {00FFFF}R$300000 pela compra!");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
			    }
            }
        }
	}
	
	//Comprar Dinheiro
	if(dialogid == 5050)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCoins] < 5000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 5.000 Coins!");
			      	return true;
			    }
       			if(PlayerInfo[playerid][pCoins] >= 5000)
       			{
	   			    PlayerInfo[playerid][pCoins] -= 5000;
	   			    GivePlayerMoney(playerid, 250000);
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voc� acaba de utilizar 5.000 Coins para comprar R$250.000 de Dinheiro.");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
			    }
            }
            else if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCoins] < 7000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 7.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] <= 7000)
			    {
	   			    PlayerInfo[playerid][pCoins] -= 7000;
	   			    GivePlayerMoney(playerid, 700000);
		     		SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voc� acaba de utilizar 7.000 Coins para comprar R$700.000 de Dinheiro.");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
				}
            }
            else if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCoins] < 15000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 15.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] >= 15000)
			    {
	   			    PlayerInfo[playerid][pCoins] -= 15000;
	   			    GivePlayerMoney(playerid, 1500000);
		     		SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voc� acaba de utilizar 15.000 Coins para comprar R$1.500.000 de Dinheiro.");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
			    }
            }
        }
	}
	
	//Comprar Level
	if(dialogid == 5656)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pCoins] < 5000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 5.000 Coins!");
			      	return true;
			    }
       			if(PlayerInfo[playerid][pCoins] >= 5000)
       			{
	   			    PlayerInfo[playerid][pCoins] -= 5000;
	   			    PlayerInfo[playerid][pLevel] += 5;
					ScoreLevel(playerid);
					PlayerInfo[playerid][pExp] = 0;
					PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar 15 niveis por 5.000 Coins");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
			    }
            }
            else if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pCoins] < 10000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 7.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] >= 10000)
			    {
	   			    PlayerInfo[playerid][pCoins] -= 10000;
	   			    PlayerInfo[playerid][pLevel] += 10;
					ScoreLevel(playerid);
					PlayerInfo[playerid][pExp] = 0;
					PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
		     		SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar 10 niveis por 10.000 Coins");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
				}
            }
            else if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pCoins] < 15000)
			    {
					SendClientMessage(playerid,COLOR_LIGHTRED," Voce nao possui 15.000 Coins!");
			      	return true;
			    }
			    if(PlayerInfo[playerid][pCoins] >= 15000)
			    {
	   			    PlayerInfo[playerid][pCoins] -= 15000;
	   			    PlayerInfo[playerid][pLevel] += 15;
					ScoreLevel(playerid);
					PlayerInfo[playerid][pExp] = 0;
					PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
		     		SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
				    SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar 15 niveis por 15.000 Coins");
				    SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
			    }
            }
        }
	}
	
	if(dialogid == MenuConce)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
				ShowPlayerDialog(playerid,8080,DIALOG_STYLE_LIST,"Concessionaria - Carros","Admiral        R$25.000\nBlista Compact R$15.000\nBuffalo        R$40.000\nBullet         R$100.000\nElegy          R$95.000\nEsperanto      R$20.000\nGlendale       R$50.000\nHustler        R$15.000\nPhoenix        R$120.000\nPremier        R$35.000\nRancher        R$25.000\nSentinel       R$35.000\nSultan         R$200.000\nStafford       R$20.000\nTurismo        R$150.000","Comprar","Cancelar");
            }
            else if(listitem == 1)
			{
			    ShowPlayerDialog(playerid,9090,DIALOG_STYLE_LIST,"Concessionaria - Motos","BF-400         R$50.000\nBMX            R$5.000\nFaggio         R$15.000\nFreeway        R$20.000\nSanchez        R$60.000\nWayfarer       R$30.000","Comprar","Cancelar");
            }
        }
	}

	if(dialogid == 9090)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar1] = 445;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BF-400");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar2] = 581;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BF-400");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar3] = 581;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BF-400");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar4] = 581;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BF-400");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$5.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 5000));
					PlayerInfo[playerid][pCar1] = 481;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar uma BMX");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$5.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 5000));
					PlayerInfo[playerid][pCar2] = 481;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BMX");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$5.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 5000));
					PlayerInfo[playerid][pCar3] = 481;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BMX");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 5000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$5.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 5000));
					PlayerInfo[playerid][pCar4] = 481;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um BMX");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar1] = 462;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Faggio");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar2] = 462;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Faggio");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar3] = 462;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Faggio");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar4] = 462;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Faggio");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 3)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar1] = 463;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Freeway");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar2] = 463;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Freeway");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar3] = 463;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Freeway");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar4] = 463;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Freeway");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 4)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 60000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$60.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 60000));
					PlayerInfo[playerid][pCar1] = 468;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sanchez");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 60000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$60.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 60000));
					PlayerInfo[playerid][pCar2] = 468;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sanchez");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 60000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$60.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 60000));
					PlayerInfo[playerid][pCar3] = 468;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sanchez");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 60000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$60.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 60000));
					PlayerInfo[playerid][pCar4] = 468;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sanchez");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 5)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 30000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$30.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 30000));
					PlayerInfo[playerid][pCar1] = 586;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Wayfarer");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 30000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$30.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 30000));
					PlayerInfo[playerid][pCar2] = 586;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Wayfarer");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 30000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$30.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 30000));
					PlayerInfo[playerid][pCar3] = 586;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Wayfarer");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 30000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$30.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 30000));
					PlayerInfo[playerid][pCar4] = 586;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Wayfarer");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
        }
	}
	
	if(dialogid == 8080)
	{
	    Controle(playerid, 1);
		if(response)
        {
            if(listitem == 0)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar1] = 445;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Admiral");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar2] = 445;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Admiral");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar3] = 445;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Admiral");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar4] = 445;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Admiral");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar1] = 496;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Blista Compact");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar2] = 496;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Blista Compact");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar3] = 496;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Blista Compact");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar4] = 496;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Blista Compact");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 2)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 40000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 40000));
					PlayerInfo[playerid][pCar1] = 402;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Buffalo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 40000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 40000));
					PlayerInfo[playerid][pCar2] = 402;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Buffalo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 40000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 40000));
					PlayerInfo[playerid][pCar3] = 402;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Buffalo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 40000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 40000));
					PlayerInfo[playerid][pCar4] = 402;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Buffalo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 3)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 100000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$100.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 100000));
					PlayerInfo[playerid][pCar1] = 541;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Bullet");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 100000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$100.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 100000));
					PlayerInfo[playerid][pCar2] = 541;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Bullet");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 100000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$100.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 100000));
					PlayerInfo[playerid][pCar3] = 541;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Bullet");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 100000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$100.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 100000));
					PlayerInfo[playerid][pCar4] = 541;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Bullet");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 4)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 95000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$95.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 95000));
					PlayerInfo[playerid][pCar1] = 562;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Elegy");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 95000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$95.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 95000));
					PlayerInfo[playerid][pCar2] = 562;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Elegy");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 95000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$95.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 95000));
					PlayerInfo[playerid][pCar3] = 562;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Elegy");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 95000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$95.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 95000));
					PlayerInfo[playerid][pCar4] = 562;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Elegy");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 5)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar1] = 419;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Esperanto");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar2] = 419;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Esperanto");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar3] = 419;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Esperanto");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar4] = 419;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Esperanto");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 6)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar1] = 466;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Glendale");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar2] = 466;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Glendale");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar3] = 466;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Glendale");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 50000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$50.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 50000));
					PlayerInfo[playerid][pCar4] = 466;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Glendale");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 7)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar1] = 545;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Hustler");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar2] = 545;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Hustler");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar3] = 545;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Hustler");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 15000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$15.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 15000));
					PlayerInfo[playerid][pCar4] = 545;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Hustler");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 8)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 120000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$120.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 120000));
					PlayerInfo[playerid][pCar1] = 603;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Phoenix");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 120000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$120.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 120000));
					PlayerInfo[playerid][pCar2] = 603;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Phoenix");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 120000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$120.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 120000));
					PlayerInfo[playerid][pCar3] = 603;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Phoenix");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 120000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$120.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 120000));
					PlayerInfo[playerid][pCar4] = 603;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Phoenix");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 9)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar1] = 426;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Premier");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar2] = 426;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Premier");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar3] = 426;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Premier");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar4] = 426;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Premier");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 10)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar1] = 505;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Rancher");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar2] = 505;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Rancher");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar3] = 505;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Rancher");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 25000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$25.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 25000));
					PlayerInfo[playerid][pCar4] = 505;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Rancher");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 11)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar1] = 405;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sentinel");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar2] = 405;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sentinel");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar3] = 405;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sentinel");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 35000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$35.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 35000));
					PlayerInfo[playerid][pCar4] = 405;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sentinel");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 12)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 200000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$200.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 200000));
					PlayerInfo[playerid][pCar1] = 560;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sultan");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 200000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$200.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 200000));
					PlayerInfo[playerid][pCar2] = 560;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sultan");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 200000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$200.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 200000));
					PlayerInfo[playerid][pCar3] = 560;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sultan");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 200000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$200.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 200000));
					PlayerInfo[playerid][pCar4] = 560;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Sultan");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 13)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar1] = 580;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Stafford");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar2] = 580;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Stafford");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar3] = 580;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Stafford");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 20000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$20.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 20000));
					PlayerInfo[playerid][pCar4] = 580;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Stafford");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
			if(listitem == 14)
			{
				if(PlayerInfo[playerid][pCar1] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 150000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$150.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 150000));
					PlayerInfo[playerid][pCar1] = 451;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Turismo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar2] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 150000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$150.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 150000));
					PlayerInfo[playerid][pCar2] = 451;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Turismo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar3] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 150000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$150.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 150000));
					PlayerInfo[playerid][pCar3] = 451;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Turismo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar4] == 0)
				{
					if(GetPlayerMoneyEx(playerid) < 150000) return SendClientMessage(playerid,COLOR_LIGHTRED,"Voce nao tem R$150.000 para comprar!");
					
					GivePlayerMoney(playerid, (0 - 150000));
					PlayerInfo[playerid][pCar4] = 451;
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. CONCESSIONARIA .=.=.=.=.=.=.=.=.=.");
					SendClientMessage(playerid, COLOR_GREEN, "Voce acaba de comprar um Turismo");
					SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
					SendClientMessage(playerid, COLOR_RED, "CONCESSIONARIA{FFFFFF} - Seu Veiculo foi entregue a garagem!");
					return 1;
				}
				else if(PlayerInfo[playerid][pCar1] != 0 && PlayerInfo[playerid][pCar2] != 0 && PlayerInfo[playerid][pCar3] != 0 && PlayerInfo[playerid][pCar4] != 0) return SendClientMessage(playerid, -1, "Voce nao possui slots disponiveis!");
            }
        }
	}
//==============================================================================
	if(dialogid == 9002)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
            	ShowPlayerDialog(playerid,9004,DIALOG_STYLE_LIST,"Locais em Geral","Prefeitura\nDepartamento de Policia\n24/7\nHospital\nLoja de Armas 1\nLoja de Armas 2\nPegar Materiais\nEntregar Materiais\nAgencia de Viagens\nBinco\nBanco\nLoterica\nConcessionaria","Aceitar","Cancelar");
            }
            case 1:
			{
				ShowPlayerDialog(playerid,9005,DIALOG_STYLE_LIST,"HQ'S Organizacoes","Policia Militar\nBOPE\nPolicia Civil\nTropa da Turquia\nVagos\nGroove\nPCC\nComando Vermelho\nBallas\nFamiliaShelby\nCosa Nostra\nMedicos\nPrefeitura\nTaxistas\nReporteres\nHitmans","Aceitar","Cancelar");
            }
        }
	}
//==============================================================================
	if(dialogid == 9003)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
            	ShowPlayerDialog(playerid,9006,DIALOG_STYLE_LIST,"Locais em Geral","Prefeitura\nDepartamento de Policia\n24/7\nLoja de Armas 1\nLoja de Armas 2\nAgencia de Viagens\nPegar Materiais\nEntregar Materiais\nBinco\nBanco\nLoterica\nConcessionaria","Aceitar","Cancelar");
            }
            case 1:
			{
				ShowPlayerDialog(playerid,9007,DIALOG_STYLE_LIST,"HQ'S Organizacoes","Policia Militar\nBOPE\nPolicia Federal\nForcas Armadas\nTropa da Turquia\nVagos\nGroove\nPCC\nComando Vermelho\nBallas\nTriads\nMedicos\nPrefeitura\nTaxistas\nReporteres\nPeaky Blinders\nF.A.R.C","Aceitar","Cancelar");
            }
        }
	}
//==============================================================================
	if(dialogid == 9004)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
				SetPlayerCheckpoint(playerid, 1481.1926,-1764.2736,18.7958,8.0);// prefeitura
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1546.2761,-1675.5995,13.5620,8.0);//departamento de policia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 1350.4865,-1753.2505,13.3582,8.0);//24-7
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 3:
			{
                SetPlayerCheckpoint(playerid, 1790.5725,-1167.3705,23.8281,8.0);//Loja de armas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 4:
			{
                SetPlayerCheckpoint(playerid, 1362.2240,-1279.7227,13.3828,8.0);//Loja de armas 2
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 5:
			{
                SetPlayerCheckpoint(playerid, 1642.8444,-2238.1177,13.4973,8.0);//Agencia de Viagens
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 6:
			{
                SetPlayerCheckpoint(playerid, 1949.4497,-2061.5300,13.5469,8.0);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 7:
			{
                SetPlayerCheckpoint(playerid, 1747.2849,-1944.2209,13.56749,8.0);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 8:
			{
                SetPlayerCheckpoint(playerid, 2305.6890,-16.0881,26.7496,8.0);//Banco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 9:
			{
                SetPlayerCheckpoint(playerid, 2244.7954,-1663.5021,15.4766,8.0);//Binco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 10:
			{
                SetPlayerCheckpoint(playerid, 1631.8547,-1172.5637,24.0843,8.0);//Loterica
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 11:
			{
                SetPlayerCheckpoint(playerid, 2128.7659,-1144.7380,24.3204,8.0);//Aluguel de Carros
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
        }
	}
//==============================================================================
	if(dialogid == 9006)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
				SetPlayerCheckpoint(playerid, 1481.1926,-1764.2736,18.7958,8.0);// prefeitura
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1546.2761,-1675.5995,13.5620,8.0);//departamento de policia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 1350.4865,-1753.2505,13.3582,8.0);//24-7
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 3:
			{
                SetPlayerCheckpoint(playerid, 1790.5725,-1167.3705,23.8281,8.0);//Loja de armas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 4:
			{
                SetPlayerCheckpoint(playerid, 1362.2240,-1279.7227,13.3828,8.0);//Loja de armas 2
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 5:
			{
                SetPlayerCheckpoint(playerid, 1642.8444,-2238.1177,13.4973,8.0);//Agencia de Viagens
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 6:
			{
                SetPlayerCheckpoint(playerid, 1949.4497,-2061.5300,13.5469,8.0);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 7:
			{
                SetPlayerCheckpoint(playerid, 1747.2849,-1944.2209,13.56749,8.0);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 8:
			{
                SetPlayerCheckpoint(playerid, 2305.6890,-16.0881,26.7496,8.0);//Banco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 9:
			{
                SetPlayerCheckpoint(playerid, -2374.2454,910.2137,45.4453,8.0);//Binco
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 10:
			{
                SetPlayerCheckpoint(playerid, 1631.8547,-1172.5637,24.0843,8.0);//Loterica
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 11:
			{
                SetPlayerCheckpoint(playerid, 2128.7659,-1144.7380,24.3204,8.0);//Aluguel de Carros
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
        }
	}
//==============================================================================
	if(dialogid == 9005)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
				SetPlayerCheckpoint(playerid, 1554.2512,-1675.5313,16.1953,10.0);//pm
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 328.7618,-1511.8379,36.0391,10.0);//BOPE
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 939.5961,-1224.0160,16.2889,10.0);//PC
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 3:
			{
                SetPlayerCheckpoint(playerid, 1691.0067,-2112.9229,13.3828,10.0);//Tropa da Turquia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 4:
			{
                SetPlayerCheckpoint(playerid, 2828.2498,-1184.3743,24.9464,10.0);//vagos
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 5:
			{
                SetPlayerCheckpoint(playerid, 2495.1697,-1690.5923,14.7656,10.0);//groove
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 6:
			{
                SetPlayerCheckpoint(playerid, 1337.3324,-914.1528,36.0272,8.0);//PCC
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 7:
			{
                SetPlayerCheckpoint(playerid, 2185.1260,-1765.0551,13.3761,10.0);//Comando Vermelho
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 8:
			{
                SetPlayerCheckpoint(playerid, 1119.2783,-1159.2039,23.5971,10.0);//Ballas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 9:
			{
                SetPlayerCheckpoint(playerid, 664.3810,-1309.7341,13.4609,10.0);//FamiliaShelby
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, 1495.9410,-699.4916,94.7500,10.0);//cosa nostra
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 11:
			{
                SetPlayerCheckpoint(playerid, 1176.7383,-1323.5166,14.0361,10.0);//Medicos
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, 1480.9232,-1772.3057,18.7958,10.0);//prefeitura
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 13:
			{
                SetPlayerCheckpoint(playerid, 1802.9698,-1725.4812,13.5394,10.0);//taxistas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 14:
			{
                SetPlayerCheckpoint(playerid, 777.1924,-1331.4585,13.5471,10.0);//Reporteres
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 15:
			{
                SetPlayerCheckpoint(playerid, 1025.3246,-353.1108,73.9661,10.0);//Farc
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
        }
	}
//==============================================================================
	if(dialogid == 9007)
	{
	    Controle(playerid, 1);
	    if(!response) { return true; }
		switch(listitem)
        {
            case 0:
			{
				SetPlayerCheckpoint(playerid, -1570.1237,662.6701,6.7612,10.0);//pm
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, -1771.6052,938.9693,24.7422,10.0);//BOPE
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, -2433.2581,492.7473,29.9274,10.0);//FF
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 3:
			{
                SetPlayerCheckpoint(playerid, -2318.3193,-176.0442,34.8859,10.0);//Tropa da Turquia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 4:
			{
                SetPlayerCheckpoint(playerid, -1529.3641,482.8384,7.1797,10.0);//Tropa da Turquia
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 5:
			{
                SetPlayerCheckpoint(playerid, -1817.5170,162.6921,14.5168,10.0);//vagos
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 6:
			{
                SetPlayerCheckpoint(playerid, -2467.7490,800.4733,34.7485,10.0);//groove
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 7:
			{
                SetPlayerCheckpoint(playerid, -2372.3975,968.1597,45.1822,8.0);//PCC
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 8:
			{
                SetPlayerCheckpoint(playerid, -2488.9573,1202.6681,36.6436,10.0);//Comando Vermelho
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 9:
			{
                SetPlayerCheckpoint(playerid, -2429.5664,138.8751,34.5872,10.0);//Ballas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, -1708.9574,1335.7451,6.7504,10.0);//cosa nostra
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 11:
			{
                SetPlayerCheckpoint(playerid, -2667.4131,583.3436,14.0269,10.0);//Medicos
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, -2748.7903,381.9057,3.7047,10.0);//prefeitura
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 13:
			{
                SetPlayerCheckpoint(playerid, 1802.9698,-1725.4812,13.5394,10.0);//taxistas
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 14:
			{
                SetPlayerCheckpoint(playerid, -2263.4043,556.6628,34.5668,10.0);//Reporteres
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 15:
			{
                SetPlayerCheckpoint(playerid, -2276.6184,2352.2722,4.4243,10.0);//hitmans
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
            case 16:
			{
                SetPlayerCheckpoint(playerid, 341.6658,2488.9644,16.0358,10.0);//hitmans
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Va Ate o Checkpoint Vermelho em Seu Mapa.");
            }
        }
	}
//==============================================================================
	if(dialogid == 2569)
	{
	    Controle(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return true; }
		switch(listitem)
        {
            case 0:
			{
		    	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Detetive, tera que cumprir 5 horas de contrato.\nPara se tornar Detetive, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 1;
		    	Controle(playerid, 1);
            }
            case 1:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Advogado, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Advogado, clique em aceitar.","Aceitar","Sair");
   				GettingEmprego[playerid] = 2;
   				Controle(playerid, 1);
            }
            case 2:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Profissional do sexo, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Profissional do sexo, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 3;
				Controle(playerid, 1);
            }
            case 3:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Vendedor De Drogas, tera que cumprir 5 horas de contrato.\nPara aceitar o emprego, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 4;
				Controle(playerid, 1);
            }
            case 4:
			{
  				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","*Voce esta prestes a se tornar um(a) Mecanico, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Mecanico, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 5;
		    	Controle(playerid, 1);
            }
            case 5:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Seguranca, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Seguranca, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 6;
				Controle(playerid, 1);
            }
            case 6:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Vendedor De Armas, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Vendedor De Armas, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 7;
				Controle(playerid, 1);
            }
            case 7:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Motorista de Onibus, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Motorista de Onibus, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 9;
				Controle(playerid, 1);
            }
            case 8:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"Brasil Play Real","* Voce esta prestes a se tornar um(a) Caminhoneiro, tera que cumprir 5 horas de contrato.\nPara se tornar um(a) Caminhoneiro, clique em aceitar.","Aceitar","Sair");
		    	GettingEmprego[playerid] = 11;
		    	Controle(playerid, 1);
            }
	     }
	}
//==============================================================================
   	if(dialogid == 2586)
	{
	    if(!response)
		{
			GettingEmprego[playerid] = 0;
			return SendClientMessage(playerid, COLOR_GREY, "Voce cancelou o emprego.");
		}
		else
		{
			PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
		    SendClientMessage(playerid, VERDE2, "Parabens com o seu emprego, Digite /ajuda para ver os comandos do seu emprego !");
		}
	}
//==============================================================================
	if(dialogid == 2571)
	{
	    Controle(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return true; }
        switch(listitem)
        {
            case 0:
			{
                //Voo
                if(GetPlayerMoneyEx(playerid) < 800) return SendClientMessage(playerid,COLOR_GREY,"Voce nao tem R$800 para comprar");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-800);
                BizzInfo[5][bTill] += 800;
			    ExtortionBiz(5, 800);
                PlayerInfo[playerid][pFlyLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Comprou a Licenca De Voo!");
            }
            case 1:
			{
                //Navegacao
                if(GetPlayerMoneyEx(playerid) < 800) return SendClientMessage(playerid,COLOR_GREY,"Voce nao R$800 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-800);
                BizzInfo[5][bTill] += 800;
			    ExtortionBiz(5, 800);
                PlayerInfo[playerid][pBoatLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Comprou a Licenca De Navegacao!");
            }
            case 2:
			{
                //Armas
                if(GetPlayerMoneyEx(playerid) < 1200) return SendClientMessage(playerid,COLOR_GREY,"Voce nao tem R$1200 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-1200);
                BizzInfo[5][bTill] += 1200;
			    ExtortionBiz(5, 1200);
                PlayerInfo[playerid][pGunLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Comprou a Licenca De Armas!");
            }
            case 3:
			{
                //Motorista
                if(GetPlayerMoneyEx(playerid) < 1200) return SendClientMessage(playerid,COLOR_GREY,"Voce nao tem R$1200 para comprar!");
                Controle(playerid, 1);
                GivePlayerMoneyEx(playerid,-1200);
                BizzInfo[5][bTill] += 1200;
			    ExtortionBiz(5, 1200);
                PlayerInfo[playerid][pCarLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Comprou a Licenca De Motorista!");
            }
        }
	}
//==============================================================================
	if(dialogid == 2583)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use numeros !");
        	return true;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "nao pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][psMats] >= quantidade)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantidade;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantidade;
			format(gstring, sizeof(gstring), "* Voce pegou %d materiais no esconderijo!",quantidade);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao tem tudo isso!");
			return true;
		}
	}
//==============================================================================
	if(dialogid == 2584)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use numeros !");
        	return true;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "nao pode pegar menos de 1 e nem mais de 10000");
			return true;
		}
		if(PlayerInfo[playerid][pMats] >= ammount)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-ammount;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+ammount;
			format(gstring, sizeof(gstring), "* Voce escondeu %d materiais!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao tem tudo isso!");
			return true;
		}
	}
//==============================================================================
	if(dialogid == 2585)
	{
		if(!response) { return true; }
		switch(listitem)
    	{
	       	case 0:
		    {
		        SetPlayerInterior(playerid, 0);
   		    	SetPlayerVirtualWorld(playerid, 0);
	            SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid, 246.2975,87.4735,1003.6406);
		    	SetPlayerVirtualWorld(playerid, 0);
 			}
		}
	}
//==============================================================================
	if(dialogid == 9000)
	{
		if(!response) { return true; }
		switch(listitem)
    	{
	       	case 0:
		    {
		    	SetPlayerVirtualWorld(playerid, 0);
		        SetPlayerInterior(playerid, 0);
	            SetPlayerPos(playerid, -1606.4385,672.8965,-5.2422);
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid, 246.2686,87.4955,1003.6406);
		    	SetPlayerVirtualWorld(playerid, 1);
 			}
		}
	}
//==============================================================================
	if(dialogid == 10)
	{
	  	if(response)
		{
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Player ______________|");
				SendClientMessage(playerid, COLOR_GREEN,"Digite o comando desejado para mais informacoes!");
				SendClientMessage(playerid, 0x33CCFFAA,"BPR > /logar /rg /regras /Discord /relatorio /duvida /comprarnivel /orgs /animes");
				SendClientMessage(playerid, COLOR_YELLOW,"BPR > /meuskin /pagar /horas /gps /mostrarlicencas /loteria /setint /empregos");
				SendClientMessage(playerid, COLOR_GREEN,"BPR > /mudarlocal /minhaslicencas /comprararma /beber /caridade /tunar");
				SendClientMessage(playerid, 0x33CCFFAA,"BPR > /abastecer /contrato /aceitar /cancelar /ejetar /servico /localizar /alugarcarro");
	  			SendClientMessage(playerid, COLOR_YELLOW,"BPR > (/g)ritar (/s)usurro (/an)uncio /eu /alugaraero /alugarquarto /desalugar /menucar");
				SendClientMessage(playerid, COLOR_GREEN,"BPR > /saldo /sacar /depositar /transferir /destranformargold /transformargold");
				SendClientMessage(playerid, 0x33CCFFAA,"______________________________________");
			}
			if(listitem == 1)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Empresa ______________|");
				SendClientMessage(playerid, COLOR_GREEN,"Digite o comando desejado para mais informacoes!");
				SendClientMessage(playerid, 0x33CCFFAA,"BPR > (/entradaemp)resa (/nomeemp)resa /extorcao /infoempresa");
				SendClientMessage(playerid, COLOR_YELLOW,"BPR > /entrar /sair /chave /venderemp (/depositaremp)resa /sacarempresa");
				SendClientMessage(playerid, COLOR_GREEN,"______________________________________________");
			}
			if(listitem == 2)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Casa ______________|");
				SendClientMessage(playerid, COLOR_GREEN,"Digite o comando desejado para mais informacoes!");
				SendClientMessage(playerid, 0x33CCFFAA,"BPR > /entrar /sair /chave /curar /moveis(/mv) /mapacasa(Mostra No Mapa)");
				SendClientMessage(playerid, COLOR_YELLOW,"BPR > /comprarcarro /pintarcarro /despejartodos /mudarcasa(1 a 10)");
				SendClientMessage(playerid, COLOR_GREEN,"BPR > /aluguel /despejar /cofrecasa /trancar(carro da casa) /alugada");
			}
			if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Aluguel ______________|");
				SendClientMessage(playerid, COLOR_GREEN,"Aluguel > /desalugar /entrar /sair /trancar /mapacasa");
		    }
			if(listitem == 4)
			{
				if (PlayerInfo[playerid][pPnumber] > 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Celular ______________|");
					SendClientMessage(playerid, COLOR_GREEN,"Digite o comando desejado para mais informacoes!");
					SendClientMessage(playerid, 0x33CCFFAA,"BPR > /ligar /sms (/at)ender (/des)ligar /agenda /desativar celular");
					SendClientMessage(playerid, COLOR_YELLOW,"BPR > Nao se esqueca de comprar creditos na 24-7!");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN,"Voce nao tem um telefone, compre um na 24-7, USE: /gps");
				}
			}
			if(listitem == 5)
			{
			    if (PlayerInfo[playerid][pLider] >= 1)
			    {
					SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Lider ______________|");
					SendClientMessage(playerid, COLOR_GREEN,"Digite o comando desejado para mais informacoes!");
					SendClientMessage(playerid, 0x33CCFFAA,"BPR > /convidar /demitir /limparvaga /promover");
					if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30)
					{
						SendClientMessage(playerid, COLOR_YELLOW,"Prefeito > (/pre)feito /setartaxa /dartaxa (Da algum dinheiro para os Policiais)");
					}
					SendClientMessage(playerid, COLOR_GREEN,"____________________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Lider!");
				}
			}
			if(listitem == 6)
			{
	   			SendClientMessage(playerid,COLOR_WHITE, "|______________ Ajuda Emprego ______________|");
      			if(PlayerInfo[playerid][pEmprego] == 1)
				{
		    		SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /procurar");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 2)
				{
		    		SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /pp(Portao Presos - DP) /presos");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 3)
				{
		    		SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /transar");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 4)
				{
		    		SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /venderdrogas /pegardrogas /usardrogas");
				}
       			else if(PlayerInfo[playerid][pEmprego] == 5)
	   			{
        			SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /abastecimento /reparo /batercartao");
        		}
        		else if(PlayerInfo[playerid][pEmprego] == 6)
				{
        			SendClientMessage(playerid,COLOR_YELLOW,"*** EMPREGO *** /proteger");
        		}
        		else if(PlayerInfo[playerid][pEmprego] == 7)
				{
        			SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /materiais obter /materiais entregar /venderarmas");
        		}
        		else if(PlayerInfo[playerid][pEmprego] == 9)
				{
        			SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /corrida /cancelar onibus /terminais");
        		}
        		else if(PlayerInfo[playerid][pEmprego] == 11)
				{
        			SendClientMessage(playerid,COLOR_GRAD5,"*** EMPREGO *** /mercadorials /mercadoriasf /mercadorialv");
        		}
		        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /localizar /batercartao /procurados /algemar /imo /reforco");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /revistar /retirar /prender /localizar (/gov)erno /arrombar /ab /ab /territorio, /ang /as /desalgemar /arrombar /ab /bafometro /multar  /ronda");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /pe - P Estacionamento | /pg - P Garagem | /pr - P Recepcao | /pp - P Presos | /pv - P Vestiario /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras /ajustar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios /grampear");
        		}
		        if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /localizar /batercartao /procurados /algemar /imo /reforco");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /revistar /retirar /prender /localizar (/gov)erno /arrombar /ab /territorio, /ang /as /desalgemar /arrombar /ab /bafometro /multar  /ronda" );
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras /ajustar /pgprf - Garagem PRF /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios /grampear /pprf - Estacionamento PRG");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** GOVERNO *** (/r)adio - (/d)epartamento - (/m)egafone - /algemar - /imo - ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** GOVERNO *** /revistar - /retirar - /pp - /pgov - Portao dos Carros - /ppre - Porta Prefeitura");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** GOVERNO *** (/pre)feito /dartaxa(Para os Policias) /setartaxa(Taxa Por Pessoa)");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TAXISTA *** /corrida Entrar e Sair do Trabalho! /cancelar taxi(Cancelar a Corrida");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TAXISTA *** /ptaxi - Para abrir o portao (/f)amilia)");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TAXISTA *** /corrida Entrar e Sair do Trabalho! /cancelar taxi(Cancelar a Corrida)");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TAXISTA *** /ptaxisf - Para abrir o portao (/f)amilia)");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /revistar /retirar /prender /localizar (/gov)erno /camera /arrombar /ab /territorio /desalgemar /arrombar /ab /bafometro /multar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /pb - Garagens /ajustar /grampear /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /revistar /retirar /prender /localizar (/gov)erno /camera /arrombar /ab /territorio /desalgemar /arrombar /ab /bafometro /multar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /pft - Garagem /ajustar /grampear /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /localizar /batercartao ");
           		 	SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /revistar /retirar (/gov)erno /camera /arrombar /ab /algemar /imo /br /rb /multar /procurados");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /abrirgn - Portao Principal /algemar /desalgemar /reforco /bafometro /ajustar /grampear");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /guerra /pontos(ver pontuacao da guerra) /tirarbombas - Bloqueia os Homens Bombas /arrastar");
           		 	SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
        		{
        	    	SendClientMessage(playerid, 0xE8FFEAAA, "*** MeDICOS *** | (/r)adio | (/d)epartamento | /curar | /batercartao (/al)ianca");
       			}
        		else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
       			{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /homembomba | /carrobomba | (/ga)ngue ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /guerra | /pontos(ver pontuacao da guerra) ");
              		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /sequestrar | /empurrar | /desamarrar");
        		}
        		else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /homembomba | /carrobomba | (/ga)ngue ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /guerra | /pontos(ver pontuacao da guerra) ");
              		SendClientMessage(playerid, 0xE8FFEAAA, "*** TERRORISTAS *** /sequestrar | /empurrar | /desamarrar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /localizar /prender /batercartao /procurados /algemar /imo ");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO ***/revistar /retirar (/gov)erno /deliver /camera /arrombar /ab /desalgemar /bafometro /reforco /multar /ronda");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /pc(Portao PC) | /ptpc (Portao Solto) | DP > /pv - Vestiario(DP) | /pr | /pp - Portao DP /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras /ajustar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** DEPARTAMENTO ***  /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios /grampear");
        		}
       			else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm  /abastecerhq");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** Portao = /acn /mafiamateriais obter /mafiamateriais entregar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** Para pegar materiais use: /gps Mafia Materiais Obter ou Mafia Materiais Entregar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** /(ga)ngue /mafiavarma /mafiavkit /amarrar /desamarrarm  /abastecerhq");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** Portao = /pfs /mafiamateriais obter /mafiamateriais entregar");
            		SendClientMessage(playerid, 0xE8FFEAAA, "*** MaFIAS *** Para pegar materiais use: /gps Mafia Materiais Obter ou Mafia Materiais Entregar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, | /ang /as | (/al)ianca");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** ASSASSINOS *** /laptop - Computador Hitman | /arrombar(Porta das Casas)");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** ASSASSINOS *** /ga - Chat Hitmans |");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
       			else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
       	 		else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
       	 		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** REPORTES *** | /noticias | /aovivo | (/preporter = Portao)");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** REPORTES *** | (/f)amilia) | /noticias [texto] | (/al)ianca");
        		}
       	 		else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
       	 		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** REPORTES *** | /noticias | /aovivo | (/psfn = Portao)");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** REPORTES *** | (/f)amilia) | /noticias [texto] | (/al)ianca");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** DEPARTAMENTO *** (/m)egafone /batercartao /procurados /presos /reforco /multar ");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** DEPARTAMENTO *** (/su)spect /limpar /revistar /r(adio) /d(epartamento) /territorio /arrombar /bafometro");
           	 		SendClientMessage(playerid, 0xE8FFEAAA,"*** DEPARTAMENTO *** /ppf - Portao HQ | Portoes DP LS(/pr /pp /pv /pe /pg) /grampear /ajustar /arrastar");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** DEPARTAMENTO *** /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** DEPARTAMENTO *** /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
        		{
             		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
       		 	else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar | /drift | /adrit | /desmanchar");
        		}
       		 	else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
        		{
              		SendClientMessage(playerid, 0xE8FFEAAA,"*** GANGUES *** | (/ga)ng | /sequestrar | /desamarrar | /territorio | /roubar, /ang /as | (/al)ianca | /empurrar");
        		}
        		else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
        		{
            		SendClientMessage(playerid, 0xE8FFEAAA,"*** ASSASSINOS *** /laptop - Computador Triad | /arrombar(Porta das Casas)");
           	 		SendClientMessage(playerid, 0xE8FFEAAA,"*** ASSASSINOS *** /ga - Chat Triad");
        		}
        	}
			if(listitem == 7)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda Casamento ______________|");
				SendClientMessage(playerid, COLOR_GREEN,"/padrinho (cada 1 tem que ter 1 padrinho!)");
				SendClientMessage(playerid, 0x33CCFFAA,"/casar (quem pedir tem que ter 1 casa!)");
				SendClientMessage(playerid, COLOR_YELLOW,"Nao sabe o local? digite /gps - Igreja");
				SendClientMessage(playerid, COLOR_GREEN,"Separacao(Digite: /separacao)");
			}
			if(listitem == 8)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "|______________ Discord do Server ______________|");
		   		SendClientMessage(playerid, COLOR_GREEN,"https://discord.gg/MSh42WBfnw");
		   		SendClientMessage(playerid, 0x33CCFFAA,"Se cadastre e veja as contas VIP's.");
			}
			if(listitem == 9)
			{
                SendClientMessage(playerid, COLOR_YELLOW, "|______________ Creditos ______________|");
            	SendClientMessage(playerid, COLOR_GREEN,"[CReDITOS] Gamemode Feito A Partir de Um GoodFharter");
            	SendClientMessage(playerid, 0x33CCFFAA,"[CReDITOS] Totalmente Modificado por  & Logan_Walker");
            	SendClientMessage(playerid, COLOR_YELLOW,"[CReDITOS] Feito para uso exclusivo do Brasil Play Real");
				SendClientMessage(playerid, COLOR_GREEN,"[CReDITOS] Obrigado A Todos Os Players Que Jogam Nesse Servidor.");
				SendClientMessage(playerid, 0x33CCFFAA,"[CReDITOS] Por: Famila BPR");
			}
			if(listitem == 10)
			{
				if (PlayerInfo[playerid][pVIP] >= 1)
				{
		    		SendClientMessage(playerid, COLOR_YELLOW, "|______________ Ajuda VIP ______________|");
					SendClientMessage(playerid, COLOR_GREEN, "-> /kitvip /mala /desativar celular /anvip /jet /v(chat) /relatorio(cor destacada)");
					SendClientMessage(playerid, 0x33CCFFAA, "-> Carros VIPS: /veiculo ajuda");
					SendClientMessage(playerid, COLOR_YELLOW, "-> Casas VIPS: /ajuda");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREEN, "Voce nao e um jogador VIP");
			}
			}
			if(listitem == 11)
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "|______________ Seja VIP ______________|");
		   		SendClientMessage(playerid, COLOR_GREEN,"/Discord - Para virar VIP acesse nosso Discord");
		   		SendClientMessage(playerid, 0x33CCFFAA,"Temos VIP's de R$5,00 ate R$10,00!");
			    SendClientMessage(playerid, COLOR_YELLOW,"Veja com um ADM online!");
		   		SendClientMessage(playerid, COLOR_GREEN,"Acesse https://discord.gg/MSh42WBfnw");
			}
		}
		return 1;
	}
//==============================================================================
	if(dialogid == 12)
	{
	    if(!response) return true;
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
      			{
      		    	new InfoOrgMatheus[1500];
		        	new arquivo[128];
					format(string,sizeof(string),"Lider: %s\n",InfoOrg[org][Lider]);
					strcat(InfoOrgMatheus,string);
					format(string,sizeof(string),"Sub-Lider: %s\n",InfoOrg[org][Sub444]);
					strcat(InfoOrgMatheus,string);
					format(string,sizeof(string),"Sub-Lider: %s\n",InfoOrg[org][Sub555]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro1]);
					format(string,sizeof(string),"Membro 1: %s\n",InfoOrg[org][Membro1]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro2]);
					format(string,sizeof(string),"Membro 2: %s\n",InfoOrg[org][Membro2]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro3]);
					format(string,sizeof(string),"Membro 3: %s\n",InfoOrg[org][Membro3]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro4]);
					format(string,sizeof(string),"Membro 4: %s\n",InfoOrg[org][Membro4]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro5]);
					format(string,sizeof(string),"Membro 5: %s\n",InfoOrg[org][Membro5]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro6]);
					format(string,sizeof(string),"Membro 6: %s\n",InfoOrg[org][Membro6]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro7]);
					format(string,sizeof(string),"Membro 7: %s\n",InfoOrg[org][Membro7]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro8]);
					format(string,sizeof(string),"Membro 8: %s\n",InfoOrg[org][Membro8]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro9]);
					format(string,sizeof(string),"Membro 9: %s\n",InfoOrg[org][Membro9]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro10]);
					format(string,sizeof(string),"Membro 10: %s\n",InfoOrg[org][Membro10]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro11]);
					format(string,sizeof(string),"Membro 11: %s\n",InfoOrg[org][Membro11]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro12]);
					format(string,sizeof(string),"Membro 12: %s\n",InfoOrg[org][Membro12]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro13]);
					format(string,sizeof(string),"Membro 13: %s\n",InfoOrg[org][Membro13]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro14]);
					format(string,sizeof(string),"Membro 14: %s\n",InfoOrg[org][Membro14]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro15]);
					format(string,sizeof(string),"Membro 15: %s\n",InfoOrg[org][Membro15]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro16]);
					format(string,sizeof(string),"Membro 16: %s\n",InfoOrg[org][Membro16]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro17]);
					format(string,sizeof(string),"Membro 17: %s\n",InfoOrg[org][Membro17]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro18]);
					format(string,sizeof(string),"Membro 18: %s\n",InfoOrg[org][Membro18]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro19]);
					format(string,sizeof(string),"Membro 19: %s\n",InfoOrg[org][Membro19]);
					strcat(InfoOrgMatheus,string);
					format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro20]);
					format(string,sizeof(string),"Membro 20: %s\n",InfoOrg[org][Membro20]);
					strcat(InfoOrgMatheus,string);
					ShowPlayerDialog(playerid, 8799, DIALOG_STYLE_LIST, "Membros da Organizacao:", InfoOrgMatheus, "---", "Voltar");
				}
			    return true;
			}
			if(listitem == 1)
			{
				ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Administrar Membros", "Limpar uma vaga\nLimpar todas as vagas\nDemitir um membro\nConvidar um novo membro\nInformacoes dos Membros\nCargos dos Membros","Selecionar", "Voltar");
			    return true;
			}
			if(listitem == 2)
			{
				ShowPlayerDialog(playerid, 14, DIALOG_STYLE_LIST, "Administrar Gang/Org", "Liberar Drogas\nEscolher Gerente\nPedidos\nBanco da Gang/Org\nLimites\nSalarios", "Selecionar", "Cancelar");
			    return true;
			}
			if(listitem == 3)
			{

				new InfoOrgMat[1500];
				format(string,sizeof(string),"--------INFORMACOES--------\n");
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Lider: %s\n",InfoOrg[org][Lider]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Sub-Lider 444: %s\n",InfoOrg[org][Sub444]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Sub 555 Bugado: %s\n",InfoOrg[org][Sub555]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"--------DROGAS--------\n");
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Maconha: %d\n",CofreOrg[org][Maconha]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Crack: %d\n",CofreOrg[org][Crack]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Cocaina: %d\n",CofreOrg[org][Cocaina]);
				strcat(InfoOrgMat,string);
				format(string,sizeof(string),"Materiais: %d\n",CofreOrg[org][Materiais]);
				strcat(InfoOrgMat,string);
				ShowPlayerDialog(playerid, 8798, DIALOG_STYLE_LIST, "Informacies:", InfoOrgMat, "---", "Voltar");
			    return true;
			}
			if(listitem == 4)
			{
    			if(org == 5 || org == 14 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 23 || org == 6 || org == 15 || org == 13 || org == 12 || org == 23 || org == 24 || org == 25 || org == 26 || org == 28 || org == 29 || org == 31)
    			{
					ShowPlayerDialog(playerid, 16, DIALOG_STYLE_LIST, "Armas e Drogas", "Vender maconha para esta HQ\nVender crack para esta HQ\nVender cocaina para esta HQ\nVender materiais para esta HQ", "Escolher", "Voltar");
				}
			    return true;
			}
            if(listitem == 5)
			{
			    ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Equipar", "Equipar Cargo 1\nEquipar Cargo 2\nEquipar Cargo 3\nEquipar Cargo 4\nEquipar Cargo 5\nEquipar Cargo 6", "Equipar", "Voltar");
			    return true;
            }
		}
	    return true;
	}
//==============================================================================
	if(dialogid==422)
	{
		if(response)
		{
			if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Este player ja participa de Org/Gang/Mafia.");
				return true;
			}
			if(para1 != INVALID_PLAYER_ID)
			{
				new lolz = GetPlayerOrg(playerid);
				GetPlayerName(para1, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* Voce convidou %s para sua organizacao: %s.", giveplayer,NomeORG(playerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				new convitestring[256];
		 		format(convitestring,sizeof(convitestring), "Voce foi convidado para uma organizacao: %s\nDeseja entrar para a organizacao ?",NomeORG(playerid));
		   		ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",convitestring,"Sim","Nao");
				InviteOffer[para1] = playerid;
				InviteJob[para1] = lolz;
			}
		}
		return 1;
	}
//==============================================================================
	if(dialogid == 13)
    {
        new org = GetPlayerOrg(playerid);
        if(!response) return true;
        if(response)
        {
            if(listitem >= 0 && listitem <= 5)
            {
                if(listitem == 0)
                {
                	if(PlayerInfo[playerid][pLider] > 0)
      				{
     		    		new InfoOrgLimpar[1500];
		        		new arquivo[128];
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro1]);
						format(string,sizeof(string),"Membro 1: %s\n",InfoOrg[org][Membro1]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro2]);
						format(string,sizeof(string),"Membro 2: %s\n",InfoOrg[org][Membro2]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro3]);
						format(string,sizeof(string),"Membro 3: %s\n",InfoOrg[org][Membro3]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro4]);
						format(string,sizeof(string),"Membro 4: %s\n",InfoOrg[org][Membro4]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro5]);
						format(string,sizeof(string),"Membro 5: %s\n",InfoOrg[org][Membro5]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro6]);
						format(string,sizeof(string),"Membro 6: %s\n",InfoOrg[org][Membro6]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro7]);
						format(string,sizeof(string),"Membro 7: %s\n",InfoOrg[org][Membro7]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro8]);
						format(string,sizeof(string),"Membro 8: %s\n",InfoOrg[org][Membro8]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro9]);
						format(string,sizeof(string),"Membro 9: %s\n",InfoOrg[org][Membro9]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro10]);
						format(string,sizeof(string),"Membro 10: %s\n",InfoOrg[org][Membro10]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro11]);
						format(string,sizeof(string),"Membro 11: %s\n",InfoOrg[org][Membro11]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro12]);
						format(string,sizeof(string),"Membro 12: %s\n",InfoOrg[org][Membro12]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro13]);
						format(string,sizeof(string),"Membro 13: %s\n",InfoOrg[org][Membro13]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro14]);
						format(string,sizeof(string),"Membro 14: %s\n",InfoOrg[org][Membro14]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro15]);
						format(string,sizeof(string),"Membro 15: %s\n",InfoOrg[org][Membro15]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro16]);
						format(string,sizeof(string),"Membro 16: %s\n",InfoOrg[org][Membro16]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro17]);
						format(string,sizeof(string),"Membro 17: %s\n",InfoOrg[org][Membro17]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro18]);
						format(string,sizeof(string),"Membro 18: %s\n",InfoOrg[org][Membro18]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro19]);
						format(string,sizeof(string),"Membro 19: %s\n",InfoOrg[org][Membro19]);
						strcat(InfoOrgLimpar,string);
						format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro20]);
						format(string,sizeof(string),"Membro 20: %s\n",InfoOrg[org][Membro20]);
						strcat(InfoOrgLimpar,string);
						ShowPlayerDialog(playerid, 8989, DIALOG_STYLE_LIST, "Limpar uma vaga:", InfoOrgLimpar, "Limpar", "Voltar");
					}
                    return true;
                }
                if(listitem == 1)
                {
                	if(PlayerInfo[playerid][pLider] > 0)
      				{
                		ShowPlayerDialog(playerid,423,DIALOG_STYLE_MSGBOX,"Limpar todas as Vagas","Voce deseja limpar todas as Vagas","Limpar","Sair");
                	}
                    return true;
                }
                if(listitem == 2)
                {
                    return true;
                }
                if(listitem == 3)
                {
              		if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444)
					{
						new lolz = GetPlayerOrg(playerid);
	    				if(TemVaga(lolz) == 0)
	    				{
							SendClientMessage(playerid, COLOR_GRAD1, "Nao ha mais vagas na lista use /limparvaga primeiro.");
							return true;
  						}
  						if(IsPlayerConnected(para1))
			    		{
                			ShowPlayerDialog(playerid,422,DIALOG_STYLE_INPUT,"Convidar","Digite o ID do jogador a baixo:","Convidar","Sair");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Somente lideres podem usar este comando !");
					}
				}
				if(listitem == 4)
                {
                }
                if(listitem == 5)
                {
                    new InfoOrgCargos[1500];
                    new arquivo[128];
                    format(string,sizeof(string),"Lider: %s\n",InfoOrg[org][Lider]);
                    strcat(InfoOrgCargos,string);
                    format(string,sizeof(string),"Sub-Lider: %s\n",InfoOrg[org][Sub444]);
                    strcat(InfoOrgCargos,string);
                    format(string,sizeof(string),"Sub-Lider: %s\n",InfoOrg[org][Sub555]);
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro1]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro2]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro3]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro4]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro5]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro6]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro7]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro8]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro9]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro10]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro11]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro12]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro13]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro14]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro15]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro16]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro17]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro18]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro19]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    format(arquivo, sizeof(arquivo), "Contas/%s.ini",InfoOrg[org][Membro20]);
                    format(string,sizeof(string),"%s: Cargo %d\n",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"));
                    strcat(InfoOrgCargos,string);
                    ShowPlayerDialog(playerid, 8797, DIALOG_STYLE_LIST, "Cargos dos Membros:", InfoOrgCargos, "Voltar", "Cancelar");
                }
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(dialogid == 14)
    {
        new org = GetPlayerOrg(playerid);
        if(!response) return true;
        if(response)
        {
            if(listitem >= 0 && listitem <= 5)
            {
                if(listitem == 0)
                {
                    return true;
                }
                if(listitem == 1)
                {
                    return true;
                }
                if(listitem == 2)
                {
                    return true;
                }
                if(listitem == 3)
                {
			    	format(string,sizeof(string),"O Saldo da Sua Organizacao e de R$%d\nO que voce deseja fazer ?",CofreOrg[org][Dinheiro]);
			    	ShowPlayerDialog(playerid, 1000, DIALOG_STYLE_MSGBOX, "Cofre da Organizacao", string, "Sacar", "Depositar");
			    	return 1;
				}
				if(listitem == 4)
                {
                
                }
                if(listitem == 5)
                {
					ShowPlayerDialog(playerid, 9191, DIALOG_STYLE_LIST, "Salario", "Liberar Pagamento\nEditar Salario", "Confirmar", "Cancelar");
                }
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(dialogid == 9191)
	{
		if(response == 0)
	    {
	        return true;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/pagamento");
     			return true;
		    }
		    if(listitem == 1)
		    {
	    		ShowPlayerDialog(playerid, 9292, DIALOG_STYLE_LIST, "Editar Salario", "Cargo 1\nCargo 2\nCargo 3\nCargo 4\nSub-Lideres", "Confirmar", "Cancelar");
			    return true;
		    }
      		return true;
      	}
	}
//==============================================================================
	if(dialogid == 9292)
	{
		if(response == 0)
	    {
	        return true;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/editarsalario 1");
      			ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Salario","Digite o novo salario","Convidar","Sair");
     			return true;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/editarsalario 2");
	    		ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Salario","Digite o novo salario","Convidar","Sair");
			    return true;
		    }
		    if(listitem == 2)
		    {
	    		OnPlayerCommandText(playerid,"/editarsalario 3");
	    		ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Salario","Digite o novo salario","Convidar","Sair");
			    return true;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/editarsalario 4");
	    		ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Salario","Digite o novo salario","Convidar","Sair");
			    return true;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/editarsalario 5");
	    		ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Salario","Digite o novo salario","Convidar","Sair");
			    return true;
		    }
      		return true;
      	}
	}
//==============================================================================
	if(dialogid == 8797)
	{
	    if(response == 0)
		{
			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformacoes\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			return true;
		}
 		if(response == 1)
		{
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 8798)
	{
	    if(response == 0)
		{
			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformacoes\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			return true;
		}
 		if(response == 1)
		{
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 1000)
	{
		new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"O Saldo da Sua Organizacao e de R$%d\nQuantos voce deseja Depositar ?",CofreOrg[org][Dinheiro]);
		    ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_INPUT, "Cofre da Organizacao", string, "Depositar", "Cancelar");
			return true;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"O Saldo da Sua Organizacao e de R$%d\nQuantos voce deseja Sacar ?",CofreOrg[org][Dinheiro]);
		    ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_INPUT, "Cofre da Organizacao", string, "Sacar", "Cancelar");
			return true;
		}
	    return true;
 	}
//==============================================================================
	if(dialogid == 1001)
	{
		if(response >= 1)
		{
			new org = GetPlayerOrg(playerid);
		    new depgrana = strval(inputtext);
			if(GetPlayerMoneyEx(playerid) < depgrana)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
			    return true;
			}
			if(depgrana > 0)
			{
			    if(GetPlayerMoneyEx(playerid) >= depgrana)
			    {
			        GivePlayerMoneyEx(playerid, -depgrana);
		    		DepositarGranaOrg(org,depgrana);
		    		format(string,sizeof(string),"Voce Depositou R$%d, o Novo Saldo e de R$%d",depgrana,CofreOrg[org][Dinheiro]);
		    		SendClientMessage(playerid,COLOR_YELLOW,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 1002)
	{
		if(response >= 1)
		{
			new org = GetPlayerOrg(playerid);
			new sacgrana = strval(inputtext);
			if(sacgrana > CofreOrg[org][Dinheiro])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organizacao nao tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pCargo] < 444 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Lider e Sub-Loder Podem Sacar Dinheiro");
			    return true;
			}
			if(sacgrana > 0)
			{
			    if(sacgrana <= CofreOrg[org][Dinheiro])
			    {
   					GivePlayerMoney(playerid, sacgrana);
		    		SacarGranaOrg(org,sacgrana);
		    		format(string,sizeof(string),"Voce Sacou R$%d, o Novo Saldo e de R$%d",sacgrana,CofreOrg[org][Dinheiro]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 16)
	{
		if(!response) return true;
		if(response)
		{
			new org = GetPlayerOrg(playerid);
			if(listitem >= 0 && listitem <= 3)
            {
    			if(org == 5 || org == 14 || org == 17 || org == 18 || org == 19 || org == 20 || org == 21 || org == 23 || org == 6 || org == 15 || org == 13 || org == 12 || org == 23 || org == 24 || org == 25 || org == 26 || org == 28 || org == 29 || org == 31)
    			{
	    			if(listitem == 0)
					{
		    			format(string,sizeof(string),"A Organizacao tem %d de Maconha\nQuantos voce deseja Vender ?",CofreOrg[org][Maconha]);
		    			ShowPlayerDialog(playerid, 20, DIALOG_STYLE_INPUT, "Armas e Drogas", string, "Vender", "Cancelar");
						return true;
					}
					if(listitem == 1)
					{
		    			format(string,sizeof(string),"A Organizacao tem %d de Crack\nQuantos voce deseja Vender ?",CofreOrg[org][Crack]);
		    			ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Armas e Drogas", string, "Vender", "Cancelar");
						return true;
					}
					if(listitem == 2)
					{
		    			format(string,sizeof(string),"A Organizacao tem %d de Cocaina\nQuantos voce deseja Vender ?",CofreOrg[org][Cocaina]);
		    			ShowPlayerDialog(playerid, 19, DIALOG_STYLE_INPUT, "Armas e Drogas", string, "Vender", "Cancelar");
						return true;
					}
					if(listitem == 3)
					{
		    			format(string,sizeof(string),"A Organizacao tem %d de Materiais\nQuantos voce deseja Vender ?",CofreOrg[org][Materiais]);
			    		ShowPlayerDialog(playerid, 21, DIALOG_STYLE_INPUT, "Armas e Drogas", string, "Vender", "Cancelar");
					}
					return true;
				}
			}
		}
		return true;
	}
//==============================================================================
	if(dialogid == 17) 
    {
        if(response) 
        {
        	if(response == 0)
			{
				ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformacoes\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
				return true;
			}
 			if(response == 1)
			{
            	if(listitem >= 0 && listitem <= 5)
            	{
                	new Equipar[10] = "/fodak", Qual[2];
                	valstr(Qual, listitem + 1);
                	listitem && strcat(Equipar, Qual);
                	CallRemoteFunction("OnPlayerCommandText", "ds", playerid, Equipar);
            	}
        	}
  		}
		return 0;
	}
//==============================================================================
	if(dialogid == 18)
    {
        if(response >= 1)
        {
            new depcrac = strval(inputtext);
            new org = GetPlayerOrg(playerid);
            new pCrack = PlayerInfo[playerid][pDrogas3];
            if(pCrack < depcrac)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
                return true;
            }
            if(PlayerInfo[playerid][pEmprego] == 4 && PlayerInfo[playerid][pEmprego] == 7 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
            {
                SendClientMessage(playerid,COLOR_GRAD1,"Voce nao e vendedor de Drogas/Materiais/Mafioso");
                return true;
            }
            if(depcrac > 0)
            {
                if(pCrack >= depcrac)
                {
                    new moneys = depcrac * 100;
                    PlayerInfo[playerid][pDrogas3] = pCrack-depcrac;
                    DepositarCrackOrg(org,depcrac*100);
                    format(string,sizeof(string),"Voce vendeu %d de Crack para a HQ, e recebeu R$%d em troca",depcrac,CofreOrg[org][Crack],moneys);
                    SendClientMessage(playerid,COLOR_GRAD1,string);
                    return true;
                }
            }
            return true;
        }
        return true;
    }
//==============================================================================
	if(dialogid == 19)
	{
		if(response >= 1)
		{
		    new depcoca = strval(inputtext);
		    new org = GetPlayerOrg(playerid);
		    new pCocaina = PlayerInfo[playerid][pDrogas2];
			if(pCocaina < depcoca)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pEmprego] == 4 && PlayerInfo[playerid][pEmprego] == 7)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao e vendedor de Drogas/Materiais");
			    return true;
			}
			if(depcoca > 0)
			{
			    if(pCocaina >= depcoca)
			    {
			    	new moneys = depcoca * 100;
			        PlayerInfo[playerid][pDrogas2] = pCocaina-depcoca;
		    		DepositarCocainaOrg(org,depcoca*100);
		    		format(string,sizeof(string),"Voce vendeu %d de Cocaina para a HQ, e recebeu R$%d em troca",depcoca,CofreOrg[org][Cocaina],moneys);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 20)
	{
		if(response >= 1)
		{
		    new depmac = strval(inputtext);
		    new org = GetPlayerOrg(playerid);
		    new pMaconha = PlayerInfo[playerid][pDrogas];
			if(pMaconha < depmac)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pEmprego] == 4 && PlayerInfo[playerid][pEmprego] == 7)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao e vendedor de Drogas/Materiais");
			    return true;
			}
			if(depmac > 0)
			{
			    if(pMaconha >= depmac)
			    {
			    	new moneys = depmac * 100;
			        PlayerInfo[playerid][pDrogas] = pMaconha-depmac;
		    		DepositarMaconhaOrg(org,depmac*100);
		    		format(string,sizeof(string),"Voce vendeu %d de Maconha para a HQ, e recebeu R$%d em troca",depmac,CofreOrg[org][Maconha],moneys);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 21)
	{
		if(response >= 1)
		{
		    new depmat = strval(inputtext);
		    new org = GetPlayerOrg(playerid);
		    new pMateriais = PlayerInfo[playerid][pMats];
			if(pMateriais < depmat)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
			    return true;
			}
			if(PlayerInfo[playerid][pEmprego] == 4 && PlayerInfo[playerid][pEmprego] == 7)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao e vendedor de Drogas/Materiais");
			    return true;
			}
			if(depmat > 0)
			{
			    if(pMateriais >= depmat)
			    {
			    	new moneys = depmat * 100;
			        PlayerInfo[playerid][pMats] = pMateriais-depmat;
		    		DepositarMaterialOrg(org,depmat*100);
		    		format(string,sizeof(string),"Voce vendeu %d de Materiais para a HQ, e recebeu R$%d em troca",depmat,CofreOrg[org][Materiais],moneys);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 1993)
	{
		if(!response) return true;
	    if(response)
	    {
			if(listitem == 0)
			{
				PlayerInfo[playerid][pOrigem] = 1;
				GivePlayerMoney(playerid, -100);
				SendClientMessage(playerid,COLOR_GREEN,"Voce mudou sua origem para Los Santos!");
			}
			if(listitem == 1)
			{
				PlayerInfo[playerid][pOrigem] = 2;
				GivePlayerMoney(playerid, -100);
				SendClientMessage(playerid,COLOR_GREEN,"Voce mudou sua origem para San Fierro!");
			}
		}
		return 1;
	}
//==============================================================================
	if(dialogid == 28)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um espetinho de coracao.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um churrasco de carne de vaca.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um churrasco de picanha.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um churrasco de frango.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu agua.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return true;
	}
//==============================================================================
	if(dialogid == 18)
	{
		if(response >= 1)
		{
		    new depgrana = strval(inputtext);
		    new org = GetPlayerOrg(playerid);
			if(GetPlayerMoneyEx(playerid) < depgrana)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Voce nao tem tudo isso!");
			    return true;
			}
			if(depgrana > 0)
			{
			    if(GetPlayerMoneyEx(playerid) >= depgrana)
			    {
			        GivePlayerMoneyEx(playerid, -depgrana);
		    		DepositarGranaOrg(org,depgrana);
		    		format(string,sizeof(string),"Voce Depositou R$%d, o Novo Saldo e de R$%d",depgrana,CofreOrg[org][Dinheiro]);
		    		SendClientMessage(playerid,COLOR_YELLOW,string);
		    		return true;
	    		}
		    }
			return true;
		}
	    return true;
	}
//==============================================================================
	if(dialogid == 29)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um X-BAYCON.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um X-TUDO.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um X-ESPECIAL.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um X-FRANGO.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu agua.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
//==============================================================================
	if(dialogid == 30)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoney(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma pizza pequena de presunto e mussarela.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma pizza grande de presunto e mussarela.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma pizza extra grande.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma pizza de Bacon e Chocolate.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu agua.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
//==============================================================================
    if(dialogid == 31)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return true;
		if (GetPlayerMoneyEx(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return true;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma rosquinha pequena.", sendername);
				GivePlayerMoneyEx(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma rosquinha normal.", sendername);
				GivePlayerMoneyEx(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma rosquinha de chefe.", sendername);
				GivePlayerMoneyEx(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma super rosquinha.", sendername);
				GivePlayerMoneyEx(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu agua.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoneyEx(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	return true;
}
//==============================================================================
BPR::Spectator()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerToTeamColor(i);
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
					    GetPlayerHealth(targetid, health);
					    format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~Vida:%.1f",PlayerName(targetid),targetid,health);
					    GameTextForPlayer(i, gstring, 2500, 3);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				Controle(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if(PlayerInfo[i][pVIP] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				Controle(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::CheckMoney()
{
	new strmsg[128], pName[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		 if(GetPlayerMoney(i) > GetPVarInt(i, "Dinheiro"))
		 {
		 	GetPlayerName(i, pName, sizeof(pName));
		 	format(strmsg, sizeof(strmsg), "[Money Hacker]: O Player %s foi Kickado por fazer money hacker !", pName);
		 	SendClientMessageToAll(0xE3E3E3FF, strmsg);
		 	Kick(i);
		}
	}
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
 	if(Trancado[vehicleid] >= 1)
	{
	    if(PlayerInfo[playerid][pAdmin] > 0 || ispassenger) { }
		else
		{
        	new Float:x,Float:y,Float:z,Float:a;
    		GetPlayerPos(playerid,x,y,z);
    		GetPlayerFacingAngle(playerid,a);
   	 		SetPlayerPos(playerid, x, y, z+0.3);
			SetPlayerFacingAngle(playerid, a);
     		SendClientMessage(playerid, COLOR_YELLOW, "Veiculo Trancado!");
     	}
	}
	return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==8)
		{
		    return true;
		}
		if(lider==5 || lider==6 || lider==8)
		{
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==2 || member==3 || member==16 || member==11 || member==34 || member==35)
		{
		    return true;
		}
		else if(lider==1 || lider==2 || lider==3 || lider==16 || lider==11 || lider==34 || lider==35)
		{
		    return true;
		}
	}
	return 0;
}

BPR::IsABandido(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==8 || member==12 || member==13 || member==14 || member==15 || member==17 || member==18 || member==19 || member==20 || member==21 || member==22 || member==23 || member==24 || member==25 || member==26 || member==28 || member==29 || member==31)
		{
		    return true;
		}
		else if(lider==5 || lider==6 || lider==8 || lider==12 || lider==13 || lider==14 || lider==15 || lider==17 || lider==18 || lider==19 || lider==20 || lider==21 || lider==22 || lider==23 || lider==24 || lider==25 || lider==26 || lider==28 || lider==29 || lider==31)
		{
		    return true;
		}
	}
	return 0;
}

BPR::IsAAdm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new admin = PlayerInfo[playerid][pAdmin];
	    if(admin)
		{
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return true;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
		{//Zip & Victim
		    return true;
		}
		else if(PlayerToPoint(30.0,playerid,210.7969,-7.6347,1001.2109))
		{//Victim
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906) || PlayerToPoint(6.0,playerid,1400.6882,-1680.5344,42.4339) || PlayerToPoint(6.0,playerid,1496.5316,-1544.0677,23.5481) || PlayerToPoint(6.0,playerid,2737.3364,-1774.2123,43.7973))
		{//LS
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,1603.0895,-1617.9437,13.4987))
		{//dp
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,1380.4712,462.7467,20.1107) || PlayerToPoint(8.0,playerid,1385.0475,460.5417,20.1068))
		{//PC
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,1383.5532,457.1286,19.9561) || PlayerToPoint(8.0,playerid,1379.1952,459.1295,19.9587))
		{//PC
		    return true;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return true;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return true;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return true;
		}
		else if(PlayerToPoint(8.0,playerid,677.1299,-2866.3892,13.0944) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return true;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078) || PlayerToPoint(4.0,playerid,681.5817,-456.0235,-25.6099))
		{//Burgershot
		    return true;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) || PlayerToPoint(4.0,playerid,1254.0154,-792.7376,1084.2344) || PlayerToPoint(15.0,playerid,942.4760,4.9500,1000.9297))
		{//In grove street bar (with girlfriend), and in Havanna
		    return true;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734) || PlayerToPoint(10.0,playerid,378.5476,-189.0421,1000.6328) || PlayerToPoint(10.0,playerid,968.8497,-46.3663,1001.1172) || PlayerToPoint(6.0,playerid,2372.4138,-1133.9048,1050.8750))
		{//PIG Pen
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsABoat(carid)
{
    new oo = GetVehicleModel(carid);
 	if((oo >= 445) && (oo <= 447))
	{
		return true;
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsAPlane(carid)
{
	new oo = GetVehicleModel(carid);
	if((oo >= 503) && (oo <= 510))
	{
		return true;
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsACopCar(carid)//copcarroo
{
	if((carid >= 1) && (carid <= 35))
	{
		return true;
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsACopSFCar(carid)//copcarroo
{
	if((carid >= 597) && (carid <= 627))
	{
		return true;
	}
	return 0;
}
BPR::IsAEnforcerCar(carid) // Enforcers
{
	if((carid == 7) || (carid == 8) || (carid == 31) || (carid == 32) || (carid == 51) || (carid == 52) || (carid == 53) || (carid == 151) || (carid == 152) || (carid == 228) || (carid == 229))
	{
		return true;
	}
	return 0;
}
BPR::IsACaminhaozinhoCar(carid) // Trocar e Pegar Materiais
{
	if((carid == 387) || (carid == 388) || (carid == 389) || (carid == 390))
	{
		return true;
	}
	return 0;
}

BPR::IsAAmbu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==4 || member==4)
		{
		    return true;
		}
		else if(lider==4 || lider==4)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAAmbuSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==27 || member==27)
		{
		    return true;
		}
		else if(lider==27 || lider==27)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAnAmBPRanceCar(carid)
{
	if((carid >= 80) && (carid <= 86))
	{
		return true;
	}
	return 0;
}
BPR::IsAnAmBPRanceSFCar(carid)
{
	if((carid >= 524) && (carid <= 530))
	{
		return true;
	}
	return 0;
}
BPR::IsAGatev(carid)
{
	if((carid == 0) || (carid == 0) || (carid == 0) || (carid == 0))
	{
		return true;
	}
	return 0;
}

//------------------------------------------------------------------------------
BPR::OnPlayerConnect(playerid)
{
	online++;
    SendDeathMessage(playerid, -1, 200);
	TextDrawShowForPlayer(playerid, forum[playerid]);
    DisablePlayerCheckpoint(playerid);
    KillTimer(timer[playerid]);
	Watching[playerid] = 0;
	Goto[playerid] = 0;
	strmid(InfoKelve[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
    strmid(InfoKelve[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
    strmid(InfoKelve[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
    strmid(InfoKelve[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
    InfoKelve[playerid][NumSenha] = 999;
    
    noclipdata[playerid][cameramode] 	= CAMERA_MODE_NONE;
	noclipdata[playerid][lrold]	   	 	= 0;
	noclipdata[playerid][udold]   		= 0;
	noclipdata[playerid][mode]   		= 0;
	noclipdata[playerid][lastmove]   	= 0;
	noclipdata[playerid][accelmul]   	= 0.0;
	IsCreating[playerid] 				= false;
	IsReSettingStart[playerid] 			= false;
	IsReSettingEnd[playerid] 			= false;
	SettingFirstLoc[playerid] 			= false;
	SettingLastLoc[playerid] 			= false;
	IsCamMoving[playerid] 				= false;
	coordInfo[playerid][MoveSpeed] 		= 1000;
	coordInfo[playerid][RotSpeed] 		= 1000;
	//Lojinha Hospital
	RemoveBuildingForPlayer(playerid, 5931, 1114.3125, -1348.1016, 17.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1085.7031, -1361.0234, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1112.6172, -1389.8672, 15.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 5810, 1114.3125, -1348.1016, 17.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 5993, 1110.8984, -1328.8125, 13.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 5811, 1131.1953, -1380.4219, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1141.9844, -1346.1094, 13.2656, 0.25);
	//Fazenda Pankeka
	RemoveBuildingForPlayer(playerid, 733, 154.0078, -1716.6484, 5.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 726, 134.1641, -1646.3828, 9.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 733, 203.6563, -1689.2109, 8.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 6430, 121.0313, -1580.4063, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 6421, 137.3984, -1711.5859, 10.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 158.6563, -1651.8672, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 6431, 233.8828, -1680.0703, 10.5469, 0.25);
	//Base PRF
	RemoveBuildingForPlayer(playerid, 3338, -24.0313, -2829.9844, 39.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, -24.0313, -2829.9844, 39.0234, 0.25);
	//Favela Pankeka
	RemoveBuildingForPlayer(playerid, 3276, -289.0234, -991.1016, 43.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -264.4453, -989.8828, 35.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -256.8438, -981.6953, 33.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -249.1719, -973.5313, 30.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -241.5078, -965.3672, 28.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -328.7891, -951.3047, 53.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -320.7031, -959.2188, 51.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -234.0000, -957.2969, 25.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -234.5547, -949.0000, 26.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -243.0391, -941.2422, 28.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -337.0859, -943.2969, 54.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -337.8750, -935.4766, 54.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -251.5156, -933.5938, 30.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -329.7266, -927.9766, 52.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -321.5078, -920.4219, 50.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -313.2188, -912.8750, 48.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -304.9375, -905.3438, 46.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -296.8203, -897.8906, 44.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -260.0938, -925.7422, 33.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -268.4453, -918.1172, 36.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -276.3281, -910.0391, 38.6250, 0.25);
	//Mapas Fernandin
	RemoveBuildingForPlayer(playerid, 7342, 2320.4609, 2128.8047, 35.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 7392, 2320.4609, 2128.8047, 35.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -271.9844, -997.9922, 38.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -312.4063, -967.3594, 50.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -304.2031, -975.2969, 48.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -295.9922, -983.3516, 45.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -289.0234, -991.1016, 43.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -264.4453, -989.8828, 35.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -256.8438, -981.6953, 33.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -249.1719, -973.5313, 30.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -241.5078, -965.3672, 28.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -328.7891, -951.3047, 53.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -320.7031, -959.2188, 51.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -234.0000, -957.2969, 25.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -234.5547, -949.0000, 26.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -243.0391, -941.2422, 28.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -337.0859, -943.2969, 54.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -337.8750, -935.4766, 54.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -251.5156, -933.5938, 30.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -329.7266, -927.9766, 52.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -321.5078, -920.4219, 50.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -313.2188, -912.8750, 48.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -304.9375, -905.3438, 46.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -296.8203, -897.8906, 44.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -260.0938, -925.7422, 33.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -268.4453, -918.1172, 36.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -276.3281, -910.0391, 38.6250, 0.25);
	//HQ Bratva
	RemoveBuildingForPlayer(playerid, 3737, 1525.5000, -691.6953, 96.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3734, 1497.8594, -674.8281, 99.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 3604, 1525.5000, -691.6953, 96.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 3605, 1497.8594, -674.8281, 99.8828, 0.25);
    //Favela Groove
    RemoveBuildingForPlayer(playerid, 17768, 2494.2656, -1696.2109, 17.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 17770, 2485.9063, -1639.3281, 16.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 17771, 2529.8906, -1677.6641, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 17885, 2457.8359, -1695.9375, 14.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 3654, 2517.4766, -1644.6953, 15.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3647, 2470.8203, -1640.8203, 15.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3592, 2451.7344, -1637.4844, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 3592, 2498.3047, -1638.3281, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3592, 2528.6328, -1658.4453, 16.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3706, 2520.1875, -1694.8516, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 17952, 2505.4766, -1695.2891, 14.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2488.8047, -1684.7891, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2491.8984, -1688.1016, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 17697, 2494.2656, -1696.2109, 17.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 17925, 2493.8438, -1696.7109, 15.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2498.6719, -1688.2344, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 2496.1563, -1691.5625, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2511.3672, -1710.2344, 12.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2505.1016, -1702.1797, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 17950, 2505.4766, -1695.2891, 14.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 17951, 2505.5234, -1690.9922, 14.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 1418, 2515.1250, -1683.0859, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1418, 2512.6094, -1683.1719, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2514.3438, -1684.5234, 12.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2532.9844, -1719.4297, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2537.9688, -1700.7109, 13.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3646, 2520.1875, -1694.8516, 14.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2536.0859, -1690.0859, 12.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1418, 2517.7734, -1685.2969, 13.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2516.6094, -1686.4844, 12.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 17698, 2529.8906, -1677.6641, 16.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 17926, 2528.5547, -1679.4375, 16.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 2523.6953, -1678.5938, 14.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 17566, 2520.7344, -1673.8359, 15.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2520.6016, -1670.7422, 13.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2519.0625, -1675.7109, 13.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2490.1016, -1654.6563, 16.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2491.2344, -1653.9609, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2491.8984, -1647.8984, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2492.2656, -1653.9922, 12.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3589, 2498.3047, -1638.3281, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1211, 2495.2656, -1653.6719, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2507.5938, -1663.0547, 16.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2505.6719, -1658.9063, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 2510.9219, -1656.1328, 12.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1211, 2505.6641, -1657.9375, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2511.5000, -1654.1563, 13.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2509.0156, -1652.1719, 13.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2501.9297, -1650.5078, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2505.1094, -1646.0391, 13.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2509.1719, -1648.7031, 13.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2507.5859, -1646.5547, 12.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2501.7500, -1645.5000, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2508.8672, -1634.4922, 11.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 2508.4141, -1635.4375, 11.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2522.1016, -1665.6484, 15.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2538.0234, -1667.6406, 13.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2520.5469, -1662.8828, 13.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 3589, 2528.6328, -1658.4453, 16.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3594, 2514.3906, -1658.6016, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2517.0938, -1656.0703, 13.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2518.6484, -1655.5234, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2520.6016, -1652.5938, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2514.7344, -1654.1875, 13.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 760, 2521.6953, -1653.0391, 13.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2524.4063, -1648.8516, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3649, 2517.4766, -1644.6953, 15.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2530.4766, -1636.7031, 12.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2474.6094, -1719.5625, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2485.0313, -1707.3438, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 669, 2447.0938, -1703.4531, 12.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 17573, 2457.8359, -1695.9375, 14.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2447.3438, -1686.9531, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 2460.2422, -1692.0859, 12.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2468.7969, -1685.0313, 12.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2477.6641, -1689.4688, 12.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2468.3516, -1680.9844, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2465.6953, -1676.4453, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2470.4688, -1674.1875, 16.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 17879, 2484.5313, -1667.6094, 21.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 17971, 2484.5313, -1667.6094, 21.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2456.3672, -1662.8828, 16.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2448.9141, -1648.8516, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2446.7734, -1646.4219, 13.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2453.9609, -1653.6953, 12.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 2455.9063, -1648.8047, 13.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2464.5000, -1648.8438, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2474.2891, -1648.8438, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1230, 2475.0000, -1653.6094, 12.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2463.0547, -1645.1094, 12.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2461.7813, -1646.2734, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, 2477.0469, -1646.2734, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 3593, 2437.4844, -1644.1172, 12.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3648, 2470.8203, -1640.8203, 15.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1498, 2485.6797, -1644.1094, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2460.5859, -1642.4922, 12.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 17514, 2449.1563, -1639.0234, 13.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 17699, 2485.9063, -1639.3281, 16.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3589, 2451.7344, -1637.4844, 15.1328, 0.25);
    //Casa Dreigon
    RemoveBuildingForPlayer(playerid, 7586, 2001.6328, 1914.3828, 32.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 7892, 1975.3047, 1891.9375, 28.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 710, 2036.5859, 1953.1875, 25.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2034.9453, 1947.5781, 9.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2035.4766, 1949.0781, 11.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2045.7813, 1959.1797, 9.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2046.2891, 1958.1016, 11.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2066.9141, 1922.0234, 17.6484, 0.25);
    //Estacionamento
    RemoveBuildingForPlayer(playerid, 4020, 1544.8359, -1516.8516, 32.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 4026, 1497.7969, -1543.7109, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 4061, 1544.8359, -1516.8516, 32.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 4218, 1497.7031, -1546.6172, 43.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 4016, 1497.7969, -1543.7109, 17.5547, 0.25);
	//Prefeitura
	RemoveBuildingForPlayer(playerid, 1226, 1330.2188, -1736.6797, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1325.7109, -1732.8281, 15.6250, 0.25);
	//Estacionamentos
	RemoveBuildingForPlayer(playerid, 6068, 1247.9141, -1429.9688, 15.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 6109, 1219.8984, -1449.4375, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 6195, 1236.5234, -1488.1641, 40.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1209.8984, -1482.3828, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1230.1250, -1482.3828, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1238.9844, -1481.9531, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1206.4766, -1465.1563, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1206.4766, -1454.1172, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 6099, 1219.8984, -1449.4375, 29.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1206.4766, -1444.8516, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1238.9844, -1468.0156, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1236.2813, -1443.0313, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1206.4766, -1433.8125, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 6052, 1247.9141, -1429.9688, 15.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1230.1250, -1416.5703, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1209.8984, -1416.5703, 14.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 1236.2813, -1417.7031, 12.7188, 0.25);
	//Praca
	RemoveBuildingForPlayer(playerid, 4236, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 4235, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1441.8594, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1403.3672, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1414.4141, -1731.4297, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1419.3281, -1710.2344, 11.8359, 0.25);
	//DP DA POLICIA CIVIL
	RemoveBuildingForPlayer(playerid, 5926, 816.3359, -1217.1484, 26.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 6005, 895.2578, -1256.9297, 31.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 5836, 816.3359, -1217.1484, 26.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 5838, 895.2578, -1256.9297, 31.2344, 0.25);
    if(IsPlayerNPC(playerid)){SpawnPlayer(playerid);return true;}
   	IPlog(playerid);
	if(strfind(PlayerName(playerid), "_", true) == -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "]", true) != -1 || strfind(PlayerName(playerid), "lixo", true) != -1 || strfind(PlayerName(playerid), "buceta", true) != -1 || strfind(PlayerName(playerid), "caralho", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "server", true) != -1
	|| strfind(PlayerName(playerid), "servidor", true) != -1 || strfind(PlayerName(playerid), "crash", true) != -1 || strfind(PlayerName(playerid), "bpl", true) != -1 || strfind(PlayerName(playerid), "gamerx", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "189", true) != -1 || strfind(PlayerName(playerid), "201", true) != -1 || strfind(PlayerName(playerid), "200", true) != -1 || strfind(PlayerName(playerid), ".", true) != -1
	|| strfind(PlayerName(playerid), "*", true) != -1 || strfind(PlayerName(playerid), "(", true) != -1 || strfind(PlayerName(playerid), ")", true) != -1 || strfind(PlayerName(playerid), "@", true) != -1 || strfind(PlayerName(playerid), "amx", true) != -1 || strfind(PlayerName(playerid), "prn", true) != -1 || strfind(PlayerName(playerid), "__", true) != -1){
	ShowPlayerDialog(playerid, 676, DIALOG_STYLE_MSGBOX, "Nick Incorreto", "Voce foi kickado pelo uso de nome incorreto\nUse nicks RP's exemplo: John_Cena\nO uso de nicks conhecido como MalBots resultara em Ban Permanente","Ok","Cancelar");
 	format(gstring,64,"Contas/%s.ini",PlayerName(playerid));Kick(playerid);fremove(gstring);return true;}
	if(strcmp("Cleitin_Bitoneira[BOT]",PlayerName(playerid),true)==0)
	{
    	SendClientMessage(playerid,COLOR_AZULBB,"Nao tente imitar Cleitin_Bitoneira[BOT] ele nao gosta disso!");
    	SendClientMessage(playerid,COLOR_AZULBB,"Cleitin_Bitoneira[BOT] te kickou!");Kick(playerid);
	}
	for(new i; i<sizeof(NicksProibidos); i++)
	{
    if(strcmp(NicksProibidos[i],PlayerName(playerid),true)==0)
	{
        SendClientMessage(playerid,COLOR_WHITE,"Voce esta usando um nome que e proibido.");
        SendClientMessage(playerid,COLOR_AZULBB,"Voce foi banido!");getdate(Ano, Mes, Dia);
        SBan(playerid, "Pego Usando um nome que e proibido no servidor.", "Automatico");
    	}
	}
	gActivePlayers[playerid]++;numplayers++;
	strmid(BanInfo[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
	strmid(BanInfo[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
	pban[playerid] = 0;
	Reduzido[playerid] = 0; // pedagio
	var1[playerid] = 0;
	EmDialog[playerid] = 0;
	gmsg[playerid] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	TruckMission[playerid] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	storeexit[playerid] = 0;
	PlayerInfo[playerid][pGrampo] = INVALID_PLAYER_ID;
	barexit[playerid] = 0;
	lotericaexit[playerid] = 0;
	away[playerid] = 0;
	pCofreOrg[playerid] = 0;
	InviteOffer[playerid] = 999;
	InviteJob[playerid] = 0;
	PlayerInfo[playerid][pGun5] = 0;
	mudandonick[playerid] = 0;
	gpTimes[playerid] = 0;
	PlayerInfo[playerid][pGun6] = 0;
	PlayerInfo[playerid][pGun7] = 0;
	PlayerInfo[playerid][pGun8] = 0;
	PlayerInfo[playerid][pGun9] = 0;
	PlayerInfo[playerid][pGun10] = 0;
	gPlayerTerminal[playerid] = 0;
	gPlayerRota[playerid] = 0;
	PlayerInfo[playerid][pGun11] = 0;
	PlayerInfo[playerid][pGun12] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pCheckInfoOrg] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	gSpamCount[playerid][0] = 0;
	gSpamCount[playerid][1] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
	PlayerInfo[playerid][pCar1] = 0;
	PlayerInfo[playerid][pCar2] = 0;
	PlayerInfo[playerid][pCar3] = 0;
	PlayerInfo[playerid][pCar4] = 0;
	HidePM[playerid] = 0;
	SelectChar[playerid] = 0; PhoneOnline[playerid] = 0; OfAssalto[playerid] = 999; precoassalto[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0; SemBombas[playerid] = 0;
	GettingEmprego[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
	AdvOffer[playerid] = 999; AdvPrice[playerid] = 0;
    ApprovedAdvogado[playerid] = 0; CallAdvogado[playerid] = 0; WantAdvogado[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; PlayerInfo[playerid][pSpawn] = 0;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	SexOffer[playerid] = 999; SexPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; RingTone[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	PlayerAtingido[playerid] = 0; PlayerAtingidoTime[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0; Whitelist[playerid] = 0;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; SetPlayerWantedLevel(playerid, 0); GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0;
	BoxWaitTime[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0; EmRota[playerid] = 0;
	BusCallTime[playerid] = 0; CopsrondaCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0;  MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; EmpregoDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0;
	gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerConta[playerid] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999; MechanicAccepted[playerid] = 999; CopsrondaAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = 1000;PlayerInfo[playerid][pDsujo] = 0;PlayerInfo[playerid][pCoins] = 0; NoFuel[playerid] = 0;
	HireCar[playerid] = 0;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0;
	WatchingTV[playerid] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	MudarNickAceito[playerid] = 0;
	MudarSenhaAceito[playerid] = 0;
	InAFoodPlace[playerid] = 0;
	OnEquipado[playerid] = 0;
	OnMafiaEquipado[playerid] = 0;
 	VisionInfo[playerid][PLojaA1] = 0;
 	VisionInfo[playerid][PLojaA2] = 0;
	VisionInfo[playerid][PLojaA3] = 0;
 	VisionInfo[playerid][PLojaA4] = 0;
	VisionInfo[playerid][PpLoja247] = 0;
	VisionInfo[playerid][PpLoja2472] = 0;
	new rand = random(10000);
	PlayerInfo[playerid][pID] = rand;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pScripter] = 0;
	PlayerInfo[playerid][pMapper] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	PlayerInfo[playerid][pMod] = 0;
	PlayerInfo[playerid][pResp] = 0;
	PlayerInfo[playerid][pEquipe] = 0;
	PlayerInfo[playerid][pAjustado] = 0;
	PlayerInfo[playerid][pVoto] = 0;
	PlayerInfo[playerid][pRecebeuSalario] = 0;
	PlayerInfo[playerid][pVIP] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigem] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pConta] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	StreetCallTime[playerid] = 0;
	PlayerInfo[playerid][pEmprego] = 0;
	PlayerInfo[playerid][pSalario] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pHeadValueT] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pPecas] = 0;
	PlayerInfo[playerid][pDorgado] = 0;
	PlayerInfo[playerid][pDorgado2] = 0;
	PlayerInfo[playerid][pDoenca] = 0;
	PlayerInfo[playerid][pDrogas] = 0;
	PlayerInfo[playerid][pDrogas2] = 0;
	PlayerInfo[playerid][pDrogas3] = 0;
	PlayerInfo[playerid][pSafeDrogas] = 0;
	PlayerInfo[playerid][pSafeDrogas2] = 0;
	PlayerInfo[playerid][pSafeDrogas3] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pGerente] = 0;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrogasSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
 	PlayerInfo[playerid][pPos_x] = 2246.6;
	PlayerInfo[playerid][pPos_y] = -1161.9;
	PlayerInfo[playerid][pPos_z] = 1029.7;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pGold] = 0;
	admtrampando[playerid] = 0;
	admhide[playerid] = 0;
	helperhide[playerid] = 0;
	helpertrampando[playerid] = 0;
	new randphone = 1000 + random(9999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPHousekey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	pRoadblock[playerid] = 0;
	pRoadCones[playerid] = 0;
	SpikeInfo[playerid][sCreated] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pLuta] = 0;
	strmid(PlayerInfo[playerid][pLastLogin], "0/0/0/0/0/0", 0, strlen("0/0/0/0/0/0"),255);
	ClearCrime(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	TextShow[playerid] = false;
	HouseEntered[playerid] = 255;
	new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	SendClientMessage(playerid, COLOR_YELLOW, "Carregando o Brasil Play Real!");
	SetPlayerMapIcon(playerid, 1,1552.6703,-1675.5068,16.1953, 30, 0xE6E6E6E6);//dp ls
	SetPlayerMapIcon(playerid, 1,-1606.6907,674.6328,-5.2422, 30, 0xE6E6E6E6);//dp sf
	SetPlayerMapIcon(playerid, 2,1480.9403,-1770.8481,18.7958, 56, 0xE6E6E6E6);//Prefeitura
	SetPlayerMapIcon(playerid, 2,-2766.1321,375.6091,6.3347, 56, 0xE6E6E6E6);//Prefeitura
	SetPlayerMapIcon(playerid, 3,2243.6750,-1669.8136,21.0313, 45, 0xE6E6E6E6);//Binco
	SetPlayerMapIcon(playerid, 4,1456.9010,-1137.6941,23.9617, 45, 0xE6E6E6E6);//ZIP
	SetPlayerMapIcon(playerid, 3,-2374.2454,910.2137,45.4453, 45, 0xE6E6E6E6);//Binco SF
	SetPlayerMapIcon(playerid, 5,1461.8320,-1010.3407,26.8438, 52, 0xE6E6E6E6);//Banco
	SetPlayerMapIcon(playerid, 6,1367.3584,-1287.9617,35.3292, 18, 0xE6E6E6E6);//Ammu Nation
	SetPlayerMapIcon(playerid, 8,334.0479,-1507.9438,36.0391, 30, 0xE6E6E6E6); //dp BOPE
	SetPlayerMapIcon(playerid, 8,-1753.9988,963.4703,24.8828, 30, 0xE6E6E6E6); //dp BOPE
	SetPlayerMapIcon(playerid, 9,918.9910,-1252.1665,16.2109, 30, 0xE6E6E6E6); //dp pc
	SetPlayerMapIcon(playerid, 10,1791.212036,-1164.631713,23.828100, 18 , 0xE6E6E6E6);//Loja de Armas 1
	SetPlayerMapIcon(playerid, 11,-2456.1401,503.9361,30.0781, 30 , 0xE6E6E6E6);//Dp PF
	SetPlayerMapIcon(playerid, 12,2104.2051,-1806.5345,13.5547, 29 , 0xE6E6E6E6);//PIZZARIA LS
    SetPlayerMapIcon(playerid, 13,550.7012,-1278.5721,17.2482, 19 , 0xE6E6E6E6);//Carros Aluguel 1
    SetPlayerMapIcon(playerid, 14,2158.1355,-1172.6049,23.8200, 19 , 0xE6E6E6E6);//Carros Aluguel 2
    SetPlayerMapIcon(playerid, 15,1219.2595,-1812.4048,16.5938, 19 , 0xE6E6E6E6); //aluguel de carros perto spawn
    SetPlayerMapIcon(playerid, 15,2128.7659,-1144.7380,24.3204, 19 , 0xE6E6E6E6); //Concessionaria
    SetPlayerMapIcon(playerid, 16,1330.193603,-984.074523,33.896598, 19 , 0xE6E6E6E6); //aluguel de carros 2
   	SetPlayerMapIcon(playerid, 17,-1968.559814,296.269592,35.171901, 19 , 0xE6E6E6E6); //wang cars
    SetPlayerMapIcon(playerid, 18,-1529.5208,476.5718,7.1875, 30 , 0xE6E6E6E6); // HQ Forcas Armadas
	SetPlayerMapIcon(playerid, 19,1703.2197,-1470.1509,13.5469, 51 , 0xE6E6E6E6); //produtos
	SetPlayerMapIcon(playerid, 21,1833.6124,-1842.4968,13.5781, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 22,1000.5861,-919.8832,42.3281, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 23,1928.6006,-1776.4480,13.5469, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 24,1315.5110,-898.9860,39.5781, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 25,1352.4357,-1759.0243,13.5078, 17 , 0xE6E6E6E6); //mercado
	SetPlayerMapIcon(playerid, 26,1837.0278,-1682.3890,13.3233, 48 , 0xE6E6E6E6); //alhambra
	SetPlayerMapIcon(playerid, 27,-2661.2688,638.2703,14.4531, 22 , 0xE6E6E6E6); //Medicos SF hospital
	SetPlayerMapIcon(playerid, 27,2027.6760,-1405.0399,16.7958, 22 , 0xE6E6E6E6); //hospital pista
	SetPlayerMapIcon(playerid, 29,1440.1481,-2229.0723,13.5469, 55 , 0xE6E6E6E6); //MECANICOS
	SetPlayerMapIcon(playerid, 30,1203.9453,-921.0353,42.6221, 10 , 0xE6E6E6E6); //BURGER SHOT ls
	SetPlayerMapIcon(playerid, 33,461.3484,-1500.9084,31.0592, 45, 0xE6E6E6E6);//VICTIM
	if(donoestacao == 0)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, 0xC0C0C0AA);
    }
    if(donoestacao == 1)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_LH);
    }
    if(donoestacao == 2)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_FamiliaShelby);
    }
    if(donoestacao == 3)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_PF);
    }
    if(donocasarao == 0)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, 0xC0C0C0AA);
    }
    if(donocasarao == 1)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_LH);
    }
    if(donocasarao == 2)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_FamiliaShelby);
    }
    if(donocasarao == 3)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_PF);
    }
	if(donoFavela == 0)
	{
		GangZoneShowForPlayer(playerid, GZFavela, 0xC0C0C0AA);
	}
	if(donoFavela == 1)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_GROVE_COLOR);
	}
	if(donoFavela == 2)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_BALLAS_COLOR);
	}
	if(donoFavela == 3)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_VAGOS_COLOR);
	}
	if(donoFavela == 4)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_TDT_color);
	}
	if(donoFavela == 5)
	{
		GangZoneShowForPlayer(playerid, GZFavela, COR_BOPE);
	}
	if(donoFavela == 6)
	{
		GangZoneShowForPlayer(playerid, GZFavela, GCOP_COLOR);
	}
	if(donoFavela == 7)
	{
		GangZoneShowForPlayer(playerid, GZFavela, 0xF6000000);
	}
	if(donoFavela == 8)
	{
		GangZoneShowForPlayer(playerid, GZFavela, COR_SONS);
	}
	if(donoFavela == 9)
	{
		GangZoneShowForPlayer(playerid, GZFavela, COR_PR);
	}
	if(donoFavela == 10)
	{
		GangZoneShowForPlayer(playerid, GZFavela, COR_ELEMENT);
	}
	if(donoConstrucao == 0)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, 0xC0C0C0AA);
	}
	if(donoConstrucao == 1)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, TEAM_GROVE_COLOR);
	}
	if(donoConstrucao == 2)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, COR_PCC);
	}
	if(donoConstrucao == 3)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, 0xF6000000);
	}
	if(donoConstrucao == 4)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, TEAM_BALLAS_COLOR);
	}
	if(donoConstrucao == 5)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, TEAM_VAGOS_COLOR);
	}
	if(donoConstrucao == 6)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, TEAM_TDT_color);
	}
	if(donoConstrucao == 7)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, GCOP_COLOR);
	}
	if(donoConstrucao == 8)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, COLORGZ_PF);
	}
	if(donoConstrucao == 9)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, COR_BOPE);
	}
	if(donoConstrucao == 10)
	{
		GangZoneShowForPlayer(playerid, GZConstrucao, COR_PR);
	}
	if(donoPraia == 0)
	{
		GangZoneShowForPlayer(playerid, GZPraia, 0xC0C0C0AA);
	}
	if(donoPraia == 1)
	{
		GangZoneShowForPlayer(playerid, GZPraia, TEAM_GROVE_COLOR);
	}
	if(donoPraia == 2)
	{
		GangZoneShowForPlayer(playerid, GZPraia, COR_PCC);
	}
	if(donoPraia == 3)
	{
		GangZoneShowForPlayer(playerid, GZPraia, 0xF6000000);
	}
	if(donoPraia == 4)
	{
		GangZoneShowForPlayer(playerid, GZPraia, TEAM_BALLAS_COLOR);
	}
	if(donoPraia == 5)
	{
		GangZoneShowForPlayer(playerid, GZPraia, TEAM_VAGOS_COLOR);
	}
	if(donoPraia == 6)
	{
		GangZoneShowForPlayer(playerid, GZPraia, TEAM_TDT_color);
	}
	if(donoPraia == 7)
	{
		GangZoneShowForPlayer(playerid, GZPraia, GCOP_COLOR);
	}
	if(donoPraia == 8)
	{
		GangZoneShowForPlayer(playerid, GZPraia, COLORGZ_PF);
	}
	if(donoPraia == 9)
	{
		GangZoneShowForPlayer(playerid, GZPraia, COR_BOPE);
	}
	if(donoPraia == 10)
	{
		GangZoneShowForPlayer(playerid, GZPraia, COR_PR);
	}
	if(donoPuteiro == 0)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, 0xC0C0C0AA);
	}
	if(donoPuteiro == 1)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, TEAM_GROVE_COLOR);
	}
	if(donoPuteiro == 2)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, COR_PCC);
	}
	if(donoPuteiro == 3)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, 0xF6000000);
	}
	if(donoPuteiro == 4)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, TEAM_BALLAS_COLOR);
	}
	if(donoPuteiro == 5)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, TEAM_VAGOS_COLOR);
	}
	if(donoPuteiro == 6)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, TEAM_TDT_color);
	}
	if(donoPuteiro == 7)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, GCOP_COLOR);
	}
	if(donoPuteiro == 8)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, COLORGZ_PF);
	}
	if(donoPuteiro == 9)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, COR_BOPE);
	}
	if(donoPuteiro == 10)
	{
		GangZoneShowForPlayer(playerid, GZPuteiro, COR_PR);
	}
	if(donoNavio == 0)
	{
		GangZoneShowForPlayer(playerid, GZNavio, 0xC0C0C0AA);
	}
	if(donoNavio == 1)
	{
		GangZoneShowForPlayer(playerid, GZNavio, TEAM_GROVE_COLOR);
	}
	if(donoNavio == 2)
	{
		GangZoneShowForPlayer(playerid, GZNavio, COR_PCC);
	}
	if(donoNavio == 3)
	{
		GangZoneShowForPlayer(playerid, GZNavio, 0xF6000000);
	}
	if(donoNavio == 4)
	{
		GangZoneShowForPlayer(playerid, GZNavio, TEAM_BALLAS_COLOR);
	}
	if(donoNavio == 5)
	{
		GangZoneShowForPlayer(playerid, GZNavio, TEAM_VAGOS_COLOR);
	}
	if(donoNavio == 6)
	{
		GangZoneShowForPlayer(playerid, GZNavio, TEAM_TDT_color);
	}
	if(donoNavio == 7)
	{
		GangZoneShowForPlayer(playerid, GZNavio, GCOP_COLOR);
	}
	if(donoNavio == 8)
	{
		GangZoneShowForPlayer(playerid, GZNavio, COLORGZ_PF);
	}
	if(donoNavio == 9)
	{
		GangZoneShowForPlayer(playerid, GZNavio, COR_BOPE);
	}
	if(donoNavio == 10)
	{
		GangZoneShowForPlayer(playerid, GZNavio, COR_PR);
	}
	if(donoskate == 0)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xC0C0C0AA);
	}
	if(donoskate == 1)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_GROVE_COLOR);
	}
	if(donoskate == 2)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_BALLAS_COLOR);
	}
	if(donoskate == 3)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_VAGOS_COLOR);
	}
	if(donoskate == 4)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_TDT_color);
	}
	if(donoskate == 5)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_BOPE);
	}
	if(donoskate == 6)
	{
		GangZoneShowForPlayer(playerid, GZSkate, GCOP_COLOR);
	}
	if(donoskate == 7)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xF6000000);
	}
	if(donoskate == 8)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_SONS);
	}
	if(donoskate == 9)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_PR);
	}
	if(donoskate == 10)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_ELEMENT);
	}

	if(donoaero == 0)
	{
		GangZoneShowForPlayer(playerid, GZAero, 0xC0C0C0AA);
	}
	if(donoaero == 1)
	{
		GangZoneShowForPlayer(playerid, GZAero, TEAM_GROVE_COLOR);
	}
	if(donoaero == 2)
	{
		GangZoneShowForPlayer(playerid, GZAero, TEAM_BALLAS_COLOR);
	}
	if(donoaero == 3)
	{
		GangZoneShowForPlayer(playerid, GZAero, TEAM_VAGOS_COLOR);
	}
	if(donoaero == 4)
	{
		GangZoneShowForPlayer(playerid, GZAero, TEAM_TDT_color);
	}
	if(donoaero == 5)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_BOPE);
	}
	if(donoaero == 6)
	{
		GangZoneShowForPlayer(playerid, GZAero, GCOP_COLOR);
	}
	if(donoaero == 7)
	{
		GangZoneShowForPlayer(playerid, GZAero, 0xF6000000);
	}
	if(donoaero == 8)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_SONS);
	}
	if(donoaero == 9)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_PR);
	}
	if(donoaero == 10)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_ELEMENT);
	}
	if(donopark == 0)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
	}
	if(donopark == 1)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_GROVE_COLOR);
	}
	if(donopark == 2)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_BALLAS_COLOR);
	}
	if(donopark == 3)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
	}
	if(donopark == 4)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_TDT_color);
	}
	if(donopark == 5)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_BOPE);
	}
	if(donopark == 6)
	{
		GangZoneShowForPlayer(playerid, GZPark, GCOP_COLOR);
	}
	if(donopark == 7)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xF6000000);
	}
	if(donopark == 8)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_SONS);
	}
	if(donopark == 9)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_PR);
	}
	if(donopark == 10)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_ELEMENT);
	}

	ClearChatbox(playerid, 100);
	if(fexist(string2))
	{
		gPlayerConta[playerid] = 1;
	}
	else
	{
		gPlayerConta[playerid] = 0;
	}
	velo[playerid][1] = CreatePlayerTextDraw(playerid,383.000000, 361.000000, "0 ~w~km/h");
	PlayerTextDrawAlignment(playerid,velo[playerid][1], 3);
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][1], 255);
	PlayerTextDrawFont(playerid,velo[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid,velo[playerid][1], 0.600000, 4.499998);
	PlayerTextDrawColor(playerid,velo[playerid][1], 12582911);
	PlayerTextDrawSetOutline(playerid,velo[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][1], 0);

	velo[playerid][2] = CreatePlayerTextDraw(playerid,255.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][2], 255);
	PlayerTextDrawFont(playerid,velo[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][2], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][2], 12582911);
	PlayerTextDrawSetOutline(playerid,velo[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][2], 0);

	velo[playerid][3] = CreatePlayerTextDraw(playerid,259.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][3], 255);
	PlayerTextDrawFont(playerid,velo[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][3], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][3], 12582911);
	PlayerTextDrawSetOutline(playerid,velo[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][3], 0);

	velo[playerid][4] = CreatePlayerTextDraw(playerid,263.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][4], 255);
	PlayerTextDrawFont(playerid,velo[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][4], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][4], 0);

	velo[playerid][5] = CreatePlayerTextDraw(playerid,267.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][5], 255);
	PlayerTextDrawFont(playerid,velo[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][5], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][5], 0);

	velo[playerid][6] = CreatePlayerTextDraw(playerid,271.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][6], 255);
	PlayerTextDrawFont(playerid,velo[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][6], 0.389999, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][6], 0);

	velo[playerid][7] = CreatePlayerTextDraw(playerid,271.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][7], 255);
	PlayerTextDrawFont(playerid,velo[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][7], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][7], 0);

	velo[playerid][8] = CreatePlayerTextDraw(playerid,275.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][8], 255);
	PlayerTextDrawFont(playerid,velo[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][8], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][8], 0);

	velo[playerid][9] = CreatePlayerTextDraw(playerid,279.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][9], 255);
	PlayerTextDrawFont(playerid,velo[playerid][9], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][9], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][9], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][9], 0);

	velo[playerid][10] = CreatePlayerTextDraw(playerid,283.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][10], 255);
	PlayerTextDrawFont(playerid,velo[playerid][10], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][10], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][10], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][10], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][10], 0);

	velo[playerid][11] = CreatePlayerTextDraw(playerid,287.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][11], 255);
	PlayerTextDrawFont(playerid,velo[playerid][11], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][11], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][11], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][11], 0);

	velo[playerid][12] = CreatePlayerTextDraw(playerid,291.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][12], 255);
	PlayerTextDrawFont(playerid,velo[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][12], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][12], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][12], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][12], 0);

	velo[playerid][13] = CreatePlayerTextDraw(playerid,295.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][13], 255);
	PlayerTextDrawFont(playerid,velo[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][13], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][13], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][13], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][13], 0);

	velo[playerid][14] = CreatePlayerTextDraw(playerid,299.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][14], 255);
	PlayerTextDrawFont(playerid,velo[playerid][14], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][14], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][14], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][14], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][14], 0);

	velo[playerid][15] = CreatePlayerTextDraw(playerid,303.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][15], 255);
	PlayerTextDrawFont(playerid,velo[playerid][15], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][15], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][15], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][15], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][15], 0);

	velo[playerid][16] = CreatePlayerTextDraw(playerid,307.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][16], 255);
	PlayerTextDrawFont(playerid,velo[playerid][16], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][16], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][16], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][16], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][16], 0);

	velo[playerid][17] = CreatePlayerTextDraw(playerid,311.000000, 413.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][17], 255);
	PlayerTextDrawFont(playerid,velo[playerid][17], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][17], 0.360000, 3.299998);
	PlayerTextDrawColor(playerid,velo[playerid][17], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][17], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][17], 0);

	velo[playerid][18] = CreatePlayerTextDraw(playerid,315.000000, 411.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][18], 255);
	PlayerTextDrawFont(playerid,velo[playerid][18], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][18], 0.360000, 3.599997);
	PlayerTextDrawColor(playerid,velo[playerid][18], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][18], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][18], 0);

	velo[playerid][19] = CreatePlayerTextDraw(playerid,319.000000, 408.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][19], 255);
	PlayerTextDrawFont(playerid,velo[playerid][19], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][19], 0.330000, 3.999998);
	PlayerTextDrawColor(playerid,velo[playerid][19], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][19], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][19], 0);

	velo[playerid][20] = CreatePlayerTextDraw(playerid,323.000000, 406.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][20], 255);
	PlayerTextDrawFont(playerid,velo[playerid][20], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][20], 0.360000, 4.299997);
	PlayerTextDrawColor(playerid,velo[playerid][20], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][20], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][20], 0);

	velo[playerid][21] = CreatePlayerTextDraw(playerid,327.000000, 403.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][21], 255);
	PlayerTextDrawFont(playerid,velo[playerid][21], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][21], 0.400000, 4.699996);
	PlayerTextDrawColor(playerid,velo[playerid][21], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][21], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][21], 0);

	velo[playerid][22] = CreatePlayerTextDraw(playerid,331.000000, 400.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][22], 255);
	PlayerTextDrawFont(playerid,velo[playerid][22], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][22], 0.459998, 5.099997);
	PlayerTextDrawColor(playerid,velo[playerid][22], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][22], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][22], 0);

	velo[playerid][23] = CreatePlayerTextDraw(playerid,335.000000, 396.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][23], 255);
	PlayerTextDrawFont(playerid,velo[playerid][23], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][23], 0.519999, 5.599997);
	PlayerTextDrawColor(playerid,velo[playerid][23], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][23], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][23], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][23], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][23], 0);

	velo[playerid][24] = CreatePlayerTextDraw(playerid,340.000000, 393.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][24], 255);
	PlayerTextDrawFont(playerid,velo[playerid][24], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][24], 0.599999, 5.999996);
	PlayerTextDrawColor(playerid,velo[playerid][24], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][24], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][24], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][24], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][24], 0);

	velo[playerid][25] = CreatePlayerTextDraw(playerid,345.000000, 393.000000, "l");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][25], 255);
	PlayerTextDrawFont(playerid,velo[playerid][25], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][25], 0.909999, 5.999996);
	PlayerTextDrawColor(playerid,velo[playerid][25], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][25], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][25], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][25], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][25], 0);

	velo[playerid][26] = CreatePlayerTextDraw(playerid,357.000000, 427.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][26], 255);
	PlayerTextDrawFont(playerid,velo[playerid][26], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][26], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][26], 12582911);
	PlayerTextDrawSetOutline(playerid,velo[playerid][26], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][26], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][26], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][26], 0);

	velo[playerid][27] = CreatePlayerTextDraw(playerid,357.000000, 424.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][27], 255);
	PlayerTextDrawFont(playerid,velo[playerid][27], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][27], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][27], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][27], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][27], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][27], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][27], 0);

	velo[playerid][28] = CreatePlayerTextDraw(playerid,357.000000, 421.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][28], 255);
	PlayerTextDrawFont(playerid,velo[playerid][28], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][28], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][28], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][28], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][28], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][28], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][28], 0);

	velo[playerid][29] = CreatePlayerTextDraw(playerid,357.000000, 418.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][29], 255);
	PlayerTextDrawFont(playerid,velo[playerid][29], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][29], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][29], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][29], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][29], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][29], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][29], 0);

	velo[playerid][30] = CreatePlayerTextDraw(playerid,357.000000, 415.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][30], 255);
	PlayerTextDrawFont(playerid,velo[playerid][30], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][30], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][30], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][30], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][30], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][30], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][30], 0);

	velo[playerid][31] = CreatePlayerTextDraw(playerid,357.000000, 412.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][31], 255);
	PlayerTextDrawFont(playerid,velo[playerid][31], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][31], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][31], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][31], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][31], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][31], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][31], 0);

	velo[playerid][32] = CreatePlayerTextDraw(playerid,357.000000, 409.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][32], 255);
	PlayerTextDrawFont(playerid,velo[playerid][32], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][32], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][32], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][32], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][32], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][32], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][32], 0);

	velo[playerid][33] = CreatePlayerTextDraw(playerid,357.000000, 406.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][33], 255);
	PlayerTextDrawFont(playerid,velo[playerid][33], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][33], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][33], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][33], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][33], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][33], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][33], 0);

	velo[playerid][34] = CreatePlayerTextDraw(playerid,357.000000, 403.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][34], 255);
	PlayerTextDrawFont(playerid,velo[playerid][34], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][34], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][34], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][34], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][34], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][34], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][34], 0);

	velo[playerid][35] = CreatePlayerTextDraw(playerid,357.000000, 400.000000, "-");
	PlayerTextDrawBackgroundColor(playerid,velo[playerid][35], 255);
	PlayerTextDrawFont(playerid,velo[playerid][35], 1);
	PlayerTextDrawLetterSize(playerid,velo[playerid][35], 2.140000, 1.700000);
	PlayerTextDrawColor(playerid,velo[playerid][35], -1);
	PlayerTextDrawSetOutline(playerid,velo[playerid][35], 0);
	PlayerTextDrawSetProportional(playerid,velo[playerid][35], 1);
	PlayerTextDrawSetShadow(playerid,velo[playerid][35], 0);
	PlayerTextDrawSetSelectable(playerid,velo[playerid][35], 0);
	
	//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= BARRINHA=-=-=-=-=-=-=-=-=-=-=-=
	
	RodaPe[playerid][0] = CreatePlayerTextDraw(playerid, 319.000000, 433.000000, "ID:_0_I_PING:_14_I_XP:_150/1840_I_LVL:_15_I_K:_64_I_D:_102");
	PlayerTextDrawFont(playerid, RodaPe[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid, RodaPe[playerid][0], 0.279166, 1.350000);
	PlayerTextDrawTextSize(playerid, RodaPe[playerid][0], 12.000000, 640.000000);
	PlayerTextDrawSetOutline(playerid, RodaPe[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, RodaPe[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, RodaPe[playerid][0], 2);
	PlayerTextDrawColor(playerid, RodaPe[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, RodaPe[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, RodaPe[playerid][0], 101);
	PlayerTextDrawUseBox(playerid, RodaPe[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, RodaPe[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, RodaPe[playerid][0], 0);
	
	Text_Disparo0 = TextDrawCreate(438.500000, 102.888809, "box");
	TextDrawLetterSize(Text_Disparo0, 0.000000, 11.549999);
	TextDrawTextSize(Text_Disparo0, 635.000000, 0.000000);
	TextDrawAlignment(Text_Disparo0, 1);
	TextDrawColor(Text_Disparo0, -1);
	TextDrawUseBox(Text_Disparo0, 1);
	TextDrawBoxColor(Text_Disparo0, 130);
	TextDrawSetShadow(Text_Disparo0, 0);
	TextDrawBackgroundColor(Text_Disparo0, 255);
	TextDrawFont(Text_Disparo0, 1);
	TextDrawSetProportional(Text_Disparo0, 1);

	Text_Disparo1 = TextDrawCreate(438.500000, 102.888908, "box");
	TextDrawLetterSize(Text_Disparo1, 0.000000, 2.450000);
	TextDrawTextSize(Text_Disparo1, 635.000000, 0.000000);
	TextDrawAlignment(Text_Disparo1, 1);
	TextDrawColor(Text_Disparo1, -1);
	TextDrawUseBox(Text_Disparo1, 1);
	TextDrawBoxColor(Text_Disparo1, 41215);
	TextDrawSetShadow(Text_Disparo1, 0);
	TextDrawBackgroundColor(Text_Disparo1, 255);
	TextDrawFont(Text_Disparo1, 1);
	TextDrawSetProportional(Text_Disparo1, 1);

	Text_Disparo2 = TextDrawCreate(484.000000, 103.511047, "COPOM");
	TextDrawLetterSize(Text_Disparo2, 0.558999, 2.203555);
	TextDrawAlignment(Text_Disparo2, 1);
	TextDrawColor(Text_Disparo2, 255);
	TextDrawSetShadow(Text_Disparo2, 0);
	TextDrawBackgroundColor(Text_Disparo2, 255);
	TextDrawFont(Text_Disparo2, 1);
	TextDrawSetProportional(Text_Disparo2, 1);

	Text_Disparo3 = TextDrawCreate(440.500000, 133.377716, "Disparo_registrado_no_GPS");
	TextDrawLetterSize(Text_Disparo3, 0.448999, 2.023112);
	TextDrawAlignment(Text_Disparo3, 1);
	TextDrawColor(Text_Disparo3, -1);
	TextDrawSetShadow(Text_Disparo3, 0);
	TextDrawBackgroundColor(Text_Disparo3, 255);
	TextDrawFont(Text_Disparo3, 1);
	TextDrawSetProportional(Text_Disparo3, 1);

	//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-LOGO=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-==-
	Textdraw0 = TextDrawCreate(284.377685, 39.333286, "box");
	TextDrawLetterSize(Textdraw0, 0.000000, 0.163904);
	TextDrawTextSize(Textdraw0, 280.000000, 0.000000);
	TextDrawAlignment(Textdraw0, 1);
	TextDrawColor(Textdraw0, -1);
	TextDrawUseBox(Textdraw0, 1);
	TextDrawBoxColor(Textdraw0, -1);
	TextDrawSetShadow(Textdraw0, 0);
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 1);
	TextDrawSetProportional(Textdraw0, 1);

	Textdraw1 = TextDrawCreate(288.577941, 34.033367, "box");
	TextDrawLetterSize(Textdraw1, 0.000000, 0.410902);
	TextDrawTextSize(Textdraw1, 284.200256, 0.000000);
	TextDrawAlignment(Textdraw1, 1);
	TextDrawColor(Textdraw1, -1);
	TextDrawUseBox(Textdraw1, 1);
	TextDrawBoxColor(Textdraw1, -1);
	TextDrawSetShadow(Textdraw1, 0);
	TextDrawBackgroundColor(Textdraw1, 255);
	TextDrawFont(Textdraw1, 1);
	TextDrawSetProportional(Textdraw1, 1);

	Textdraw2 = TextDrawCreate(288.383422, 42.183269, "box");
	TextDrawLetterSize(Textdraw2, 0.000000, 0.743898);
	TextDrawTextSize(Textdraw2, 284.000000, 0.000000);
	TextDrawAlignment(Textdraw2, 1);
	TextDrawColor(Textdraw2, -1);
	TextDrawUseBox(Textdraw2, 1);
	TextDrawBoxColor(Textdraw2, 65535);
	TextDrawSetShadow(Textdraw2, 0);
	TextDrawBackgroundColor(Textdraw2, 255);
	TextDrawFont(Textdraw2, 1);
	TextDrawSetProportional(Textdraw2, 1);

	Textdraw3 = TextDrawCreate(284.277679, 44.516548, "box");
	TextDrawLetterSize(Textdraw3, 0.000000, 0.803897);
	TextDrawTextSize(Textdraw3, 280.000000, 0.000000);
	TextDrawAlignment(Textdraw3, 1);
	TextDrawColor(Textdraw3, -1);
	TextDrawUseBox(Textdraw3, 1);
	TextDrawBoxColor(Textdraw3, 65535);
	TextDrawSetShadow(Textdraw3, 0);
	TextDrawBackgroundColor(Textdraw3, 255);
	TextDrawFont(Textdraw3, 1);
	TextDrawSetProportional(Textdraw3, 1);

	Textdraw4 = TextDrawCreate(289.531372, 15.583345, "P");
	TextDrawLetterSize(Textdraw4, 0.511977, 4.195833);
	TextDrawAlignment(Textdraw4, 1);
	TextDrawColor(Textdraw4, 65535);
	TextDrawSetShadow(Textdraw4, 0);
	TextDrawSetOutline(Textdraw4, 1);
	TextDrawBackgroundColor(Textdraw4, 255);
	TextDrawFont(Textdraw4, 1);
	TextDrawSetProportional(Textdraw4, 1);

	Textdraw5 = TextDrawCreate(299.301910, 29.533351, "lay");
	TextDrawLetterSize(Textdraw5, 0.457159, 1.728333);
	TextDrawAlignment(Textdraw5, 1);
	TextDrawColor(Textdraw5, -1);
	TextDrawSetShadow(Textdraw5, 0);
	TextDrawSetOutline(Textdraw5, 1);
	TextDrawBackgroundColor(Textdraw5, 255);
	TextDrawFont(Textdraw5, 1);
	TextDrawSetProportional(Textdraw5, 1);

	Textdraw6 = TextDrawCreate(319.636047, 44.399936, "RP");
	TextDrawLetterSize(Textdraw6, 0.272093, 1.074999);
	TextDrawAlignment(Textdraw6, 1);
	TextDrawColor(Textdraw6, -1);
	TextDrawSetShadow(Textdraw6, 0);
	TextDrawSetOutline(Textdraw6, 1);
	TextDrawBackgroundColor(Textdraw6, 255);
	TextDrawFont(Textdraw6, 1);
	TextDrawSetProportional(Textdraw6, 1);

	Textdraw7 = TextDrawCreate(287.894470, 53.216648, "box");
	TextDrawLetterSize(Textdraw7, 0.000000, -0.588579);
	TextDrawTextSize(Textdraw7, 295.000000, 0.000000);
	TextDrawAlignment(Textdraw7, 1);
	TextDrawColor(Textdraw7, -1);
	TextDrawUseBox(Textdraw7, 1);
	TextDrawBoxColor(Textdraw7, 65535);
	TextDrawSetShadow(Textdraw7, 0);
	TextDrawBackgroundColor(Textdraw7, 255);
	TextDrawFont(Textdraw7, 1);
	TextDrawSetProportional(Textdraw7, 1);

	Textdraw8 = TextDrawCreate(283.694213, 56.216602, "box");
	TextDrawLetterSize(Textdraw8, 0.000000, -0.588579);
	TextDrawTextSize(Textdraw8, 292.000000, 0.000000);
	TextDrawAlignment(Textdraw8, 1);
	TextDrawColor(Textdraw8, -1);
	TextDrawUseBox(Textdraw8, 1);
	TextDrawBoxColor(Textdraw8, 65535);
	TextDrawSetShadow(Textdraw8, 0);
	TextDrawBackgroundColor(Textdraw8, 255);
	TextDrawFont(Textdraw8, 1);
	TextDrawSetProportional(Textdraw8, 1);

	Textdraw9 = TextDrawCreate(299.689636, 44.399936, "Real");
	TextDrawLetterSize(Textdraw9, 0.272093, 1.074999);
	TextDrawAlignment(Textdraw9, 1);
	TextDrawColor(Textdraw9, -1);
	TextDrawSetShadow(Textdraw9, 0);
	TextDrawSetOutline(Textdraw9, 1);
	TextDrawBackgroundColor(Textdraw9, 255);
	TextDrawFont(Textdraw9, 1);
	TextDrawSetProportional(Textdraw9, 1);

	Textdraw10 = TextDrawCreate(301.786773, 31.916681, "box");
	TextDrawLetterSize(Textdraw10, 0.000000, -0.470875);
	TextDrawTextSize(Textdraw10, 309.700683, 0.000000);
	TextDrawAlignment(Textdraw10, 1);
	TextDrawColor(Textdraw10, -1);
	TextDrawUseBox(Textdraw10, 1);
	TextDrawBoxColor(Textdraw10, -1);
	TextDrawSetShadow(Textdraw10, 0);
	TextDrawBackgroundColor(Textdraw10, 255);
	TextDrawFont(Textdraw10, 1);
	TextDrawSetProportional(Textdraw10, 1);

	Textdraw11 = TextDrawCreate(313.096008, 32.416965, "box");
	TextDrawLetterSize(Textdraw11, 0.000000, -0.588579);
	TextDrawTextSize(Textdraw11, 322.552917, 0.000000);
	TextDrawAlignment(Textdraw11, 1);
	TextDrawColor(Textdraw11, -1);
	TextDrawUseBox(Textdraw11, 1);
	TextDrawBoxColor(Textdraw11, 65535);
	TextDrawSetShadow(Textdraw11, 0);
	TextDrawBackgroundColor(Textdraw11, 255);
	TextDrawFont(Textdraw11, 1);
	TextDrawSetProportional(Textdraw11, 1);

	Textdraw12 = TextDrawCreate(301.786773, 30.816677, "box");
	TextDrawLetterSize(Textdraw12, 0.000000, -0.611431);
	TextDrawTextSize(Textdraw12, 307.370361, 0.000000);
	TextDrawAlignment(Textdraw12, 1);
	TextDrawColor(Textdraw12, -1);
	TextDrawUseBox(Textdraw12, 1);
	TextDrawBoxColor(Textdraw12, -1);
	TextDrawSetShadow(Textdraw12, 0);
	TextDrawBackgroundColor(Textdraw12, 255);
	TextDrawFont(Textdraw12, 1);
	TextDrawSetProportional(Textdraw12, 1);

	Textdraw13 = TextDrawCreate(310.795867, 30.416965, "box");
	TextDrawLetterSize(Textdraw13, 0.000000, -0.588579);
	TextDrawTextSize(Textdraw13, 320.252777, 0.000000);
	TextDrawAlignment(Textdraw13, 1);
	TextDrawColor(Textdraw13, -1);
	TextDrawUseBox(Textdraw13, 1);
	TextDrawBoxColor(Textdraw13, 65535);
	TextDrawSetShadow(Textdraw13, 0);
	TextDrawBackgroundColor(Textdraw13, 255);
	TextDrawFont(Textdraw13, 1);
	TextDrawSetProportional(Textdraw13, 1);

	Textdraw14 = TextDrawCreate(301.786773, 28.916669, "box");
	TextDrawLetterSize(Textdraw14, 0.000000, -0.611431);
	TextDrawTextSize(Textdraw14, 305.518554, 0.000000);
	TextDrawAlignment(Textdraw14, 1);
	TextDrawColor(Textdraw14, -1);
	TextDrawUseBox(Textdraw14, 1);
	TextDrawBoxColor(Textdraw14, -1);
	TextDrawSetShadow(Textdraw14, 0);
	TextDrawBackgroundColor(Textdraw14, 255);
	TextDrawFont(Textdraw14, 1);
	TextDrawSetProportional(Textdraw14, 1);

	Textdraw15 = TextDrawCreate(309.495788, 28.816959, "box");
	TextDrawLetterSize(Textdraw15, 0.000000, -0.588579);
	TextDrawTextSize(Textdraw15, 318.952697, 0.000000);
	TextDrawAlignment(Textdraw15, 1);
	TextDrawColor(Textdraw15, -1);
	TextDrawUseBox(Textdraw15, 1);
	TextDrawBoxColor(Textdraw15, 65535);
	TextDrawSetShadow(Textdraw15, 0);
	TextDrawBackgroundColor(Textdraw15, 255);
	TextDrawFont(Textdraw15, 1);
	TextDrawSetProportional(Textdraw15, 1);

	Nomep[playerid] = CreatePlayerTextDraw(playerid, 404.319366, 182.416641, "Nome:");
	PlayerTextDrawLetterSize(playerid, Nomep[playerid], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, Nomep[playerid], 1);
	PlayerTextDrawColor(playerid, Nomep[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, Nomep[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Nomep[playerid], 255);
	PlayerTextDrawFont(playerid, Nomep[playerid], 1);
	PlayerTextDrawSetProportional(playerid, Nomep[playerid], 1);

	IDp[playerid] = CreatePlayerTextDraw(playerid, 404.319335, 213.333297, "ID:");
	PlayerTextDrawLetterSize(playerid, IDp[playerid], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, IDp[playerid], 1);
	PlayerTextDrawColor(playerid, IDp[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, IDp[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, IDp[playerid], 255);
	PlayerTextDrawFont(playerid, IDp[playerid], 1);
	PlayerTextDrawSetProportional(playerid, IDp[playerid], 1);

	Dinheirop[playerid] = CreatePlayerTextDraw(playerid, 404.319122, 247.166656, "Dinheiro:_R$");
	PlayerTextDrawLetterSize(playerid, Dinheirop[playerid], 0.400000, 1.600000);
	PlayerTextDrawAlignment(playerid, Dinheirop[playerid], 1);
	PlayerTextDrawColor(playerid, Dinheirop[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, Dinheirop[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Dinheirop[playerid], 255);
	PlayerTextDrawFont(playerid, Dinheirop[playerid], 1);
	PlayerTextDrawSetProportional(playerid, Dinheirop[playerid], 1);
	return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		strmid(PlayerInfo[playerid][pMarriedTo], "Ninguem", 0, strlen("Ninguem"), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return true;
}
BPR::ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return true;
}

BPR::ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return true;
}

BPR::ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return true;
}

BPR::ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return true;
}

BPR::Lotto(number)
{
	new JackpotFallen = 0;
	format(gstring, sizeof(gstring), "Loterica: Numero Sortado %d.", number);
    OOCNews(COLOR_WHITE, gstring);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
					format(gstring, sizeof(gstring), "Loterica: %s ganhou R$%d com seu bilhete.", PlayerName(i), Jackpot);
					OOCNews(COLOR_WHITE, gstring);
					format(gstring, sizeof(gstring), "* Voce ganhou R$%d com seu bilhete de loteria.", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, gstring);
					ConsumingMoney[i] = 1;
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_GREY, " Voce nao tem um bilhete.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	}
	return true;
}

//------------------------------------------------------------------------------------------------------
BPR::OnPlayerDisconnect(playerid, reason)
{
	if(timecont[playerid] == 1){
		timecont[playerid] = 0;
	}
	if(OnDuty[playerid] >= 1){
		OnDuty[playerid] = 0;
	}
    online--;
    if(InfoKelve[playerid][NumSenha] != 999)
    {
        InfoKelve[playerid][NumSenha] = 999;
        strmid(InfoKelve[playerid][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
        SenhasAtendimento --;
    }
    if(admtrampando[playerid] == 1){
		admtrampando[playerid] = 0;
	}
    DestroyVehicle(BikeSpawn[playerid]);
   	BikeSpawn[playerid] = 0;
   	
   	DestroyVehicle(CarroPlayer[playerid]);
   	CarroPlayer[playerid] = 0;
   	
   	DestroyVehicle(RetirouCarro1[playerid]);
	RetirouCarro1[playerid] = 0;
   	DestroyVehicle(RetirouCarro2[playerid]);
	RetirouCarro2[playerid] = 0;
	DestroyVehicle(RetirouCarro3[playerid]);
	RetirouCarro3[playerid] = 0;
	DestroyVehicle(RetirouCarro4[playerid]);
	RetirouCarro4[playerid] = 0;
    
    SendDeathMessage(playerid, -1, 201); 
	Delete3DTextLabel(nivellabel[playerid]);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid, 3);
	DisablePlayerCheckpoint(playerid);
	KillTimer(timer[playerid]);
	OnPlayerSave(playerid);
    new caller = Mobile[playerid];
    OnPlayerSave(playerid);
	Watching[playerid] = 0;
	Goto[playerid] = 0;
    if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "A ligacao caiu...");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(HireCar[playerid] > 0)
	{
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		SetVehicleToRespawn(HireCar[playerid]);
		HireCar[playerid] = 0;
	}
	if(pRoadblock[playerid] != 0)
	{
		RemoveRoadblock(playerid);
	}
    if(SpikeInfo[playerid][sCreated] != 0)
	{
		RemoveRoadPregos(playerid);
	}
	if(pRoadCones[playerid] != 0)
	{
		RemoveRoadCones(playerid);
	}
    switch(reason)
    {
        case 0: format(gstring, sizeof(gstring), "%s saiu do Servidor por erro de conexao ou crash.", PlayerName(playerid));
        case 1: format(gstring, sizeof(gstring), "%s saiu por vontade propria.", PlayerName(playerid));
        case 2: format(gstring, sizeof(gstring), "%s Saiu do servidor kickado ou banido.", PlayerName(playerid));
    }
    ProxDetector(100.0, playerid, gstring,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
	gActivePlayers[playerid]--;
	numplayers--;
	if(MudarSenhaAceito[playerid] == 1)
	{
		MudarSenhaAceito[playerid] = 0;
	}
	if(MudarNickAceito[playerid] == 1)
	{
		MudarNickAceito[playerid] = 0;
	}
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoFavela[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZFavela);
		GangZoneShowForAll(GZFavela, 0xFFFFFF96);
		GuerranaFavela = 0;
		ProvocoFavela[playerid] = 0;
		donoFavela = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraFavela);
	}
	if(ProvocoConstrucao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZConstrucao);
		GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
		GuerranaConstrucao = 0;
		ProvocoConstrucao[playerid] = 0;
		Dominando[playerid] = 0;
		donoConstrucao = 0;
		KillTimer(TempoGuerraConstrucao);
	}
	if(ProvocoPraia[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPraia);
		GangZoneShowForAll(GZPraia, 0xFFFFFF96);
		GuerranaPraia = 0;
		ProvocoPraia[playerid] = 0;
		Dominando[playerid] = 0;
		donoPraia = 0;
		KillTimer(TempoGuerraPraia);
	}
	if(ProvocoPuteiro[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPuteiro);
		GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
		GuerranaPuteiro = 0;
		ProvocoPuteiro[playerid] = 0;
		Dominando[playerid] = 0;
		donoPuteiro = 0;
		KillTimer(TempoGuerraPuteiro);
	}
	if(ProvocoNavio[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZNavio);
		GangZoneShowForAll(GZNavio, 0xFFFFFF96);
		GuerranaNavio = 0;
		ProvocoNavio[playerid] = 0;
		Dominando[playerid] = 0;
		donoNavio = 0;
		KillTimer(TempoGuerraNavio);
	}
	if(ProvocoSkate[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZSkate);
		GangZoneShowForAll(GZSkate, 0xFFFFFF96);
		GuerranoSkate = 0;
		ProvocoSkate[playerid] = 0;
		donoskate = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraSkate);
	}
	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZAero);
		GangZoneShowForAll(GZAero, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}
	if(ProvocoPark[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPark);
		GangZoneShowForAll(GZPark, 0xFFFFFF96);
		GuerranoPark = 0;
		ProvocoPark[playerid] = 0;
		donopark = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPark);
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(CopsrondaAccepted[i] < 999)
	        {
		        if(CopsrondaAccepted[i] == playerid)
		        {
		            CopsrondaAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Policial o player~n~~r~Deixou o jogo", 5000, 1);
		            CopsrondaCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MedicAccepted[i] < 999)
	        {
		        if(MedicAccepted[i] == playerid)
		        {
		            MedicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MedicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MechanicAccepted[i] < 999)
	        {
		        if(MechanicAccepted[i] == playerid)
		        {
		            MechanicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MechanicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(gstring, sizeof(gstring), "~w~Passageiro saiu~n~~g~ganhou R$%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Seu contrato saiu do servidor.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}

	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPHousekey] != gLastCar[playerid]-1)
		{
			VTrancado[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(IsACop(playerid))
	{
	    if(EmpregoDuty[playerid] == 2) { Copsronda -= 1; }
	}
	if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//1 daki pr baixo os 3
	{
	    if(EmpregoDuty[playerid] == 2) { Medics -= 1; }
	}
	else if(IsAMec(playerid))
	{
	    if(EmpregoDuty[playerid] == 2) { Mechanics -= 1; }
	}
	//CurrentMoney[playerid] = 0;
	OnPlayerSave(playerid);
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
	if((PlayerInfo[playerid][pAdmin] >= 1) && (PlayerInfo[playerid][pAdmin] <= 1338))
	{
    	new AdminName[MAX_PLAYER_NAME];
   	 	GetPlayerName(playerid, AdminName, sizeof(AdminName));
    	//format(string, sizeof(string), "~y~%s: ~r~OFF", AdminName);
    	for(new i=0; i<MAX_PLAYERS; i++) {
        //GameTextForPlayer(i, string , 5000, 1);
    }
}
}
BPR::SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
	    if(sincronizando[playerid] == 1)
		{
			return true;
  		}
		if(MedicBill[playerid] >= 2 && PlayerInfo[playerid][pJailed] == 0)
		{
		    if(PlayerInfo[playerid][pVIP] < 1)
			{
		    	format(gstring, 128, "Aviso: Seu Medico lhe cobrou R$%d, Tenha um otimo dia.", precomorte);
		    	SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		    	GivePlayerMoney(playerid, -precomorte);
			}
			SBizzInfo[12][sbTill] += precomorte;
		    ExtortionSBiz(12, precomorte);
		    ResetPlayerWeaponsEx(playerid);
			MedicBill[playerid] = 0;
			MedicTime[playerid] = 0;
			NeedMedicTime[playerid] = 0;
			PlayerInfo[playerid][pDeaths] += 1;
			CofreOrg[4][Dinheiro] += precomorte;
			if(WantedPoints[playerid] > 0)
			{
				new wanted = WantedPoints[playerid];
				new diecash = WantedPoints[playerid]*200;
		    	format(gstring, sizeof(gstring), "Voce perdeu R$%d por morrer com Nivel De Procura: %d.", diecash, wanted);
		    	SendClientMessage(playerid, COLOR_YELLOW, gstring);
		    	GivePlayerMoney(playerid, - diecash);
			}
		}
		SetPlayerHealth(playerid, 100.0);
  		spawnado[playerid] = 1;
	    MedicBill[playerid] ++;
	    SetPlayerToTeamColor(playerid);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gNews[playerid] = 1; gFam[playerid] = 1;			Controle(playerid, 0);
			RegistrationStep[playerid] = 1;
			Whitelist[playerid] = 1;
			ClearChatbox(playerid, 8);
			PlayerPlaySound(playerid, 1185, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid, 1225.2864,-1712.3047,13.3828);
			SetPlayerCameraLookAt(playerid, 1228.9581,-1712.3171,13.3828);
			SetPlayerPos(playerid, 1409.3607,-1713.2329,30.7422);
			SetPlayerInterior(playerid, 0);
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			SetPlayerVirtualWorld(playerid,playerid+1);
			ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"Etapa: Registro","Escolha seu sexo\nVoce e Homem ou Mulher","Homem","Mulher");
			PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
	    }
		new rand;
		new House = PlayerInfo[playerid][pPHousekey];
		if(PlayerInfo[playerid][pLuta] == 1)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
		if(PlayerInfo[playerid][pLuta] == 2)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		if(PlayerInfo[playerid][pLuta] == 3)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
		if(PlayerInfo[playerid][pLuta] == 4)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		if(PlayerInfo[playerid][pLuta] == 5)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 6);
		    SetPlayerVirtualWorld(playerid, 0);
			rand = random(sizeof(gPresoPmSpawns));
			SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 7)
		{
		    SetPlayerInterior(playerid, 6);
		    SetPlayerVirtualWorld(playerid, 1);
			rand = random(sizeof(gPresoprfSpawns));
			SetPlayerPos(playerid, gPresoprfSpawns[rand][0], gPresoprfSpawns[rand][1], gPresoprfSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoprfSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453);
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
		    SetPlayerInterior(playerid, 10);
		    SetPlayerVirtualWorld(playerid, 0);
			rand = random(sizeof(gPresoBOPESpawns));
			SetPlayerPos(playerid, gPresoBOPESpawns[rand][0], gPresoBOPESpawns[rand][1], gPresoBOPESpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gPresoBOPESpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 8)
		{
		    SetPlayerInterior(playerid, 10);
		    SetPlayerVirtualWorld(playerid, 1);
			rand = random(sizeof(gPresoBOPESFSpawns));
			SetPlayerPos(playerid, gPresoBOPESFSpawns[rand][0], gPresoBOPESFSpawns[rand][1], gPresoBOPESFSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gPresoBOPESFSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
  		if(PlayerInfo[playerid][pJailed] == 4)
		{
		    SetPlayerInterior(playerid, 3);
		    SetPlayerVirtualWorld(playerid, 0);
		    rand = random(sizeof(gPresoPcSpawns));
			SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 5)
		{
		    SetPlayerInterior(playerid, 5);
		    SetPlayerVirtualWorld(playerid, 1);
			rand = random(sizeof(gPresoPfSpawns));
			SetPlayerPos(playerid, gPresoPfSpawns[rand][0], gPresoPfSpawns[rand][1], gPresoPfSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPfSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 6)
		{
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(PlayerInfo[playerid][pJailed] == 7)
		{
		    SetPlayerInterior(playerid, 6);
			SetPlayerPos(playerid,264.4160,87.2363,1001.0391);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentenca incompleta,Voce voltou para Prisao");
			return true;
		}
		if(House !=255 && PlayerInfo[playerid][pSpawn] == 1)
		{
		    SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,HouseInfo[House][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[House][hWorld]);
			SetPlayerPos(playerid, HouseInfo[House][hExitx], HouseInfo[House][hExity],HouseInfo[House][hExitz]); // Warp the player
			PlayerInfo[playerid][pLocal] = House;
			PlayerInfo[playerid][pInt] = HouseInfo[House][hInt];
			HouseEntered[playerid] = House;
			return true;
		}
		if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)// Taxistas
	    {
			SetPlayerPos(playerid, 1794.5077,-1688.4634,13.4737);
			SetPlayerFacingAngle(playerid,182.7221);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
		}
		if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)// Taxistas SF
	    {
			SetPlayerPos(playerid, -2036.4542,382.4480,35.1723);
			SetPlayerFacingAngle(playerid,182.7221);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
		if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//Policia Militar
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1529.4567,-1671.7179,6.2188);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return true;
	    }
		if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Policia Rodoviaria Federal
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1606.6907,674.6328,-5.2422);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//BOPE
		{
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 286.3543,-1513.8691,24.9289);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return true;
	    }
		if (PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)//Forca Tatica
		{
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1701.4338,996.2132,17.9141);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return true;
	    }
		if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Forcas Armadas Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1528.0565,401.5436,7.1875);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//MEDICO Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2041.3466,-1409.0089,17.1641);
	     	SetPlayerFacingAngle(playerid,181.3526);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
 		if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//Medicos SF
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2661.2688,638.2703,14.4531);
	     	SetPlayerFacingAngle(playerid,2.9714);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)//Milicia
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2336.6111,-166.8267,35.5547);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Tropa da Turquia
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1671.1569,-2119.1445,13.5469);
		    SetPlayerFacingAngle(playerid,181.4693);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Peaky Blinders Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid,-2275.9473,2283.4209,4.9696);
			SetPlayerFacingAngle(playerid,84.5360);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1509.4912,-1849.6010,13.5469);
			SetPlayerFacingAngle(playerid,84.5360);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
		if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)//Prefeito SF
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid, -2764.3640,375.8125,6.3407);
		    SetPlayerArmour(playerid, 100);
			SetPlayerWantedLevel(playerid, 0);
			SetPlayerInterior(playerid, 0);
			PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
	    if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) //Hitmans Nascimento
	    {
			SetPlayerPos(playerid, 1102.2355,-296.8802,73.9922);
			SetPlayerFacingAngle(playerid,196.1387);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) //Los Santos News
	    {
			SetPlayerPos(playerid, 735.3049,-1350.8284,13.5000);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) //San Fierro News
	    {
			SetPlayerPos(playerid, -2274.3704,529.5526,35.0286);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) //Groove Nascimento
	    {
			SetPlayerPos(playerid, 2497.7405,-1683.3193,13.3680);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) //Bonde dos 40
	    {
			SetPlayerPos(playerid, -2484.1960,775.4149,35.1786);
			SetPlayerFacingAngle(playerid, 22.0731);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) //F.A.R.C Nascimento
	    {
			SetPlayerPos(playerid, 414.5280,2531.5229,19.1648);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //Policia Civil Nascimento
	    {
			SetPlayerPos(playerid, 914.6548,-1258.9126,15.6641);
			SetPlayerFacingAngle(playerid, 87.4229);
			SetPlayerVirtualWorld(playerid,0);
			//SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
 			SetPlayerWantedLevel(playerid, 0);
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) //Ballas
	    {
			SetPlayerPos(playerid, 1150.5472,-1180.6296,32.0275);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) //Tropa da Turquia
	    {
			SetPlayerPos(playerid, -2463.6145,131.9267,35.1719);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) //Vagos Nascimento
	    {
			SetPlayerPos(playerid, 2808.3562,-1176.4606,25.3687);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) //Familia do Norte
	    {
			SetPlayerPos(playerid, -1829.7848,105.8367,15.1172);
			SetPlayerFacingAngle(playerid, 97.9164);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //Mafia FamiliaShelby Nascimento
	    {
			SetPlayerPos(playerid, 679.7172,-1275.9229,13.5931);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	    if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) //Mafia Cosa Nostra Nascimento
	    {
			SetPlayerPos(playerid, 309.4009,-1161.1469,80.9141);
			SetPlayerFacingAngle(playerid,128.7879);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
  		if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//Policia Federal Nascimento
		{
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2452.3513,504.4339,30.0822);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
	    if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) //Comando Vermelho
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2151.3245,-1807.9917,13.5465);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
	    if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //Grota
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2524.4580,1216.2802,37.6552);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    return true;
		}
        if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //Sons of Anarchy Nascimento
	    {
	        SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 709.8550,-438.7958,16.3359);
			SetPlayerFacingAngle(playerid,174.7669);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
     	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) //Elements Nascimento
	    {
	        SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2793.4021,-1626.3422,10.9219);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,352.1631);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	   	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) //PCC Nascimento
	    {
	        SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1327.3099,-877.2250,39.5781);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,1.9401);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
	   	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) //Terceiro Comando Puro
	    {
	        SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -2356.0017,1007.9794,50.8984);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,270.7426);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
        if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) //Triads Nascimento
	    {
	        SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, -1681.8658,1351.7174,7.1722);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerFacingAngle(playerid,121.1955);
		    PlayerInfo[playerid][pInt] = 0;
	        return true;
	    }
		if ((gTeam[playerid]) == 1)
	    {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		if(PlayerInfo[playerid][pOrigem] == 1) 
	    {
  		
			SetPlayerPos(playerid,1685.5293,-2333.6230,13.5469);
			SetPlayerFacingAngle(playerid, 183.6818);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
		else if(PlayerInfo[playerid][pOrigem] == 2)
		{
			SetPlayerPos(playerid,-2720.3381,-317.2668,7.8438);
			SetPlayerFacingAngle(playerid, 44.7254);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return true;
		}
	}
	return true;
}
//------------------------------------------------------------------------------
BPR::OnPlayerDeath(playerid, killerid, reason)
{
    new string[256];
    antifakekill[playerid] ++;
    SetTimerEx("antifakekill2", 1000,false,"i",playerid);
    SendDeathMessage(killerid, playerid, reason);
	RemovePlayerAttachedObject(playerid,3);
	RemovePlayerAttachedObject(playerid, 3);
	Watching[playerid] = 0;
	Goto[playerid] = 0;
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	SetPlayerCriminal(killerid, 255, "Assasinato");
	PlayerInfo[killerid][pKills] += 1;
	if(TendoGuerra == 1 && IsPlayerInTerritorio(playerid) && IsPlayerInTerritorio(killerid))
	{
		if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
		{
	    	if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 6 || PlayerInfo[killerid][pLider] == 6)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 15 || PlayerInfo[killerid][pLider] == 15)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
		}
	}
//==================================[SUSPEITO MORTO]=========================//
	if(WantedPoints[playerid] >= 1)
	{
			new price = WantedPoints[playerid] * 100;
		    if(PlayerInfo[killerid][pMembro] == 1 || PlayerInfo[killerid][pLider] == 1)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 1;
				SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na Policia Militar, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
		    if(PlayerInfo[killerid][pMembro] == 34 || PlayerInfo[killerid][pLider] == 34)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 7;
				SetPlayerVirtualWorld(playerid, 1);
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na Policia Rodoviaria Federal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 2 || PlayerInfo[killerid][pLider] == 2)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 3;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na HQ BOPE, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 35 || PlayerInfo[killerid][pLider] == 35)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 8;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na HQ Forca Tatica, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 2;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos nas Forcas Armadas, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 16 || PlayerInfo[killerid][pLider] == 16)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 4;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na Policia Civil, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 11 || PlayerInfo[killerid][pLider] == 11)
		    {
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 5;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voce esta preso por %d Segundos na Policia Federal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
				PlayerInfo[playerid][pPecas] = 0;
				PlayerInfo[playerid][pDsujo] = 0;
			}
		//}
	}
//=================[NOVO ROUBAR]================
	if(ProvocoBanco[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto ao Banco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre do Banco ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
	}
	if(ProvocoCaixa[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoCaixa[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
	}
	if(ProvocoCaixaP[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoCaixa[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
	}
	if(ProvocoCaixV[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoCaixV[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
	}
	if(ProvocoLot[playerid] == 1)
	{
		SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Loterica)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Loterica ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
	}
	if(ProvocoLoja1[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Loja de Armas)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Loja de Armas 1 ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
	}
	if(ProvocoLoja2[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Ammu Nation{BFC0C2})=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Ammu Nation ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
	}
	if(ProvocoBinco[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Binco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Binco ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoBinco[playerid] = 0; roubando[playerid] = 0; roubobinco = 0; KillTimer(tempobinco); temporoubobinco = 0;
	}
	if(ProvocoZip[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Zip)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Zip ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoZip[playerid] = 0; roubando[playerid] = 0; roubozip = 0; KillTimer(tempozip); temporoubozip = 0;
	}
	if(ProvocoVictim[playerid] == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Victim)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
	    format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Victim ! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	ClearAnimations(playerid);
		ProvocoVictim[playerid] = 0; roubando[playerid] = 0; roubovictim = 0; KillTimer(tempovictim); temporoubobinco = 0;
	}
//=======================[FIM ROUBAR]========================
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoFavela[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZFavela);
		GangZoneShowForAll(GZFavela, 0xFFFFFF96);
		GuerranaFavela = 0;
		ProvocoFavela[playerid] = 0;
		donoFavela = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraFavela);
	}
	if(ProvocoConstrucao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZConstrucao);
		GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
		GuerranaConstrucao = 0;
		ProvocoConstrucao[playerid] = 0;
		Dominando[playerid] = 0;
		donoConstrucao = 0;
		KillTimer(TempoGuerraConstrucao);
	}
	if(ProvocoPraia[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPraia);
		GangZoneShowForAll(GZPraia, 0xFFFFFF96);
		GuerranaPraia = 0;
		ProvocoPraia[playerid] = 0;
		Dominando[playerid] = 0;
		donoPraia = 0;
		KillTimer(TempoGuerraPraia);
	}
	if(ProvocoPuteiro[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPuteiro);
		GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
		GuerranaPuteiro = 0;
		ProvocoPuteiro[playerid] = 0;
		Dominando[playerid] = 0;
		donoPuteiro = 0;
		KillTimer(TempoGuerraPuteiro);
	}
	if(ProvocoNavio[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZNavio);
		GangZoneShowForAll(GZNavio, 0xFFFFFF96);
		GuerranaNavio = 0;
		ProvocoNavio[playerid] = 0;
		Dominando[playerid] = 0;
		donoNavio = 0;
		KillTimer(TempoGuerraNavio);
	}
	if(ProvocoSkate[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZSkate);
		GangZoneShowForAll(GZSkate, 0xFFFFFF96);
		GuerranoSkate = 0;
		ProvocoSkate[playerid] = 0;
		donoskate = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraSkate);
	}
	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZAero);
		GangZoneShowForAll(GZAero, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}

	if(ProvocoPark[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPark);
		GangZoneShowForAll(GZPark, 0xFFFFFF96);
		GuerranoPark = 0;
		ProvocoPark[playerid] = 0;
		donopark = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPark);
	}

	if(GetPlayerState(killerid) == 2)
	{
        GetPlayerName(killerid,kickname,sizeof(kickname));
		format(gstring,sizeof(gstring),"ATENCAO: %s ID:[%d] cometeu DB em %s e sera kickado por um administrador !",kickname,killerid,PlayerName(playerid));
	    SendClientMessageToAll(COLOR_LIGHTRED,gstring);
	}

	if(reason == 36)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "AdmAviso: [%d]%s usou Bazuka =2= em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
 	if(reason == 26)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "AdmAviso: [%d]%s usou 12 Cano cerrado em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}

	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
	}
	new caller = Mobile[playerid];
	new name[MAX_PLAYER_NAME];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_WHITE, "A ligacao caiu! pupupupupu :D");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(PlayerInfo[playerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(GetPlayerOrg(killerid) == 8 || GetPlayerOrg(killerid) == 22)
		    {
		        if(GoChase[killerid] == playerid)
		        {
      		 		if(GetPlayerOrg(killerid) == 8) { CHitman++; }
         		 	if(GetPlayerOrg(killerid) == 22) { CTriad++; }
		            ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					GivePlayerMoneyEx(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"<< Assasino %s Completou o contrato em %s pelo preco de R$%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(GetPlayerOrg(killerid), COLOR_YELLOW, string);
					format(string,128,"<< O Matador %s matou voce por um contrato de R$%d, entao nao foi DM. >>",killer,PlayerInfo[playerid][pHeadValue]);
					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
					format(string,128,"<< O Matador %s matou o seu contrato (%s) pelo preco de: R$%d>>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendClientMessage(ColocouContrato, COLOR_DBLUE, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if(PlayerInfo[killerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 22)
		    {
		        if(GoChase[playerid] == killerid)
		        {
		            ConsumingMoney[playerid] = 1;
					format(gstring,128,"<< O Matador %s foi morto por %s, e perdeu o seu contrato >>",PlayerName(playerid),PlayerName(killerid));
					SendFamilyMessage(GetPlayerOrg(playerid), COLOR_YELLOW, gstring);
					PlayerInfo[killerid][pHeadValue] = 0;
					GotHit[killerid] = 0;
					GetChased[killerid] = 999;
					GoChase[playerid] = 999;
				}
			}
		}
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}
BPR::continuou(playerid){
	timecont[playerid] = 1;
	return 1;
}
/*BPR::morreu(playerid)
{
	//Sistema de Morte
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	SetPlayerPos(playerid,plocx,plocy+2, plocz);
	if(PlayerInfo[playerid][pInt] > 0)
	{
		SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
		PlayerInfo[playerid][pInt] = PlayerInfo[playerid][pInt];
		PlayerInfo[playerid][pLocal] = PlayerInfo[playerid][pLocal];
	}
	if(PlayerInfo[playerid][pInt] == 0)
	{
		SetPlayerInterior(playerid,0);
	}
	if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
	{
		SetPlayerInterior(playerid,1);
		PlayerInfo[playerid][pInt] = 1;
	}
	return 1;
}*/
BPR::OnPlayerSpawn(playerid)
{

	TextDrawShowForPlayer(playerid, Textdraw0);
    TextDrawShowForPlayer(playerid, Textdraw1);
    TextDrawShowForPlayer(playerid, Textdraw2);
    TextDrawShowForPlayer(playerid, Textdraw3);
    TextDrawShowForPlayer(playerid, Textdraw4);
    TextDrawShowForPlayer(playerid, Textdraw5);
	TextDrawShowForPlayer(playerid, Textdraw6);
	TextDrawShowForPlayer(playerid, Textdraw7);
	TextDrawShowForPlayer(playerid, Textdraw8);
	TextDrawShowForPlayer(playerid, Textdraw9);
	TextDrawShowForPlayer(playerid, Textdraw10);
	TextDrawShowForPlayer(playerid, Textdraw11);
	TextDrawShowForPlayer(playerid, Textdraw12);
	TextDrawShowForPlayer(playerid, Textdraw13);
	TextDrawShowForPlayer(playerid, Textdraw14);
	TextDrawShowForPlayer(playerid, Textdraw15);
    AntiDeAMX();
    RecentlyShot[playerid] = 0;
    SetTimerEx("UpdateRodape", 100, true, "i", playerid);
    if(sincronizando[playerid] == 1)
	{
		return true;
	}
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "ADMIN: Voce foi kickado pelo Sistema, Motivo: Spawn sem login");
    	SendClientMessage(playerid, COLOR_LIGHTRED,"Cleitin_Bitoneira[BOT] te kickou do servidor, e nao o contrarie novamente");
        Kick(playerid);
        return true;
 	}
	CheckInfoOrg(playerid);
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLider] < 1)
	{
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao foi aprovado pelo lider, agora e um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMembro] < 1)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao faz parte de uma familia, agora e um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pMembro] != 22)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao faz parte de uma agencia, e um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 2)
	{
		if(PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pMembro] != 11)
	    {
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao e mais um oficial, e um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
  		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
	    {
			MedicBill[playerid] = 0;
			if(PlayerInfo[playerid][pMembro] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMembro] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 7) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pMembro] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 8) { PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 11) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 12) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pMembro] == 13) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pMembro] == 14) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pMembro] == 15) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pMembro] == 16) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 17) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pMembro] == 18) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 19) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 20) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 21) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 23) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 22) { PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 24) { PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 26) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 27) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMembro] == 28) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 30) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pMembro] == 31) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 32) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 33) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 34) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 35) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			//SPAAWN LIDER
			else if(PlayerInfo[playerid][pLider] == 1) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 2) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 3) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 4) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 5) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 6) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 7) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 8) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 9) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 10) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 11) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 12) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 22; }
			else if(PlayerInfo[playerid][pLider] == 13) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pLider] == 14) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pLider] == 24) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pLider] == 15) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pLider] == 16) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 17) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pLider] == 18) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 25) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 19) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 20) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 21) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 22) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 23) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 27) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 28) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 29) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 30) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 31) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 32) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 33) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 34) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 35) { PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pSkin] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	else
	{
		if(PlayerInfo[playerid][pSex] == 1) { SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
		else { PlayerInfo[playerid][pSkin] = 40; SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	}
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	
	    //TextDraw RG
    Text_RG[0] = TextDrawCreate(328.418945, 118.833389, "Brasil_Play_Real");
	TextDrawLetterSize(Text_RG[0], 0.000000, 18.433380);
	TextDrawTextSize(Text_RG[0], 592.000000, 0.000000);
	TextDrawAlignment(Text_RG[0], 1);
	TextDrawColor(Text_RG[0], -1);
	TextDrawUseBox(Text_RG[0], 1);
	TextDrawBoxColor(Text_RG[0], 255);
	TextDrawSetShadow(Text_RG[0], 0);
	TextDrawBackgroundColor(Text_RG[0], 255);
	TextDrawFont(Text_RG[0], 1);
	TextDrawSetProportional(Text_RG[0], 1);

	Text_RG[1] = TextDrawCreate(335.915283, 187.083374, "box");
	TextDrawLetterSize(Text_RG[1], 0.000000, 10.000000);
	TextDrawTextSize(Text_RG[1], 392.000000, 0.000000);
	TextDrawAlignment(Text_RG[1], 1);
	TextDrawColor(Text_RG[1], -1);
	TextDrawUseBox(Text_RG[1], 1);
	TextDrawBoxColor(Text_RG[1], 126);
	TextDrawSetShadow(Text_RG[1], 0);
	TextDrawBackgroundColor(Text_RG[1], 255);
	TextDrawFont(Text_RG[1], 1);
	TextDrawSetProportional(Text_RG[1], 1);

	Text_RG[2] = TextDrawCreate(333.572387, 125.250007, "box");
	TextDrawLetterSize(Text_RG[2], 0.000000, 17.027816);
	TextDrawTextSize(Text_RG[2], 586.000000, 0.000000);
	TextDrawAlignment(Text_RG[2], 1);
	TextDrawColor(Text_RG[2], -1);
	TextDrawUseBox(Text_RG[2], 1);
	TextDrawBoxColor(Text_RG[2], -1);
	TextDrawSetShadow(Text_RG[2], 0);
	TextDrawBackgroundColor(Text_RG[2], 255);
	TextDrawFont(Text_RG[2], 1);
	TextDrawSetProportional(Text_RG[2], 1);

	Text_RG[3] = TextDrawCreate(376.676544, 150.333312, "box");
	TextDrawLetterSize(Text_RG[3], 0.000000, -0.729133);
	TextDrawTextSize(Text_RG[3], 532.000000, 0.000000);
	TextDrawAlignment(Text_RG[3], 1);
	TextDrawColor(Text_RG[3], -1);
	TextDrawUseBox(Text_RG[3], 1);
	TextDrawBoxColor(Text_RG[3], 255);
	TextDrawSetShadow(Text_RG[3], 0);
	TextDrawBackgroundColor(Text_RG[3], 255);
	TextDrawFont(Text_RG[3], 1);
	TextDrawSetProportional(Text_RG[3], 1);

	Text_RG[4] = TextDrawCreate(362.152465, 124.666641, "Brasil_Play_Real");
	TextDrawLetterSize(Text_RG[4], 0.496515, 2.323335);
	TextDrawAlignment(Text_RG[4], 1);
	TextDrawColor(Text_RG[4], 65535);
	TextDrawSetShadow(Text_RG[4], -2);
	TextDrawSetOutline(Text_RG[4], 2);
	TextDrawBackgroundColor(Text_RG[4], 255);
	TextDrawFont(Text_RG[4], 2);
	TextDrawSetProportional(Text_RG[4], 1);

	Text_RG[5] = TextDrawCreate(406.662048, 202.249938, "box");
	TextDrawLetterSize(Text_RG[5], 0.000000, -0.635430);
	TextDrawTextSize(Text_RG[5], 585.000000, 0.000000);
	TextDrawAlignment(Text_RG[5], 1);
	TextDrawColor(Text_RG[5], -1);
	TextDrawUseBox(Text_RG[5], 1);
	TextDrawBoxColor(Text_RG[5], 255);
	TextDrawSetShadow(Text_RG[5], 0);
	TextDrawBackgroundColor(Text_RG[5], 255);
	TextDrawFont(Text_RG[5], 1);
	TextDrawSetProportional(Text_RG[5], 1);

	Text_RG[6] = TextDrawCreate(407.130493, 232.583267, "box");
	TextDrawLetterSize(Text_RG[6], 0.000000, -0.635430);
	TextDrawTextSize(Text_RG[6], 588.000000, 0.000000);
	TextDrawAlignment(Text_RG[6], 1);
	TextDrawColor(Text_RG[6], -1);
	TextDrawUseBox(Text_RG[6], 1);
	TextDrawBoxColor(Text_RG[6], 255);
	TextDrawSetShadow(Text_RG[6], 0);
	TextDrawBackgroundColor(Text_RG[6], 255);
	TextDrawFont(Text_RG[6], 1);
	TextDrawSetProportional(Text_RG[6], 1);

	Text_RG[7] = TextDrawCreate(406.661895, 265.833312, "box");
	TextDrawLetterSize(Text_RG[7], 0.000000, -0.635430);
	TextDrawTextSize(Text_RG[7], 590.000000, 0.000000);
	TextDrawAlignment(Text_RG[7], 1);
	TextDrawColor(Text_RG[7], -1);
	TextDrawUseBox(Text_RG[7], 1);
	TextDrawBoxColor(Text_RG[7], 255);
	TextDrawSetShadow(Text_RG[7], 0);
	TextDrawBackgroundColor(Text_RG[7], 255);
	TextDrawFont(Text_RG[7], 1);
	TextDrawSetProportional(Text_RG[7], 1);
	return true;
}
forward PAdminsLog(string[]);
BPR::PAdminsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/admins.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward PHelpersLog(string[]);
BPR::PHelpersLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/helpers.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
BPR::PayLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

BPR::KickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

forward CoinsLog(string[]);
BPR::CoinsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Coins.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

forward WLLog(string[]);
BPR::WLLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Whitelist.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

forward CadeiaLog(string[]);
BPR::CadeiaLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Cadeia.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

forward SBanLog(string[]);
BPR::SBanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/s_ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
BPR::BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock fdplog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/fdp.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock SmsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/sms.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock NickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/nick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
BPR::VipsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/vips.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
BPR::OnPlayerEnterCheckpoint(playerid)
{
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
	{
	    MedicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0 && MechanicAccepted[playerid] < 999)
	{
	    MechanicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CopsrondaCallTime[playerid] > 0 && CopsrondaAccepted[playerid] < 999)
	{
	    CopsrondaAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		CopsrondaCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~Complete a Missao indo nos Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(TruckMission[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce obteve R$800 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 800);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 2)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce obteve R$800 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 800);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 3)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce obteve R$1000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 1000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	if(PlayerToPoint(8.0,playerid,1481.1926,-1764.2736,18.7958))//Prefeitura
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Prefeitura", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2305.6890,-16.0881,26.7496))//Banco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Binco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1546.2761,-1675.5995,13.5620))//DP
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Departamento de Policia", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1350.4865,-1753.2505,13.3582))//24-7
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Mercado de Commerce", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1790.5725,-1167.3705,23.8281))//Loja de Armas 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas 1", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1362.2240,-1279.7227,13.3828))//Ammu Nation
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Ammu Nation", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2244.7954,-1663.5021,15.4766))//Binco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Banco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2128.7659,-1144.7380,24.3204))//Aluguel de Carros
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,-1967.5713,293.7072,35.1719))//Wang Cars
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Wang Cars", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2003.4354,-1444.1321,13.5621))//Hospital
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Hospital", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1928.826904,-1776.405517,13.546895))//Posto idlewood
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Posto de Idlewood", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2232.5723,-1332.8412,23.9815))//Igreja
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Igreja", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1460.6941,-1142.9766,24.3906))//Zip
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Zip", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~p~|Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,454.1039,-1501.5459,30.8761))//victim
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~VICTIM", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,661.0214,-573.4525,16.3359))//Posto Dillimore
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Posto de Dillimore", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1003.0009,-941.7861,41.6509))//Posto temple
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Posto de Temple", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1637.6385,-1148.0294,23.90636))//Concessionaria
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Concessionaria", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2420.6565,-1738.9923,13.5469))//mercado ganton
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Mercado de Ganton", 5000, 3);
   	}
   	if(StreetCallTime[playerid] > 0 && StreetAccepted[playerid] < 999)
    {
		StreetAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao Local", 5000, 1);
		StreetCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
				GameTextForPlayer(playerid, "~w~Chegou em~n~~y~Casa", 5000, 1);
		    }
		}
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
		    switch(gPlayerTerminal[playerid])
		    {
		        case 1:
		        {
   	        		SetPlayerCheckpoint(playerid,1533.1049,-1610.5599,13.4766, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 2:
				{
                    SetPlayerCheckpoint(playerid,1736.9674,-1601.5439,13.5225, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 3:
				{
				    SetPlayerCheckpoint(playerid,1818.3682,-1694.8099,13.4831, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 4:
				{
			    	SetPlayerCheckpoint(playerid,1819.0150,-1872.5851,13.5023, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 5:
				{
				    SetPlayerCheckpoint(playerid,1987.3519,-2169.5242,13.4809, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 6:
				{
				    SetPlayerCheckpoint(playerid,2274.7886,-2274.3623,13.4837, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 7:
				{
				    SetPlayerCheckpoint(playerid,1996.1328,-2163.6931,13.4833, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid,1964.8201,-2077.6494,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 9:
				{
				    SetPlayerCheckpoint(playerid,1825.4634,-1906.8052,13.5044, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 10:
				{
				    SetPlayerCheckpoint(playerid,1824.8920,-1705.7137,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 11:
			    {
			    	SetPlayerCheckpoint(playerid,1526.6500,-1612.1188,13.4907, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
	    		case 12:
			    {
	    			SetPlayerCheckpoint(playerid,1373.5723,-1729.5554,13.4952, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					Controle(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 13:
				{
				    new conta = gPlayerTerminal[playerid]*50;
				    format(gstring, 128, "Voce completou a rota do onibus e ganhou R$%d, use /terminais para iniciar novamente a rota.", conta);
        		    SendClientMessage(playerid, COLOR_YELLOW, gstring);
					SendClientMessage(playerid, COLOR_YELLOW, "Use /sair para sair do onibus.");
				    BusrouteEnd(playerid);
				}
			}
			gPlayerTerminal[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			return true;
		}
	}

	if (gPlayerRota[playerid] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
		    switch(gPlayerRota[playerid])
		    {
		        case 1:
		        {
   	        		SetPlayerCheckpoint(playerid,1404.5613,-592.1517,78.7683, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 2:
				{
                    SetPlayerCheckpoint(playerid,1382.3900,-497.8009,50.0631, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 3:
				{
				    SetPlayerCheckpoint(playerid,1350.3578,-347.1281,3.0215, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 4:
				{
			    	SetPlayerCheckpoint(playerid,1173.0265,-131.8804,40.1622, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 5:
				{
				    SetPlayerCheckpoint(playerid,864.2411,-164.9010,16.5094, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 6:
				{
				    SetPlayerCheckpoint(playerid,484.8620,-390.6777,28.0808, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 7:
				{
				    SetPlayerCheckpoint(playerid,646.6921,-508.5487,16.3359, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Voce pegou as pecas!");
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid,615.6685,-728.3742,14.0404, 5.0);
					PlayerInfo[playerid][pPecas] += 5;
					DisablePlayerCheckpoint(playerid);
					SendClientMessage(playerid, COLOR_WHITE, "Rota concluida com sucesso!");
				}
			}
			gPlayerRota[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			return true;
		}
	}
	DisablePlayerCheckpoint(playerid);
	return true;
}
BPR::SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}
BPR::SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return true;
}

BPR::OnPlayerStateChange(playerid, newstate, oldstate)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(IsPlayerNPC(playerid)) return true;
    new oldnew;
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(gstring, sizeof(gstring), "* Esta fora de servico, ganhou R$%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(gstring, sizeof(gstring), "~w~Custo da corrida~n~~r~R$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, gstring, 5000, 1);
			    format(gstring, sizeof(gstring), "~w~Passageiro saiu do taxi~n~~g~ganhou R$%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
    			TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == 2 || newstate == 3)
    {
    if (oldnew == 0)
    	{
        format(gstring, sizeof(gstring), "~r~%s",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
        GameTextForPlayer(playerid, gstring, 6000, 1);
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI, BUSSES, BOTS
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TransportValue[i])
	                {
	                    format(gstring, sizeof(gstring), "* Voce precisa de R$%d para entrar.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						RemovePlayerFromVehicleEx(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o taxista.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Taxi.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o Motorista De Onibus.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Onibus.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
	                    }
						GivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new HouseCar = PlayerInfo[playerid][pPHousekey]+totalveiculos;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		new carid=GetVehicleModel(newcar);
		if(carid == 0 || carid == 0 || carid == 0) { }
		if(IsAPlane(newcar))
		{
	    	if(PlayerInfo[playerid][pFlyLic] < 1)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Voce nao tem licenca para Voar!");
		    	SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licencas Digite /gps Prefeitura!");
		    	SetPlayerCriminal(playerid,255,"Voando Sem Licenca");
			}
		}
       	else
		{
   	    	if(PlayerInfo[playerid][pCarLic] < 1)
			{
		    	if(PlayerDrunk[playerid] >= 1)
				{
					SetPlayerCriminal(playerid,255, "Dirigindo Bebado");
				}
				if(IsABikeCar(newcar))
				{
				}
				else
				{
               	}
			}
			else if(PlayerDrunk[playerid] >= 1)
			{
				SetPlayerCriminal(playerid,255, "Dirigindo Bebado");
			}
		}
		/*if((newcar >= 332 && newcar <=351))
         {
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Veiculo pode ser alugado Preco:R$%d\nDeseja Aluga-lo ?", SBizzInfo[14][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR, DIALOG_STYLE_MSGBOX, "Aluguel de Veiculos", Aluguelbox, "Sim", "Nao");
			}
		}
		if((newcar >= 352 && newcar <=363))
         {
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Veiculo pode ser alugado Preco:R$%d\nDeseja Aluga-lo ?", SBizzInfo[0][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR, DIALOG_STYLE_MSGBOX, "Aluguel de Veiculos", Aluguelbox, "Sim", "Nao");
			}
		}
		if((newcar >= 364 && newcar <=377))
         {
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Veiculo pode ser alugado Preco:R$%d\nDeseja Aluga-lo ?", SBizzInfo[1][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR, DIALOG_STYLE_MSGBOX, "Aluguel de Veiculos", Aluguelbox, "Sim", "Nao");
			}
		}
		if((newcar >= 640 && newcar <= 654))
         {
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Este Veiculo pode ser alugado Preco:R$%d\nDeseja Aluga-lo ?", SBizzInfo[10][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR, DIALOG_STYLE_MSGBOX, "Aluguel de Veiculos", Aluguelbox, "Sim", "Nao");
			}
		}
		if((newcar >= 378 && newcar <= 380) || (newcar >= 458 && newcar <= 465))
		{
            if (HireCar[playerid] != newcar)
			{
		        new Aluguelbox[256];
                format(Aluguelbox, sizeof(Aluguelbox),"Esta Aeronave pode ser alugada Preco:R$%d\nDeseja Aluga-la ?", SBizzInfo[2][sbEntranceCost]);
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,  DIALOG_ALUGAR2, DIALOG_STYLE_MSGBOX, "Aluguel de Aeronaves", Aluguelbox, "Sim", "Nao");
			}
		}*/
		if(IsABikeCar(newcar))
  		{
		}
		if(oldcar != 301)
		{
			if((HouseCar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != HouseCar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					VTrancado[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED && logouagora[playerid] ==0 )
	{
	    if(sincronizando[playerid] == 1)
		{
		return true;
		}
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
		    if(sincronizando[playerid] == 1)
			{
			return true;
			}
			SetPlayerSpawn(playerid);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return true;
}

BPR::HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //Ford-GT
		}
		case 70:
		{
			return 130000; //infernus
		}
		case 71:
		{
			return 100000; //Diablo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

BPR::CarCheck()//ATUAL
{
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(PlayerInfo[j][pDoenca]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 4.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 4 de Saude por DST - Va ate um hospital ou procure um medico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 8.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 8 de Saude por DST - Va ate um hospital ou procure um medico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 12 de Saude por DST - Va ate um hospital ou procure um medico para se curar");
			}
            else if(PlayerInfo[j][pDoenca]==4)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saude por Cirrose - Va ate um hospital ou procure um medico para se curar.");
			}
			else if(PlayerInfo[j][pDoenca]==5)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saude por Cancer de Pulmao - Va ate um hospital ou procure um medico para se curar.");
			}
			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(gstring, sizeof(gstring), "Voce esta devendo: R$%d Se nao tiver essa grana voce vai preso automaticamente!", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, gstring);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
 		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//forndowner = -1;
	}
	return true;
}

BPR::CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return true;
}

BPR::CarTow(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	LinkVehicleToInterior(carid, 0);
	return true;
}

BPR::CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return true;
}
BPR::OnPlayerExitVehicle(playerid, vehicleid)
{
 	if (GetPlayerState(playerid) == 1)
	{
		return true;
	}
	if(PlayerCuffed[playerid] == 2)
	{
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), GetPlayerVehicleSeat(playerid));
	}
	if(Sequestrado[playerid] == 1)
	{
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), GetPlayerVehicleSeat(playerid));
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	Controle(playerid, 1);
	return true;
}

BPR::OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
	{
	    SpawnPlayer(playerid);
		return true;
	}
	new string[128];
	new string3[128];
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
	    ClearChatbox(playerid, 10);
	    strmid(BanInfo[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
	    strmid(BanInfo[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
	    strmid(BanInfo[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
	    strmid(BanInfo[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
	    SendClientMessage(playerid, COLOR_WHITE, "|_______________[ Informacoes do Ban ]_______________|");
		format(string, sizeof(string), "Seu Nick:[%s] esta Banido do Brasil Play Real.", PlayerName(playerid));
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Motivo: %s", BanInfo[playerid][pMotivo]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Admin: %s", BanInfo[playerid][pAdmBan]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Dia: %s, Hora: %s", BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Para revisao de ban acesse nosso Discord: https://discord.gg/MSh42WBfnw");
		SendClientMessage(playerid, COLOR_YELLOW, "Atencao: Voce so sera desbanido caso for inocente !");
		new stri[64], tmp[20], tmp2[20];
		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		getdate(Ano, Mes, Dia);
		format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
		gettime(Hora, Minuto, Segundo);
		format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
		if(dini_Exists(stri))
		{
			new banstring[2000];
			format(banstring, sizeof(banstring), "{FFFFFF}Voce esta banido do servidor!\nMotivo: %s\nDia: %s\tHora: %s\n\nPara revisao do seu banimento va em nosso Discord! Lembrando, sera desbanido somente se for inocente!", BanInfo[playerid][pMotivo], BanInfo[playerid][pData], BanInfo[playerid][pHora]);
			ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aviso Brasil {0000FF}Play {FFFFFF}Real", banstring, "Entendido", "Cancelar");
			Kick(playerid);
		}
		else
		{
			dini_Create(stri);
			dini_Set(stri,"Motivo",BanInfo[playerid][pMotivo]);
			dini_Set(stri,"Admin",BanInfo[playerid][pAdmBan]);
			dini_Set(stri,"Data",BanInfo[playerid][pData]);
			dini_Set(stri,"Hora",BanInfo[playerid][pHora]);
			dini_Set(stri,"Nick",PlayerName(playerid));
		}
  		new banstring[2000];
		format(banstring, sizeof(banstring), "{FFFFFF}Voce esta banido do servidor!\nMotivo: %s\nDia: %s\tHora: %s\n\nPara revisao do seu banimento va em nosso Discord! Lembrando, sera desbanido somente se for inocente!", BanInfo[playerid][pMotivo], BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aviso Brasil {0000FF}Play {FFFFFF}Real", banstring, "Entendido", "Cancelar");
       	Kick(playerid);
	}
	format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
	if(fexist(string3))
	{
   	    ClearChatbox(playerid, 10);
   	    strmid(BanInfo[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
	    strmid(BanInfo[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
	    strmid(BanInfo[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
	    strmid(BanInfo[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
	    strmid(BanInfo[playerid][pNick], dini_Get(string3,"Nick"), 0, strlen(dini_Get(string3,"Nick")), 255);
   	    SendClientMessage(playerid, COLOR_WHITE, "|_______________[ Informacoes do Ban ]_______________|");
        format(string, sizeof(string), "Seu IP:[%s] esta Banido do Brasil Play Real.", ip);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Motivo: %s", BanInfo[playerid][pMotivo]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		if(strcmp(BanInfo[playerid][pNick],"", true ) == 0)
		{
			format(string, sizeof(string), "Admin: %s", BanInfo[playerid][pAdmBan]);
		}
		else
		{
			format(string, sizeof(string), "Admin: %s, Nick Fake: %s", BanInfo[playerid][pAdmBan], BanInfo[playerid][pNick]);
		}
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Dia: %s, Hora: %s", BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
    	SendClientMessage(playerid, COLOR_YELLOW, "Para revisao de ban acesse nosso Discord: https://discord.gg/MSh42WBfnw");
		SendClientMessage(playerid, COLOR_YELLOW, "Atencao: Voce so sera desbanido caso for inocente !");
		new banstring[2000];
		format(banstring, sizeof(banstring), "{FFFFFF}Voce esta banido do servidor!\nMotivo: %s\nDia: %s\tHora: %s\n\nPara revisao do seu banimento va em nosso Discord! Lembrando, sera desbanido somente se for inocente!", BanInfo[playerid][pMotivo], BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aviso Brasil {0000FF}Play {FFFFFF}Real", banstring, "Entendido", "Cancelar");
       	Kick(playerid);
	}
	if (Whitelist[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
 		new plname[MAX_PLAYER_NAME];
        PlayerPlaySound(playerid, 1076, 0.0, 0.0, 0.0);
		ClearChatbox(playerid, 10);
		GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring, 64, "Whitelist/%s.ini", plname);
        if(fexist(gstring))
		{
		    ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "Aviso {FFFFFF}Brasil {0000FF}Play {FFFFFF}Real", "O seu nome nao se encontra em nossa Whitelist, caso isso seja um erro entre em contato com algum Staff em nosso Discord!", "Entendido", "Cancelar");
		}
		else
		{
			ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "Aviso {FFFFFF}Brasil {0000FF}Play {FFFFFF}Real", "O seu nome nao se encontra em nossa Whitelist, caso isso seja um erro entre em contato com algum Staff em nosso Discord!", "Entendido", "Cancelar");
			SetTimerEx("KickarWL", 1000, 0, "i", playerid);
			return 1;
		}
	}
 	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
 		new plname[MAX_PLAYER_NAME];
        PlayerPlaySound(playerid, 1076, 0.0, 0.0, 0.0);
		ClearChatbox(playerid, 10);
		GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring, 64, "Contas/%s.ini", plname);
        if(fexist(gstring))
		{
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Fazendo Seu Login", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nConta registrada, para logar digite sua senha corretamente!", "Logar", "Esperar");
		}
		else
		{
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Fazendo Seu registro", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nPara se registrar digite uma senha!\nLembrando seu nome deve ser um nome RP!", "Registrar", "Cancelar");
		}
		SetPlayerCameraPos(playerid, 1225.2864,-1712.3047,13.3828);
		SetPlayerCameraLookAt(playerid, 1228.9581,-1712.3171,13.3828);
		SetPlayerPos(playerid, 1409.3607,-1713.2329,30.7422);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pSkin] = Peds[classid][0];
		SetPlayerTeamFromClass(playerid,classid);
	}
	if (ID[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
	    new plname[MAX_PLAYER_NAME];
        PlayerPlaySound(playerid, 1076, 0.0, 0.0, 0.0);
		ClearChatbox(playerid, 10);
		GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring, 64, "IDS/%d %s.ini", PlayerInfo[playerid][pID],plname);
        if(fexist(gstring))
		{
		}
		else
		{
	     	SetTimerEx("CriarID", 5000, 0, "i", playerid);
			return 1;
		}
	}
	else { SpawnPlayer(playerid); }
	return false;
}

BPR::SetupPlayerForClassSelection(playerid)
{
}

//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 11)
	{
		gTeam[playerid] = 11;
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid) && !IsACop(playerid))
	{
	    if(WantedPoints[playerid] < 6) WantedPoints[playerid] += 1;
	    PlayerInfo[playerid][pCrimes] += 1;
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
		    format(turner, sizeof(turner), "Cameras de Seguranca");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(gstring, sizeof(gstring), "Voce cometeu um crime ( %s ). Relato: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		format(gstring, sizeof(gstring), "Nivel de procurado: %d", WantedPoints[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, gstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "HQ - Todas as unidades: Relato: %s",turner);
					SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					format(gstring, sizeof(gstring), "HQ - Crime: %s, Suspeito: %s",reason,turned);
					SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					if(GetPlayerInterior(playerid) == 0)
					{
						format(gstring, sizeof(gstring), "Local: %s, Em Interior: Nao",location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
					else
					{
						format(gstring, sizeof(gstring), "Local: %s, Em Interior: Sim",location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
				}
			}
		}
	}
}
//---------------------------------------------------------

BPR::SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "190");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		//format(gstring, sizeof(gstring), "SMS: %s, Porque Voce %s, Voce Nao e Mais um Criminoso, Sender: MOLE (555)",turned,reason);
		RingTone[playerid] = 20;
        SetPlayerWantedLevel(playerid, 0);
		//SendClientMessage(playerid, COLOR_YELLOW, gstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "<< HQ: Todas As Unidades, Oficial %s Completou a sentenca >>",turner);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					format(gstring, sizeof(gstring), "HQ: %s Foi processado, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					SetPlayerWantedLevel(playerid, 0);
				}
			}
		}
	}
}

BPR::RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return true;
}

BPR::RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return true;
}

BPR::OtherTimer()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        //new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerConta[i] == 1 && gPlayerLogged[i] == 0)
				{

				}
			}

			if(GetPlayerSpeed(i) >= 350)
			{
				new str[128];
				new playerlog[128];
				new motivolog[128];
				motivolog = "Suspeita de Speed Hack!";
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Kick");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Algum Staff deu kick alguém in game!");
				DCC_SetEmbedDescription(embed, str);
				DCC_AddEmbedField(embed, "Staff:", "BPR_BOT", false);
				format(playerlog, sizeof playerlog, "`%s`", PlayerName(i));
				DCC_AddEmbedField(embed, "Player:", playerlog, false);
				DCC_AddEmbedField(embed, "Motivo:", "Suspeita de Speed hack!", false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");						DCC_SendChannelEmbedMessage(logKick, embed);
				
				format(gstring, 128, "[{0000FF}ANTI CHEAT{FFFFFF}] %s foi kickado do servidor por suspeita de hack!",PlayerName(i));
				SendClientMessageToAll(COLOR_WHITE,gstring);
				printf("%s", gstring);
				SetTimerEx("KickarWL", 1000, 0, "i", i);
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new House = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(House > 10000)
						{
      						new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && House == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && House == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && House == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
									LinkVehicleToInterior(tmpcar, 0);
								}
								else
								{
									SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetPlayerMoney(i) - oldcash;
								printf("Total %d = GetPlayerMoney(playerid) %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}
						if(House == 241)//City Hall
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,1480.9403,-1770.8481,18.7958);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(House == 241)
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,-2766.1321,375.6091,6.3347);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(House >= 99 && House != 10000)
						{
							SetPlayerPos(i, BizzInfo[House-99][bEntranceX], BizzInfo[House-99][bEntranceY],BizzInfo[House-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
						else if(House < 99 && House != 10000)
						{
							SetPlayerPos(i, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(gstring, sizeof(gstring), "* %s's Ligando.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(gstring, sizeof(gstring), "~w~Custo da ligacao~n~~r~R$%d",CallCost[i]);
				GivePlayerMoney(i, -CallCost[i]);
				SBizzInfo[8][sbTill] += CallCost[i];
				ExtortionSBiz(8, CallCost[i]);
				GameTextForPlayer(i, gstring, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(gstring, sizeof(gstring), "~r~%d ~w~: ~g~R$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, gstring, 15000, 6);
			}
			if (gPlayerTerminal[i] != 0)
			{
			    new vehicleid = GetPlayerVehicleID(i);
				if (vehicleid != 0)
				{
					if (!IsAOniCar(vehicleid))
					{
						if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
					}
				}
				else
				{
				    if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
				}
			}
		}
	}
	return true;
}

BPR::SetPlayerUnjail()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new level = PlayerInfo[i][pLevel];
			new vip = PlayerInfo[i][pVIP];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pSalario] += 3; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pSalario] += 4; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pSalario] += 5; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pSalario] += 6; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pSalario] += 7; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pSalario] += 8; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pSalario] += 9; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pSalario] += 10; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pSalario] += 11; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pSalario] += 12; }
			else if(level >= 21) { PlayerInfo[i][pSalario] += 15; }
            if(vip == 1) { PlayerInfo[i][pSalario] += 2; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 4; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantAdvogado[i] == 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0 && WantAdvogado[i] == 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
		    			SetPlayerVirtualWorld(i, 0);
						SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					if(PlayerInfo[i][pJailed] == 7)
					{
						SetPlayerInterior(i, 6);
						SetPlayerVirtualWorld(i, 1);
						SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 0);
						SetPlayerPos(i,338.3080,-1523.9946,33.2635);
					}
					else if(PlayerInfo[i][pJailed] == 8)
					{
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 1);
						SetPlayerPos(i,338.3080,-1523.9946,33.2635);
					}
					else if(PlayerInfo[i][pJailed] == 4)
					{
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 0);
						SetPlayerPos(i,926.5245,-1207.8342,17.0594);
					}
					else if(PlayerInfo[i][pJailed] == 5)
					{
						SetPlayerInterior(i, 0);
						SetPlayerVirtualWorld(i, 1);
						SetPlayerPos(i,926.5245,-1207.8342,17.0594);
					}
					else if(PlayerInfo[i][pJailed] == 6)
					{
						SpawnPlayer(i);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
						SpawnPlayer(i);
					}
					PlayerInfo[i][pJailed] = 0;
					PlayerInfo[i][pAjustado] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Voce pagou sua divida com a sociedade.");
					GameTextForPlayer(i, "~g~Livre~n~~w~Nao cometa mais crimes", 5000, 1);
					SendClientMessage(i, COLOR_YELLOW2,"Livre, chame um taxi para-lhe buscar.");
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if(GetPlayerMoney(i) - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetPlayerMoney(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        CurrentMoney[i] = GetPlayerMoney(i);
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetPlayerMoney(i);
		    }
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
      		if(WantAdvogado[i] >= 1)
			{
			    CallAdvogado[i] = 111;
			    if(WantAdvogado[i] == 1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voce quer um Advogado? (Digite sim ou nao)");
				}
				WantAdvogado[i] ++;
				if(WantAdvogado[i] == 8)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voce quer um Advogado? (Digite sim ou nao)");
				}
	            if(WantAdvogado[i] == 15)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voce quer um Advogado? (Digite sim ou nao)");
				}
				if(WantAdvogado[i] == 20)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Nao Ha Advogados Online, sua sentenca foi iniciada.");
				    WantAdvogado[i] = 0;
        			CallAdvogado[i] = 0;
				}
			}

			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(StreetCallTime[i] > 0)
			{
			    if(StreetAccepted[i] < 999)
				{
				    if(IsPlayerConnected(StreetAccepted[i]))
					{
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(StreetAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        PlayerDrunk[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MedicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
            if(CopsrondaCallTime[i] > 0)
			{
			    if(CopsrondaAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(CopsrondaAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(CopsrondaAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MechanicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerAtingido[i] == 1)
			{
			    if(PlayerAtingidoTime[i] <= 0)
			    {
			        PlayerAtingido[i] = 0;
			        PlayerAtingidoTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerAtingidoTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        Controle(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
		}
	}
}
BPR::CheckGas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	       		new VehicleModel = GetVehicleModel(vehicle);
	       		if(VehicleModel == 509 || VehicleModel == 481 || VehicleModel == 510)
	       		{
	       		    return true;
	       		}
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    if(Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0); }
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
                    PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
		        	GameTextForPlayer(i,"Sem combustivel~n~Use /sair Para sair do veiculo",1500,3);
				}
			}
    	}
	}
	return true;
}

BPR::Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[256];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
		    FillUp = FillUp * 4;
			if(Refueling[i] == 1)
		    {
				if(GetPlayerMoney(i) >= FillUp+4)
				{
					Gas[VID] = 100;
				    format(string,sizeof(string),"* Voce reabasteceu seu veiculo, por: R$%d.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
				    Controle(i, 1);
					GivePlayerMoney(i, - FillUp);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
				}
			   	else
			   	{
			   	    Controle(i, 1);
			   	    format(string,sizeof(string),"* Voce nao tem dinheiro suficiente para encher o tanque, custo: $%d.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
			   	}
		 	}
		}
	}
	return true;
}
//==============================================================================
BPR::SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerWeaponsEx(playerid);
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
    		if (PlayerInfo[playerid][pGun1] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
			    PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
			}
			if (PlayerInfo[playerid][pGun2] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
			    PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
			}
			if (PlayerInfo[playerid][pGun3] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
			    PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
			}
			if (PlayerInfo[playerid][pGun4] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
			    PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
			}
			if (PlayerInfo[playerid][pGun5] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
			    PlayerInfo[playerid][pGun5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
			}
			if (PlayerInfo[playerid][pGun6] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
			    PlayerInfo[playerid][pGun6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
			}
			if (PlayerInfo[playerid][pGun7] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
			    PlayerInfo[playerid][pGun7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
			}
			if (PlayerInfo[playerid][pGun8] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
			    PlayerInfo[playerid][pGun8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
			}
			if (PlayerInfo[playerid][pGun9] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
			    PlayerInfo[playerid][pGun9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
			}
			if (PlayerInfo[playerid][pGun10] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
			    PlayerInfo[playerid][pGun10] = 0; PlayerInfo[playerid][pAmmo2] = 10;
			}
			if (PlayerInfo[playerid][pGun11] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
			    PlayerInfo[playerid][pGun2] = 11; PlayerInfo[playerid][pAmmo2] = 11;
			}
			if (PlayerInfo[playerid][pGun12] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
			    PlayerInfo[playerid][pGun2] = 12; PlayerInfo[playerid][pAmmo2] = 12;
			}
		}
	}
}
//==============================================================================
BPR::PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorcao: %s",SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}
//==============================================================================
BPR::PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorcao: %s",BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}
//==============================================================================
BPR::ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Masculino"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Feminino"; }
		new otext[20];
		if(PlayerInfo[targetid][pOrigem] == 1) { otext = "Los Santos"; }
		else if(PlayerInfo[targetid][pOrigem] == 2) { otext = "San Fierro"; }
		new dtext[20];
		if(PlayerInfo[targetid][pDoenca] == 1) { dtext = "Mongolismo"; }
		else if(PlayerInfo[targetid][pDoenca] == 2) { dtext = "AIDS"; }
		else if(PlayerInfo[targetid][pDoenca] == 3) { dtext = "Herpes Genital"; }
		else if(PlayerInfo[targetid][pDoenca] == 4) { dtext = "Cirrose"; }
		else if(PlayerInfo[targetid][pDoenca] == 5) { dtext = "Cancer de Pulmao"; }
		else { dtext = "Nenhuma"; }
	    new rtext[64];
		if(PlayerInfo[targetid][pMembro] == 1 || PlayerInfo[targetid][pLider] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Cadete"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Capitao"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Capitao"; }
	        else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Comandante"; }
			else { rtext = "Soldado"; }
		}
	    if(PlayerInfo[targetid][pMembro] == 34 || PlayerInfo[targetid][pLider] == 34)//PD Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Cadete"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Capitao"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Capitao"; }
	        else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Comandante"; }
			else { rtext = "Soldado"; }
		}
		if(PlayerInfo[targetid][pMembro] == 2 || PlayerInfo[targetid][pLider] == 2)//BOPE Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Tenente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Capitao"; }
			else { rtext = "Recruta"; }
		}
		if(PlayerInfo[targetid][pMembro] == 35 || PlayerInfo[targetid][pLider] == 35)//Forca TaticaRanks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Tenente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Capitao"; }
			else { rtext = "Recruta"; }
		}
		if(PlayerInfo[targetid][pMembro] == 3 || PlayerInfo[targetid][pLider] == 3)//Forcas Armadas Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Almirante do Ar"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Capitao de Mar e Guerra"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "General"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Marechal"; }
			else { rtext = "Soldado"; }
		}
		if(PlayerInfo[targetid][pMembro] == 4 || PlayerInfo[targetid][pLider] == 4)//Medicos ls Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Estagiario"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Enfermeiro "; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Paramedico"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Clinico-Geral"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Medico"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Medico"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Doutor"; }
			else { rtext = "Estagiario"; }
		}
		if(PlayerInfo[targetid][pMembro] == 27 || PlayerInfo[targetid][pLider] == 27)//Medicos sf Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Estagiario"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Enfermeiro "; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Paramedico"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Clinico-Geral"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Medico"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Medico"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Doutor"; }
			else { rtext = "Estagiario"; }
		}
		if(PlayerInfo[targetid][pMembro] == 6 || PlayerInfo[targetid][pLider] == 6)//Peaky Blinders Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombadeador"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Sub-Chefe"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefao"; }
			else { rtext = "Homem-Bomba"; }
		}
		if(PlayerInfo[targetid][pMembro] == 7 || PlayerInfo[targetid][pLider] == 7)//Prefeito Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Motorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Seguranca"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Acessor"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Vice-Prefeito"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Vice-Prefeito"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Prefeito"; }
			else { rtext = "Motorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 30 || PlayerInfo[targetid][pLider] == 30)//Prefeito sf Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Motorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Seguranca"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Acessor"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Vice-Prefeito"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Vice-Prefeito"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Prefeito"; }
			else { rtext = "Motorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 8 || PlayerInfo[targetid][pLider] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Assassino Frio"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = ""; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Vice-Diretor"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		if(PlayerInfo[targetid][pMembro] == 9 || PlayerInfo[targetid][pLider] == 9)//Reporteres ls Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Humorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Reporter Local"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Reporter Nacional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Editor Local"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Fotografo Paparazzi"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Fotografo Paparazzi"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor de Producao"; }
			else { rtext = "Humorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 32 || PlayerInfo[targetid][pLider] == 32)//Reporteres sf Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Humorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Reporter Local"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Reporter Nacional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Editor Local"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Fotografo Paparazzi"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Fotografo Paparazzi"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor de Producao"; }
			else { rtext = "Humorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 10 || PlayerInfo[targetid][pLider] == 10)//Taxi ls Company Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Taxista Amador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Taxista Semi-Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Taxista Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Supervisor"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Supervisor Mestre"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Supervisor Mestre"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Taxista Amador"; }
		}
		if(PlayerInfo[targetid][pMembro] == 33 || PlayerInfo[targetid][pLider] == 33)//Taxi sf Company Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Taxista Amador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Taxista Semi-Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Taxista Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Supervisor"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Supervisor Mestre"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Supervisor Mestre"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Taxista Amador"; }
		}
		if(PlayerInfo[targetid][pMembro] == 14 || PlayerInfo[targetid][pLider] == 14 || PlayerInfo[targetid][pMembro] == 24 || PlayerInfo[targetid][pLider] == 24 || PlayerInfo[targetid][pMembro] == 17
		|| PlayerInfo[targetid][pLider] == 17 || PlayerInfo[targetid][pMembro] == 18 || PlayerInfo[targetid][pLider] == 18
		|| PlayerInfo[targetid][pMembro] == 19 || PlayerInfo[targetid][pLider] == 19 || PlayerInfo[targetid][pMembro] == 20
		|| PlayerInfo[targetid][pLider] == 20 || PlayerInfo[targetid][pMembro] == 21 || PlayerInfo[targetid][pLider] == 21
		|| PlayerInfo[targetid][pLider] == 23 || PlayerInfo[targetid][pMembro] == 23 || PlayerInfo[targetid][pLider] == 25
		|| PlayerInfo[targetid][pMembro] == 25 || PlayerInfo[targetid][pLider] == 26 || PlayerInfo[targetid][pMembro] == 26
		|| PlayerInfo[targetid][pLider] == 28 || PlayerInfo[targetid][pMembro] == 28 || PlayerInfo[targetid][pLider] == 29 || PlayerInfo[targetid][pMembro] == 29)//GANG'S Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Fogueteiro"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Capanga"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Sub-Chefe"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefao"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 15 || PlayerInfo[targetid][pLider] == 15)//AlQaeda Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombardeador"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Sub-Chefe"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefao"; }
			else { rtext = "Homem-Bomba"; }
		}
		if(PlayerInfo[targetid][pMembro] == 16 || PlayerInfo[targetid][pLider] == 16)//Policia Civil Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Agente Do G.O.E"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente Do G.E.R"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Atirador de Elite"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Perito Criminal"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Perito Criminal"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Lider"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 13 || PlayerInfo[targetid][pLider] == 13
		|| PlayerInfo[targetid][pMembro] == 12 || PlayerInfo[targetid][pLider] == 12)//Mafias Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Associado"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Braco-Direito"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Sub-Lider"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Sub-Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Lider"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 11 || PlayerInfo[targetid][pLider] == 11)//PF Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Espiao"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Atirador"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Capitao"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Sub Lider"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Sub Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Lider"; }
			else { rtext = "Agente"; }
		}
		if(PlayerInfo[targetid][pMembro] == 22 || PlayerInfo[targetid][pLider] == 22)//Triads Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Assassino Frio"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 444) { rtext = "Vice-Diretor"; }
			else if(PlayerInfo[targetid][pCargo] == 555) { rtext = "Vice-Diretor"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		else
		{
		    rtext = "Nenhum";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pEmprego] == 1) { jtext = "Detetive"; }
        else if(PlayerInfo[targetid][pEmprego] == 2) { jtext = "Advogado"; }
        else if(PlayerInfo[targetid][pEmprego] == 3) { jtext = "Prof. do Sexo"; }
        else if(PlayerInfo[targetid][pEmprego] == 4) { jtext = "Vendedor De Drogas"; }
        else if(PlayerInfo[targetid][pEmprego] == 5) { jtext = "Mecanico"; }
        else if(PlayerInfo[targetid][pEmprego] == 6) { jtext = "Seguranca"; }
        else if(PlayerInfo[targetid][pEmprego] == 7) { jtext = "Vendedor De Armas"; }
        else if(PlayerInfo[targetid][pEmprego] == 9) { jtext = "Motorista de Onibus"; }
        else if(PlayerInfo[targetid][pEmprego] == 10) { jtext = "Caminhoneiro"; }
        else { jtext = "Nenhum"; }
		new drank[20];
		if(PlayerInfo[targetid][pVIP] == 0) { drank = "Gratis"; }
		else if(PlayerInfo[targetid][pVIP] == 1) { drank = "Vip"; }
		else if(PlayerInfo[targetid][pVIP] == 2) { drank = "Socio"; }
		new thcargo[20];
		if(PlayerInfo[targetid][pCargo] == 6) { thcargo = "Lider"; }
		else if(PlayerInfo[targetid][pCargo] == 444) { thcargo = "Sub-Lider"; }
		else if(PlayerInfo[targetid][pCargo] == 555) { thcargo = "Sub-Lider"; }
		else if(PlayerInfo[targetid][pCargo] == 4) { thcargo = "4"; }
		else if(PlayerInfo[targetid][pCargo] == 3) { thcargo = "3"; }
		else if(PlayerInfo[targetid][pCargo] == 2) { thcargo = "2"; }
		else if(PlayerInfo[targetid][pCargo] == 1) { thcargo = "1"; }
		else { thcargo = "Nenhum"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new ptime = PlayerInfo[targetid][pConnectTime];
		new deaths = PlayerInfo[targetid][pDeaths];
		new crimes = PlayerInfo[targetid][pCrimes];
		new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
		new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
		new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
		new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
		new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
		new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
		new materiaisBPR = PlayerInfo[targetid][pMats];
		new Pecas = PlayerInfo[targetid][pPecas];
		new smats = PlayerInfo[targetid][psMats];
		new IDPLAYER = PlayerInfo[targetid][pID];
		new level = PlayerInfo[targetid][pLevel];
  		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Conta = PlayerInfo[targetid][pConta];
		new Dsujo = PlayerInfo[targetid][pDsujo];
		new Coins = PlayerInfo[targetid][pCoins];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expquantidade = 4;
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new Housekey = PlayerInfo[targetid][pPHousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new gold = PlayerInfo[targetid][pGold];
		new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);

		new DialogRG[2000];

		format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Nome: %s CPF: %d\n\n",DialogRG, name, IDPLAYER);
        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Nivel:[%d] Sexo:[%s] Vida:[%.1f] Dinheiro:[R$%d] Banco:[R$%d] Celular:[%d]\n",DialogRG,level,atext,shealth+50, cash, Conta, pnumber);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Coins: [%d] Conta:[%s]  Horas Jogadas:[%d] Profissao Secundaria:[%s] Origem:[%s]\n",DialogRG, Coins,drank,ptime,jtext,otext);
 
        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Crimes Cometidos:[%d] Matou:[%d] Morreu:[%d] Proximo Nivel:[R$%d] Gold [%d]\n",DialogRG, crimes,kills,deaths,costlevel, gold);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Respeito:[%d/%d] Doencas:[%s] Materiais:[%d] Safe Materiais:[%d] Casado Com:[%s]\n",DialogRG,exp,expquantidade,dtext,materiaisBPR, smats, married);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Organizacao:[%s] Cargo:[%s] Maconha:[%d] Cocaina:[%d] Crack:[%d]\n",DialogRG,NomeORG(targetid),rtext,Drogas,Drogas2,Drogas3);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Safe Maconha:[%d] Safe Cocaina:[%d] Safe Crack:[%d] Chave De Casa [%d] Dinheiro Sujo [%d]\n",DialogRG,SafeDrogas,SafeDrogas2,SafeDrogas3, Housekey, Dsujo);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Chave Da Empresa [%d] Pecas[%d]\n",DialogRG,bizkey,Pecas);

		ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Documentos", DialogRG, "Fechar", "");
	}
}

forward ShowMochila(playerid, targetid);
BPR::ShowMochila(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
		new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
		new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
		new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
		new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
		new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
		new materiaisBPR = PlayerInfo[targetid][pMats];
		new Pecas = PlayerInfo[targetid][pPecas];
		new smats = PlayerInfo[targetid][psMats];
		new IDPLAYER = PlayerInfo[targetid][pID];
		new Dsujo = PlayerInfo[targetid][pDsujo];
		new Coins = PlayerInfo[targetid][pCoins];
		new Housekey = PlayerInfo[targetid][pPHousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new gold = PlayerInfo[targetid][pGold];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);

		new DialogRG[2000];

		format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Nome: %s CPF: %d\n\n",DialogRG, name, IDPLAYER);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Dinheiro:[R$%d] Coins:[%d] Gold [%d]\n",DialogRG,cash, Coins, gold);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Materiais:[%d] Safe Materiais:[%d]\n",DialogRG,materiaisBPR, smats);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Maconha:[%d] Cocaina:[%d] Crack:[%d]\n",DialogRG,Drogas,Drogas2,Drogas3);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Safe Maconha:[%d] Safe Cocaina:[%d] Safe Crack:[%d] Chave De Casa [%d] Dinheiro Sujo [%d]\n",DialogRG,SafeDrogas,SafeDrogas2,SafeDrogas3, Housekey, Dsujo);

        format(DialogRG, sizeof(DialogRG), "%s\n{FFFFFF}Chave Da Empresa [%d] Pecas[%d]\n",DialogRG,bizkey,Pecas);

		ShowPlayerDialog(playerid, DIALOG_INFO, DIALOG_STYLE_MSGBOX, "Mochila", DialogRG, "Fechar", "");
	}
}







BPR::SetPlayerToTeamColor(playerid)
{
    if(admtrampando[playerid] == 1 && admhide[playerid] != 1)
	{
		SetPlayerColor(playerid, COR_ADMIN);
	}
 	else if(helpertrampando[playerid] == 1 && helperhide[playerid] != 1)
	{
		SetPlayerColor(playerid, COR_HELPER);
	}
	else if (PlayerInfo[playerid][pTeam] == 3)//Civis
	{
       SetPlayerColor(playerid, COLOR_WHITE);
 	}
	else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//PM LS
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//PRF
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//BOPE
	{
       SetPlayerColor(playerid, COR_BOPE);
	}
	else if (PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)//BOPE
	{
       SetPlayerColor(playerid, COR_BOPE);
	}
	else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Forcas Armadas
	{
       SetPlayerColor(playerid, COR_EXE);
	}
	else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos LS
	{
       SetPlayerColor(playerid, COR_MEDE);
	}
	else if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//Medicos SF
	{
       SetPlayerColor(playerid, COR_MEDE);
	}
	else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Tropa da Turquia
	{
       SetPlayerColor(playerid, Cor_TDT);
	}
	else if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)//Milicia
	{
       SetPlayerColor(playerid, Cor_TDT);
	}
	else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Peaky Blinders
	{
       SetPlayerColor(playerid, COR_GI);
	}
    else if (PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Governo LS
	{
       SetPlayerColor(playerid, COR_PRE);
	}
    else if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)//Governo SF
	{
       SetPlayerColor(playerid, COR_PRE);
	}
	else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)//Hitmans
	{
       SetPlayerColor(playerid, COR_HITMAN);
	}
	else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter LS
	{
       SetPlayerColor(playerid, COR_REP);
    }
	else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Reporter SF
	{
       SetPlayerColor(playerid, COR_REP);
    }
    else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxistas
	{
       SetPlayerColor(playerid, COR_TAXI);
    }
    else if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//Taxistas SF
	{
       SetPlayerColor(playerid, COR_TAXI);
    }
	else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//PF
	{
       SetPlayerColor(playerid, COR_PF);
	}
	else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Mafia Cosa Nostra
	{
       SetPlayerColor(playerid, COR_COSA);
	}
	else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafia FamiliaShelby
	{
       SetPlayerColor(playerid, COR_YAK);
	}
	else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)//Grove LS
	{
       SetPlayerColor(playerid, COR_GRO);
	}
	else if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//Grove SF
	{
       SetPlayerColor(playerid, COR_GRO);
	}
	else if (PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//F.A.R.C
	{
       SetPlayerColor(playerid, COR_FARC);
	}
	else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//Policia Civil
	{
       SetPlayerColor(playerid, COR_PC);
	}
	else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)//Ballas
	{
       SetPlayerColor(playerid, COR_BALLAS);
	}
	else if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)//Tropa da Turquia
	{
       SetPlayerColor(playerid, COR_BALLAS);
	}
	else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)//Vagos
	{
       SetPlayerColor(playerid, COR_VAGOS);
	}
	else if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Familia do Norte
	{
       SetPlayerColor(playerid, COR_VAGOS);
	}
	else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)//Comando Vermelho
	{
       SetPlayerColor(playerid, 0xF6000000);
	}
	else if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//Grota
	{
       SetPlayerColor(playerid, 0xF6000000);
	}
	else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)//Sons of Anarchy
	{
       SetPlayerColor(playerid, COR_SONS);
	}
	else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Elements
	{
       SetPlayerColor(playerid, COR_ELEMENT);
	}
	else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Primeiro Comando Capital
	{
       SetPlayerColor(playerid, COR_PCC);
	}
	else if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//Terceiro Comando Puro
	{
       SetPlayerColor(playerid, COR_PCC);
	}
	else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Triads
	{
       SetPlayerColor(playerid, COR_TDR);
	}
	else //caso de algum bug
	{
       SetPlayerColor(playerid, COLOR_WHITE);
	}
}
//---------------------------------------------------------

BPR::GameModeInitExitFunc()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_Nenhum;
			GameTextForPlayer(i, "~g~B~y~U~b~L~n~~p~Reiniciando, Aguarde... ", 3000, 3);
			gPlayerLogged[i] = 0;
		}
	}
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(TempoAdministrador);
	OnPropUpdate();
	SaveCars();
	SetTimer("GameModeExitFunc", 4000, 0);
	return true;
}
BPR::GameModeExitFunc()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{

	}
	KillTimer(TempoRecarga);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(TempoAdministrador);
	KillTimer(TempoAn);
	KillTimer(TempoCorrida);
	KillTimer(TempoSequestrar);
	KillTimer(TempoAmarrar);
	KillTimer(TempoServicoTaxi);
	KillTimer(TempoServicoOnibus);
	KillTimer(TempoServicoPolicia);
	KillTimer(TempoServicoMedico);
	KillTimer(TempoServicoMecanico);
	KillTimer(TempoMecanico);
	KillTimer(TempoMedico);
	KillTimer(TempoCorridaOni);
	KillTimer(TempoAnGov);
	KillTimer(TempoAnReporter);
	KillTimer(TempoSincronizar);
	KillTimer(Tempohbomba);
	KillTimer(Tempocbomba);
	KillTimer(TempoJetpack);
	OnPropUpdate();
	SaveCars();
	GameModeExit();
	return true;
}
BPR::LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[128];
	new File: file = fopen("Configuracoes/stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		fclose(file);
	}
	return true;
}

BPR::SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d", Jackpot,Tax,TaxValue);
	new File: file2 = fopen("Configuracoes/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return true;
}

BPR::LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Casas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmorrx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmorry] = strval(arrCoords[10]);
			HouseInfo[idx][hArmorrz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hWorld] = strval(arrCoords[29]);
			idx++;
		}
		printf("Casas do Servidor Carregadas.",idx);
		fclose(file);
	}
	return true;
}

BPR::LoadBizz()
{
	new arrCoords[17][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Empresas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			idx++;
		}
		printf("Empresas do Servidor Carregadas.",idx);
		fclose(file);
	}
	return true;
}


BPR::LoadSBizz()
{
	new arrCoords[12][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/MiniEmpresas.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			idx++;
		}
		printf("Empresas Especiais do Servidor Carregadas.",idx);
		fclose(file);
	}
	return true;
}
//==============================================================================
BPR::OnGameModeInit()
{
	SetTimer("PayDay", 1800000 , true);
	SetTimer("BotStatus", 1000, true);
	ShowPlayerMarkers(0);
    SetHora();
  	CHitman = 0;
    CTriad = 0;
	SetGameModeText(SVVERSAO);
 	SendRconCommand(MPNOME);
 	SendRconCommand(SINOME);
	SendRconCommand(SVNOME);
	ShowPlayerMarkers(0);
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	UsePlayerPedAnims();
	EnableStuntBonusForAll(0);
	//-----------------------------------------------------------------------------------------------------------------------------------------------------------------<|
	LoadOrgs();
   	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadStuff();
	LoadVip();
	LoadCar();
    LoadCofreOrg();
    LoadTrunk();
    LoadAdm();
    LoadHelper();
   	if(!fexist("Eleicoes.ini"))
	{
		dini_Create("Eleicoes.ini");
		dini_IntSet("Eleicoes.ini","TotalCandidatos",0);
		dini_Set("Eleicoes.ini","Candidato1","Vazio");
		dini_Set("Eleicoes.ini","Candidato2","Vazio");
		dini_Set("Eleicoes.ini","Candidato3","Vazio");
		dini_IntSet("Eleicoes.ini","Votos1",0);
		dini_IntSet("Eleicoes.ini","Votos2",0);
		dini_IntSet("Eleicoes.ini","Votos3",0);
		dini_IntSet("Eleicoes.ini","PassadoUmDia",0);
		dini_Set("Eleicoes.ini","Partido1","Vazio");
		dini_Set("Eleicoes.ini","Partido2","Vazio");
		dini_Set("Eleicoes.ini","Partido3","Vazio");
	}
    CandidatosRegistrados = dini_Int("Eleicoes.ini","TotalCandidatos");
	format(Candidato1, sizeof(Candidato1), dini_Get("Eleicoes.ini","Candidato1"));
	format(Candidato2, sizeof(Candidato2), dini_Get("Eleicoes.ini","Candidato2"));
	format(Candidato3, sizeof(Candidato3), dini_Get("Eleicoes.ini","Candidato3"));
	Votos[0] = dini_Int("Eleicoes.ini","Votos1");
	Votos[1] = dini_Int("Eleicoes.ini","Votos2");
	Votos[2] = dini_Int("Eleicoes.ini","Votos3");
	PassadoUmDia = dini_Int("Eleicoes.ini","PassadoUmDia");
	format(Partido1, sizeof(Partido1), dini_Get("Eleicoes.ini","Partido1"));
	format(Partido2, sizeof(Partido2), dini_Get("Eleicoes.ini","Partido2"));
	format(Partido3, sizeof(Partido3), dini_Get("Eleicoes.ini","Partido3"));
    //-----------------------------------------------------------------------------------------------------------------------------------------------------------------<|
   	SetTimer("SendMensagens",90000,1);
   	SetTimer("jArrastar", 1000, true);
    weaponhacktimer = SetTimer("CheckHack",1000,1);
    SetTimer("verping",5000,1);
    unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 40000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1);
	checkgastimer = SetTimer("CheckGas", RunortTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunortTime, 1);
    //SetTimer("Reloginho",1000,true);
    SetTimer("velocimetro", 1000, 1);
    //-----------------------------------------------------------------------------------------------------------------------------------------------------------------<|
    GZFavela = GangZoneCreate(2117.333, -1069.962, 2261.841, -959.4252);
    GZConstrucao = GangZoneCreate(-2140.7778, 130.1505, -2024.3932, 310.5679);
    GZNavio = GangZoneCreate(-1679.5659, 77.0877, -1468.2355, 193.9810);
    GZPraia = GangZoneCreate(-2976.2480, 390.3303, -2804.0000, 662.8046);
    GZPuteiro = GangZoneCreate(-2728.6143, 1312.8477, -2574.5186, 1494.8794);
 	GZSkate = GangZoneCreate(1861.9410,-1450.6462,1976.5867,-1351.4069);
 	GZEstacao = GangZoneCreate(1687.613, -1958.204, 1813.106, -1859.51);
 	GZCasarao = GangZoneCreate(1098.173, -2084.531, 1299.723, -2005.577);
    GZAero = GangZoneCreate(1368.174, -2380.612, 1592.542, -2218.755);
    GZPark = GangZoneCreate(1847.332, -1267.349, 2060.291, -1137.074);
    
    //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|
	//Create3DTextLabel("Mudar Cidade\nAperte Enter para acessar", COLOR_YELLOW, 360.4069,169.9995,1008.3893, 60, 0);
	//Create3DTextLabel("Mudar Cidade\nAperte Enter para acessar", COLOR_YELLOW, 360.4069,169.9995,1008.3893, 60, 1);
	Create3DTextLabel("Mudar Sexo\nUse /mudarsexo", COLOR_YELLOW, 359.0656,187.9718,1008.3828, 60, 0);
	Create3DTextLabel("Mudar Sexo\nUse /mudarsexo", COLOR_YELLOW, 359.0656,187.9718,1008.3828, 60, 1);
	Create3DTextLabel("Mudar Sexo\nUse /mudarsexo", COLOR_YELLOW, 359.0656,187.9718,1008.3828, 60, 0);
	Create3DTextLabel("Mudar Sexo\nUse /mudarsexo", COLOR_YELLOW, 359.0656,187.9718,1008.3828, 60, 1);
	Create3DTextLabel("PARA SUBIR '/elevadortaxi'", COLOR_YELLOW, 1785.2893,-1704.9707,13.5217, 60, 0);
	Create3DTextLabel("PARA DESCER '/elevadortaxi'", COLOR_YELLOW, 1794.7760,-1707.7697,27.6250, 60, 0);
	Create3DTextLabel("PARA SUBIR '/elevadorfa'", COLOR_YELLOW, -1563.8582,400.6823,7.1875, 60, 0);
	Create3DTextLabel("PARA DESCER '/elevadorfa'", COLOR_YELLOW, -1538.3254,397.8237,28.1746, 60, 0);
	Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,229.6736,164.7480,1003.0234,10.0,0);//Policia Federal
    Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,255.1924,77.5279,1003.6406,10.0,0);//Policia Militar
    Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,918.8886,-1257.7316,15.6641,10.0,0);//Policia Civil
    Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,302.6426,-1530.1610,24.9219,10.0,1);//BOPE
    Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,-1553.5636,410.0868,7.3742,10.0,0);//Forcas Armadas
    Create3DTextLabel("Para Bater Cartao\nAperte F",0x93833EF6,240.6302,112.5663,1003.2188,10.0,1);//Forca Tatica
    
    Create3DTextLabel("Para Bater Cartao Rocam\nAperte F",0x93833EF6,923.1970,-1191.6493,16.9766, 60, 0);//Policia Civil
    Create3DTextLabel("Para Bater Cartao Rocam\nAperte F",0x93833EF6,1565.0715,-1634.6024,13.5551, 60, 0);//Policia Militar
    Create3DTextLabel("Para Bater Cartao Rocam\nAperte F",0x93833EF6,311.8593,-1511.3285,24.9219, 60, 0);//BOPE
    Create3DTextLabel("Para Bater Cartao Rocam\nAperte F",0x93833EF6,-1716.2454,1018.5618,17.5859, 60, 0);//Forca Tatica
    
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 195.4466,158.4840,1003.0234, 10.0, 0);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 195.4466,158.4840,1003.0234, 10.0, 0);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 225.9554,114.1761,999.0156, 10.0, 0);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 225.9554,114.1761,999.0156, 10.0, 0);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 268.2108,77.4440,1001.0391, 10.0, 0);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 268.2108,77.4440,1001.0391, 10.0, 0);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 268.2108,77.4440,1001.0391, 10.0, 1);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 268.2108,77.4440,1001.0391, 10.0, 1);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 197.2001,179.2701,1003.0234, 10.0, 0);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 197.2001,179.2701,1003.0234, 10.0, 0);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 197.2001,179.2701,1003.0234, 10.0, 1);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 197.2001,179.2701,1003.0234, 10.0, 1);
	Create3DTextLabel("Menu para advogados", 0xE6E6FAFF, 709.5348,-568.6559,-6.1966, 10.0, 0);
	Create3DTextLabel("\naperte a letra F para acessar.", 0xE6E6FAFF, 709.5348,-568.6559,-6.1966, 10.0, 0);
	Create3DTextLabel("HQ Tropa da Turquia", COLOR_DBLUE, -2336.6111,-166.8267,35.5547, 60, 0);

	Create3DTextLabel("{0000FF}[BEM-VINDO]\n{FFFFFF}Ola, seja muito bem vindo ao Brasil Play Real, espero que curta nosso servidor!\nCaso precise de ajuda use /relatorio", -1, 1685.6195,-2329.2954,13.5469, 60, 0);
	CreateActor(211,1685.6195,-2329.2954,13.5469,175.2724);//Staff Spawn
	Create3DTextLabel("{A52A2A}[Aluguel de bike]\n{FFFFFF}Para alugar sua bike por {228B22}R$5,00{FFFFFF} digite /bike", -1, 1682.5848,-2308.7366,13.5409, 60, 0);
	CreateActor(217,1682.5848,-2308.7366,13.5409,181.5392);//Staff Bike
	Create3DTextLabel("{00CED1}[Central de Desmanche]\n{FFFFFF}Use /desmanchar para fazer o desmanche", -1, 2770.0596,-1620.2411,12.8336, 60, 0);
    CreatePickup(1239,0,2770.0596,-1620.2411,12.8336);//Pickup Desmanche
    
    //Estacionamento Praca
    Create3DTextLabel("{0000FF}[Garagem]\n{FFFFFF}Use /garagem para pegar seu veiculo!", -1, 1541.4535,-1563.2844,13.7479, 60, 0);
    CreatePickup(1239,0,1541.4535,-1563.2844,13.7479);
    
    //Estacionamento Hospital
    Create3DTextLabel("{0000FF}[Garagem]\n{FFFFFF}Use /garagem para pegar seu veiculo!", -1, 1225.1034,-1433.0675,13.7690, 60, 0);
    CreatePickup(1239,0,1225.1034,-1433.0675,13.7690);

	//Estacionamento Praia
	Create3DTextLabel("{0000FF}[Garagem]\n{FFFFFF}Use /garagem para pegar seu veiculo!", -1, 310.3948,-1799.8964,4.5043, 60, 0);
    CreatePickup(1239,0,310.3948,-1799.8964,4.5043);
    
    //Estacionamento Spawn
    Create3DTextLabel("{0000FF}[Garagem]\n{FFFFFF}Use /garagem para pegar seu veiculo!", -1, 1563.0857,-2323.9531,13.5531, 60, 0);
    CreatePickup(1239,0,1563.0857,-2323.9531,13.5531);

	//Estacionamento garagem
    Create3DTextLabel("{0000FF}[Garagem]\n{FFFFFF}Use /garagem para pegar seu veiculo!", -1, 535.3613,-1274.7592,17.2422, 60, 0);
    CreatePickup(1239,0,535.3613,-1274.7592,17.2422);
//==============================================================================================================
    //Roubo Caixa Loja 
	Create3DTextLabel("{B22222}[ROUBO]\n{FFFFFF}Para roubar esse caixa digite /roubarcaixa", -1, 1101.7953,-1375.0850,13.7594, 60, 0);
	CreatePickup(1239,0,1101.7953,-1375.0850,13.7594);
	//Roubo Caixa Loja 
	Create3DTextLabel("{B22222}[ROUBO]\n{FFFFFF}Para roubar esse caixa digite /roubarcaixa", -1, 836.2842,-2061.0852,12.8752, 60, 0);
	CreatePickup(1239,0,836.2842,-2061.0852,12.8752);
	//Roubo Caixa Loja 
	Create3DTextLabel("{B22222}[ROUBO]\n{FFFFFF}Para roubar esse caixa digite /roubarcaixa", -1, 1026.6843,-1996.4766,13.1968, 60, 0);
	CreatePickup(1239,0,1026.6843,-1996.4766,13.1968);
	
	//Concessionaria 
	Create3DTextLabel("{033099}[Concessionaria]\n{FFFFFF}Use /conce para comprar seu veiculo!", -1, 553.1498,-1292.4086,17.2482, 60, 0);
	CreatePickup(1239,0,553.1498,-1292.4086,17.2482);
    
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=

	//Menu de veiculos Governo
	Create3DTextLabel("{b09604}Menu de Veiculos Governo LS\n{FFFFFF}Aperte F para abrir", -1, 1509.6018,-1849.7678,13.5469, 60, 0);
	CreatePickup(1239,0,1509.6018,-1849.7678,13.5469);
	
	//Menu de veiculos Medicos
	Create3DTextLabel("{cbccc6}Menu de Veiculos Medicos\n{FFFFFF}Aperte F para abrir", -1, 2038.3962,-1411.6052,17.1641, 60, 0);
	CreatePickup(1239,0,2038.3962,-1411.6052,17.1641);

	//Menu de veiculos Taxi
	Create3DTextLabel("{e5ff00}Menu de Veiculos Taxista\n{FFFFFF}Aperte F para abrir", -1, 1793.0687,-1704.5559,13.5281, 60, 0);
	CreatePickup(1239,0,1793.0687,-1704.5559,13.5281);

	//Menu de veiculos Los Santos News
	Create3DTextLabel("{878b91}Menu de Veiculos Los Santos News\n{FFFFFF}Aperte F para abrir", -1, 741.7016,-1334.9618,13.5394, 60, 0);
	CreatePickup(1239,0,741.7016,-1334.9618,13.5394);
	
	//Menu de veiculos Policia Militar//
	Create3DTextLabel("{1c6ee8}Menu de Veiculos Policia Militar\n{FFFFFF}Use /menupm para abrir", -1, 1532.4894,-1681.5950,5.8906, 60, 0);
	CreatePickup(1239,0,1532.4894,-1681.5950,5.8906);

	//Menu de veiculos Policia Federal//
	Create3DTextLabel("{1c6ee8}Menu de Veiculos Policia Federal\n{FFFFFF}Use /menupf para abrir", -1, -2442.6738,526.4616,29.9201, 60, 0);
	CreatePickup(1239,0,-2442.6738,526.4616,29.9201);

	//Menu de veiculos Policia Civil//
	Create3DTextLabel("{bbaa5e}Menu de Veiculos Policia Civil\n{FFFFFF}Use /menupc para abrir", -1, 900.5388,-1257.6967,14.9560, 60, 0);
	CreatePickup(1239,0,900.5388,-1257.6967,14.9560);

	//Menu de veiculos BOPE//
	Create3DTextLabel("{454745}Menu de Veiculos BOPE\n{FFFFFF}Use /menubope para abrir", -1, 300.9082,-1492.3870,24.5938, 60, 0);
	CreatePickup(1239,0,300.9082,-1492.3870,24.5938);

	//Menu de veiculos Forcas Armadas//
	Create3DTextLabel("{0e9404}Menu de Veiculos Forcas Armadas\n{FFFFFF}Use /menufa para abrir", -1, -1533.7620,422.3723,7.1875, 60, 0);
	CreatePickup(1239,0,-1533.7620,422.3723,7.1875);

	//Menu de veiculos Mafia Cosa Nostra//
	Create3DTextLabel("{c70697}Menu de Veiculos Mafia Cosa Nostra\n{FFFFFF}Aperte F para abrir", -1, 282.5849,-1163.2761,80.9141, 60, 0);
	CreatePickup(1239,0,282.5849,-1163.2761,80.9141);

	//Menu de veiculos Vagos//
	Create3DTextLabel("{edde07}Menu de Veiculos Vagos\n{FFFFFF}Aperte F para abrir", -1, 2806.4182,-1183.8268,25.4097, 60, 0);
	CreatePickup(1239,0,2806.4182,-1183.8268,25.4097);

	//Menu de veiculos Comando Vermelho//
	Create3DTextLabel("{ed0707}Menu de Veiculos Comando Vermelho\n{FFFFFF}Aperte F para abrir", -1, 2157.9736,-1800.8035,13.3718, 60, 0);
	CreatePickup(1239,0,2157.9736,-1800.8035,13.3718);

	//Menu de veiculos Sons Of Anarchy//
	Create3DTextLabel("{07daed}Menu de Veiculos Sons Of Anarchy\n{FFFFFF}Aperte F para abrir", -1, 709.2042,-458.0265,16.3359, 60, 0);
	CreatePickup(1239,0,709.2042,-458.0265,16.3359);

	//Menu de veiculos Elements//
	Create3DTextLabel("{07daed}Menu de Veiculos Elements\n{FFFFFF}Aperte F para abrir", -1, 2795.2830,-1588.8105,10.9270, 60, 0);
	CreatePickup(1239,0,2795.2830,-1588.8105,10.9270);

	//Menu de veiculos Triads
	Create3DTextLabel("{7f7e80}Menu de Veiculos Triads\n{FFFFFF}Aperte F para abrir", -1, -1699.1467,1332.3953,7.1791, 60, 0);
	CreatePickup(1239,0,-1699.1467,1332.3953,7.1791);

	//Menu de veiculos Primeiro Comando da Capital
	Create3DTextLabel("{8c0303}Menu de Veiculos Primeiro Comando da Capital\n{FFFFFF}Aperte F para abrir", -1, 1309.8995,-856.0664,39.5781, 60, 0);
	CreatePickup(1239,0,1309.8995,-856.0664,39.5781);

	//Menu de veiculos Grota
	Create3DTextLabel("{069414}Menu de Veiculos Grota\n{FFFFFF}Aperte F para abrir", -1, -2515.5208,1209.7000,37.4219, 60, 0);
	CreatePickup(1239,0,-2515.5208,1209.7000,37.4219);

	//Menu de veiculos Groove
	Create3DTextLabel("{07e61d}Menu de Veiculos Groove\n{FFFFFF}Aperte F para abrir", -1, 2462.7847,-1700.2332,13.5188, 60, 0);
	CreatePickup(1239,0,2462.7847,-1700.2332,13.5188);

 //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==
 	Create3DTextLabel("Prisao\nUse: /prender",COR_3DLABEL,190.5879,178.8082,1003.0234,10.0,0);
 	Create3DTextLabel("Prisao\nUse: /prender",COR_3DLABEL,190.5879,178.8082,1003.0234,10.0,1);
	Create3DTextLabel("Prisao\nUse: /prender",COR_3DLABEL,267.5573,81.8416,1001.0391,10.0,0);
	Create3DTextLabel("Prisao\nUse: /prender",COR_3DLABEL,-1299.3954,490.6682,11.1953,10.0,0);
 	Create3DTextLabel("Prisao Veicular\nUse: /prender",COR_3DLABEL,1529.5420,-1677.7013,5.8906,10.0,0);
 	Create3DTextLabel("Prisao Veicular\nUse: /prender",COR_3DLABEL,339.3437,-1501.7695,36.0391,10.0,0);
 	Create3DTextLabel("Prisao Veicular\nUse: /prender",COR_3DLABEL,-23.1269,-270.3593,5.4297,10.0,0);
 	Create3DTextLabel("Prisao Veicular\nUse: /prender",COR_3DLABEL,846.2830,-1292.9236,13.6528,10.0,0);
	Create3DTextLabel("Materiais Obter\nDigite /materiais obter",COR_3DLABEL,1949.4497,-2061.5300,13.5469,10.0,0);
	Create3DTextLabel("Materiais Entregar\nDigite /materiais entregar",COR_3DLABEL,1747.2849,-1944.2209,13.5674,10.0,0);
	Create3DTextLabel("Materiais Obter\nDigite /materiais obter",COR_3DLABEL,-2658.7659,1359.8953,7.0372,10.0,0);
	Create3DTextLabel("Materiais Entregar\nDigite /materiais entregar",COR_3DLABEL,-1749.5952,1316.0922,7.1797,10.0,0);
	Create3DTextLabel("Mafia Materiais Obter\nDigite /mafiamateriais obter",COR_3DLABEL,2748.6514,-2453.4204,13.8623,10.0,0);
	Create3DTextLabel("Mafia Materiais Entregar\nDigite /mafiamateriais entregar",COR_3DLABEL,2506.9197,-2218.9822,13.5469,10.0,0);
	Create3DTextLabel("Cofre da Loterica\nDigite /roubar Para Roubar",COR_3DLABEL,820.6042,8.3990,1004.1962,10.0,0);
	Create3DTextLabel("Cofre do Banco\nDigite /roubar Para Roubar",COR_3DLABEL,2144.4177,1641.5360,993.5761,10.0,0);
	Create3DTextLabel("Cofre da Loterica\nDigite /roubar Para Roubar",COR_3DLABEL,820.6042,8.3990,1004.1962,10.0,0);
	Create3DTextLabel("Cofre da Loja de Armas 1\nDigite /roubar Para Roubar",COR_3DLABEL,303.9740,-168.8060,999.5938,10.0,0);
	Create3DTextLabel("Cofre da Ammu Nation\nDigite /roubar Para Roubar",COR_3DLABEL,294.8272,-57.8448,1001.5156,10.0,0);
	Create3DTextLabel("Cofre da Binco\nDigite /roubar Para Roubar",COR_3DLABEL,211.3917,-96.1839,1005.2578,10.0,0);
	Create3DTextLabel("Cofre da Binco\nDigite /roubar Para Roubar",COR_3DLABEL,211.3917,-96.1839,1005.2578,10.0,1);
	Create3DTextLabel("Cofre da Zip\nDigite /roubar Para Roubar",COR_3DLABEL,162.1060,-79.8251,1001.8047,10.0,0);
	Create3DTextLabel("Cofre da Victim\nDigite /roubar Para Roubar",COR_3DLABEL,205.4029,-11.5629,1005.2109,10.0,0);
    Create3DTextLabel("Estilos de Lutas\nAperte Enter Para Mudar Luta",COR_3DLABEL,768.2192,-3.9873,1000.7203,15.0,0);
    Create3DTextLabel("Noticias\nDigite /Noticias para noticiar",COR_3DLABEL,361.2997,203.8503,1008.3828,15.0,0);
    Create3DTextLabel("Departamento da Policia Militar\nAperte Enter Para Entrar",COR_3DLABEL,1554.9537,-1675.6584,16.1953,30.0,0);
    Create3DTextLabel("Departamento da Policia Militar\nAperte Enter Para Entrar",COR_3DLABEL,-1605.3232,711.1816,13.8672,30.0,0);
    Create3DTextLabel("Loterica\nAperte Enter Para Entrar",COR_3DLABEL,1631.9160,-1172.1013,24.0781,30.0,0);
    Create3DTextLabel("Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,0);
    Create3DTextLabel("Agencia de Empregos\nAperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,1);
    Create3DTextLabel("Banco\nAperte Enter Para Usar",COR_3DLABEL,2308.7908,-13.2499,26.7422,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,1833.6124,-1842.4968,13.5781,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,1000.5861,-919.8832,42.3281,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,1928.6006,-1776.4480,13.5469,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,1315.5110,-898.9860,39.5781,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,1352.4357,-1759.0243,13.5078,20.0,0);
    Create3DTextLabel("Mercado\nAperte Enter Para Entrar",COR_3DLABEL,2424.2214,-1742.7878,13.5457,20.0,0); //GANTON
    Create3DTextLabel("Prefeitura\nAperte Enter Para Entrar",COR_3DLABEL,1481.0386,-1772.3120,18.7958,40.0,0);
    Create3DTextLabel("Prefeitura\nAperte Enter Para Entrar",COR_3DLABEL,-2766.1321,375.6091,6.3347,40.0,0);
    Create3DTextLabel("Alhambra\nAperte Enter Para Entrar",COR_3DLABEL,1837.0278,-1682.3890,13.3233,30.0,0);
    Create3DTextLabel("Menu da Mafia\nAperte Enter Para Usar",COR_3DLABEL,-2648.0940,1396.4666,906.4609,20.0,0);
	Create3DTextLabel("Menu da Mafia\nAperte Enter Para Usar",COR_3DLABEL,675.0947,-1275.7603,13.6334,20.0,0);
	Create3DTextLabel("Loja de Roupas Victim\nAperte Enter Para Entrar",COR_3DLABEL,461.3484,-1500.9084,31.0592,20.0,0);
    Create3DTextLabel("Loja de Roupas Zip\nAperte Enter Para Entrar",COR_3DLABEL,1456.9010,-1137.6941,23.9617,20.0,0);
    Create3DTextLabel("Binco\nAperte Enter Para Entrar",COR_3DLABEL,-2374.2454,910.2137,45.4453,20.0,0);
	Create3DTextLabel("The Pig Pen\nAperte Enter Para Entrar",COR_3DLABEL,2421.4998,-1219.2438,25.5617,20.0,0);
	Create3DTextLabel("Ginasio de Lutas\nAperte Enter Para Entrar",COR_3DLABEL,2229.9011,-1721.2582,13.5613,20.0,0);
	Create3DTextLabel("Burguer Shot\nAperte Enter Para Entrar",COR_3DLABEL,1200.4497,-918.7695,43.1105,20.0,0);
	Create3DTextLabel("Burguer Shot\nAperte Enter Para Entrar",COR_3DLABEL,810.4855,-1616.1888,13.5469,20.0,0);
	Create3DTextLabel("Cluckin Bell\nAperte Enter Para Entrar",COR_3DLABEL,927.6217,-1353.0105,13.3438,20.0,0);
	Create3DTextLabel("Cluckin Bell\nAperte Enter Para Entrar",COR_3DLABEL,2419.8442,-1509.4996,24.0000,20.0,0);// PERTO DA GROOVE
	Create3DTextLabel("Pizzaria\nAperte Enter Para Entrar",COR_3DLABEL,2105.4858,-1806.4725,13.5547,20.0,0);
	Create3DTextLabel("Lanchonete\nAperte Enter Para Entrar",COR_3DLABEL,975.4691,-1335.9618,13.5319,20.0,0);
	Create3DTextLabel("Hotel\nAperte Enter Para Entrar",COR_3DLABEL,2233.2659,-1159.8256,25.8906,20.0,0);
	Create3DTextLabel("Hotel\nAperte Enter Para Entrar",COR_3DLABEL,2212.6235,-1150.4385,1025.7969,20.0,0);
	Create3DTextLabel("HQ Vagos\nAperte Enter Para Entrar",COR_3DLABEL,2808.1106,-1189.6528,25.3436,20.0,0);
	Create3DTextLabel("HQ Vagos\nAperte Enter Para Entrar",COR_3DLABEL,-1829.7848,105.8367,15.1172,20.0,0);
	Create3DTextLabel("HQ FamiliaShelby\nAperte Enter Para Entrar",COR_3DLABEL,691.5710,-1276.1722,13.5607,20.0,0);
	Create3DTextLabel("HQ Cosa Nostra\nAperte Enter Para Entrar",COR_3DLABEL,300.2393,-1154.4464,81.3910,20.0,0);
	Create3DTextLabel("DP Policia Civil\nAperte Enter Para Entrar",COR_3DLABEL,918.9910,-1252.1665,16.2109,20.0,0);
	Create3DTextLabel("DP BOPE\nAperte Enter Para Entrar",COR_3DLABEL,327.9436,-1512.2135,36.0325,20.0,0);
	Create3DTextLabel("DP Policia Federal\nAperte Enter Para Entrar",COR_3DLABEL,-2456.1401,503.9361,30.0781,20.0,0);
	Create3DTextLabel("HQ Ballas\nAperte Enter Para Entrar",COR_3DLABEL,1154.9366,-1180.8309,32.8187,20.0,0);
	Create3DTextLabel("HQ Ballas\nAperte Enter Para Entrar",COR_3DLABEL,-2463.6145,131.9267,35.1719,20.0,0);
	Create3DTextLabel("Cofre",COR_3DLABEL,301.7848,-76.6545,1001.5156,20.0,0);
	Create3DTextLabel("Cofre",COR_3DLABEL,306.3995,-159.1051,999.5938,20.0,0);
	Create3DTextLabel("/beber",COR_3DLABEL,498.6937,-75.5562,998.7578,20.0,0);// BEBER BAR
	Create3DTextLabel("HQ PCC\nAperte Enter Para Entrar",COR_3DLABEL,-2356.0017,1007.9794,50.8984,20.0,0);
	Create3DTextLabel("HQ Groove Street\nAperte Enter Para Entrar",COR_3DLABEL,2466.3386,-1673.6875,13.4876,20.0,0);
	Create3DTextLabel("HQ Groove Street\nAperte Enter Para Entrar",COR_3DLABEL,-2457.4695,794.9935,35.1719,20.0,0);
	Create3DTextLabel("Maconha\nUse /pegardrogas maconha",COR_3DLABEL,1980.1150,-1234.9983,20.0469,15.0,0);
	Create3DTextLabel("Maconha\nUse /pegardrogas maconha",COR_3DLABEL,-2110.7590,158.7641,34.8597,15.0,0);
	Create3DTextLabel("Cocaina\nUse /pegardrogas cocaina",COR_3DLABEL,1921.7291,-1412.0062,13.1667,15.0,0);
	Create3DTextLabel("Cocaina\nUse /pegardrogas cocaina",COR_3DLABEL,-1475.5909,152.0156,18.7734,15.0,0);
    Create3DTextLabel("Crack\nUse /pegardrogas crack",COR_3DLABEL,2152.4707,-1013.1613,62.4262,15.0,0);
    Create3DTextLabel("Crack\nUse /pegardrogas crack",COR_3DLABEL,-2994.1809,471.5032,4.6881,15.0,0);
    Create3DTextLabel("Menu de Compras\nAperte Enter Para Usar",COR_3DLABEL,1101.9640,-1373.0610,13.7591,15.0,0);
	Create3DTextLabel("Menu de Compras\nAperte Enter Para Usar",COR_3DLABEL,-26.8819,-89.6936,1003.5469,15.0,0);
	Create3DTextLabel("Menu de Compras\nAperte Enter Para Usar",COR_3DLABEL,-22.2540,-55.6456,1003.5469,15.0,0);
    Create3DTextLabel("Menu de Compras\nAperte Enter Para Usar",COR_3DLABEL,-22.3265,-138.4765,1003.5469,15.0,0);
	Create3DTextLabel("Menu de Compras\nAperte Enter Para Usar",COR_3DLABEL,-30.3140,-28.3121,1003.5573,15.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COR_3DLABEL,1524.4977,-1677.9469,6.2188,8.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COR_3DLABEL,1565.1235,-1666.9944,28.3956,8.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COR_3DLABEL,1565.1235,-1666.9944,28.3956,8.0,0);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COR_3DLABEL,246.2975,87.4735,1003.6406,8.0,1);
	Create3DTextLabel("Elevador\nAperte Enter Para Usar",COR_3DLABEL,-1606.4371,672.4346,-5.2422,8.0,0);
	Create3DTextLabel("Menu de Comprar Licencas\nDigite /licencas Para Usar",COR_3DLABEL,1491.0469,1306.2272,1093.2964,10.0,0);
	Create3DTextLabel("Menu de Comprar Licencas\nDigite /licencas Para Usar",COR_3DLABEL,1491.0469,1306.2272,1093.2964,10.0,1);
	Create3DTextLabel("Menu de Comprar Armas\nAperte Enter Para Usar",COR_3DLABEL,312.1259,-166.1339,999.6010,8.0,0);
	Create3DTextLabel("Menu de Comprar Armas\nAperte Enter Para Usar",COR_3DLABEL,295.7041,-80.3617,1001.5156,8.0,0);
	Create3DTextLabel("Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,1172.6522,-1327.9591,15.4025,8,0);
	Create3DTextLabel("Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,2029.5945,-1404.6426,17.2512,8,0);
	Create3DTextLabel("Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,-2656.8376,638.4153,14.4531,8,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,252.5820,69.7423,1003.6406,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,252.5820,69.7423,1003.6406,7,1);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,198.9671,168.1982,1003.0234,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,198.9671,168.1982,1003.0234,7,1);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,234.8419,111.2194,1003.2257,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_3DLABEL,234.8419,111.2194,1003.2257,7,1);
    //>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2543.3452,1216.0988,37.4219,15.0,0);
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2354.0254,996.4910,50.8984,15.0,0);
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-1827.8589,100.6187,15.1172,15.0,0);
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2458.0613,785.0059,35.1719,15.0,0);
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1531.4355,-1692.0564,6.2252,15.0,0);
	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-1622.2772,677.4626,-4.9063,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,238.2739,108.0566,1003.2257,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,238.2739,108.0566,1003.2257,15.0,1);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-1540.8984,409.8900,7.3371,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,2041.6974,-1430.1006,17.1641,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2670.2769,638.8124,14.4531,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,2811.7102,-1166.1824,1025.5703,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2323.5017,-158.8510,35.5547,15.0,0);
   	Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2279.0664,2286.4050,4.9650,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1500.5797,-1848.5518,13.5469,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2765.6533,382.5093,6.3281,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1106.2151,-303.7052,73.9922,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,752.1580,-1358.9927,13.5000,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2276.8560,541.4446,35.1719,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1797.1150,-1704.7645,13.5278,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2025.7383,379.5803,35.1719,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,919.3007,-1259.4362,15.6641,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2634.2791,1409.7692,906.4647,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2167.5757,644.8060,1057.7687,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,2465.0017,-1680.2899,13.5217,15.0,0);//....
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,400.0611,2539.5366,16.5448,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2446.5398,515.9565,30.2340,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1074.7671,-1204.1219,18.1446,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,296.2728,1489.4459,1080.2578,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,2151.3218,-1789.1669,13.5097,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-2456.1233,126.3469,35.1719,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,681.3650,-445.1725,16.3359,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,2768.6760,-1626.2833,10.9272,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,1304.8378,-866.4293,39.5781,15.0,0);
    Create3DTextLabel("Informacoes da HQ\nAperte Enter Para Usar",0xFF0000FF,-1678.0742,1353.1334,7.1722,15.0,0);
	Create3DTextLabel("HQ Sons of Anarchy\nAperte Enter Para Entrar",COR_3DLABEL,681.6038,-473.3587,16.5363,7,0);
	Create3DTextLabel("Bar's\nAperte Enter Para Entrar",COR_3DLABEL,2309.9460,-1643.6337,14.8270,7,0);
	Create3DTextLabel("HQ Hitmans\nAperte Enter Para Entrar",COR_3DLABEL,1106.5106,-299.5384,74.5391,7,0);
	Create3DTextLabel("HQ BOPE\nAperte Enter Para Entrar",COR_3DLABEL,-1754.2365,963.6148,24.8828,7,0);
	Create3DTextLabel("HQ Triads\nAperte Enter Para Entrar",COR_3DLABEL,-1681.4905,1350.2188,7.1722,7,0);
	Create3DTextLabel("Entrega de Pacotes",COR_3DLABEL,1007.9274,-1541.3163,13.5671,5,0);
	Create3DTextLabel("Entrega de Pacotes",COR_3DLABEL,1656.9484,-1793.7782,13.5478,5,0);
	Create3DTextLabel("Cofre do Banco\nEnter Para Entrar", COR_3DLABEL, 2315.4963,-0.4780,26.7422, 7, 0);
	Create3DTextLabel("Banco\nSaida de Emergencia", COR_3DLABEL, 1434.1337,-968.4908,37.3894, 7, 0);
	Create3DTextLabel("Banco\nSaida de Emergencia", COR_3DLABEL, 2155.9976,1597.9829,999.9699, 7, 0);
	//>=-=-=-=-=-=-=-=-=-=-=-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-==-=-=<|
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++){Gas[c] = GasMax;}
	donoestacao = 0;
	donocasarao = 0;
	donoFavela = 0;
	donoConstrucao = 0;
	donoPraia = 0;
	donoPuteiro = 0;
	donoNavio = 0;
	donoskate = 0;
	donoaero = 0;
	donopark = 0;
	/*PlayerHaul[390][pCapasity] = 100;
	PlayerHaul[391][pCapasity] = 100;
	PlayerHaul[392][pCapasity] = 50;
	PlayerHaul[393][pCapasity] = 50;*/
	//LoadVendas();
	//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nada");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "Ninguem");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	//>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	for(new i = 0; i < sizeof(CreatedCars); i++){CreatedCars[i] = 0;}
	for(new i = 0; i <= sizeof(Peds)-1; i++){AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);}
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
    if(HouseInfo[h][hOwned] == 0) {
        AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
        pickups++;
        format(gstring, sizeof(gstring), TextCasaVenda,HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel],h);
        HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
    }
    if(HouseInfo[h][hOwned] == 1) {
        AddStaticPickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
        pickups++;
        if(HouseInfo[h][hRentabil] == 0) {
            format(gstring, sizeof(gstring), TextCasa,HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
            HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
        }
        else {
            format(gstring, sizeof(gstring), TextCasaAl,HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel],h);
            HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
        }
    }
}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
    if(BizzInfo[h][bOwned] == 0) {
        AddStaticPickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
        pickups++;
        format(gstring, sizeof(gstring), TextEmpresaVenda,BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded],h);
        BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
    }
    if(BizzInfo[h][bOwned] == 1) {
        AddStaticPickup(1318, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
        pickups++;
        format(gstring, sizeof(gstring), TextEmpresa,BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded],h);
        BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
    }
}


	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
    if(SBizzInfo[h][sbOwned] == 0) {
        AddStaticPickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
        pickups++;
        format(gstring, sizeof(gstring), TextMEmpresaVenda,SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded],h);
        SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
    }
    if(SBizzInfo[h][sbOwned] == 1) {
        AddStaticPickup(1318, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
        pickups++;
        format(gstring, sizeof(gstring), TextMEmpresa,SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded],h);
        SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
    }
}
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==
	AddStaticPickup(1318,23,195.4466,158.4840,1003.0234); //Pickup 3D INFO PRESOS 1
	AddStaticPickup(1318,23,225.9554,114.1761,999.0156); //Pickup 3D INFO PRESOS 2
	AddStaticPickup(1318,23,268.2108,77.4440,1001.0391,0); //Pickup 3D INFO PRESOS 3
	AddStaticPickup(1318,23,268.2108,77.4440,1001.0391,1); //Pickup 3D INFO PRESOS 3
	AddStaticPickup(1318,23,197.2001,179.2701,1003.0234,1); //Pickup 3D INFO PRESOS 4
	AddStaticPickup(1318,23,197.2001,179.2701,1003.0234,0); //Pickup 3D INFO PRESOS 4
	AddStaticPickup(1318,23,709.5348,-568.6559,-6.1966); //Pickup 3D INFO PRESOS 6
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==
	AddStaticPickup(19130,23,2041.6371,-1392.5150,48.3359) ; // Elevador Medicos
   	AddStaticPickup(19130,23,2037.6494,-1404.6544,17.2538) ; // Elevador Medicos
	AddStaticPickup(19130,23,1524.4977,-1677.9469,6.2188); //Elevador PM
	AddStaticPickup(19130,23,1524.4977,-1677.9469,6.2188); //Elevador PM
	AddStaticPickup(19130,23,1565.1235,-1666.9944,28.3956); //Elevador PM
	AddStaticPickup(19130,23,2268.0308,2449.0750,3.5313); //Elevador Subir LV
	AddStaticPickup(19130,23,2267.2820,2458.2598,38.6837); //Elevador Descer LV
	AddStaticPickup(19130,23,903.3665,-1272.1648,14.5035); //Elevador PC
	AddStaticPickup(19130,23,901.4695,-1276.5393,23.0861); //Elevador PC
	AddStaticPickup(19130,23,346.8519,-1494.9565,36.0391);//Elevador BOPE
	AddStaticPickup(19130,23,345.1602,-1482.8597,76.5391);//Elevador BOPE
	AddStaticPickup(19130,23,-1707.3776,1018.2072,17.5859);//Elevador BOPE
	AddStaticPickup(19130,23,-1746.0360,972.7875,95.8438);//Elevador BOPE
	AddStaticPickup(19130,23,246.2975,87.4735,1003.6406,0); //Elevador Cop
	AddStaticPickup(19130,23,246.2975,87.4735,1003.6406,1); //Elevador Cop
	AddStaticPickup(19130,23,1785.2893,-1704.9707,13.5217);
	AddStaticPickup(19130,23,1794.7760,-1707.7697,27.6250);
	AddStaticPickup(19130,23,-1606.4371,672.4346,-5.2422); //Elevador Cop
	AddStaticPickup(19130,23,-1605.3232,711.1816,13.8672); //Elevador Cop
	AddStaticPickup(19130,23,-1563.8582,400.6823,7.1875);//Elevador FA
	AddStaticPickup(19130,23,-1538.3254,397.8237,28.1746);//Elevador FA
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==
	AddStaticPickup(1314, 23, -2354.0254,996.4910,50.8984); //Cofre ORG
	AddStaticPickup(1314, 23, -1827.8589,100.6187,15.1172); //Cofre ORG
	AddStaticPickup(1314, 23, -2458.0613,785.0059,35.1719); //Cofre ORG
   	AddStaticPickup(1314, 23, 1531.4355,-1692.0564,6.2252); //Cofre ORG
   	AddStaticPickup(1314, 23, -1622.2772,677.4626,-4.9063); //Cofre ORG
    AddStaticPickup(1314, 23, 238.2739,108.0566,1003.2257,0); //Cofre ORG
    AddStaticPickup(1314, 23, 238.2739,108.0566,1003.2257,1); //Cofre ORG
    AddStaticPickup(1314, 23, -1540.8984,409.8900,7.3371); //Cofre ORG
    AddStaticPickup(1314, 23, 2041.6974,-1430.1006,17.1641); //Cofre ORG
    AddStaticPickup(1314, 23, -2670.2769,638.8124,14.4531); //Cofre ORG
    AddStaticPickup(1314, 23, 2811.7102,-1166.1824,1025.5703); //Cofre ORG
    AddStaticPickup(1314, 23, -2323.5017,-158.8510,35.5547); //Cofre ORG
   	AddStaticPickup(1314, 23, 1106.2151,-303.7052,73.9922); //Cofre ORG
    AddStaticPickup(1314, 23, 1500.5797,-1848.5518,13.5469); //Cofre ORG
    AddStaticPickup(1314, 23, -2765.6533,382.5093,6.3281); //Cofre ORG
    AddStaticPickup(1314, 23, 752.1580,-1358.9927,13.5000); //Cofre ORG
    AddStaticPickup(1314, 23, -2276.8560,541.4446,35.1719); //Cofre ORG
    AddStaticPickup(1314, 23, 1797.1150,-1704.7645,13.5278); //Cofre ORG
    AddStaticPickup(1314, 23, -2025.7383,379.5803,35.1719); //Cofre ORG
    AddStaticPickup(1314, 23, 919.3007,-1259.4362,15.6641); //Cofre ORG
    AddStaticPickup(1314, 23, -2634.2791,1409.7692,906.4647); //Cofre ORG
    AddStaticPickup(1314, 23, -2167.5757,644.8060,1057.7687); //Cofre ORG
    AddStaticPickup(1314, 23, 2465.0017,-1680.2899,13.5217); //Cofre ORG
    AddStaticPickup(1314, 23, 400.0611,2539.5366,16.5448); //Cofre ORG
    AddStaticPickup(1314, 23, -2446.5398,515.9565,30.2340); //Cofre ORG
    AddStaticPickup(1314, 23, 1074.7671,-1204.1219,18.1446); //Cofre ORG
    AddStaticPickup(1314, 23, 296.2728,1489.4459,1080.2578); //Cofre ORG
    AddStaticPickup(1314, 23, 2151.3218,-1789.1669,13.5097); //Cofre ORG
    AddStaticPickup(1314, 23, -2456.1233,126.3469,35.1719); //Cofre ORG
    AddStaticPickup(1314, 23, -2543.3452,1216.0988,37.4219); //Cofre ORG
    AddStaticPickup(1314, 23, 196.0160,-232.4899,1.7786); //Cofre ORG
    AddStaticPickup(1314, 23, 681.3650,-445.1725,16.3359); //Cofre ORG
    AddStaticPickup(1314, 23, 608.6080,-592.8043,17.2330); //Cofre ORG
    AddStaticPickup(1314, 23, 2768.6760,-1626.2833,10.9272); //Cofre ORG
    AddStaticPickup(1314, 23, 1304.8378,-866.4293,39.5781); //Cofre ORG
    AddStaticPickup(1314, 23, -1678.0742,1353.1334,7.1722); //Cofre ORG
    AddStaticPickup(1314, 23, -2279.0664,2286.4050,4.9650); //Cofre ORG
    AddStaticPickup(1314, 23, -314.4704,1774.4768,43.6406); //Cofre ORG
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==
	AddStaticPickup(19132, 23, 390.4640,173.8098,1008.3828,0) ; // Saida Prefeitura
	AddStaticPickup(19132, 23, 390.4640,173.8098,1008.3828,1) ; // Saida Prefeitura
    AddStaticPickup(19132, 23, 1631.9160,-1172.1013,24.0781) ; // SAIDA BOPE
   	AddStaticPickup(19132, 23, 2140.9382,-1801.9813,16.1475) ; // Entrada HQ Comando Vermelho
   	AddStaticPickup(19132, 23, -2524.4580,1216.2802,37.6552) ; // Entrada HQ Comando Vermelho
	AddStaticPickup(19132, 23, 967.2544,2175.1235,10.8203) ; // Entrada HQ Elements
 	AddStaticPickup(1313, 23, 1106.5106,-299.5384,74.5391);//Entrada hq hitmans
 	AddStaticPickup(1313, 23, -1681.4905,1350.2188,7.1722);//Entrada hq Triads
    AddStaticPickup(19132, 23, 367.9629,194.3110,1008.3828); //SAIDA HQ REPORTER
    AddStaticPickup(19132, 23, 755.4222,-1361.7944,13.5132); //ENTRADA HQ REPORTER
   	AddStaticPickup(19132, 23, 681.6038,-473.3587,16.5363);//HQ Sons of Anarchy
   	AddStaticPickup(19132, 23, 300.2393,-1154.4464,81.3910); // Entrada Mafia Cosa Nostra
	AddStaticPickup(19132, 23, 1674.1207,-2121.9700,14.1460) ; // Entrada HQ Los Tropa da Turquia
	AddStaticPickup(19132, 23, 1154.9366,-1180.8309,32.8187) ; // Entrada HQ Ballas
	AddStaticPickup(19132, 23, -2463.6145,131.9267,35.1719) ; // Entrada HQ Tropa da Turquia
	AddStaticPickup(19132, 23, 2808.1106,-1189.6528,25.3436); //HQ Vagos
	AddStaticPickup(19132, 23, -2356.0017,1007.9794,50.8984); //HQ Terceiro Comando Puro
	AddStaticPickup(19132, 23, -1829.7848,105.8367,15.1172); //HQ Familia do Norte
	AddStaticPickup(1318, 23, -2456.1401,503.9361,30.0781);//HQ PF
	AddStaticPickup(1318, 23, 918.9910,-1252.1665,16.2109);//HQ PC
	AddStaticPickup(1318, 23, -2336.6111,-166.8267,35.5547);//HQ Milicia
	AddStaticPickup(1318,23,2233.7112,-1333.1534,23.9815); //Igreja entrada
	AddStaticPickup(1318,23,-1754.2365,963.6148,24.8828); //Forca Tatica
	AddStaticPickup(19132, 23, -1528.5699,400.1840,7.1875);//Entrada HQ FA
//>==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==
    AddStaticPickup(19132, 23, 361.2997,203.8503,1008.3828); //noticiasReporter Registration & /jornal
	CreatePickup(1242, 23, 229.6736,164.7480,1003.0234); //BaterCartao Policia Federal
	CreatePickup(1242, 23, 255.1924,77.5279,1003.6406); //BaterCartao Policia Militar
	CreatePickup(1242, 23, 918.8886,-1257.7316,15.6641); //BaterCartao Policia Civil
	CreatePickup(1242, 23, 302.6426,-1530.1610,24.9219); //BaterCartao BOPE
	CreatePickup(1242, 23, -1553.5636,410.0868,7.3742); //BaterCartao Exercito
	CreatePickup(1242, 23, 240.6302,112.5663,1003.2188); //BaterCartao Forca Tatica
	
	CreatePickup(1242, 23, 923.1970,-1191.6493,16.9766); //Policia Civil
	CreatePickup(1242, 23, 1565.0715,-1634.6024,13.5551); //Policia Militar
	CreatePickup(1242, 23, 311.8593,-1511.3285,24.9219); //BOPE
	CreatePickup(1242, 23, -1716.2454,1018.5618,17.5859); //Forca Tatica
	
    AddStaticPickup(351,23,312.1259,-166.1339,999.6010); // loja de armas 1
    AddStaticPickup(351,23,295.7041,-80.3617,1001.5156); // Ammu Nation
    AddStaticPickup(1241,23,-22.2540,-55.6456,1003.5469); // loja 24/7
    AddStaticPickup(1241,23, 1101.9640,-1373.0610,13.7591); // loja 24/7
    AddStaticPickup(1241,23,-26.8819,-89.6936,1003.5469); // loja 24/7
    AddStaticPickup(1241,23,-22.3265,-138.4765,1003.5469); // loja 24/7
    AddStaticPickup(1241,23,-30.3140,-28.3121,1003.5573); // loja 24/7
	AddStaticPickup(19132, 23, 2309.9460,-1643.6337,14.8270);//BAR HC GROOVE
	AddStaticPickup(1277, 23, 1491.0469,1306.2272,1093.2964,0); //licencas
	AddStaticPickup(1277, 23, 1491.0469,1306.2272,1093.2964,1); //licencas
	AddStaticPickup(1210, 23, 361.8300,173.5202,1008.3828,0); //Empregos
	AddStaticPickup(1210, 23, 361.8300,173.5202,1008.3828,1); //Empregos
	AddStaticPickup(1240, 23, 1172.6522,-1327.9591,15.4025); //Hospital 1 near Ammu
	AddStaticPickup(1240, 23, 2029.5945,-1404.6426,17.2512); //Hospital 2 near speedway
	AddStaticPickup(1240, 23, -2656.8376,638.4153,14.4531); //Hospital SF
	AddStaticPickup(19132, 23, -2766.1321,375.6091,6.3347); //City Hall
	AddStaticPickup(19132, 23, 1481.0386,-1772.3120,18.7958); //City Hall
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0,0); //binco armor
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0,1); //binco armor
	AddStaticPickup(1239, 23,234.8461,111.1823,1003.2257,0);// /limpar
	AddStaticPickup(1239, 23,234.8461,111.1823,1003.2257,1);// /limpar
	AddStaticPickup(2060,23,-2648.0940,1396.4666,906.4609);// Equipar Mafia Cosa Nostra
	AddStaticPickup(19132, 23,691.5710,-1276.1722,13.5607);//hq FamiliaShelby
	AddStaticPickup(19132, 23, 1836.4064,-1682.4403,13.3493);//Alhabra
	AddStaticPickup(19132, 23, 975.4691,-1335.9618,13.5319);//Bar Pawno
	AddStaticPickup(19132, 23, 2229.9011,-1721.2582,13.5613);//Ganton gym
	AddStaticPickup(19132, 23, 2421.4998,-1219.2438,25.5617);//Pig Pen
	AddStaticPickup(19132, 23, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
	AddStaticPickup(19132, 23, 2398.6240,-1899.2014,13.5469);//Cluckin bell next to 10 green
	AddStaticPickup(19132, 23, 810.5328,-1616.1392,13.5469);//Marina burger
	AddStaticPickup(19132, 23, 927.6217,-1353.0105,13.3438);//Cluckin Bell
	AddStaticPickup(19132, 23, 1200.4232,-918.5194,43.1125);//Vinewood burger
	AddStaticPickup(19132, 23, 1833.6124,-1842.4968,13.5781);//24/7 estacao entrada
	AddStaticPickup(19132, 23, 1315.5110,-898.9860,39.5781);//24/7 perto madd dogg
	AddStaticPickup(19132, 23, 1000.5861,-919.8832,42.3281);//24/7 gas station vinewood
	AddStaticPickup(19132, 23, 2424.2214,-1742.7878,13.5457);//24/7 GANTON ( PERTO DA GROOVE )
	AddStaticPickup(19132, 23, 1928.6006,-1776.4480,13.5469);//24/7 posto idle
	AddStaticPickup(19132, 23, 1352.4357,-1759.0243,13.5078);//24/7 Near DMV
	AddStaticPickup(19132, 23, 203.5140,-202.2578,1.5781); //Pizza stack at BlueBerry
	AddStaticPickup(19132, 23, 1570.3828,-1333.8882,16.4844); // Building next ABC
	AddStaticPickup(19132, 2, 2466.3386,-1673.6875,13.4876); // Grove HQ
	AddStaticPickup(19132, 23, -2457.4695,794.9935,35.1719); // Grove HQ
    AddStaticPickup(1239, 23, 252.5820,69.7423,1003.6406,0) ; // Limpar DP
    AddStaticPickup(1239, 23, 252.5820,69.7423,1003.6406,1) ; // Limpar DP
    AddStaticPickup(1242, 23, -1553.6349,410.1176,7.3699) ; // Equipar Forcas Armadas
   	AddStaticPickup(2060, 23, 675.0947,-1275.7603,13.6334) ; // Esconder Materiais FamiliaShelby
   	AddStaticPickup(2060, 23, 1747.2849,-1944.2209,13.5674);// Materiais Entregar
   	AddStaticPickup(2060, 23, 1949.4497,-2061.5300,13.5469);// Materiais Obter
   	AddStaticPickup(2060, 23, -1749.5952,1316.0922,7.1797);// Materiais Entregar
   	AddStaticPickup(2060, 23, -2658.7659,1359.8953,7.0372);// Materiais Obter
   	AddStaticPickup(2060, 23, 2506.9197,-2218.9822,13.5469);// Mafia Materiais Entregar
   	AddStaticPickup(2060, 23, 2748.6514,-2453.4204,13.8623);// Mafia Materiais Obter
   	AddStaticPickup(1210, 23, 355.2333,169.3552,1025.7891); // DarTaxa
   	AddStaticPickup(19132, 23, 1631.9160,-1172.1013,24.0781) ; // Acesso Restrito Loterica LS
   	AddStaticPickup(1239, 23, 198.9671,168.1982,1003.0234,0) ; // Limpar PC
   	AddStaticPickup(1239, 23, 198.9671,168.1982,1003.0234,1) ; // Limpar PC
 	AddStaticPickup(1314, 23, 768.2192,-3.9873,1000.7203); // mudarluta
   	AddStaticPickup(19132, 23, 461.3484,-1500.9084,31.0592); // Entrada VICTIM
    AddStaticPickup(19132, 23, 1456.9010,-1137.6941,23.9617); // Entrada ZIP
    AddStaticPickup(19132, 23, -2374.2454,910.2137,45.4453); // Entrada Binco
   	AddStaticPickup(19132, 23, 2233.2659,-1159.8256,25.8906); // Entrada Hotel
	AddStaticPickup(19132, 23, 2104.8252,-1806.5239,13.5547) ; // Pickup Entrada Pizza
    AddStaticPickup(1239, 23, 822.0201,4.2154,1004.1797); // coisa lot 3
    AddStaticPickup(1239, 23, 822.0099,6.3927,1004.1797); // coisa lot 4
    AddStaticPickup(1239, 23, 822.0237,1.7826,1004.1797); // coisa lot 2
    AddStaticPickup(1239, 23, 822.0087,-0.1116,1004.1797); // coisa lot 1
	AddStaticPickup(19132, 23, 306.3995,-159.1051,999.5938);//COFRE LA 1 ENTRADA
	AddStaticPickup(19132, 23, 301.7848,-76.6545,1001.5156);//COFRE LA 2 ENTRADA
	AddStaticPickup(19132, 23, 2315.5200,0.3490,26.7422);//BANCO
	AddStaticPickup(19132, 23, 2305.6890,-16.0881,26.7496);//BANCO
	AddStaticPickup(19132, 23, 2147.7161,1603.5366,1006.1677);//BANCO
	AddStaticPickup(19132, 23, 2155.9976,1597.9829,999.9699);//BANCO
   	AddStaticPickup(2060, 23, 1980.1150,-1234.9983,20.0469); // PEGAR MACONHA
	AddStaticPickup(2060, 23, 1921.7291,-1412.0062,13.1667); // PEGAR COCAINA
	AddStaticPickup(2060, 23, 2152.4707,-1013.1613,62.4262); // PEGAR CRACK
	AddStaticPickup(2060, 23, -2110.7590,158.7641,34.8597); // PEGAR MACONHA SF
	AddStaticPickup(2060, 23, -1475.5909,152.0156,18.7734); // PEGAR COCAINA SF
	AddStaticPickup(2060, 23, -2994.1809,471.5032,4.6881); // PEGAR CRACK SF
   	AddStaticPickup(1274, 23, 2306.5127,-6.1166,26.7422) ; // Acesso Restrito Banco
   	AddStaticPickup(1274, 23, 820.6042,8.3990,1004.1962) ; // Roubo Loterica
   	AddStaticPickup(1274, 23, 354.6608,172.0170,1008.3802) ; // Roubo prefeitura
	AddStaticPickup(1274, 23, 2308.7908,-13.2499,26.7422); // Banco Los Santos($)
	AddStaticPickup(1274, 23, 2169.1516,1589.9265,999.9713); // Roubo Loja de Armas 1($)
	AddStaticPickup(1274, 23, 451.3090,-79.8603,999.5547); // Roubo Loja de Armas 2($)
	AddStaticPickup(1247, 1, 1529.5420,-1677.7013,5.8906); // prender veicular
	AddStaticPickup(1247, 1, 339.3437,-1501.7695,36.0391); // prender veicular2
	AddStaticPickup(1247, 1, -23.1269,-270.3593,5.4297); // prenderveicular3
	AddStaticPickup(1247, 1, 846.2830,-1292.9236,13.6528); // prenderveicular4
	AddStaticPickup(1247, 1, 190.5879,178.8082,1003.0234,0); // prender1
	AddStaticPickup(1247, 1, 190.5879,178.8082,1003.0234,1); // prender1
	AddStaticPickup(1247, 1, 267.5573,81.8416,1001.0391); // prender3
	AddStaticPickup(1247, 1, -1299.3954,490.6682,11.1953); // prender exe
   	//AddStaticPickup(1314, 23, 360.4069,169.9995,1008.3893,0); // mudarorigem
   	//AddStaticPickup(1314, 23, 360.4069,169.9995,1008.3893,1); // mudarorigem
   	AddStaticPickup(1314, 23, 359.0656,187.9718,1008.3828,0); // mudarorigem
   	AddStaticPickup(1314, 23, 359.0656,187.9718,1008.3828,1); // mudarorigem
   	AddStaticPickup(1314, 23, 359.0021,160.3701,1008.3828,0); // mudarorigem
   	AddStaticPickup(1314, 23, 359.0021,160.3701,1008.3828,1); // mudarorigem

	//Casa Gigante SF
	CreateDynamicObject(18981, -2829.46289, -983.60022, -9.80560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2847.65625, -900.65460, 9.20560,   0.00000, 71.00000, -4.00000);
	CreateDynamicObject(18981, -2798.81348, -904.07013, 13.24560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2800.51782, -928.63770, 13.24560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2802.37012, -953.62201, 0.60560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2787.96338, -924.52039, 3.56560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2825.81592, -939.05646, 3.56560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19905, -2813.81226, -927.35425, 13.54810,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(18981, -2835.71167, -901.50079, 1.16560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2838.89429, -946.92059, -11.42560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2823.55249, -902.34070, 13.24560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2772.12842, -919.81702, 28.00560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2747.22070, -921.57233, 28.00560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2772.14111, -919.82831, 38.02560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2770.39771, -894.90338, 38.02560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2745.58398, -896.71362, 28.00560,   0.00000, 90.00000, -4.06000);
	CreateDynamicObject(18981, -2747.22070, -921.57233, 38.02560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2745.49878, -896.64362, 38.02560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2714.43262, -923.37457, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2686.06592, -875.71960, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2687.80884, -900.62189, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(3934, -2688.30737, -872.74512, 30.04860,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2712.68066, -898.75659, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2714.43262, -923.37457, 40.36560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2702.44775, -924.23492, 28.36560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2715.26538, -935.38342, 28.36560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18762, -2704.99194, -912.44489, 32.53970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2784.57373, -919.86407, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.24634, -907.61517, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(19325, -2785.03125, -926.88861, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2785.03125, -926.88861, 30.42010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2784.32349, -923.43848, 35.67970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2784.60693, -927.24030, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2784.26758, -922.25232, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2732.94043, -888.68549, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2783.57764, -912.34229, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2784.32349, -923.43848, 30.75970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2784.57373, -919.86407, 30.42010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.83423, -916.14740, 35.67970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2783.60962, -905.80518, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2733.07446, -897.58667, 30.42010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.83423, -916.14740, 30.75970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2770.39771, -894.90338, 28.00560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2744.64746, -884.44061, 26.02560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2772.99585, -932.08160, 26.02560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2748.08398, -933.81580, 26.02560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2726.41992, -922.55200, 28.36560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2675.81958, -901.36340, 17.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2784.11157, -918.70459, 15.98560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2768.85327, -882.73138, 26.02560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18770, -2732.97314, -885.95380, -60.61990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2781.24585, -882.20477, -60.61990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2784.52832, -930.81232, -60.61990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2760.26978, -932.49127, -60.61990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2721.60938, -861.68579, -69.07990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2736.54834, -934.28693, -60.61990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2725.13599, -911.09198, -58.41990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2703.73242, -935.70520, -58.41990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2702.10205, -912.68951, -58.41990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2677.11865, -912.90417, -69.07990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18770, -2673.77783, -865.03851, -69.07990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.29077, -908.27240, 30.75970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.91699, -917.28320, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(19325, -2784.07104, -912.42072, 30.42010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2784.07104, -912.42072, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2734.24829, -907.73657, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(19325, -2732.57251, -890.25439, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2732.57251, -890.25439, 30.42010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2733.16064, -891.79303, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2733.30420, -893.77393, 30.75970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2704.57886, -912.48651, 35.47970,   0.00000, -90.00000, -4.00000);
	CreateDynamicObject(19325, -2734.06201, -911.62158, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2733.30420, -893.77393, 35.11970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2733.82568, -901.24121, 35.11970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2733.85303, -901.67761, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(18762, -2734.17847, -906.60089, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(19325, -2733.07446, -897.58667, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2704.42554, -912.02802, 38.00010,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18770, -2726.73560, -934.09912, -58.41990,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2782.43042, -893.82538, 26.02560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2772.99585, -932.08160, 1.74560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2748.08398, -933.81580, 1.74560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2735.25293, -922.69470, 1.74560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2686.65552, -863.66467, 16.62560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2726.41992, -922.55200, 4.12560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2702.44775, -924.23492, 4.12560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2715.26538, -935.38342, 4.12560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2688.96021, -912.56940, 16.62560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2708.54810, -862.12231, 16.62560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2686.65552, -863.66467, 4.12560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2708.54810, -862.12231, 4.12560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2713.63354, -911.38098, 4.12560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2735.23096, -922.67706, 26.00560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2733.55542, -898.63623, 4.12560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2744.64746, -884.66058, 4.12560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2688.96021, -912.56940, 4.12560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18762, -2733.51221, -896.71631, 32.93970,   0.00000, -90.00000, 86.00000);
	CreateDynamicObject(19325, -2733.59863, -904.99579, 35.50010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2707.43262, -911.79938, 32.38010,   -270.00000, -360.00000, 86.00000);
	CreateDynamicObject(18762, -2722.44482, -911.23358, 35.47970,   0.00000, -90.00000, -4.00000);
	CreateDynamicObject(19325, -2722.14526, -910.76312, 32.38010,   -270.00000, -360.00000, 86.00000);
	CreateDynamicObject(18762, -2719.62769, -911.41998, 32.53970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2717.64551, -911.56201, 35.47970,   0.00000, -90.00000, -4.00000);
	CreateDynamicObject(19325, -2717.21973, -911.11700, 32.38010,   -270.00000, -360.00000, 86.00000);
	CreateDynamicObject(19325, -2721.04517, -910.86469, 38.00010,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19325, -2714.46509, -911.32800, 38.00010,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19325, -2712.30835, -911.47028, 32.38010,   -270.00000, -360.00000, 86.00000);
	CreateDynamicObject(18762, -2714.81787, -911.76440, 32.53970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2712.84937, -911.90839, 35.47970,   0.00000, -90.00000, -4.00000);
	CreateDynamicObject(18762, -2709.90723, -912.10413, 32.53970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2708.08716, -912.24310, 35.47970,   0.00000, -90.00000, -4.00000);
	CreateDynamicObject(19325, -2707.94580, -911.78522, 38.00010,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2713.63354, -911.38098, 16.62560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(18981, -2733.55542, -898.63623, 16.00560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2724.77344, -899.59839, 17.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2724.75342, -899.57843, 0.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2723.15601, -876.61047, 0.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2723.04810, -875.08710, 17.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2674.24634, -878.47339, 0.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2784.11157, -918.70459, 0.98560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18766, -2722.39990, -865.85321, 26.63670,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(1491, -2704.50073, -912.13470, 30.04250,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2704.42554, -912.02802, 34.58010,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(1491, -2768.45898, -922.33661, 28.48350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18762, -2783.31860, -908.69531, 30.75970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19325, -2783.54956, -905.80518, 33.08010,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3586, -2792.77612, -906.23328, 25.38790,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(18766, -2801.91162, -905.10822, 21.24980,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(3586, -2812.27075, -904.02863, 18.78790,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(18762, -2819.35205, -903.30566, 15.02270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2819.85205, -903.24573, 14.82270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2820.25220, -903.20569, 14.44270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2820.64966, -903.15582, 14.10270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2821.77271, -903.04199, 13.44270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2821.06519, -903.11810, 13.84270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18762, -2821.37036, -903.08331, 13.66270,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18766, -2728.92822, -907.89252, 28.01880,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(14394, -2726.48047, -906.10455, 29.19530,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18766, -2728.50488, -903.80511, 28.01880,   90.00000, 0.00000, -6.00000);
	CreateDynamicObject(18981, -2837.45313, -926.20850, 3.56560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1231, -2821.98853, -900.18707, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2830.77759, -917.66168, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2822.50391, -918.22211, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2813.58545, -918.85718, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2804.52979, -919.58789, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2796.23730, -920.10852, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2836.34766, -913.30414, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2822.45972, -905.80359, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2834.76099, -889.66174, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2827.69556, -890.08008, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2817.99268, -890.35675, 16.20970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -2804.88403, -907.20679, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2798.92969, -902.99951, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2799.39990, -907.78632, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2804.38208, -902.42072, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2803.06689, -902.56152, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2803.41113, -907.35553, 22.26610,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2785.46729, -908.94635, 28.86870,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2785.13281, -905.10272, 28.86870,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2727, -2782.98071, -894.53052, 34.93000,   90.00000, 90.00000, -186.00000);
	CreateDynamicObject(2728, -2782.63208, -894.64520, 34.91840,   90.00000, 90.00000, 174.00000);
	CreateDynamicObject(3471, -2821.00928, -899.49420, 14.74060,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(3471, -2821.47290, -906.60522, 14.74060,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(3521, -2850.95117, -884.75397, 8.77600,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(1697, -2826.19971, -924.99341, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1697, -2802.42554, -926.62073, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1697, -2807.27344, -926.29779, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1697, -2812.02100, -925.98322, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1697, -2816.75366, -925.69745, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1697, -2821.46802, -925.31165, 20.90340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(970, -2727.88086, -910.44128, 28.95260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2727.12964, -901.65869, 28.97260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2731.98779, -910.00629, 28.95260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2731.17578, -901.23480, 28.95260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(949, -2733.43237, -901.02930, 29.08380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(949, -2724.88257, -901.59161, 30.66380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -2724.48682, -894.25293, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2694.19897, -912.51367, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2715.27979, -861.46442, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2675.87744, -906.79578, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2674.92725, -892.88330, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2673.96533, -878.93658, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2683.34497, -913.27350, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2679.95532, -863.96771, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2693.91089, -862.99823, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2673.46021, -871.40222, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2722.64355, -867.95599, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2723.54663, -880.40637, 32.45970,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(970, -2727.12964, -901.65869, 30.03260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(970, -2727.88086, -910.44128, 30.03260,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(949, -2748.50171, -906.30310, 29.08380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19129, -2716.30298, -925.02087, 30.02250,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(14391, -2721.58130, -929.84857, 30.90100,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2232, -2726.59399, -932.59912, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2721.13037, -932.31677, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2721.10425, -931.65295, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2721.05688, -930.94238, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2721.02002, -930.23669, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2720.98706, -929.59570, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2720.93652, -928.98767, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2720.88770, -928.28400, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2720.84448, -927.59833, 30.48780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.22852, -927.22168, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.26660, -927.91992, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.32495, -928.61481, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.36548, -929.32123, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.41577, -930.01178, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.46021, -930.66968, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.50317, -931.28583, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.54492, -931.89471, 30.64780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.59399, -932.59912, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.54492, -931.89471, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.50317, -931.28583, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.46021, -930.66968, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.41577, -930.01178, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.36548, -929.32123, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.32495, -928.61481, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.26660, -927.91992, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2232, -2726.22852, -927.22168, 31.74780,   0.00000, 0.00000, 86.00000);
	CreateObject(19806, -2713.84790, -923.46088, 39.18110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2715.20435, -932.79022, 30.54660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2715.51904, -925.76172, 30.54660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2710.82446, -921.23120, 30.54660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2714.77002, -918.03754, 30.54660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2711.94971, -929.47919, 30.54660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18981, -2674.24634, -878.47339, 17.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2675.81958, -901.36340, 0.52560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2825.36987, -926.90039, 13.24560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2803.73633, -973.18372, -8.97440,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2801.13965, -940.78882, 3.56560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2803.27197, -965.51617, -11.40560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2840.20972, -934.24963, 0.60560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2788.31836, -929.66150, 3.56560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2816.71704, -972.17743, -11.40560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2840.60864, -970.83441, -9.80560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2804.59863, -985.36963, -9.80560,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(18981, -2791.43726, -974.25763, -9.80560,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2828.60498, -971.51160, 0.60560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2827.25366, -951.88672, 0.60560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(14407, -2814.11450, -982.55371, -2.09560,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2846.25464, -946.19159, -0.49800,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(19313, -2839.78491, -953.64948, -0.49800,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19313, -2852.77417, -938.68372, -0.49800,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19313, -2852.33423, -932.22382, -0.49800,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2195, -2840.52930, -981.96613, 1.67000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, -2839.29370, -978.41992, 2.10070,   0.00000, 0.00000, -95.00000);
	CreateDynamicObject(1341, -2838.42798, -974.04272, 1.96100,   0.00000, 0.00000, -185.00000);
	CreateDynamicObject(1775, -2839.50952, -968.32928, 2.14350,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(956, -2839.41992, -967.06708, 1.48300,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(1302, -2839.47900, -965.89539, 1.11480,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(1977, -2839.17847, -964.81268, 1.10330,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(1359, -2839.18066, -963.04749, 1.66360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, -2822.98169, -940.32849, 3.64940,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3660, -2829.67261, -947.83270, 3.64940,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3660, -2800.05469, -959.54492, 3.64940,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(3660, -2813.73511, -949.94659, 3.64940,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(3660, -2821.71069, -957.50250, 3.64940,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19313, -2707.71289, -861.99414, 32.45970,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19943, -2797.97290, -905.70459, 13.69580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19943, -2805.83130, -904.79108, 13.69580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1646, -2817.75635, -975.93805, 1.26130,   0.00000, 0.00000, 117.00000);
	CreateDynamicObject(1646, -2817.67969, -977.91199, 1.26130,   0.00000, 0.00000, 117.00000);
	CreateDynamicObject(1646, -2817.71655, -976.93219, 1.26130,   0.00000, 0.00000, 117.00000);
	CreateDynamicObject(1646, -2817.70093, -979.01324, 1.26130,   0.00000, 0.00000, 117.00000);
	CreateDynamicObject(1255, -2816.94141, -969.85382, 1.54300,   0.00000, 0.00000, -2.00000);
	CreateDynamicObject(1255, -2817.10132, -973.55621, 1.54300,   0.00000, 0.00000, -2.00000);
	CreateDynamicObject(1255, -2817.05103, -972.36566, 1.54300,   0.00000, 0.00000, -2.00000);
	CreateDynamicObject(1255, -2816.99219, -971.00934, 1.54300,   0.00000, 0.00000, -2.00000);
	CreateDynamicObject(1703, -2829.16309, -949.68762, 1.09930,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1703, -2822.82837, -956.41711, 1.09930,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(1703, -2824.14893, -950.03217, 1.09930,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1703, -2822.49829, -951.44110, 1.09930,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(1703, -2822.67554, -953.93152, 1.09930,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(1703, -2826.66089, -949.85620, 1.09930,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2244, -2822.32129, -950.95190, 1.34410,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2244, -2829.73975, -949.40112, 1.34410,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2244, -2822.96826, -959.08942, 1.34410,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1515, -2831.20972, -949.48767, 1.05020,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2778, -2832.14111, -949.44061, 1.10400,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2640, -2833.14355, -949.32599, 1.88410,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19474, -2827.13672, -952.13385, 1.10330,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19474, -2825.00977, -955.24664, 1.10180,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1978, -2832.37280, -954.25421, 2.10210,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1481, -2839.54492, -956.31488, 1.70340,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2002, -2834.87158, -949.25250, 1.00370,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(14537, -2830.82886, -967.35443, 3.07810,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18646, -2815.40674, -965.50793, -8.47781,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, -2816.40112, -983.45856, -8.47578,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, -2791.84326, -967.19171, -8.47506,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, -2793.10425, -985.22290, -8.47629,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, -2792.27368, -986.16486, 2.69267,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2834.09351, -959.45844, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2833.42310, -976.02991, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2830.09619, -980.46625, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2826.09106, -974.88220, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2824.31519, -980.22369, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, -2828.66577, -958.60809, 1.55710,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, -2798.31030, -961.33466, 1.42020,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(1280, -2807.07178, -960.38800, 1.42020,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(1280, -2804.11890, -960.72729, 1.42020,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(1280, -2801.20898, -960.98987, 1.42020,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(3660, -2829.01636, -939.91077, 3.64940,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1824, -2837.20142, -952.01703, 1.56270,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(11493, -2767.41235, -926.64392, 4.03570,   0.00000, 0.00000, -49.00000);
	CreateDynamicObject(11495, -2774.47168, -939.59076, 1.05520,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(11495, -2793.10400, -958.55048, 1.05520,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(18981, -2710.93921, -873.97992, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(3934, -2708.05957, -871.36072, 30.04860,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19313, -2698.72778, -898.19708, 28.57740,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19313, -2681.91602, -892.43152, 28.57740,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19313, -2691.31079, -891.78131, 28.57740,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1568, -2676.87964, -913.38666, 29.96260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, -2699.27002, -905.50739, 29.96260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, -2699.75537, -911.76471, 29.96260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, -2697.96729, -891.61365, 29.96260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, -2675.19360, -893.35962, 29.96260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, -2673.92090, -865.24823, 32.02280,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(1231, -2725.43628, -909.82562, 32.02280,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1231, -2721.21216, -862.34583, 32.02280,   0.00000, 0.00000, 43.00000);
	CreateDynamicObject(1231, -2724.51904, -901.17786, 32.02280,   0.00000, 0.00000, 85.00000);
	CreateDynamicObject(2628, -2677.11792, -899.86761, 30.00340,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2628, -2676.84009, -895.42401, 30.00340,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2628, -2676.99805, -897.60938, 30.00340,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2627, -2677.55322, -905.71417, 30.04240,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2627, -2677.29443, -902.64233, 30.04240,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2627, -2677.43555, -904.28052, 30.04240,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2630, -2684.68872, -893.92896, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2630, -2681.40552, -894.18512, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2630, -2683.00049, -894.08398, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2629, -2692.81396, -893.45990, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2629, -2688.76123, -893.66577, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2629, -2690.90698, -893.56158, 30.02220,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2632, -2683.78857, -908.46948, 30.04130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2632, -2683.05322, -899.19812, 30.04130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2632, -2683.32788, -902.30353, 30.04130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2632, -2683.62329, -905.52179, 30.04130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2631, -2692.37622, -907.72687, 30.04210,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2631, -2691.75146, -898.71008, 30.04210,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2631, -2691.95947, -901.77246, 30.04210,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2631, -2692.16870, -904.84827, 30.04210,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2915, -2689.59375, -899.18481, 30.14400,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2915, -2690.23462, -908.24969, 30.14400,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2915, -2690.05273, -905.35339, 30.14400,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2915, -2689.83862, -902.29120, 30.14400,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2915, -2689.94385, -907.48102, 30.14400,   0.00000, 0.00000, -54.00000);
	CreateDynamicObject(2915, -2689.30200, -898.45850, 30.14400,   0.00000, 0.00000, -54.00000);
	CreateDynamicObject(2915, -2689.52344, -901.50079, 30.14400,   0.00000, 0.00000, -54.00000);
	CreateDynamicObject(2915, -2689.71680, -904.59833, 30.14400,   0.00000, 0.00000, -54.00000);
	CreateDynamicObject(2913, -2681.70337, -909.12708, 30.30420,   0.00000, 90.00000, 86.00000);
	CreateDynamicObject(2913, -2680.94019, -899.82727, 30.30420,   0.00000, 90.00000, 86.00000);
	CreateDynamicObject(2913, -2681.21069, -902.89392, 30.30420,   0.00000, 90.00000, 86.00000);
	CreateDynamicObject(2913, -2681.49976, -906.09058, 30.30420,   0.00000, 90.00000, 86.00000);
	CreateDynamicObject(1235, -2679.03149, -912.79388, 30.56350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, -2680.23315, -912.75159, 30.00350,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(11686, -2722.98535, -914.07507, 30.03890,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(16151, -2715.37207, -912.38397, 30.34360,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(3660, -2703.81299, -926.10840, 32.60150,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2773, -2720.34595, -916.04889, 30.58710,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2773, -2720.51978, -918.44543, 30.58710,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2773, -2720.65503, -920.80908, 30.58710,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2773, -2720.84985, -923.24847, 30.58710,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2773, -2722.30371, -924.11230, 30.58710,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(737, -2699.73438, -902.76282, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(737, -2720.25977, -901.54169, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(737, -2713.86865, -901.89362, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(737, -2707.69604, -902.18451, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(737, -2706.94116, -894.88641, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(737, -2699.19238, -895.19781, 30.12200,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(18981, -2770.39771, -894.90338, 32.96560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(18981, -2745.49878, -896.64362, 32.96560,   0.00000, 90.00000, -4.00000);
	CreateDynamicObject(19368, -2767.96680, -884.78918, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2768.29541, -887.83667, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2768.62329, -891.01312, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2753.79102, -885.86243, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2773.86548, -895.15692, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2783.61987, -907.82428, 28.50350,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(19368, -2778.55591, -894.70038, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2770.71167, -895.50800, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2767.55298, -895.84479, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2776.96265, -894.86188, 28.48350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2764.37427, -896.18597, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2759.67456, -896.63092, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2748.81079, -905.02917, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2754.47192, -892.45032, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2754.13159, -889.26239, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(18981, -2756.63330, -920.82990, 32.94560,   0.00000, 90.00000, -3.76000);
	CreateDynamicObject(19368, -2756.54785, -896.95648, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2762.78955, -896.37262, 28.48350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2753.30103, -897.29681, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2748.62573, -897.72791, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2754.80981, -895.61688, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2763.85449, -924.29279, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2743.44702, -893.39990, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2742.75806, -886.71307, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2743.12061, -890.20923, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2742.78442, -887.01367, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2780.35742, -894.51672, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(18981, -2772.13257, -919.78955, 32.96560,   0.00000, 90.00000, -3.88000);
	CreateDynamicObject(19368, -2743.78540, -896.57178, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2745.07324, -931.93842, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2744.74536, -928.74377, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2744.42334, -925.66302, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2744.09009, -922.47607, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2745.45435, -898.06250, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2745.21216, -917.62592, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2748.38818, -917.29272, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2751.56665, -916.95587, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2754.74658, -916.61890, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2757.93506, -916.27979, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2751.24341, -912.67609, 28.48350,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2761.10645, -915.94031, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2765.79346, -915.50989, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2768.96143, -915.17169, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2772.89575, -921.86682, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2743.75708, -919.29401, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2773.81470, -916.18219, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2774.15039, -919.36548, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2774.48145, -922.54681, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2769.18750, -923.85162, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2775.14575, -928.88751, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2775.26904, -930.06219, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2764.52808, -930.64990, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2764.19189, -927.46539, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2770.78320, -901.20117, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2771.85352, -912.17841, 33.44350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2765.35034, -922.61108, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2773.20728, -924.95325, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2772.12915, -914.84088, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2771.87061, -910.51288, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2768.68799, -910.84149, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2765.50391, -911.17859, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2768.95361, -894.17902, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2762.33960, -911.50879, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2759.16431, -911.83630, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2755.98071, -912.16083, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1491, -2751.71948, -897.47479, 28.48350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2749.47461, -911.34808, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2772.54883, -902.52698, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2752.81616, -912.49622, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2750.32031, -903.34479, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2749.14258, -908.18091, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2753.41162, -903.02173, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2756.53540, -902.69531, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2759.65820, -902.37280, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2762.77441, -902.04358, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2765.92871, -901.70813, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2773.20557, -908.83130, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2772.87891, -905.70569, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2769.10889, -901.37543, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2782.38428, -911.43121, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2759.20605, -930.12732, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2758.96997, -927.09149, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2758.76245, -923.90637, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2758.53784, -920.71979, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2758.32495, -917.63751, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2758.11865, -914.65021, 35.19690,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2759.56030, -913.03046, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2762.55542, -912.82202, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2765.68921, -912.60431, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(1491, -2764.20557, -915.68622, 28.48350,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19368, -2768.76538, -912.38953, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2773.40796, -912.05499, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2776.59546, -911.83087, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(19368, -2779.51978, -911.62708, 35.19690,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(10009, -2741.04663, -922.61212, 30.26120,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(1703, -2779.19971, -923.72449, 28.50360,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1703, -2782.63110, -923.41882, 28.50360,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1828, -2780.00464, -926.46906, 28.50370,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2608, -2775.44873, -928.87219, 29.08270,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1416, -2781.92017, -930.65900, 28.80170,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1416, -2777.86255, -930.94513, 28.80170,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1416, -2780.65405, -930.74988, 28.80170,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2195, -2782.96289, -930.55731, 29.06300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2195, -2776.80615, -930.96539, 29.06300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2229, -2777.66675, -931.26709, 29.36030,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2229, -2782.75171, -930.90198, 29.36030,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(19806, -2779.88306, -923.79437, 31.58410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19787, -2780.03174, -931.09540, 30.28310,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2255, -2779.88135, -930.59540, 31.17660,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2964, -2779.35474, -918.04187, 28.44140,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(11725, -2774.48779, -920.08667, 28.84180,   0.00000, 0.00000, 262.00000);
	CreateDynamicObject(2105, -2781.93823, -930.65204, 29.80050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2105, -2777.81323, -930.91510, 29.80050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2270, -2781.24976, -930.50201, 30.00570,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2270, -2778.74976, -930.68201, 30.00570,   0.00000, 0.00000, 176.00000);
	CreateDynamicObject(2162, -2774.99878, -926.69983, 28.50360,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2256, -2774.60059, -922.75891, 30.14820,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2191, -2774.49316, -917.50598, 28.50360,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2267, -2772.99365, -905.73962, 30.23070,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2606, -2772.54077, -905.41559, 28.68210,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2023, -2773.11597, -904.28497, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(2023, -2767.47021, -885.19629, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(19878, -2773.39502, -908.43848, 28.95630,   0.00000, -77.00000, -9.00000);
	CreateDynamicObject(1736, -2779.81787, -894.94342, 30.58340,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(11737, -2782.55347, -907.08459, 28.50430,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2564, -2766.05151, -891.19659, 28.46170,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2608, -2754.08008, -885.82642, 29.08190,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2162, -2754.01660, -887.36310, 28.50350,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2191, -2754.68921, -889.20258, 28.50400,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2025, -2754.98438, -892.35010, 28.50390,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2199, -2754.45020, -890.79688, 28.50420,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19806, -2761.48633, -890.56323, 31.58140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2100, -2763.24976, -883.72247, 28.50340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2023, -2773.43921, -907.18768, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(2023, -2768.18579, -891.67712, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(1416, -2779.27979, -930.84338, 28.80170,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1416, -2774.76147, -883.12762, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(1416, -2773.37500, -883.22742, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(1416, -2750.98828, -919.01459, 28.83170,   0.00000, 0.00000, -276.00000);
	CreateDynamicObject(2833, -2765.38599, -888.11957, 28.50300,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2182, -2755.35693, -895.37982, 28.50270,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(2484, -2761.67871, -884.18433, 30.18000,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19893, -2769.40381, -894.33911, 29.30350,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2592, -2766.02710, -895.68372, 29.36230,   0.00000, 0.00000, 174.00000);
	CreateDynamicObject(2286, -2760.23340, -883.84857, 30.84610,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3850, -2744.39844, -919.39514, 33.85764,   0.00000, 0.00000, -2.82000);
	CreateDynamicObject(3850, -2744.21851, -915.95508, 33.85760,   0.00000, 0.00000, -2.82000);
	CreateDynamicObject(3850, -2744.05835, -912.53510, 33.85760,   0.00000, 0.00000, -2.82000);
	CreateDynamicObject(3850, -2743.95825, -910.81512, 33.85760,   0.00000, 0.00000, -2.82000);
	CreateDynamicObject(3850, -2742.16455, -909.25049, 33.85760,   0.00000, 0.00000, -95.09990);
	CreateDynamicObject(3850, -2738.76465, -909.55048, 33.85760,   0.00000, 0.00000, -95.09990);
	CreateDynamicObject(2258, -2758.40576, -920.36450, 35.65350,   0.00000, 0.00000, 86.46000);
	CreateDynamicObject(2257, -2758.71167, -924.66510, 35.18480,   0.04000, 0.00000, 85.53980);
	CreateDynamicObject(2253, -2758.08545, -921.01398, 33.71150,   0.00000, 0.00000, 36.18000);
	CreateDynamicObject(2245, -2757.85596, -917.64838, 33.70310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -2758.12061, -923.20734, 33.42380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -2758.40869, -928.69788, 33.42380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -2758.75122, -931.13556, 33.42380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2253, -2757.99072, -919.62555, 33.71150,   0.00000, 0.00000, 36.18000);
	CreateDynamicObject(2244, -2757.83643, -915.20709, 33.74350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2259, -2757.67188, -916.49213, 35.07380,   0.00000, 0.00000, 86.64000);
	CreateDynamicObject(14446, -2760.57593, -922.69843, 34.02640,   0.00000, 0.00000, -94.02003);
	CreateDynamicObject(2339, -2759.12622, -920.36218, 33.46310,   0.00000, 0.00000, -93.89996);
	CreateDynamicObject(2339, -2759.51489, -925.30975, 33.46310,   0.00000, 0.00000, -93.89996);
	CreateDynamicObject(2105, -2759.23364, -925.27692, 34.95640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2105, -2759.02905, -920.36133, 34.97590,   -0.08000, 0.00000, 0.00000);
	CreateDynamicObject(19787, -2765.99219, -912.67285, 35.10369,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19787, -2769.21704, -931.84479, 36.06556,   0.00000, 0.00000, 176.21992);
	CreateDynamicObject(1828, -2768.95483, -922.16858, 33.46455,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, -2758.77954, -922.80170, 35.62800,   0.00000, 0.00000, -94.02000);
	CreateDynamicObject(11724, -2778.26318, -930.68713, 33.97121,   0.00000, 0.00000, -182.45993);
	CreateDynamicObject(19632, -2778.31445, -930.58350, 33.47755,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, -2780.90283, -929.57074, 33.31195,   0.00000, 0.00000, 84.29999);
	CreateDynamicObject(1703, -2778.81372, -926.68719, 33.31195,   0.00000, 0.00000, -6.54001);
	CreateDynamicObject(1703, -2775.27588, -928.21576, 33.31195,   0.00000, 0.00000, -93.59997);
	CreateDynamicObject(19806, -2772.25635, -922.83838, 36.62340,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, -2779.91650, -912.15991, 33.46140,   0.00000, 0.00000, -4.92000);
	CreateDynamicObject(19893, -2779.59253, -912.21240, 34.27100,   0.00000, 0.00000, -6.96000);
	CreateDynamicObject(14556, -2775.32788, -912.90588, 35.08110,   0.00000, 0.00000, -183.95970);
	CreateDynamicObject(1714, -2779.19336, -913.01593, 33.45700,   0.00000, 0.00000, 185.88040);
	CreateDynamicObject(1416, -2767.53735, -912.96161, 33.37730,   0.00000, 0.00000, -3.18000);
	CreateDynamicObject(1416, -2766.12329, -913.04669, 33.37730,   0.00000, 0.00000, -3.18000);
	CreateDynamicObject(1416, -2764.72729, -913.12109, 33.37730,   0.00000, 0.00000, -4.08000);
	CreateDynamicObject(2229, -2766.97876, -912.69623, 33.95600,   0.00000, 0.00000, -0.78000);
	CreateDynamicObject(2229, -2764.47339, -912.77191, 33.95600,   0.00000, 0.00000, -0.78000);
	CreateDynamicObject(2255, -2770.92676, -896.08319, 30.11000,   0.00000, 0.00000, -5.40000);
	CreateDynamicObject(2255, -2767.83179, -888.97443, 30.80110,   0.00000, 0.00000, 84.36000);
	CreateDynamicObject(2528, -2753.59033, -890.11823, 28.42160,   0.00000, 0.00000, 85.56000);
	CreateDynamicObject(2526, -2744.43213, -885.42706, 28.50410,   -0.06000, 0.00000, -3.96000);
	CreateDynamicObject(2515, -2754.30103, -893.83649, 29.16280,   0.00000, 0.00000, 90.42000);
	CreateDynamicObject(2741, -2754.52881, -894.58051, 29.62670,   0.00000, 0.00000, 85.56010);
	CreateDynamicObject(2527, -2744.86816, -891.45313, 28.50418,   0.00000, 0.00000, -95.03997);
	CreateDynamicObject(19873, -2754.00684, -890.23859, 29.42600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2753.98975, -889.98846, 29.42600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2754.47217, -894.04449, 29.16920,   -0.04000, 0.00000, -270.83939);
	CreateDynamicObject(2281, -2754.05811, -893.84131, 29.78380,   0.00000, 0.00000, 84.18010);
	CreateDynamicObject(19806, -2746.85645, -890.53943, 31.86330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2307, -2745.33618, -894.07562, 28.24100,   0.00000, 0.00000, -95.09990);
	CreateDynamicObject(2632, -2748.86035, -890.70605, 28.50437,   0.00000, 0.00000, 46.74000);
	CreateDynamicObject(2632, -2747.48022, -892.00580, 28.50440,   0.00000, 0.00000, 46.74000);
	CreateDynamicObject(2255, -2748.57446, -885.39893, 30.57250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2269, -2750.40723, -885.32092, 31.02351,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2744.02197, -893.90051, 29.26270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2744.03857, -894.19891, 29.26270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2744.09399, -894.54169, 29.26270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2744.12305, -894.81897, 29.26270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2744.22241, -895.13989, 29.21910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2744.28955, -894.56610, 29.21910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2744.16162, -894.01727, 29.21910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2744.27832, -894.27179, 29.21910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11707, -2746.43188, -884.85962, 29.92880,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(11707, -2742.90112, -887.20728, 29.60310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(3850, -2738.76465, -909.57050, 33.85760,   0.00000, 0.00000, -95.09990);
	CreateDynamicObject(3850, -2735.66504, -909.82861, 33.85760,   0.00000, 0.00000, -95.09990);
	CreateDynamicObject(2631, -2771.27319, -898.68811, 28.50327,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2767.41309, -899.18811, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2763.43945, -899.69757, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2759.55396, -900.19641, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2755.68872, -900.68622, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2751.78491, -901.19135, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(2631, -2747.92432, -901.68390, 28.50330,   0.00000, 0.00000, -7.32000);
	CreateDynamicObject(14384, -2747.70215, -920.93091, 29.81740,   0.00000, 0.00000, -5.76000);
	CreateDynamicObject(2013, -2744.61011, -922.38800, 28.28260,   0.00000, 0.00000, -96.24000);
	CreateDynamicObject(19584, -2750.26392, -919.67401, 29.59570,   0.00000, 0.00000, -113.69998);
	CreateDynamicObject(19586, -2750.50293, -919.14270, 29.79020,   34.08002, 0.48000, 0.00000);
	CreateDynamicObject(11719, -2750.81885, -919.55518, 29.43260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19582, -2750.84082, -919.58032, 29.55560,   -65.27990, 21.30020, 4.62000);
	CreateDynamicObject(19830, -2749.41821, -917.84906, 29.43445,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2500, -2748.22412, -917.30731, 29.43962,   0.00000, 0.00000, -5.22000);
	CreateDynamicObject(19924, -2750.98486, -919.03967, 31.83920,   0.00000, 0.00000, -5.76000);
	CreateDynamicObject(2832, -2747.76636, -917.99408, 29.44220,   0.00000, 0.00000, 76.26000);
	CreateDynamicObject(2850, -2745.76270, -918.03387, 29.43030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2131, -2745.09351, -925.00085, 28.50236,   0.00000, 0.00000, -96.53986);
	CreateDynamicObject(2015, -2745.07959, -927.00812, 28.44350,   0.00000, 0.00000, -96.23990);
	CreateDynamicObject(2289, -2773.92383, -918.39728, 30.48640,   -0.02000, 0.00000, 83.94010);
	CreateDynamicObject(2271, -2770.27417, -915.61310, 29.83350,   0.00000, 0.00000, -5.46000);
	CreateDynamicObject(1825, -2772.73169, -918.29773, 28.50307,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2244, -2773.70166, -921.45740, 28.80260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, -2773.34106, -915.35431, 29.11276,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, -2746.61206, -932.96893, 29.16140,   0.00000, 0.00000, -93.23997);
	CreateDynamicObject(638, -2749.26782, -932.82092, 29.16140,   0.00000, 0.00000, -93.23997);
	CreateDynamicObject(638, -2751.86084, -932.66809, 29.16140,   0.00000, 0.00000, -93.24000);
	CreateDynamicObject(638, -2754.46948, -932.51788, 29.16140,   0.00000, 0.00000, -93.24000);
	CreateDynamicObject(2345, -2747.13550, -933.20038, 30.84378,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2345, -2749.71851, -933.01697, 30.84378,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2345, -2752.32227, -932.88019, 30.84378,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1824, -2740.40405, -887.32678, 29.00782,   0.00000, 0.00000, -4.02000);
	CreateDynamicObject(1896, -2736.63184, -887.17627, 29.42420,   0.00000, 0.00000, -95.04000);
	CreateDynamicObject(1825, -2741.60107, -893.10303, 28.50389,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1825, -2734.44263, -896.34015, 28.50389,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2799, -2733.80615, -891.47882, 29.00840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, -2741.76685, -893.02521, 29.40190,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, -2734.71167, -896.17322, 29.40290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2531, -2763.63354, -929.37048, 28.40170,   0.00000, 0.00000, 84.48010);
	CreateDynamicObject(2452, -2763.78052, -928.04132, 28.44320,   0.00000, 0.00000, 83.10010);
	CreateDynamicObject(1416, -2771.95483, -883.33112, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(19368, -2753.81030, -886.16479, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2564, -2779.25342, -891.01068, 28.46170,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2833, -2778.44873, -888.01233, 28.50300,   0.00000, 0.00000, -94.00000);
	CreateDynamicObject(2023, -2781.30420, -891.46338, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(2023, -2780.88062, -885.16272, 28.50460,   0.00000, 0.00000, -8.00000);
	CreateDynamicObject(2255, -2781.07227, -888.86157, 30.86110,   0.00000, 0.00000, 84.36000);
	CreateDynamicObject(2484, -2772.05640, -883.36267, 30.18000,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1416, -2761.60083, -884.02380, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(1416, -2760.18726, -884.12207, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(2286, -2773.79492, -882.91718, 30.84610,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2100, -2776.47217, -882.79919, 28.50340,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(19806, -2773.73901, -888.16107, 31.58140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2592, -2779.37305, -894.29749, 29.36230,   0.00000, 0.00000, 174.00000);
	CreateDynamicObject(2608, -2768.23364, -884.64948, 29.08190,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2162, -2768.18481, -886.16321, 28.50350,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2191, -2768.85815, -887.84918, 28.50400,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2199, -2768.63550, -889.58063, 28.50420,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2025, -2769.19580, -891.22272, 28.50390,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2182, -2769.47314, -894.02521, 28.50270,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(1416, -2758.77490, -884.21649, 28.80170,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(1416, -2750.86230, -917.86328, 28.83170,   0.00000, 0.00000, -276.00000);
	CreateDynamicObject(19929, -2755.44092, -920.95648, 28.50220,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19929, -2755.15234, -918.13489, 28.50220,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2528, -2774.60205, -928.67432, 28.50300,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(2526, -2765.10010, -930.47461, 28.50370,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2520, -2772.04053, -930.15729, 28.50350,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(19368, -2774.80737, -925.70160, 30.23690,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(19368, -2770.05103, -922.16602, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(19368, -2770.88208, -925.19580, 30.23690,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2132, -2774.12769, -925.42798, 28.50360,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2281, -2773.13184, -925.52100, 30.20150,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2741, -2772.04199, -925.25061, 29.81620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19873, -2774.37598, -925.09363, 29.61580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19874, -2774.38257, -925.49841, 29.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11707, -2774.95825, -927.88391, 29.45160,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2259, -2770.65210, -925.77740, 30.47850,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2758.49805, -897.25348, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2760.27417, -895.94623, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2758.37451, -896.14594, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2762.21289, -895.74408, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2762.32959, -896.85437, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(2637, -2760.42969, -897.05011, 33.84020,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(1550, -2762.61987, -896.23077, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2761.81543, -896.56512, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2761.67334, -896.08374, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2760.45679, -896.44257, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2761.14893, -896.23846, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2759.24609, -897.37238, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2759.62646, -896.37549, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, -2760.23560, -896.96515, 34.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, -2763.97900, -896.10834, 33.46380,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(1715, -2758.37769, -898.74103, 33.46380,   0.00000, 0.00000, -186.00000);
	CreateDynamicObject(1715, -2760.14502, -894.60400, 33.46380,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(1715, -2762.28076, -894.31952, 33.46380,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(1715, -2762.71411, -898.34668, 33.46380,   0.00000, 0.00000, -186.00000);
	CreateDynamicObject(1715, -2760.46582, -898.51654, 33.46380,   0.00000, 0.00000, -186.00000);
	CreateDynamicObject(1715, -2757.89526, -894.91852, 33.46380,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(1715, -2756.78198, -896.77563, 33.46380,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1704, -2759.15283, -884.39099, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1704, -2766.33521, -883.88092, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1704, -2765.22485, -883.95679, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2001, -2761.74536, -884.30170, 33.46290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -2762.69800, -884.22919, 33.46294,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -2762.19482, -884.27808, 33.46290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, -2764.11328, -884.03461, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1704, -2761.36206, -884.23364, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(1704, -2760.27026, -884.31500, 33.46130,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2273, -2762.22388, -884.19733, 36.36680,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2259, -2764.63794, -884.09967, 36.29720,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2259, -2760.22876, -884.31580, 36.29720,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(14651, -2775.97266, -900.87866, 35.64250,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(14651, -2775.50903, -893.54230, 35.64250,   0.00000, 0.00000, -4.00000);
	CreateDynamicObject(2258, -2782.09937, -896.85718, 36.20400,   0.00000, 0.00000, 86.00000);
	CreateDynamicObject(949, -2734.41138, -909.86902, 29.08380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(949, -2748.91479, -910.14130, 29.08380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2257, -2748.99048, -908.29596, 30.29700,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(19787, -2772.78735, -905.15088, 30.48870,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(19787, -2772.94067, -906.64862, 30.48870,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(1703, -2762.65771, -902.39685, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(14455, -2749.46558, -910.30243, 30.11110,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(14455, -2756.23169, -912.01141, 30.11110,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(1703, -2763.37402, -908.96942, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1703, -2769.45605, -905.38879, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1703, -2762.98193, -905.68286, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1703, -2766.37744, -903.65729, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(1703, -2766.60913, -907.49127, 28.48310,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2230, -2772.73804, -903.85413, 28.50320,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2606, -2773.19165, -905.74280, 28.68210,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2606, -2772.64453, -906.49506, 28.68210,   0.00000, 0.00000, -96.00000);
	CreateDynamicObject(2230, -2773.06494, -907.36328, 28.50320,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(14455, -2761.83618, -911.42352, 30.11110,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(14455, -2756.62183, -902.91827, 30.11110,   0.00000, 0.00000, -186.00000);
	CreateDynamicObject(14455, -2751.01025, -903.51239, 30.11110,   0.00000, 0.00000, -186.00000);
	CreateObject(18766, -2782.51025, -907.29913, 27.98980,   90.00000, 0.00000, -6.00000);
	CreateObject(18766, -2782.51025, -907.29913, 27.98980,   90.00000, 0.00000, -6.00000);
	CreateObject(18981, -2710.93921, -873.97992, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateObject(18981, -2686.06592, -875.71960, 29.54560,   0.00000, 90.00000, -4.00000);
	CreateObject(19905, -2813.81226, -927.35425, 13.54810,   0.00000, 0.00000, 176.00000);
	//Lojinha Hospital
	CreateDynamicObject(8417, 1102.68542, -1365.36157, 12.71890,   0.00000, 180.08400, 0.39900);
	CreateDynamicObject(8417, 1143.67163, -1365.15234, 12.76890,   0.00000, 179.75500, 0.00000);
	CreateDynamicObject(8417, 1102.10596, -1325.43445, 12.71890,   0.00000, 180.08400, 0.39900);
	CreateDynamicObject(8417, 1143.31335, -1325.22961, 12.71890,   0.00000, 180.08400, 0.39900);
	CreateDynamicObject(8417, 1141.30225, -1310.24158, 12.71890,   0.00000, 180.08400, 0.39900);
	CreateDynamicObject(8417, 1099.99536, -1310.59314, 12.71890,   0.00000, 180.08400, 0.39900);
	CreateDynamicObject(19462, 1091.70532, -1380.54675, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.69897, -1370.99854, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.68518, -1361.45422, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.68872, -1352.18176, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.68542, -1350.20361, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1096.42834, -1345.48328, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1105.88770, -1345.47607, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1115.43433, -1345.47974, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1125.03394, -1345.49841, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1132.03040, -1345.48389, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1136.69531, -1350.10510, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.69922, -1359.72363, 12.73700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.67944, -1369.31226, 12.73700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.65125, -1371.21057, 12.73700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.68701, -1380.48975, 12.73700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5811, 1132.60010, -1380.63696, 16.57030,   -360.00000, 2.00000, 0.50000);
	CreateDynamicObject(19462, 1096.58362, -1375.98608, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1105.26685, -1375.95874, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1122.68872, -1376.00476, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1131.89148, -1375.99060, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3851, 1097.26733, -1375.99365, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1104.32422, -1375.99585, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1123.58826, -1375.99207, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.05249, -1375.98193, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1123.58826, -1375.99207, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.05249, -1375.98193, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1104.32422, -1375.99585, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1104.32422, -1375.99585, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1097.55029, -1376.00024, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1091.69788, -1370.37317, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1091.67725, -1359.09729, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1091.68335, -1351.04077, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1097.55029, -1376.00024, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1091.69788, -1370.37317, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1097.55029, -1376.00024, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1091.69788, -1370.37317, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1091.67725, -1359.09729, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1097.15088, -1376.04590, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1091.69788, -1370.37317, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1091.67725, -1359.09729, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1091.68335, -1351.04077, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.72302, -1351.01208, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.73047, -1362.30151, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.71631, -1370.37695, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.71631, -1370.37695, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.71631, -1370.37695, 16.30700,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.73047, -1362.30151, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1136.72302, -1351.01208, 20.16800,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(3851, 1097.30383, -1345.47278, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1108.56055, -1345.50574, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1119.84045, -1345.53052, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.08191, -1345.54602, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.08191, -1345.54602, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.08191, -1345.54602, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1119.84045, -1345.53052, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.08191, -1345.54602, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1119.84045, -1345.53052, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1108.56055, -1345.50574, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1131.08191, -1345.54602, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1119.84045, -1345.53052, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1108.56055, -1345.50574, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1097.30383, -1345.47278, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(19462, 1131.89148, -1375.99060, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1131.89148, -1375.99060, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1122.68872, -1376.00476, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1105.25146, -1375.98242, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1096.58362, -1375.98608, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1091.77625, -1371.25354, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.76794, -1361.67346, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.76965, -1352.26099, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1091.76111, -1350.22949, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1096.42834, -1345.48328, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1096.42834, -1345.48328, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1105.88770, -1345.47607, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1115.43433, -1345.47974, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1115.43433, -1345.47974, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1125.03394, -1345.49841, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1115.43433, -1345.47974, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1125.03394, -1345.49841, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1132.03040, -1345.48389, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1136.69531, -1350.10510, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.69531, -1350.10510, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.69922, -1359.72363, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.69531, -1350.10510, 12.73705,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.69922, -1359.72363, 12.73700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.67944, -1369.31226, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1136.65125, -1371.21057, 22.01600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1096.53467, -1374.23193, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.53406, -1370.78186, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.55725, -1367.30432, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.53418, -1363.81934, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.54431, -1360.31165, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.54211, -1356.85034, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.54004, -1353.38977, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.56104, -1349.86694, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1096.55151, -1347.18628, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1106.19519, -1347.16479, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.77332, -1347.14551, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1125.39258, -1347.15234, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.96069, -1347.12305, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.95715, -1350.54578, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.95154, -1354.00879, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.96301, -1357.42969, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.95178, -1360.81653, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.93054, -1364.29639, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.89685, -1367.75623, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.88000, -1371.25610, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1131.88904, -1374.29553, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.70703, -1374.23987, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.72766, -1370.77173, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.68042, -1367.28003, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.70349, -1363.79919, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.72620, -1360.35864, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.72473, -1356.98706, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.71094, -1353.51294, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1122.71497, -1350.02917, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(970, 1093.80054, -1374.19116, 13.25290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1095.54956, -1374.21741, 13.25290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1134.18347, -1374.55188, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1129.95081, -1374.55823, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1125.30981, -1374.53076, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1440, 1147.12500, -1385.05127, 13.26563,   3.14159, 0.00000, 2.53073);
	CreateDynamicObject(2551, 1094.12573, -1346.58374, 12.69260,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(2551, 1096.54688, -1346.54651, 12.72260,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(2551, 1098.11499, -1346.61987, 12.67760,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(970, 1105.21265, -1374.12195, 13.25290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1107.99255, -1374.08752, 13.25290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1097.99487, -1346.71680, 13.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1098.39246, -1346.69019, 13.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1096.79419, -1346.62183, 13.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1096.33411, -1346.61145, 13.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1094.41125, -1346.64905, 13.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2496, 1093.93127, -1346.63379, 13.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1889, 1118.78369, -1349.16443, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1118.70203, -1352.75342, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1118.77686, -1356.55029, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1118.76160, -1360.65161, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1118.77209, -1364.67712, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1109.88403, -1360.74890, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1109.85254, -1364.98438, 12.54610,   0.00000, 0.00000, -90.04500);
	CreateDynamicObject(1889, 1113.97876, -1364.95728, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1114.06506, -1360.77490, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1114.14478, -1356.54871, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1114.06897, -1352.58911, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1114.05469, -1349.08813, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1109.86023, -1356.53992, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1109.72876, -1352.54395, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1889, 1109.78296, -1349.15515, 12.54610,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1848, 1103.25549, -1364.51379, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1103.25305, -1360.11182, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1103.31055, -1355.83215, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1103.33398, -1351.90552, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1126.22192, -1364.47424, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1126.33923, -1359.93787, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1126.40149, -1354.94702, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(1848, 1126.48071, -1349.66736, 12.54610,   0.00000, 0.00000, -0.74800);
	CreateDynamicObject(2582, 1136.10059, -1349.80029, 13.66930,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2582, 1136.11975, -1352.62451, 13.66930,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2582, 1136.09961, -1355.44751, 13.66930,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2582, 1136.04370, -1358.50159, 13.66930,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1885, 1109.41541, -1375.54309, 12.73148,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1108.52637, -1375.54736, 12.73148,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1107.59863, -1375.53564, 12.73148,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1106.65430, -1375.52344, 12.73148,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1105.58716, -1375.51624, 12.73148,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19324, 1122.20410, -1375.53198, 13.38870,   0.00000, 0.00000, -179.64700);
	CreateDynamicObject(2357, 1100.46277, -1374.07495, 13.11790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1514, 1101.84705, -1374.00696, 13.73150,   0.00000, 0.00000, 178.67000);
	CreateDynamicObject(1514, 1098.94800, -1374.05750, 13.73150,   0.00000, 0.00000, 178.67000);
	CreateDynamicObject(2674, 1100.22571, -1374.07520, 13.55480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3463, 1114.15564, -1362.90613, 10.61680,   0.00000, 0.00000, 0.67200);
	CreateDynamicObject(3463, 1114.16150, -1354.64685, 10.61680,   0.00000, 0.00000, 0.67200);
	CreateDynamicObject(19425, 1130.07251, -1385.08728, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1126.23145, -1385.11548, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1122.38025, -1385.17188, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1134.95496, -1385.07104, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1131.31201, -1385.05847, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1106.43945, -1385.29443, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1102.68787, -1385.33704, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1098.95801, -1385.36108, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1095.12952, -1385.38416, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1091.36279, -1385.37122, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1138.43494, -1385.16077, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1141.80078, -1385.12512, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1145.28503, -1385.13501, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19462, 1113.20215, -1374.30029, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1103.79822, -1374.29431, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1113.29321, -1370.84119, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1105.91467, -1370.80713, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.70496, -1350.61731, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.67273, -1354.04138, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.63293, -1357.51355, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.61633, -1361.02185, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.53748, -1364.50940, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1115.51819, -1367.95410, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1106.08374, -1367.35828, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1105.95215, -1363.87756, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1106.03308, -1360.38525, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1105.98950, -1356.89697, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1106.17297, -1353.38257, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(19462, 1106.02527, -1350.08521, 23.77100,   -0.08700, 90.00000, -90.00000);
	CreateDynamicObject(1523, 1112.70959, -1376.06836, 12.72870,   0.00000, 0.00000, 0.16200);
	CreateDynamicObject(1523, 1115.76953, -1376.03979, 12.72870,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject(19462, 1120.57935, -1376.07129, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3851, 1121.40857, -1376.04639, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1123.58826, -1375.99207, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1123.58826, -1375.99207, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1121.40222, -1376.00085, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(19462, 1120.43042, -1375.99841, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19462, 1107.89087, -1375.96948, 12.73700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3851, 1107.06494, -1375.94519, 16.30700,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(3851, 1107.06494, -1375.94519, 20.16800,   0.00000, 0.00000, -90.01500);
	CreateDynamicObject(19462, 1113.24194, -1375.95227, 22.01600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3851, 1114.16992, -1376.02209, 17.25900,   0.00000, 0.00000, -90.55500);
	CreateDynamicObject(3851, 1114.15015, -1376.01941, 19.68900,   0.00000, 0.00000, -90.55500);
	CreateDynamicObject(9833, 1094.89661, -1380.82422, 14.09330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1101.49023, -1376.72791, 14.75420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1126.82666, -1377.01489, 14.75420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1148.40576, -1345.22913, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1145.19995, -1345.24609, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1141.99951, -1345.30237, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1138.73743, -1345.32141, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(1440, 1145.03601, -1345.98254, 13.26563,   3.14159, 0.00000, 2.53073);
	CreateDynamicObject(10183, 1113.19019, -1341.23315, 12.80470,   0.00000, 0.00000, -134.74800);
	CreateDynamicObject(19425, 1148.55017, -1290.31958, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1145.32874, -1290.36328, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1142.06787, -1290.40796, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1138.83179, -1290.46912, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1135.55151, -1290.45142, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(19425, 1132.25037, -1290.49243, 12.73670,   0.00000, 0.00000, 0.62200);
	CreateDynamicObject(2002, 1136.00696, -1366.74500, 12.74970,   0.00000, 0.00000, -90.41500);
	CreateDynamicObject(2002, 1136.04199, -1362.98535, 12.74970,   0.00000, 0.00000, -90.41500);
	CreateDynamicObject(3660, 1108.64099, -1346.19543, 14.86310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1126.73047, -1346.16309, 14.86310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1125.97791, -1374.66418, 26.41400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1101.90845, -1374.64783, 26.41400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1112.80188, -1375.08179, 24.74060,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1360, 1115.29724, -1375.15564, 24.74060,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1111.25684, -1380.04114, 13.05770,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(970, 1111.28442, -1383.10791, 13.05770,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(970, 1117.26221, -1383.24463, 13.05770,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(970, 1117.19312, -1380.30908, 13.05770,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(14699, 1103.57947, -1365.46484, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1103.48547, -1371.06531, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1103.76233, -1359.76782, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1103.90027, -1354.14197, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1103.77808, -1376.23682, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.16309, -1366.59436, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.47046, -1376.04749, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.22119, -1371.05029, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.15527, -1362.01978, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.15527, -1362.01978, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1116.05737, -1357.35437, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1115.76587, -1353.12305, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1126.64282, -1366.47205, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1126.64038, -1371.01135, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1126.48987, -1375.76611, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1127.07837, -1361.58923, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1127.10327, -1356.58826, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14699, 1126.54675, -1351.93042, 21.86770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14749, 1091.97925, -1374.49353, 14.48154,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18608, 1119.49207, -1367.23474, 22.47380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18608, 1119.51953, -1353.76233, 22.47380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18608, 1109.94324, -1352.98254, 22.47380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18608, 1110.17017, -1367.73743, 22.47380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19827, 1103.27905, -1375.88025, 13.88320,   0.00000, 0.00000, -179.00000);
	CreateDynamicObject(19827, 1103.09363, -1375.55811, 13.88320,   0.00000, 0.00000, -179.00000);
	CreateDynamicObject(11324, 1109.92615, -1360.41467, 21.06900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1657, 1096.57800, -1355.63733, 23.16580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1657, 1096.49585, -1362.03931, 23.16580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1657, 1104.10229, -1361.54541, 23.16580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1657, 1103.53821, -1356.08350, 23.16580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3463, 1111.22241, -1380.44177, 10.61680,   0.00000, 0.00000, 0.67200);
	CreateDynamicObject(3463, 1117.18481, -1384.97424, 10.61680,   0.00000, 0.00000, 0.67200);
	CreateDynamicObject(2069, 1118.79871, -1358.62646, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2069, 1118.67285, -1362.70593, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2069, 1114.18872, -1358.62939, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2069, 1114.21289, -1350.85950, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2069, 1118.99792, -1350.96228, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2069, 1118.94617, -1354.68250, 12.74230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1093.20935, -1371.66870, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1093.27295, -1367.71973, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1093.41565, -1363.01587, 12.75090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1883, 1093.50464, -1358.72888, 12.75090,   0.00000, 0.00000, 0.00000);
	//Loja Verona Beach(Praia)
	CreateDynamicObject(19791, 1027.51697, -2020.50220, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1018.73163, -2019.51062, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1019.81458, -2009.79138, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1028.58899, -2010.67285, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1029.70398, -2000.80664, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1020.96606, -1999.88391, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1022.06488, -1990.30237, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1030.77356, -1991.28149, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1012.30225, -1989.22131, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1011.17133, -1999.07813, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1010.01227, -2008.79065, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1008.90131, -2018.47620, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1002.99103, -1988.15649, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1001.91138, -1997.86426, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1000.70081, -2007.79419, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 999.57117, -2017.41064, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19445, 1025.84204, -2012.86389, 13.89016,   0.00000, 0.00000, -6.90000);
	CreateDynamicObject(19445, 1027.28870, -2000.38416, 13.89016,   0.00000, 0.00000, -6.90000);
	CreateDynamicObject(19445, 1020.49554, -2016.95471, 13.89016,   0.00000, 0.00000, -96.71997);
	CreateDynamicObject(19445, 1011.01831, -2015.82800, 13.89016,   0.00000, 0.00000, -96.71997);
	CreateDynamicObject(19445, 1006.88910, -2010.50134, 13.89016,   0.00000, 0.00000, -186.42007);
	CreateDynamicObject(19445, 1007.87274, -2001.05835, 13.89016,   0.00000, 0.00000, -186.42007);
	CreateDynamicObject(19445, 1022.97986, -1995.06519, 13.89016,   0.00000, 0.00000, -96.71997);
	CreateDynamicObject(19445, 1013.46240, -1993.94910, 13.89016,   0.00000, 0.00000, -96.71997);
	CreateDynamicObject(19445, 1008.15155, -1998.02039, 13.89016,   0.00000, 0.00000, -186.48007);
	CreateDynamicObject(19376, 1013.36163, -1998.81982, 12.10835,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1022.16083, -1999.88611, 12.10835,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1020.96063, -2009.29993, 12.18757,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1020.55615, -2012.17236, 12.20737,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1012.10498, -2011.08313, 12.10835,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1012.73810, -2004.70862, 12.24710,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1012.10498, -2011.08313, 15.52661,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1012.76453, -2004.48254, 15.50730,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1013.36163, -1998.81982, 15.49666,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1020.96063, -2009.29993, 15.53825,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1022.11646, -1999.89148, 15.52078,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(19376, 1020.55615, -2012.17236, 15.54870,   0.00000, 89.99998, -6.90000);
	CreateDynamicObject(2626, 1026.47913, -1997.42456, 12.58659,   0.00000, 0.00000, -7.92000);
	CreateDynamicObject(1891, 1011.50726, -2001.26770, 12.33242,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1891, 1012.02954, -1997.25903, 12.33242,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1891, 1011.26746, -2004.73657, 12.33242,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1891, 1010.27148, -2008.03845, 12.33242,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1891, 1009.83728, -2011.04114, 12.15772,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1891, 1009.27496, -2013.64758, 12.15772,   0.00000, 0.00000, -6.66000);
	CreateDynamicObject(1842, 1017.85907, -2006.67627, 12.73294,   0.00000, 0.00000, -98.16000);
	CreateDynamicObject(2585, 1025.67371, -2012.45959, 14.26253,   0.00000, 0.00000, -95.70002);
	CreateDynamicObject(2585, 1025.70642, -2011.35522, 14.26253,   0.00000, 0.00000, -95.70002);
	CreateDynamicObject(1891, 1019.01605, -2001.87097, 12.33298,   0.00000, 0.00000, -96.18002);
	CreateDynamicObject(1891, 1019.33337, -1998.94702, 12.33298,   0.00000, 0.00000, -96.18002);
	CreateDynamicObject(1891, 1017.22498, -2011.43628, 12.33298,   0.00000, 0.00000, -96.18002);
	CreateDynamicObject(1891, 1020.03436, -2011.41492, 12.33298,   0.00000, 0.00000, -96.18002);
	CreateDynamicObject(1891, 1022.57098, -2011.66992, 12.33298,   0.00000, 0.00000, -96.18002);
	CreateDynamicObject(1237, 1029.01758, -1995.20020, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1030.95020, -1994.46777, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1032.89514, -1993.48145, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1033.76697, -1992.01282, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1034.06909, -1990.28650, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1034.35144, -1988.56262, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1026.30017, -2018.31067, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1027.69104, -2019.46362, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1028.76892, -2020.86584, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1029.69177, -2022.15576, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1030.22632, -2023.44617, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1030.37854, -2024.92554, 12.11920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1030.44629, -2015.75159, 17.14464,   0.00000, 0.00000, -91.49997);
	CreateDynamicObject(1290, 1031.58936, -1998.52124, 17.14464,   0.00000, 0.00000, -91.49997);
	CreateDynamicObject(1502, 1026.43982, -2008.12573, 12.18732,   0.00000, 0.00000, 84.36005);
	CreateDynamicObject(1502, 1026.70776, -2005.09851, 12.18732,   0.00000, 0.00000, -96.59996);
	CreateDynamicObject(19433, 1026.51563, -2006.63232, 15.43731,   -90.17998, -202.44026, -28.86000);
	CreateDynamicObject(1886, 1009.04883, -1993.88342, 15.48357,   0.00000, 0.00000, 49.56000);
	CreateDynamicObject(1886, 1007.68365, -2014.01807, 15.48357,   0.00000, 0.00000, -231.71979);
	CreateDynamicObject(19329, 1026.61035, -2006.62012, 15.28938,   0.00000, 0.00000, 83.16000);
	CreateDynamicObject(19791, 1031.82886, -1981.69458, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1022.32330, -1980.62610, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1013.07141, -1979.55420, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(19791, 1003.95587, -1978.46008, 2.19684,   0.00000, 0.00000, -6.48000);
	CreateDynamicObject(1342, 1020.30103, -1991.70850, 13.15027,   0.00000, 0.00000, -107.70000);
	CreateDynamicObject(1594, 1025.21753, -1988.37366, 12.66645,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 1018.74512, -1985.89783, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1029.39600, -1987.54907, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1025.66199, -1983.59717, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1022.24121, -1986.17322, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1019.81885, -1980.80139, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1016.45959, -1983.59766, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1024.18176, -1979.37036, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(1594, 1029.78589, -1981.01111, 12.66645,   0.00000, 0.00000, 26.40000);
	CreateDynamicObject(621, 1015.16101, -1973.23169, 7.59375,   356.85840, 0.00000, -0.41888);
	CreateDynamicObject(621, 1029.62280, -1974.27319, 7.59375,   356.85840, 0.00000, -0.41888);
	CreateDynamicObject(621, 1025.43872, -2029.93921, 7.59375,   356.85840, 0.00000, -0.41888);
	CreateDynamicObject(621, 1012.32336, -2026.76343, 7.59375,   356.85840, 0.00000, -0.41888);
	//Rua do Grau
	CreateDynamicObject(1491, 1095.91968, -2442.43604, 54.92177,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5794, 27.27324, 210.68056, 1.44752,   0.00000, 0.00000, -22.32000);
	CreateDynamicObject(5794, 61.89226, 295.32675, 1.36195,   0.00000, 0.00000, -22.32000);
	CreateDynamicObject(5794, 97.39606, 382.08783, 1.44752,   0.00000, 0.00000, -22.32000);
	CreateDynamicObject(5794, 132.39537, 467.22507, 1.48643,   0.00000, 0.00000, -22.32000);
	CreateDynamicObject(10067, 168.37355, 556.87177, 10.06732,   0.00000, 0.00000, -110.70000);
	CreateDynamicObject(10067, 208.47174, 664.07153, 10.06512,   0.00000, 0.00000, 68.04008);
	CreateDynamicObject(1290, 190.14101, 660.73840, 13.23665,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 177.85710, 683.34796, 10.56296,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 239.60193, 662.86597, 10.56296,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 216.45291, 644.14502, 16.51610,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 207.66472, 620.34351, 22.87600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 172.86786, 611.71436, 22.87600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 180.69049, 543.22321, 6.36761,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 139.27779, 523.18689, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 145.16124, 466.23322, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 145.16124, 466.23322, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 145.16124, 466.23322, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 98.80128, 415.85150, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 99.04914, 354.62799, 5.57564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 58.71325, 320.49625, 5.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 66.16636, 276.58594, 5.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 25.16153, 237.43950, 5.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 32.80055, 190.16533, 5.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8313, 170.63387, 522.09576, 3.37435,   0.00000, 0.00000, -188.99985);
	CreateDynamicObject(8313, 180.82585, 546.95636, 5.26195,   0.00000, 0.00000, -185.09999);
	CreateDynamicObject(8313, 186.84471, 561.26703, 11.33431,   -17.46003, 5.46000, -185.09999);
	CreateDynamicObject(8313, 190.36922, 571.48676, 15.56853,   -17.46003, 5.46000, -185.09999);
	CreateDynamicObject(8313, 199.45276, 594.25098, 20.41170,   2.33997, 5.64000, -185.09999);
	CreateDynamicObject(8313, 206.57788, 613.75433, 19.84363,   2.33997, 5.64000, -181.92000);
	CreateDynamicObject(8313, 177.99690, 627.67523, 19.84363,   2.33997, 5.64000, -4.43997);
	CreateDynamicObject(8313, 168.84908, 603.63129, 20.41170,   2.33997, 5.64000, -5.46001);
	CreateDynamicObject(8313, 159.47888, 581.79803, 15.41536,   -17.46003, 5.46000, -185.09999);
	CreateDynamicObject(8313, 154.48750, 570.26154, 9.79622,   -17.46003, 5.46000, -185.09999);
	CreateDynamicObject(8313, 149.70639, 558.79126, 4.83138,   0.00000, 0.00000, -185.09999);
	CreateDynamicObject(8313, 141.88797, 533.85516, 3.93833,   0.00000, 0.00000, -179.28006);
	CreateDynamicObject(8147, 137.93149, 443.86569, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(8147, 112.46648, 455.63910, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(8147, 57.98778, 321.62851, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(8147, 83.69920, 310.68805, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(8147, 52.70536, 234.80371, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(8147, 25.17908, 242.00591, 4.61863,   0.00000, 0.00000, -22.14001);
	CreateDynamicObject(1267, 35.53428, 157.33701, 16.93727,   0.00000, 0.00000, -77.46001);
	//Lojinha Pankeka
	CreateDynamicObject(19464, 847.83051, -2059.63599, 13.42209,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 847.83008, -2053.77881, 13.42209,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 844.95093, -2062.38550, 13.42209,   0.00000, 0.00000, 89.88006);
	CreateDynamicObject(19464, 839.10663, -2062.33887, 13.42209,   0.00000, 0.00000, 89.88006);
	CreateDynamicObject(19464, 833.22998, -2062.31689, 13.42209,   0.00000, 0.00000, 89.88006);
	CreateDynamicObject(19464, 827.39240, -2062.30200, 13.42209,   0.00000, 0.00000, 89.88006);
	CreateDynamicObject(19464, 824.49811, -2059.29004, 13.42209,   0.00000, 0.00000, 180.65967);
	CreateDynamicObject(19464, 824.44385, -2053.40552, 13.42209,   0.00000, 0.00000, 180.65967);
	CreateDynamicObject(19464, 824.39856, -2047.51147, 13.42209,   0.00000, 0.00000, 180.65967);
	CreateDynamicObject(19464, 847.81097, -2048.02734, 13.42209,   0.00000, 0.00000, 180.65967);
	CreateDynamicObject(19464, 844.93494, -2044.88074, 13.42209,   0.00000, 0.00000, 89.33959);
	CreateDynamicObject(19464, 827.47418, -2044.67163, 13.42209,   0.00000, 0.00000, 89.33959);
	CreateDynamicObject(19388, 836.25195, -2044.69287, 13.58036,   0.00000, 0.00000, 90.06003);
	CreateDynamicObject(19464, 831.67584, -2044.71057, 13.42209,   0.00000, 0.00000, 89.33959);
	CreateDynamicObject(19464, 840.80426, -2044.85962, 13.42209,   0.00000, 0.00000, 89.33959);
	CreateDynamicObject(19741, 844.61432, -2059.16602, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19388, 836.23853, -2044.68042, 14.27441,   0.00000, 0.00000, 90.06003);
	CreateDynamicObject(19741, 833.04596, -2047.85217, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 838.45435, -2059.20166, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 832.28748, -2059.18140, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.63263, -2059.19751, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.57507, -2047.78564, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 833.20111, -2053.03784, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 839.38690, -2053.07813, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 844.60876, -2053.40112, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 844.68500, -2048.08472, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 838.77460, -2047.86694, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.46320, -2053.03394, 11.81272,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 833.93231, -2059.13745, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.67456, -2059.14502, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 840.15247, -2059.14722, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 844.73297, -2059.14600, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 844.74713, -2052.97485, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 838.52759, -2053.02954, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 832.30475, -2053.03906, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.60376, -2053.02271, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 827.42444, -2047.73608, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 833.67047, -2047.82031, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 839.90411, -2047.87024, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19741, 844.57690, -2048.14209, 15.90991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 835.45703, -2044.68262, 11.86526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2626, 836.17358, -2060.27197, 12.37999,   0.00000, 0.00000, 177.77989);
	CreateDynamicObject(2586, 839.54156, -2058.48779, 12.59625,   0.00000, 0.00000, 181.44017);
	CreateDynamicObject(2586, 841.93005, -2058.38428, 12.59625,   0.00000, 0.00000, 181.44017);
	CreateDynamicObject(1844, 847.18744, -2053.80005, 11.87088,   0.00000, 0.00000, -89.81996);
	CreateDynamicObject(1844, 825.16187, -2047.78064, 11.87088,   0.00000, 0.00000, 86.82007);
	CreateDynamicObject(1891, 842.06848, -2053.76001, 11.87252,   0.00000, 0.00000, -91.74000);
	CreateDynamicObject(1891, 841.89636, -2048.06250, 11.87252,   0.00000, 0.00000, -91.74000);
	CreateDynamicObject(1891, 833.67377, -2047.61841, 11.87252,   0.00000, 0.00000, -91.74000);
	CreateDynamicObject(1891, 833.67883, -2052.81104, 11.87252,   0.00000, 0.00000, -91.74000);
	CreateDynamicObject(1844, 847.78723, -2049.70093, 11.87088,   0.00000, 0.00000, -89.81996);
	CreateDynamicObject(1844, 824.88104, -2053.69653, 11.87088,   0.00000, 0.00000, 86.82007);
	//Remover Anti RP Caminhoneiro
	CreateDynamicObject(1237, -95.36018, -1024.47668, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -94.36084, -1025.89331, 23.10358,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -93.36252, -1027.67139, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -92.54119, -1029.28320, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -91.48673, -1030.83386, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -90.40498, -1032.52368, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -89.66257, -1033.82019, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -96.50311, -1022.53247, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -97.69787, -1020.69513, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -98.94598, -1018.95575, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -100.33730, -1016.70502, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -101.85210, -1014.37256, 23.02359,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -103.31908, -1012.26953, 23.15030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -104.65892, -1010.18182, 23.22068,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -106.20464, -1007.78577, 23.23476,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -107.63702, -1005.60980, 23.26291,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -109.37989, -1003.41382, 23.44593,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -110.61765, -1001.93683, 23.44593,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19992, -132.81216, -969.75867, 25.13358,   0.00000, 0.00000, -99.06001);
	//Mapas Fernandin
	CreateDynamicObject(19636, 2319.95654, 2131.59399, 34.44675,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19636, 1276.20801, -774.01849, 1081.76331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1346.01746, -1758.93298, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1349.59863, -1758.86780, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1347.90295, -1758.79858, 12.46590,   0.00000, 0.00000, -103.44001);
	CreateDynamicObject(1885, 1344.22534, -1759.01355, 12.46590,   0.00000, 0.00000, -97.92000);
	CreateDynamicObject(19592, 1343.17578, -1755.19263, 12.83915,   0.00000, 0.00000, 38.93999);
	CreateDynamicObject(19592, 1358.93384, -1757.17944, 13.05226,   0.00000, 0.00000, -22.98000);
	CreateDynamicObject(19592, 1343.10510, -1758.56482, 13.02709,   0.00000, 0.00000, -22.98000);
	CreateDynamicObject(2059, 1354.34216, -1754.78406, 12.48317,   0.00000, 0.00000, 1.08000);
	CreateDynamicObject(2059, 1359.19604, -1751.33643, 12.48317,   0.00000, 0.00000, 14.04000);
	CreateDynamicObject(2059, 1349.04285, -1751.48059, 12.48317,   0.00000, 0.00000, -22.86000);
	CreateDynamicObject(2059, 1347.59570, -1753.75220, 12.48317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19637, 1355.20740, -1758.77844, 12.49908,   0.00000, 0.00000, 11.64000);
	CreateDynamicObject(19637, 1356.14990, -1758.70093, 12.49908,   0.00000, 0.00000, -17.76000);
	CreateDynamicObject(19637, 1356.96936, -1758.70007, 12.49908,   0.00000, 0.00000, 12.66000);
	CreateDynamicObject(19639, 1358.01648, -1758.50415, 12.50674,   0.00000, 0.00000, 20.58000);
	CreateDynamicObject(19639, 1357.98328, -1758.42590, 12.64908,   0.00000, 0.00000, -55.91999);
	CreateDynamicObject(19639, 1357.98401, -1758.36206, 12.82979,   0.00000, 0.00000, 21.30000);
	CreateDynamicObject(19868, 1339.58582, -1762.11755, 12.40015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1364.11633, -1772.60950, 12.48379,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1364.13831, -1772.92566, 12.46209,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1339.28210, -1762.13208, 12.42105,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1340.67334, -1814.93457, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1338.85327, -1825.25525, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1378.92896, -1820.63403, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1378.94214, -1824.11218, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1362.09668, -1721.99658, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.88110, -1721.88879, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1361.76965, -1684.37158, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1410.46460, -1711.74304, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.52441, -1716.94421, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.53247, -1722.13831, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1361.15649, -1683.08984, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1355.93469, -1683.08948, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1361.78296, -1619.10681, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.51636, -1619.08704, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.53381, -1619.09680, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1365.43164, -1593.29260, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1394.75964, -1706.50977, 12.71500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1399.03784, -1450.44788, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1404.28699, -1450.42419, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1390.95911, -1465.47937, 12.71500,   0.00000, 0.00000, 80.10000);
	CreateDynamicObject(1221, 1362.91833, -1758.69849, 12.98438,   3.14159, 0.00000, 3.05433);
	CreateDynamicObject(1411, 1417.33801, -1326.59131, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(1411, 1417.42456, -1331.80408, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(19868, 1370.71936, -1574.82129, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1365.87915, -1573.43103, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(2674, 1356.54712, -1751.25562, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1351.41125, -1754.14172, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11706, 1353.83142, -1759.12939, 12.49428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11706, 1336.77844, -1754.01477, 12.49430,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1230, 1361.99597, -1758.91724, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(1230, 1363.49988, -1757.96277, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(3578, 1361.42224, -1745.92932, 11.79977,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2490.58130, -1670.28271, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.64722, -1670.26587, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.62817, -1666.32056, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2490.52832, -1666.33374, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 2464.11987, -1659.35046, 18.02606,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3092, 2461.71582, -1667.17126, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(3092, 2461.82397, -1651.67358, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(2333, 2630.31934, -1694.68140, 36.95911,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2115, 2500.88086, -1656.53223, 12.39238,   -0.06000, -0.48000, -32.27999);
	CreateDynamicObject(2115, 2502.53857, -1657.55078, 12.39238,   0.00000, 0.00000, -32.27999);
	CreateDynamicObject(353, 2500.89502, -1656.70264, 13.19301,   95.58007, 73.19993, 27.00000);
	CreateDynamicObject(353, 2501.58398, -1656.67322, 13.19301,   95.58007, 73.19993, 210.48000);
	CreateDynamicObject(1242, 2502.05151, -1657.19519, 13.33165,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1242, 2502.38574, -1657.72986, 13.29657,   -81.90005, 24.84000, 46.74000);
	CreateDynamicObject(1654, 2502.92700, -1657.67517, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(1654, 2503.10278, -1658.12610, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(2674, 2499.06958, -1659.82422, 12.42373,   0.00000, 0.00000, -14.46001);
	CreateDynamicObject(2674, 2486.84302, -1659.70300, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.72656, -1661.07092, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2494.84961, -1665.34680, 12.39062,   0.00000, 0.00000, -52.14000);
	CreateDynamicObject(2674, 2503.75806, -1663.72888, 12.46997,   0.00000, 0.00000, 28.92001);
	CreateDynamicObject(2674, 2492.66699, -1676.56299, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2495.51978, -1681.80823, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2502.64941, -1678.11707, 12.41917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2490.20825, -1685.19092, 12.59858,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2486.84131, -1678.01013, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.33203, -1674.28967, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2480.47168, -1680.12476, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2482.94531, -1667.40393, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2476.50928, -1666.79395, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2500.73755, -1671.16968, 12.64443,   0.00000, 0.00000, 1.91997);
	CreateDynamicObject(3594, 2506.63037, -1670.96021, 12.90103,   3.11636, 0.00700, 1.98959);
	CreateDynamicObject(3594, 2482.85107, -1682.09583, 13.08211,   3.11636, 0.00700, 109.56959);
	CreateDynamicObject(3594, 2480.73975, -1679.64587, 12.77474,   3.11636, 0.00700, 53.22955);
	CreateDynamicObject(3279, 2473.12354, -1685.19775, 12.35112,   0.00000, 0.00000, 47.16000);
	CreateDynamicObject(3279, 2534.26758, -1712.21704, 12.35112,   0.00000, 0.00000, 147.41995);
	CreateDynamicObject(3279, 2535.00488, -1644.53076, 12.61108,   0.00000, 0.00000, 226.38002);
	CreateDynamicObject(19868, 2540.99146, -1712.21594, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2540.98413, -1717.44385, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2522.56665, -1722.24768, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2481.02100, -1722.17285, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2477.98047, -1722.20935, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19636, 2319.95654, 2131.59399, 34.44675,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19636, 1276.20801, -774.01849, 1081.76331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1346.01746, -1758.93298, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1349.59863, -1758.86780, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1347.90295, -1758.79858, 12.46590,   0.00000, 0.00000, -103.44001);
	CreateDynamicObject(1885, 1344.22534, -1759.01355, 12.46590,   0.00000, 0.00000, -97.92000);
	CreateDynamicObject(19592, 1343.17578, -1755.19263, 12.83915,   0.00000, 0.00000, 38.93999);
	CreateDynamicObject(19592, 1343.10510, -1758.56482, 13.02709,   0.00000, 0.00000, -22.98000);
	CreateDynamicObject(2059, 1354.34216, -1754.78406, 12.48317,   0.00000, 0.00000, 1.08000);
	CreateDynamicObject(2059, 1359.19604, -1751.33643, 12.48317,   0.00000, 0.00000, 14.04000);
	CreateDynamicObject(2059, 1349.04285, -1751.48059, 12.48317,   0.00000, 0.00000, -22.86000);
	CreateDynamicObject(2059, 1347.59570, -1753.75220, 12.48317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19637, 1355.20740, -1758.77844, 12.49908,   0.00000, 0.00000, 11.64000);
	CreateDynamicObject(19637, 1356.14990, -1758.70093, 12.49908,   0.00000, 0.00000, -17.76000);
	CreateDynamicObject(19637, 1356.96936, -1758.70007, 12.49908,   0.00000, 0.00000, 12.66000);
	CreateDynamicObject(19639, 1358.01648, -1758.50415, 12.50674,   0.00000, 0.00000, 20.58000);
	CreateDynamicObject(19639, 1357.98328, -1758.42590, 12.64908,   0.00000, 0.00000, -55.91999);
	CreateDynamicObject(19639, 1357.98401, -1758.36206, 12.82979,   0.00000, 0.00000, 21.30000);
	CreateDynamicObject(19868, 1339.58582, -1762.11755, 12.40015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1364.11633, -1772.60950, 12.48379,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1364.13831, -1772.92566, 12.46209,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1339.28210, -1762.13208, 12.42105,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1340.67334, -1814.93457, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1338.85327, -1825.25525, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1378.92896, -1820.63403, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1378.94214, -1824.11218, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1362.09668, -1721.99658, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.88110, -1721.88879, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.52734, -1684.39343, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1410.46460, -1711.74304, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.52441, -1716.94421, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.53247, -1722.13831, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1361.15649, -1683.08984, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1355.93469, -1683.08948, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1361.78296, -1619.10681, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.51636, -1619.08704, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.53381, -1619.09680, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1365.43164, -1593.29260, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1394.75964, -1706.50977, 12.71500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1399.03784, -1450.44788, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1404.28699, -1450.42419, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1390.95911, -1465.47937, 12.71500,   0.00000, 0.00000, 80.10000);
	CreateDynamicObject(1221, 1362.91833, -1758.69849, 12.98438,   3.14159, 0.00000, 3.05433);
	CreateDynamicObject(1411, 1417.33801, -1326.59131, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(1411, 1417.42456, -1331.80408, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(19868, 1365.87915, -1573.43103, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(2674, 1356.54712, -1751.25562, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1351.41125, -1754.14172, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11706, 1353.83142, -1759.12939, 12.49428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1230, 1361.99597, -1758.91724, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(1230, 1363.49988, -1757.96277, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(3578, 1361.58948, -1750.17029, 11.76384,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2490.58130, -1670.28271, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.64722, -1670.26587, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.62305, -1666.30115, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2490.52832, -1666.33374, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 2464.11987, -1659.35046, 18.02606,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3092, 2461.71582, -1667.17126, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(3092, 2461.82397, -1651.67358, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(2333, 2630.31934, -1694.68140, 36.95911,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2115, 2500.88086, -1656.53223, 12.39238,   -0.06000, -0.48000, -32.27999);
	CreateDynamicObject(2115, 2502.53857, -1657.55078, 12.39238,   0.00000, 0.00000, -32.27999);
	CreateDynamicObject(353, 2500.89502, -1656.70264, 13.19301,   95.58007, 73.19993, 27.00000);
	CreateDynamicObject(353, 2501.58398, -1656.67322, 13.19301,   95.58007, 73.19993, 210.48000);
	CreateDynamicObject(1242, 2502.05151, -1657.19519, 13.33165,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1242, 2502.38574, -1657.72986, 13.29657,   -81.90005, 24.84000, 46.74000);
	CreateDynamicObject(1654, 2502.92700, -1657.67517, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(1654, 2503.10278, -1658.12610, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(2674, 2499.06958, -1659.82422, 12.42373,   0.00000, 0.00000, -14.46001);
	CreateDynamicObject(2674, 2486.84302, -1659.70300, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.72656, -1661.07092, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2494.84961, -1665.34680, 12.39062,   0.00000, 0.00000, -52.14000);
	CreateDynamicObject(2674, 2503.75806, -1663.72888, 12.46997,   0.00000, 0.00000, 28.92001);
	CreateDynamicObject(2674, 2492.66699, -1676.56299, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2495.51978, -1681.80823, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2502.64941, -1678.11707, 12.41917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2490.20825, -1685.19092, 12.59858,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2486.84131, -1678.01013, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.33203, -1674.28967, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2480.47168, -1680.12476, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2482.94531, -1667.40393, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2476.50928, -1666.79395, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2500.73755, -1671.16968, 12.64443,   0.00000, 0.00000, 1.91997);
	CreateDynamicObject(3594, 2506.63037, -1670.96021, 12.90103,   3.11636, 0.00700, 1.98959);
	CreateDynamicObject(3594, 2482.85107, -1682.09583, 13.08211,   3.11636, 0.00700, 109.56959);
	CreateDynamicObject(3594, 2480.73975, -1679.64587, 12.77474,   3.11636, 0.00700, 53.22955);
	CreateDynamicObject(3279, 2473.12354, -1685.19775, 12.35112,   0.00000, 0.00000, 47.16000);
	CreateDynamicObject(3279, 2534.26758, -1712.21704, 12.35112,   0.00000, 0.00000, 147.41995);
	CreateDynamicObject(3279, 2535.00488, -1644.53076, 12.61108,   0.00000, 0.00000, 226.38002);
	CreateDynamicObject(19868, 2540.99146, -1712.21594, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2540.98413, -1717.44385, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2522.56665, -1722.24768, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2481.02100, -1722.17285, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2477.98047, -1722.20935, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19636, 2319.95654, 2131.59399, 34.44675,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19636, 1276.20801, -774.01849, 1081.76331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1885, 1346.01746, -1758.93298, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1349.59863, -1758.86780, 12.46590,   0.00000, 0.00000, -63.60001);
	CreateDynamicObject(1885, 1347.90295, -1758.79858, 12.46590,   0.00000, 0.00000, -103.44001);
	CreateDynamicObject(1885, 1344.22534, -1759.01355, 12.46590,   0.00000, 0.00000, -97.92000);
	CreateDynamicObject(19592, 1343.17578, -1755.19263, 12.83915,   0.00000, 0.00000, 38.93999);
	CreateDynamicObject(19592, 1343.10510, -1758.56482, 13.02709,   0.00000, 0.00000, -22.98000);
	CreateDynamicObject(2059, 1354.34216, -1754.78406, 12.48317,   0.00000, 0.00000, 1.08000);
	CreateDynamicObject(2059, 1359.19604, -1751.33643, 12.48317,   0.00000, 0.00000, 14.04000);
	CreateDynamicObject(2059, 1349.04285, -1751.48059, 12.48317,   0.00000, 0.00000, -22.86000);
	CreateDynamicObject(2059, 1347.59570, -1753.75220, 12.48317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19637, 1355.20740, -1758.77844, 12.49908,   0.00000, 0.00000, 11.64000);
	CreateDynamicObject(19637, 1356.14990, -1758.70093, 12.49908,   0.00000, 0.00000, -17.76000);
	CreateDynamicObject(19637, 1356.96851, -1758.72009, 12.49908,   0.00000, 0.00000, 12.66000);
	CreateDynamicObject(19639, 1358.01648, -1758.50415, 12.50674,   0.00000, 0.00000, 20.58000);
	CreateDynamicObject(19639, 1357.98328, -1758.42590, 12.64908,   0.00000, 0.00000, -55.91999);
	CreateDynamicObject(19639, 1357.98474, -1758.38208, 12.82979,   0.00000, 0.00000, 21.30000);
	CreateDynamicObject(19868, 1339.58582, -1762.11755, 12.40015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1364.11633, -1772.60950, 12.48379,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1364.13831, -1772.92566, 12.46209,   0.00000, 0.00000, -90.11998);
	CreateDynamicObject(19868, 1339.28210, -1762.13208, 12.42105,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1340.67334, -1814.93457, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1338.85327, -1825.25525, 12.46210,   0.00000, 0.00000, 180.12000);
	CreateDynamicObject(19868, 1378.92896, -1820.63403, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1378.94214, -1824.11218, 12.46210,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(19868, 1362.09668, -1721.99658, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.88110, -1721.88879, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1410.46460, -1711.74304, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.52441, -1716.94421, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1410.53247, -1722.13831, 6.08160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1361.15649, -1683.08984, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1355.93469, -1683.08948, 7.37107,   0.00000, 0.00000, 180.00002);
	CreateDynamicObject(19868, 1361.78296, -1619.10681, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.51636, -1619.08704, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1356.53381, -1619.09680, 12.71497,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1365.43164, -1593.29260, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1360.48938, -1591.70508, 12.71500,   0.00000, 0.00000, -18.10000);
	CreateDynamicObject(19868, 1394.75964, -1706.50977, 12.71500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, 1399.03784, -1450.44788, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1404.28699, -1450.42419, 12.71500,   0.00000, 0.00000, 180.10001);
	CreateDynamicObject(19868, 1390.95911, -1465.47937, 12.71500,   0.00000, 0.00000, 80.10000);
	CreateDynamicObject(1221, 1362.91833, -1758.69849, 12.98438,   3.14159, 0.00000, 3.05433);
	CreateDynamicObject(1411, 1417.33801, -1326.59131, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(1411, 1417.42456, -1331.80408, 14.11719,   356.85840, 0.00000, -89.05082);
	CreateDynamicObject(2674, 1356.54712, -1751.25562, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 1351.41125, -1754.14172, 12.39317,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11706, 1353.83142, -1759.12939, 12.49428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1230, 1361.99597, -1758.91724, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(1230, 1363.49988, -1757.96277, 12.89842,   356.85840, 0.00000, -0.78540);
	CreateDynamicObject(19128, 2490.58130, -1670.28271, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.64722, -1670.26587, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2486.62305, -1666.30115, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 2490.52832, -1666.33374, 12.37829,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 2464.11987, -1659.35046, 18.02606,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3092, 2461.71582, -1667.17126, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(3092, 2461.82397, -1651.67358, 14.98542,   0.00000, 0.00000, 59.52001);
	CreateDynamicObject(2333, 2630.31934, -1694.68140, 36.95911,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2115, 2500.88086, -1656.53223, 12.39238,   -0.06000, -0.48000, -32.27999);
	CreateDynamicObject(2115, 2502.53857, -1657.55078, 12.39238,   0.00000, 0.00000, -32.27999);
	CreateDynamicObject(353, 2500.89502, -1656.70264, 13.19301,   95.58007, 73.19993, 27.00000);
	CreateDynamicObject(353, 2501.58398, -1656.67322, 13.19301,   95.58007, 73.19993, 210.48000);
	CreateDynamicObject(1242, 2502.05151, -1657.19519, 13.33165,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1242, 2502.38574, -1657.72986, 13.29657,   -81.90005, 24.84000, 46.74000);
	CreateDynamicObject(1654, 2502.92700, -1657.67517, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(1654, 2503.10278, -1658.12610, 13.29457,   -84.24002, 8.52003, -2.88000);
	CreateDynamicObject(2674, 2499.06958, -1659.82422, 12.42373,   0.00000, 0.00000, -14.46001);
	CreateDynamicObject(2674, 2486.84302, -1659.70300, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.72656, -1661.07092, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2494.84961, -1665.34680, 12.39062,   0.00000, 0.00000, -52.14000);
	CreateDynamicObject(2674, 2503.75806, -1663.72888, 12.46997,   0.00000, 0.00000, 28.92001);
	CreateDynamicObject(2674, 2492.66699, -1676.56299, 12.39062,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2495.51978, -1681.80823, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2502.64941, -1678.11707, 12.41917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2490.20825, -1685.19092, 12.59858,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2486.84131, -1678.01013, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2479.33203, -1674.28967, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2480.47168, -1680.12476, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2482.94531, -1667.40393, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2476.50928, -1666.79395, 12.45917,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, 2500.73755, -1671.16968, 12.64443,   0.00000, 0.00000, 1.91997);
	CreateDynamicObject(3594, 2506.63037, -1670.96021, 12.90103,   3.11636, 0.00700, 1.98959);
	CreateDynamicObject(3594, 2482.85107, -1682.09583, 13.08211,   3.11636, 0.00700, 109.56959);
	CreateDynamicObject(3594, 2480.73975, -1679.64587, 12.77474,   3.11636, 0.00700, 53.22955);
	CreateDynamicObject(3279, 2473.12354, -1685.19775, 12.35112,   0.00000, 0.00000, 47.16000);
	CreateDynamicObject(3279, 2534.26758, -1712.21704, 12.35112,   0.00000, 0.00000, 147.41995);
	CreateDynamicObject(3279, 2535.00488, -1644.53076, 12.61108,   0.00000, 0.00000, 226.38002);
	CreateDynamicObject(19868, 2540.99146, -1712.21594, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2540.98413, -1717.44385, 12.43271,   0.00000, 0.00000, 89.87995);
	CreateDynamicObject(19868, 2522.56665, -1722.24768, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2481.02100, -1722.17285, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(19868, 2477.98047, -1722.20935, 12.43271,   0.00000, 0.00000, 0.89994);
	CreateDynamicObject(3655, -294.33252, -892.70490, 45.82057,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -306.11456, -918.14154, 47.89605,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -273.05856, -902.49030, 42.49503,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -300.07349, -905.07520, 46.63926,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.06357, -916.97192, 42.69263,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.35703, -929.57336, 42.69263,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.58453, -944.77679, 41.01680,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.35703, -929.57336, 38.62127,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -264.11591, -920.92828, 38.62127,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -271.08252, -946.52185, 35.62757,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -314.87140, -927.57898, 50.87259,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -295.21881, -957.77454, 47.72024,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -325.94174, -937.66577, 53.81485,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -328.85938, -951.35492, 54.85411,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -292.92087, -937.47876, 47.72024,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -283.10605, -964.52936, 44.35453,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -262.77295, -934.14935, 34.51416,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -272.93277, -969.26581, 38.78962,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -259.10483, -950.95477, 33.92317,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -258.23035, -960.82440, 32.69070,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -322.42719, -963.77307, 53.83838,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -305.60352, -969.98889, 49.54008,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -295.47391, -976.25684, 47.60722,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -289.04587, -985.07104, 46.46992,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -279.14429, -990.33563, 43.92639,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -313.37164, -982.89374, 52.79073,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -330.84119, -976.14490, 57.33995,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -337.58304, -964.17914, 58.65096,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(16327, -275.84903, -890.91071, 44.83628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, -271.17587, -901.31842, 48.25262,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(16327, -287.42264, -887.04462, 45.15678,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16327, -316.79657, -946.48468, 49.32197,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3399, -304.31964, -955.05859, 48.50699,   0.00000, 0.00000, -113.27999);
	CreateDynamicObject(11293, -301.95471, -998.66113, 51.85854,   0.00000, 0.00000, 51.96000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1025, -301.47318, -941.24402, 45.90815,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1361.68420, -1754.14929, 11.78059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(983, 1360.87622, -1754.54773, 12.76893,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(983, 1359.96094, -1742.49890, 13.52796,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(983, 1361.84485, -1742.50879, 13.52796,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(983, 1359.73450, -1754.54944, 12.76893,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(983, 1329.04370, -1740.63354, 13.01925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1330.08679, -1737.72400, 12.95907,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1330.08081, -1726.63391, 12.95907,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(983, 1329.16052, -1723.32947, 13.01925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1335.62476, -1726.68176, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1335.56824, -1737.77368, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1324.66064, -1737.58398, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1324.68347, -1726.68018, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1330.25781, -1732.29004, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1350.03357, -1732.23608, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1331.13416, -1732.23608, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1334.36731, -1732.23584, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1337.64270, -1732.18835, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1341.26367, -1732.24854, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1344.67432, -1732.20190, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1341.26367, -1732.24854, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1347.68127, -1732.29492, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1350.13342, -1732.30151, 12.63658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1351.04102, -1732.24561, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1351.98328, -1732.30591, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1353.00342, -1732.25293, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1353.95337, -1732.33289, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1354.90271, -1732.26563, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1355.78088, -1732.29932, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1356.75598, -1732.24426, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1357.57520, -1732.23621, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1358.46399, -1732.23450, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1359.39526, -1732.25415, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1360.33691, -1732.21814, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1361.32666, -1732.23254, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1434, 1362.26306, -1732.17651, 12.37764,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, 1363.11841, -1732.23022, 12.38707,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5837, 1339.87329, -1724.44641, 14.13286,   0.00000, 0.00000, 180.96017);
	CreateDynamicObject(5837, 1369.23499, -1740.58411, 14.13290,   0.00000, 0.00000, 0.96020);
	CreateDynamicObject(970, 809.84949, -1337.44702, 13.07601,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 813.99231, -1337.44385, 13.07601,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 825.31165, -1337.57910, 13.07601,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 807.80615, -1339.49121, 13.07600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 807.82141, -1343.59448, 13.07600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 807.80933, -1347.71838, 13.07600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 807.79541, -1351.84546, 13.07600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 807.78046, -1355.99268, 13.07600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1361, 807.55493, -1336.98242, 13.22671,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 827.41370, -1336.73413, 13.22671,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3657, 820.79810, -1356.42358, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3657, 816.20898, -1356.43457, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3657, 811.79852, -1356.44568, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3657, 811.65356, -1353.73438, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3657, 816.26227, -1353.66565, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3657, 820.78650, -1353.62842, 12.98127,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1342, 816.14233, -1313.38806, 13.50156,   0.00000, 0.00000, -94.56001);
	CreateDynamicObject(19128, 2164.27759, -1002.39795, 61.79435,   0.00000, 0.00000, -10.01999);
	CreateDynamicObject(19128, 2168.15405, -1003.01343, 61.79435,   0.00000, 0.00000, -10.01999);
	CreateDynamicObject(19128, 2167.51660, -1006.88611, 61.79435,   0.00000, 0.00000, -10.01999);
	CreateDynamicObject(19128, 2163.64966, -1006.23114, 61.79435,   0.00000, 0.00000, -10.01999);
	CreateDynamicObject(3279, 2194.00366, -978.96027, 61.78894,   0.00000, 0.00000, -12.48000);
	CreateDynamicObject(1457, 2011.05078, -978.54688, 36.02329,   1.98000, -3.78000, 30.90000);
	CreateDynamicObject(1457, 2175.23730, -993.69409, 63.57425,   0.00000, 0.00000, -9.54000);
	CreateDynamicObject(2674, 2159.74780, -1002.71179, 61.81111,   0.00000, 0.00000, 18.66000);
	CreateDynamicObject(2674, 2158.62622, -1008.18304, 61.81111,   0.00000, 0.00000, -65.88000);
	CreateDynamicObject(2674, 2156.55615, -1004.35541, 61.81111,   0.00000, 0.00000, -20.88000);
	CreateDynamicObject(2674, 2162.27539, -1011.11420, 61.81111,   0.00000, 0.00000, 36.66000);
	CreateDynamicObject(2674, 2167.82520, -1011.85065, 61.81111,   0.00000, 0.00000, 48.17999);
	CreateDynamicObject(2674, 2164.80762, -1016.22089, 61.81111,   0.00000, 0.00000, -29.10000);
	CreateDynamicObject(2674, 2171.39136, -1009.05920, 61.81111,   0.00000, 0.00000, -59.34003);
	CreateDynamicObject(2674, 2173.05469, -1005.07404, 61.81111,   0.00000, 0.00000, -171.66006);
	CreateDynamicObject(2674, 2175.77539, -1003.89307, 61.81111,   0.00000, 0.00000, 36.48000);
	CreateDynamicObject(2674, 2171.15039, -1002.35516, 61.81111,   0.00000, 0.00000, 62.88001);
	CreateDynamicObject(3092, 2007.36035, -1016.76385, 28.70386,   0.00000, 0.00000, 143.70007);
	CreateDynamicObject(3092, 2017.32507, -1027.13672, 28.70386,   0.00000, 0.00000, 74.58007);
	CreateDynamicObject(3092, 2017.33203, -1030.76611, 28.70386,   0.00000, 0.00000, 74.58007);
	CreateDynamicObject(3092, 2017.32507, -1027.13672, 28.70386,   0.00000, 0.00000, 74.58007);
	CreateDynamicObject(3092, 2017.34998, -1034.25720, 28.70386,   0.00000, 0.00000, 74.58007);
	CreateDynamicObject(3092, 2017.44873, -1023.88422, 28.70386,   0.00000, 0.00000, 74.58007);
	CreateDynamicObject(14467, 2002.43774, -1020.58972, 27.97561,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3594, 2012.70300, -1025.19592, 24.71666,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3594, 2011.18640, -1028.51404, 24.11743,   0.00000, 0.00000, 115.56001);
	CreateDynamicObject(3594, 2012.98694, -1035.95032, 24.11743,   0.00000, 0.00000, 35.58001);
	CreateDynamicObject(3594, 1998.01489, -1024.66382, 25.37254,   -3.78000, 3.60001, 127.20015);
	CreateDynamicObject(3594, 1984.88879, -1022.25220, 25.37254,   -3.78000, 3.60001, 194.58008);
	CreateDynamicObject(2115, 2003.23633, -1034.92139, 23.62958,   0.00000, 0.00000, -101.82000);
	CreateDynamicObject(2115, 2002.83594, -1036.82251, 23.62945,   0.00000, 0.00000, -101.81998);
	CreateDynamicObject(1271, 2002.64771, -1037.81519, 24.79468,   0.00000, 0.00000, -30.90001);
	CreateDynamicObject(1438, 2016.21655, -1030.38525, 23.77144,   0.00000, 0.00000, -8.58000);
	CreateDynamicObject(1438, 2016.03613, -1032.07959, 23.77144,   0.00000, 0.00000, -96.42005);
	CreateDynamicObject(1438, 2015.92627, -1028.17615, 23.77144,   0.00000, 0.00000, -187.86008);
	CreateDynamicObject(3594, 2157.06641, -998.31958, 62.43651,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3594, 2161.08325, -1012.71271, 62.43651,   0.00000, 0.00000, 103.85999);
	CreateDynamicObject(3594, 2175.25562, -1009.84741, 62.43651,   0.00000, 0.00000, 188.46002);
	CreateDynamicObject(3594, 2176.55273, -1000.05310, 62.43651,   0.00000, 0.00000, 223.31992);
	CreateDynamicObject(1271, 2002.94617, -1036.51440, 24.79468,   0.00000, 0.00000, -64.26002);
	CreateDynamicObject(1271, 2002.64771, -1037.81519, 24.79468,   0.00000, 0.00000, -30.90001);
	CreateDynamicObject(1271, 2003.29517, -1035.06689, 24.79468,   0.00000, 0.00000, 6.53999);
	CreateDynamicObject(6189, 83.53615, -1849.20349, -12.71678,   0.00000, 0.00000, 273.60016);
	CreateDynamicObject(1231, 70.04613, -1835.31506, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 88.99091, -1833.78479, 4.35530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 109.26777, -1832.69849, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 110.63522, -1862.69153, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 90.38302, -1864.31848, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 72.13492, -1864.52258, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 51.91228, -1836.31531, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 55.65731, -1866.45532, 4.55630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, 42.15060, -1837.43921, 2.76080,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1342, 45.39406, -1866.06702, 2.76076,   0.00000, 0.00000, 92.16003);
	CreateDynamicObject(13681, 28.68223, -1852.58594, 6.80971,   0.00000, 0.00000, 93.90015);
	CreateDynamicObject(983, 19.21985, -1839.83911, 2.15174,   0.00000, 0.00000, 2.34000);
	CreateDynamicObject(983, 19.47494, -1845.10608, 2.15174,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(983, 19.79284, -1851.50757, 2.15174,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(983, 20.12024, -1857.95667, 2.15174,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(983, 20.47140, -1864.36890, 2.15174,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(983, 20.67311, -1866.59937, 2.15174,   0.00000, 0.00000, 3.00000);
	//Fazenda Pankeka
	CreateDynamicObject(11490, 183.48273, -1672.17224, 13.05558,   0.00000, 0.00000, 64.74000);
	CreateDynamicObject(3749, 165.23848, -1617.76965, 19.03494,   1.20001, -1.38002, -49.49999);
	CreateDynamicObject(19912, 180.66954, -1632.81067, 16.42389,   0.00000, 0.00000, -48.54004);
	CreateDynamicObject(19912, 188.27827, -1641.41394, 16.12638,   1.08000, 1.56000, -48.54004);
	CreateDynamicObject(19912, 195.99785, -1650.07642, 15.62532,   -1.08000, 2.58000, -48.54004);
	CreateDynamicObject(19912, 203.61118, -1658.71533, 14.99708,   -1.08000, 2.58000, -48.54004);
	CreateDynamicObject(19912, 211.18227, -1667.28271, 14.46452,   -1.08000, 2.58000, -48.54004);
	CreateDynamicObject(19912, 218.74092, -1675.89404, 13.34530,   -1.08000, 2.58000, -48.54004);
	CreateDynamicObject(19912, 226.32539, -1684.46472, 12.57110,   -1.08000, 2.58000, -48.54004);
	CreateDynamicObject(19912, 219.26033, -1693.68335, 10.83093,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 212.75235, -1702.12891, 9.91825,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 219.26033, -1693.68335, 12.17678,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 205.74960, -1711.24622, 9.39732,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 200.99695, -1717.45569, 8.81910,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 194.75513, -1725.48022, 6.61049,   -1.08000, 2.58000, -127.74004);
	CreateDynamicObject(19912, 183.37454, -1725.98621, 6.04797,   -1.08000, 2.58000, -177.71968);
	CreateDynamicObject(19912, 171.91972, -1726.56201, 6.04797,   -1.08000, 2.58000, -177.71968);
	CreateDynamicObject(19912, 160.43973, -1727.08997, 6.37114,   -1.08000, 2.58000, -177.71968);
	CreateDynamicObject(19912, 149.00505, -1727.55969, 6.93499,   -1.08000, 2.58000, -177.71968);
	CreateDynamicObject(19912, 140.66502, -1719.69775, 7.71738,   -1.08000, 2.58000, -223.43968);
	CreateDynamicObject(19912, 135.67445, -1711.82458, 9.31116,   -1.08000, 2.58000, -235.37950);
	CreateDynamicObject(19912, 129.16994, -1702.38977, 9.99833,   -1.08000, 2.58000, -235.37950);
	CreateDynamicObject(19912, 126.89256, -1691.18408, 9.99833,   -1.08000, 2.58000, -258.89923);
	CreateDynamicObject(19912, 124.65891, -1679.91614, 9.99833,   -1.08000, 2.58000, -258.89923);
	CreateDynamicObject(19912, 122.40771, -1668.66907, 10.63880,   -1.08000, 2.58000, -258.89923);
	CreateDynamicObject(19912, 120.47342, -1657.32800, 11.16492,   -1.08000, 2.58000, -260.75916);
	CreateDynamicObject(19912, 120.16452, -1645.88379, 11.20474,   -1.08000, 2.58000, -268.61884);
	CreateDynamicObject(19912, 120.82807, -1634.44775, 11.20474,   -1.08000, 2.58000, -273.23874);
	CreateDynamicObject(19912, 122.52013, -1623.25720, 11.20474,   -1.08000, 2.58000, -278.63879);
	CreateDynamicObject(19912, 124.28474, -1611.91602, 11.20474,   -1.08000, 2.58000, -278.63879);
	CreateDynamicObject(19912, 129.20551, -1601.55151, 11.82881,   -1.08000, 2.58000, -295.25879);
	CreateDynamicObject(19912, 134.92426, -1591.65320, 11.82881,   -1.08000, 2.58000, -300.11893);
	CreateDynamicObject(19912, 140.54253, -1585.20398, 12.36103,   -1.08000, 2.58000, -308.27893);
	CreateDynamicObject(19912, 149.38777, -1592.37866, 14.14081,   -2.22000, -3.00000, -399.11865);
	CreateDynamicObject(19912, 155.57735, -1599.01880, 14.86500,   -2.22000, -3.00000, -407.33832);
	CreateDynamicObject(19912, 160.42670, -1609.43140, 15.35293,   0.54000, -1.26000, -423.41840);
	CreateDynamicObject(19833, 177.50902, -1654.33936, 14.32975,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 173.14581, -1628.74695, 13.47528,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 176.48036, -1638.87024, 13.88759,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 160.41386, -1643.13611, 13.05756,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 165.69698, -1647.10791, 13.88759,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 183.35649, -1656.48926, 13.88759,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 170.74725, -1675.05945, 14.21498,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7073, 161.25543, -1606.39795, 21.65892,   0.00000, 0.00000, 37.32002);
	CreateDynamicObject(7072, 160.49590, -1608.41357, 19.29384,   0.00000, 0.00000, 38.52003);
	CreateDynamicObject(19129, 139.59766, -1624.66907, 10.88632,   0.95999, -4.49998, 0.00000);
	CreateDynamicObject(3472, 153.51752, -1616.37280, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 153.51752, -1616.37280, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 165.52888, -1629.70020, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 124.53313, -1644.81213, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 195.32799, -1690.25244, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 201.57057, -1673.66638, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(3472, 125.37070, -1673.33057, 10.12930,   -1.26000, 1.80000, 0.00000);
	CreateDynamicObject(1367, 177.12614, -1671.87891, 15.18815,   0.00000, 0.00000, 69.29997);
	CreateDynamicObject(19791, 135.20003, -1669.12463, 2.14622,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 135.21187, -1659.11169, 2.15523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 135.09117, -1649.09875, 2.15523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 128.85509, -1669.14697, 2.20583,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 128.87308, -1659.18054, 2.20583,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 128.63498, -1649.16785, 2.20583,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8407, 138.87767, -1645.52612, 13.56461,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1133, 169.09512, -1599.11218, 12.63409,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 139.54836, -1673.85938, 12.12686,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 128.43237, -1673.75012, 12.12686,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 124.41389, -1668.40234, 12.12686,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 125.03819, -1654.86096, 12.12686,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 126.04585, -1644.76147, 12.07498,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 136.95256, -1645.61414, 12.28252,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19831, 186.68280, -1677.66406, 14.52110,   0.00000, 0.00000, 195.23994);
	CreateDynamicObject(3599, 160.31036, -1704.60596, 19.91393,   0.00000, 0.00000, 176.39996);
	CreateDynamicObject(19791, 161.15396, -1706.98816, 4.28263,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 151.68372, -1706.97876, 4.27928,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 171.18822, -1707.08081, 4.26532,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 151.56464, -1697.01758, 4.27133,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 161.19623, -1697.02136, 4.26818,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19791, 171.19490, -1697.08240, 4.24361,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 129.40453, -1671.64294, 11.63884,   0.00000, 0.00000, 1.38000);
	CreateDynamicObject(3578, 129.48270, -1664.89758, 11.63884,   0.00000, 0.00000, 1.32000);
	CreateDynamicObject(3578, 129.53969, -1657.61023, 11.63884,   0.00000, 0.00000, 1.50000);
	CreateDynamicObject(3578, 129.63881, -1650.42285, 11.63884,   0.00000, 0.00000, 2.04000);
	CreateDynamicObject(1472, 161.10300, -1690.40320, 13.25150,   0.00000, 0.00000, -178.26007);
	CreateDynamicObject(1472, 161.15796, -1691.62268, 14.02906,   0.00000, 0.00000, -178.26007);
	CreateDynamicObject(1472, 162.65804, -1691.60242, 14.02906,   0.00000, 0.00000, -178.26007);
	CreateDynamicObject(1472, 162.58289, -1690.38245, 13.25150,   0.00000, 0.00000, -178.26007);
	CreateDynamicObject(16630, 166.88791, -1692.66577, 14.83453,   0.00000, 0.00000, -1.56000);
	CreateDynamicObject(16630, 172.26256, -1692.78796, 14.83453,   0.00000, 0.00000, -1.56000);
	CreateDynamicObject(16630, 174.79411, -1695.30261, 14.83453,   0.00000, 0.00000, 90.00007);
	CreateDynamicObject(16630, 174.94928, -1700.70667, 14.83453,   0.00000, 0.00000, 92.76006);
	CreateDynamicObject(16630, 175.29553, -1706.02734, 14.83453,   0.00000, 0.00000, 92.76006);
	CreateDynamicObject(16630, 175.44002, -1707.94666, 14.83453,   0.00000, 0.00000, 92.76006);
	CreateDynamicObject(16630, 172.90685, -1710.49036, 14.83453,   0.00000, 0.00000, 173.33990);
	CreateDynamicObject(16630, 156.55553, -1692.67676, 14.83453,   0.00000, 0.00000, -1.56000);
	CreateDynamicObject(16630, 151.36003, -1692.61487, 14.83453,   0.00000, 0.00000, -1.56000);
	CreateDynamicObject(16630, 149.84975, -1692.54773, 14.83453,   0.00000, 0.00000, 0.12000);
	CreateDynamicObject(16630, 147.11595, -1695.04041, 14.83453,   -3.48000, 1.32000, 92.03999);
	CreateDynamicObject(16630, 147.21860, -1699.93408, 14.94888,   -1.86000, 0.36000, 89.28001);
	CreateDynamicObject(16630, 147.15527, -1705.02209, 14.94888,   -1.86000, 0.36000, 85.56001);
	CreateDynamicObject(16630, 149.75119, -1707.95813, 14.94888,   -1.86000, 0.36000, -4.13998);
	//Base PRF
	CreateDynamicObject(11292, -81.69704, -2836.30176, 40.26600,   0.00000, 0.00000, 44.88002);
	CreateDynamicObject(3759, -71.56454, -2829.21655, 42.75757,   0.00000, 0.00000, 45.48006);
	CreateDynamicObject(19791, -52.04664, -2811.63965, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(19791, -58.40162, -2806.65234, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(19791, -52.34903, -2799.34619, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(19791, -46.23279, -2804.20947, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(19791, -40.12308, -2796.46045, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(19791, -46.26556, -2791.61865, 29.63832,   0.00000, 0.00000, 51.83999);
	CreateDynamicObject(1237, -81.84720, -2863.46948, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -78.94261, -2861.24658, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -76.21665, -2859.18140, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -73.47411, -2857.27808, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -70.46590, -2854.87036, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -67.91171, -2852.70337, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -65.29404, -2850.40527, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -62.52530, -2847.95728, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -59.15111, -2844.95190, 38.29856,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1422, -56.85484, -2842.97510, 39.10138,   0.00000, 0.00000, 40.62001);
	CreateDynamicObject(1422, -54.79592, -2841.08594, 39.10138,   0.00000, 0.00000, 44.58003);
	CreateDynamicObject(1422, -52.95427, -2839.05615, 39.10138,   0.00000, 0.00000, 48.24003);
	CreateDynamicObject(1422, -51.16170, -2837.06201, 39.10138,   0.00000, 0.00000, 48.24003);
	CreateDynamicObject(1422, -43.14338, -2828.40332, 39.10138,   0.00000, 0.00000, 48.24003);
	CreateDynamicObject(1422, -41.27002, -2826.40356, 39.10138,   0.00000, 0.00000, 48.24003);
	CreateDynamicObject(1422, -37.85180, -2822.32373, 39.10138,   0.00000, 0.00000, 48.24003);
	CreateDynamicObject(1237, -36.36144, -2820.26416, 39.05266,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -34.75409, -2818.00391, 39.05266,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -33.08458, -2815.73340, 39.05266,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -31.10278, -2813.21973, 39.05266,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -29.04465, -2810.35864, 39.10168,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -27.18553, -2808.05640, 39.10168,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1237, -25.42184, -2805.46753, 39.10168,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19984, 16.20444, -2712.18066, 39.64451,   0.00000, 0.00000, -178.98000);
	CreateDynamicObject(8841, -47.14146, -2820.33081, 42.64363,   0.72000, 0.42000, -37.80000);
	CreateDynamicObject(19791, -34.59456, -2788.76392, 29.63832,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -34.59456, -2788.76392, 29.63832,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -34.59456, -2788.76392, 29.63832,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -34.59456, -2788.76392, 29.67827,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -40.96061, -2784.56299, 29.67827,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -30.51118, -2782.48853, 29.77071,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -36.69315, -2778.14795, 29.80737,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -14.65369, -2816.08667, 29.80737,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -20.14117, -2824.25317, 29.80737,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -9.06613, -2807.76831, 29.80737,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(19791, -3.87908, -2800.01782, 29.80737,   0.00000, 0.00000, 56.34000);
	CreateDynamicObject(1290, -45.45794, -2795.44604, 45.12929,   0.00000, 0.00000, -30.00000);
	CreateDynamicObject(1290, -45.45794, -2795.44604, 45.12929,   0.00000, 0.00000, -30.00000);
	CreateDynamicObject(1290, -36.09980, -2783.66772, 45.12929,   0.00000, 0.00000, -30.00000);
	CreateDynamicObject(1297, -5.78083, -2793.98389, 41.21531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, -23.33472, -2823.25854, 41.20086,   0.00000, 0.00000, -76.97999);
	CreateDynamicObject(8841, -11.65555, -2812.78345, 42.64487,   0.72000, 0.42000, 55.49998);
	CreateDynamicObject(3600, -82.15308, -2820.26172, 38.27422,   0.00000, 0.00000, -229.02007);
	CreateDynamicObject(19791, -95.95906, -2827.14526, 32.23062,   0.00000, 0.00000, 38.27998);
	CreateDynamicObject(19791, -91.61848, -2832.63184, 32.23062,   0.00000, 0.00000, 38.27998);
	CreateDynamicObject(19791, -87.66454, -2829.26855, 32.23062,   0.00000, 0.00000, 38.27998);
	CreateDynamicObject(997, -97.79102, -2823.20679, 42.73734,   0.42000, 1.08000, 38.28000);
	CreateDynamicObject(997, -100.24741, -2825.25317, 42.73734,   0.42000, 1.08000, 38.28000);
	CreateDynamicObject(997, -100.73296, -2827.08960, 42.73734,   0.42000, 1.08000, 124.91999);
	CreateDynamicObject(997, -98.84872, -2829.77686, 42.73734,   0.42000, 1.08000, 124.91999);
	CreateDynamicObject(997, -96.96117, -2832.42920, 42.73734,   0.42000, 1.08000, 126.71999);
	CreateDynamicObject(997, -95.02043, -2835.01001, 42.73734,   0.42000, 1.08000, 126.71999);
	CreateDynamicObject(997, -93.03532, -2837.54492, 42.73734,   0.42000, 1.08000, 126.71999);
	CreateDynamicObject(997, -91.22713, -2837.64722, 42.73734,   0.42000, 1.08000, 216.11998);
	CreateDynamicObject(997, -88.78739, -2835.81250, 42.73734,   0.42000, 1.08000, 218.15993);
	CreateDynamicObject(997, -86.30440, -2833.78027, 42.73734,   0.42000, 1.08000, 218.15993);
	CreateDynamicObject(997, -83.85830, -2831.83911, 42.73734,   0.42000, 1.08000, 218.15993);
	CreateDynamicObject(997, -81.45108, -2829.95044, 42.73734,   0.42000, 1.08000, 218.15993);
	CreateDynamicObject(13714, -112.17369, -2840.41528, 56.12579,   0.00000, 0.00000, 77.46001);
	//Favela pankeka
	CreateDynamicObject(3655, -294.33252, -892.70490, 45.82057,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -306.11456, -918.14154, 47.89605,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -273.05856, -902.49030, 42.49503,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -300.07349, -905.07520, 46.63926,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.06357, -916.97192, 42.69263,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.35703, -929.57336, 42.69263,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.58453, -944.77679, 41.01680,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -274.35703, -929.57336, 38.62127,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -264.11591, -920.92828, 36.74077,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -271.08252, -946.52185, 35.62757,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -314.87140, -927.57898, 50.87259,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -295.21881, -957.77454, 47.72024,   5.32000, 10.58000, 65.04002);
	CreateDynamicObject(3655, -325.94174, -937.66577, 53.81485,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -328.85938, -951.35492, 54.85411,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -292.92087, -937.47876, 46.55476,   13.30003, 2.48002, 65.04002);
	CreateDynamicObject(3655, -283.10605, -964.52936, 44.35453,   11.44000, 5.90000, 65.04002);
	CreateDynamicObject(3655, -262.77295, -934.14935, 34.51416,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -272.93277, -969.26581, 38.78962,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -259.10483, -950.95477, 33.92317,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -258.23035, -960.82440, 32.69070,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -322.42719, -963.77307, 53.94445,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -305.60352, -969.98889, 49.54008,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -295.47391, -976.25684, 46.01430,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -289.04587, -985.07104, 44.66389,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -279.14429, -990.33563, 41.44913,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -313.37164, -982.89374, 52.79073,   6.82000, 8.90001, 65.04002);
	CreateDynamicObject(3655, -330.84119, -976.14490, 54.54054,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -337.58304, -964.17914, 56.29106,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(16327, -275.84903, -890.91071, 44.83628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, -271.17587, -901.31842, 48.25262,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(16327, -287.42264, -887.04462, 45.15678,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3399, -304.31964, -955.05859, 48.50699,   0.00000, 0.00000, -113.27999);
	CreateDynamicObject(11293, -301.95471, -998.66113, 51.54546,   11.58000, 4.68000, 51.96000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8131, 2697.13232, -173.57397, 35.26574,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, -264.11591, -920.92828, 44.79465,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -280.22928, -990.11646, 49.17129,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(3655, -258.16083, -960.78003, 41.09856,   0.28000, 0.08000, 65.04002);
	CreateDynamicObject(2357, -317.09964, -957.47852, 50.37946,   -9.89998, 9.77999, -27.41999);
	CreateDynamicObject(1242, -318.37738, -956.80518, 51.18772,   0.00000, 0.00000, -30.90000);
	CreateDynamicObject(3014, -315.68665, -958.17737, 50.72332,   -0.12000, 8.94000, -27.48000);
	CreateDynamicObject(1654, -316.49615, -957.85284, 50.87857,   3.60000, -9.18000, 148.97990);
	CreateDynamicObject(13591, -314.17624, -945.82721, 49.26270,   -1.02000, 13.14000, 0.00000);
	CreateDynamicObject(939, -300.51050, -936.72729, 47.57744,   11.88000, 8.82000, 68.88000);
	//Desmanche(Elements)
	CreateDynamicObject(19817, 2772.34985, -1620.49023, 9.91170,   0.00000, 0.00000, 87.00000);
	CreateDynamicObject(1086, 2779.11865, -1613.44861, 9.91455,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1086, 2763.78149, -1627.88452, 11.82446,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12957, 2767.36914, -1615.75403, 10.25340,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(12957, 2769.36279, -1611.69434, 10.25340,   0.00000, 0.00000, -16.00000);
	CreateDynamicObject(3594, 2769.66211, -1604.18994, 10.01410,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(3594, 2774.77563, -1617.37183, 10.01410,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(19917, 2771.28857, -1615.72864, 9.90093,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19917, 2771.71777, -1613.98914, 9.90093,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19917, 2773.20483, -1614.38599, 9.90093,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19917, 2775.07983, -1614.89038, 9.90093,   0.00000, 0.00000, 0.00000);
   	//HQ Bratva
   	CreateDynamicObject(3749, 1497.33533, -699.84021, 99.81990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19912, 1515.18506, -699.63892, 96.48090,   0.00000, 0.00000, -1.00000);
	CreateDynamicObject(19912, 1525.52283, -699.82257, 96.48090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19912, 1530.88928, -699.68286, 96.48090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19912, 1530.65930, -688.09833, 96.48090,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(19912, 1530.44971, -676.61493, 96.48090,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(19912, 1530.88281, -665.37640, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19912, 1530.72656, -657.15961, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19912, 1530.71802, -657.56555, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1519.07703, -657.56659, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1507.71533, -657.41003, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1496.14478, -657.62659, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1484.70215, -657.46252, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1473.18640, -657.36755, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1468.43237, -657.29199, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1468.26550, -692.51520, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(19912, 1476.41370, -692.50940, 96.48090,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1478.87708, -695.87396, 95.74440,   0.00000, 0.00000, 121.00000);
	CreateDynamicObject(971, 1485.30029, -699.90942, 95.74440,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(19912, 1457.43481, -657.32233, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19912, 1457.34192, -668.51086, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19912, 1457.14575, -679.62360, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19912, 1456.97058, -680.95306, 96.48090,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1896, 1525.42407, -658.85065, 94.68510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1896, 1527.47156, -658.74701, 94.68510,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject(2637, 1518.31738, -659.15442, 94.15940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2637, 1516.31641, -659.15906, 94.15940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2637, 1514.25598, -659.16339, 94.15940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(355, 1513.80432, -658.81696, 94.61890,   86.00000, 0.00000, 0.00000);
	CreateDynamicObject(355, 1513.77917, -659.23694, 94.61890,   86.00000, 0.00000, 0.00000);
	CreateDynamicObject(14493, 1518.62390, -660.83331, 93.74377,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14493, 1523.70764, -666.65338, 93.74229,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1519.53467, -659.71967, 94.11900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1519.55103, -660.53381, 94.11900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1271, 1520.42542, -659.67352, 94.11900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(327, 1515.42834, -658.79724, 94.56100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(327, 1515.51367, -659.05237, 94.56100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(327, 1515.46240, -659.42194, 94.56100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(327, 1515.68604, -659.25806, 94.56100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 1526.67151, -658.38788, 94.69940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 1526.61646, -658.49640, 94.69940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 1526.61121, -658.57867, 94.69940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 1526.61230, -658.64191, 94.69940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, 1526.23950, -658.79071, 94.96530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1507.14795, -671.50769, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1509.72351, -671.34918, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1512.50244, -671.26489, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1512.35107, -674.76074, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1509.38721, -675.09668, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2802, 1506.83655, -675.26953, 94.13470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3605, 1483.16895, -674.09961, 100.04270,   0.00000, 0.00000, -181.00000);


   	//Favela Groove
   	CreateDynamicObject(3655, 2457.30396, -1674.44189, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2449.08228, -1674.20251, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2450.06226, -1685.30530, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2450.00537, -1697.30078, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2450.03027, -1709.02734, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2449.85132, -1715.76038, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2463.84058, -1713.03955, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2471.45166, -1712.78931, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2483.91235, -1716.15344, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2508.62402, -1708.76257, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2483.67920, -1693.74072, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2497.44385, -1694.57568, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2526.49146, -1717.69727, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.19019, -1715.33264, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.67114, -1703.14954, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2508.46436, -1696.59949, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.86963, -1691.11743, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2532.41968, -1679.35950, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2534.04102, -1667.35999, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.89233, -1655.55103, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.84155, -1643.52368, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.80176, -1634.35291, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2519.70166, -1634.20435, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2506.28296, -1634.36743, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2510.57227, -1680.04419, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2524.37402, -1670.32507, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2522.53687, -1657.71948, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2520.59131, -1645.94482, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2492.71729, -1634.31274, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2478.80200, -1634.73425, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2464.98438, -1634.43884, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2451.05591, -1634.57288, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2436.94482, -1634.52588, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2437.20947, -1643.94727, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2451.35864, -1644.15027, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2508.80884, -1641.41162, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2496.66138, -1705.54041, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2496.66138, -1705.54041, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2484.01440, -1705.32117, 16.74560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 2444.85962, -1658.99097, 17.96240,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3655, 2449.85132, -1715.76038, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2450.12695, -1703.99573, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2449.99243, -1691.94165, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2449.99756, -1680.43689, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2449.91968, -1674.57971, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2457.62891, -1674.38245, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2460.63599, -1712.58252, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2474.59497, -1712.87659, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2483.38965, -1716.97607, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2483.43701, -1705.60242, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2483.43945, -1693.70996, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2497.12402, -1694.28870, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2509.36548, -1697.01099, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2508.94507, -1708.68579, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2496.73364, -1718.57104, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2510.31665, -1717.95691, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2525.06885, -1717.46558, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.48535, -1714.24707, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.59741, -1703.50366, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.45142, -1693.75903, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.32031, -1682.05566, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.56714, -1670.30420, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.43628, -1658.56177, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.52661, -1646.95508, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2533.65552, -1635.40930, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2520.40308, -1634.94019, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2506.32959, -1634.51477, 22.70560,   0.00000, 0.00000, -10.98000);
	CreateDynamicObject(3655, 2520.40308, -1634.94019, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2492.19067, -1634.97693, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2478.50488, -1634.96802, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2465.28735, -1634.58606, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2449.71680, -1634.74292, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2454.41479, -1634.89380, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2450.53247, -1643.56970, 22.70560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2448.61279, -1633.78662, 27.64560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2450.00415, -1643.49365, 27.64560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2449.47632, -1674.02124, 27.64560,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(3655, 2520.50684, -1689.18677, 26.32560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 2510.63770, -1687.42639, 22.70560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14411, 2520.00000, 3052.00000, 5781.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8613, 2502.00000, 3699.00000, -1670.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8613, 2485.00000, 527.00000, -1663.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14414, 2492.00000, 5410.00000, -1666.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2496.00000, 2529.00000, -1663.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2499.20801, -1655.91699, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2499.65381, -1659.82434, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2496.59253, -1663.16248, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2496.25122, -1659.90417, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2493.89282, -1656.80225, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2502.88721, -1657.49915, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2503.34741, -1660.92078, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2500.72095, -1663.15491, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2498.63452, -1665.76013, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2495.81079, -1654.31030, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2493.14185, -1661.36316, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2492.47705, -1664.90576, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2495.14258, -1666.52710, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2503.71997, -1664.18542, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1594, 2501.73730, -1666.59192, 12.87760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1575, 2494.96118, -1666.78491, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2498.44458, -1666.00293, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2501.60229, -1666.81335, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2503.54370, -1664.34839, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2503.13989, -1661.13635, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2500.54468, -1663.33264, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2496.39111, -1663.40527, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2492.23560, -1665.15942, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2493.09229, -1661.76343, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2496.08374, -1660.07336, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2499.49902, -1659.95728, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2502.66553, -1657.74487, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2499.06470, -1656.11890, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2495.68433, -1654.53137, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(1575, 2493.70020, -1657.00330, 13.24540,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(355, 2494.68921, -1666.33057, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2492.19043, -1664.72266, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2496.28687, -1663.05762, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2498.23584, -1665.55859, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2501.40527, -1666.47766, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2503.31689, -1664.04102, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2500.50806, -1662.96655, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2502.97559, -1660.81653, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2499.30713, -1659.67212, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2495.90015, -1659.65039, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2492.99951, -1661.26514, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2493.54541, -1656.56250, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2495.48730, -1654.10583, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2498.93188, -1655.63782, 13.26770,   98.00000, 26.00000, 0.00000);
	CreateDynamicObject(355, 2502.48560, -1657.33740, 13.26770,   98.00000, 26.00000, 0.00000);

   	//Favela Atras Prefeitura
   	CreateDynamicObject(3749, 1426.47034, -1883.95825, 18.04640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 1437.70081, -1920.54333, 15.98640,   0.00000, 0.00000, -9.00000);
	CreateDynamicObject(3655, 1438.75342, -1896.26648, 15.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 1438.78748, -1907.91797, 15.62240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3655, 1405.74768, -1989.44128, 47.87540,   18.00000, -360.00000, -127.00000);
	CreateDynamicObject(3655, 1428.57385, -1933.40320, 16.83140,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(3655, 1415.92346, -1938.90356, 17.66340,   0.00000, 0.00000, -78.00000);
	CreateDynamicObject(3655, 1403.12805, -1940.69739, 18.37840,   0.00000, 0.00000, -88.00000);
	CreateDynamicObject(3655, 1390.24609, -1940.13623, 19.26240,   0.00000, 0.00000, -99.00000);
	CreateDynamicObject(3655, 1378.61951, -1938.30786, 20.04240,   0.00000, 0.00000, -99.00000);
	CreateDynamicObject(3655, 1366.93677, -1936.53711, 21.12140,   0.00000, 0.00000, -99.00000);
	CreateDynamicObject(3655, 1355.22363, -1934.38770, 22.38240,   0.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1343.60571, -1932.07849, 22.83740,   0.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1332.14600, -1929.78210, 23.76040,   0.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1320.63940, -1927.37817, 24.52740,   0.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1309.14050, -1924.91553, 25.42440,   0.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1297.25085, -1922.43616, 26.82840,   -4.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1285.55078, -1920.41650, 27.98540,   -4.00000, 0.00000, -102.00000);
	CreateDynamicObject(3655, 1275.37646, -1919.57581, 29.33740,   -4.00000, 0.00000, -88.00000);
	CreateDynamicObject(3655, 1266.43225, -1921.60547, 31.33940,   -4.00000, 0.00000, -68.00000);
	CreateDynamicObject(3655, 1265.03210, -1921.93469, 33.18540,   -4.00000, 0.00000, 23.00000);
	CreateDynamicObject(3655, 1269.69519, -1927.27405, 31.93740,   2.00000, 0.00000, 60.00000);
	CreateDynamicObject(3655, 1279.24243, -1931.62683, 31.10540,   2.00000, 0.00000, 71.00000);
	CreateDynamicObject(3655, 1290.24365, -1935.70752, 31.10540,   2.00000, 0.00000, 71.00000);
	CreateDynamicObject(3655, 1300.56311, -1938.39087, 31.10540,   2.00000, 0.00000, 79.00000);
	CreateDynamicObject(3655, 1312.73474, -1941.13867, 31.10540,   2.00000, 0.00000, 75.00000);
	CreateDynamicObject(3655, 1324.30139, -1944.24707, 31.10540,   2.00000, 0.00000, 75.00000);
	CreateDynamicObject(3655, 1335.65588, -1947.43616, 31.75540,   -2.00000, 0.00000, 75.00000);
	CreateDynamicObject(3655, 1346.50940, -1949.53003, 32.32740,   -2.00000, 0.00000, 82.00000);
	CreateDynamicObject(3655, 1357.97192, -1951.11462, 33.44540,   -3.00000, 0.00000, 82.00000);
	CreateDynamicObject(3655, 1368.47620, -1952.41394, 34.56340,   -3.00000, 0.00000, 82.00000);
	CreateDynamicObject(3655, 1379.51160, -1953.80432, 36.22740,   -3.00000, 0.00000, 82.00000);
	CreateDynamicObject(3655, 1391.00403, -1955.22522, 38.17740,   -3.00000, 0.00000, 82.00000);
	CreateDynamicObject(3655, 1402.12158, -1956.56348, 41.68740,   -6.00000, 0.00000, 84.00000);
	CreateDynamicObject(3655, 1414.47424, -1959.27893, 44.04040,   -6.00000, 0.00000, 70.00000);
	CreateDynamicObject(3655, 1425.18896, -1964.49597, 47.10840,   -6.00000, 0.00000, 57.00000);
	CreateDynamicObject(3655, 1434.83655, -1972.30225, 49.44840,   -6.00000, 0.00000, 46.00000);
	CreateDynamicObject(3655, 1442.51904, -1984.64709, 51.42440,   -6.00000, 0.00000, 19.00000);
	CreateDynamicObject(3655, 1445.60718, -1995.74890, 52.65940,   -6.00000, 0.00000, 10.00000);
	CreateDynamicObject(3655, 1446.77917, -2007.83423, 52.93240,   -3.00000, 0.00000, -1.00000);
	CreateDynamicObject(3655, 1445.08020, -2020.64746, 53.59540,   -3.00000, 0.00000, -15.00000);
	CreateDynamicObject(3655, 1439.93494, -2032.39648, 54.05040,   -3.00000, 0.00000, -35.00000);
	CreateDynamicObject(3655, 1430.99646, -2042.00732, 54.32340,   -3.00000, 0.00000, -54.00000);
	CreateDynamicObject(3655, 1421.31897, -2048.97754, 55.20740,   -3.00000, 0.00000, -54.00000);
	CreateDynamicObject(3655, 1410.28552, -2055.54077, 56.00040,   -3.00000, 0.00000, -65.00000);
	CreateDynamicObject(3655, 1398.82581, -2060.24634, 56.76740,   -3.00000, 0.00000, -72.00000);
	CreateDynamicObject(3655, 1387.16821, -2063.69604, 57.35240,   -3.00000, 0.00000, -75.00000);
	CreateDynamicObject(3655, 1375.21729, -2066.33691, 57.70340,   -3.00000, 0.00000, -80.00000);
	CreateDynamicObject(3655, 1363.79944, -2068.45410, 58.13240,   -3.00000, 0.00000, -80.00000);
	CreateDynamicObject(3655, 1351.01123, -2069.86987, 58.13240,   -3.00000, 0.00000, -90.00000);
	CreateDynamicObject(3655, 1340.09534, -2070.57324, 59.27640,   -3.00000, 0.00000, -83.00000);
	CreateDynamicObject(3655, 1327.88232, -2071.49609, 59.27640,   -1.00000, -360.00000, -90.00000);
	CreateDynamicObject(3655, 1315.92273, -2071.47607, 59.82240,   -1.00000, -360.00000, -90.00000);
	CreateDynamicObject(3655, 1304.06580, -2071.48291, 60.14740,   -1.00000, -360.00000, -90.00000);
	CreateDynamicObject(3655, 1292.12903, -2071.45703, 60.34240,   -1.00000, -360.00000, -90.00000);
	CreateDynamicObject(3655, 1280.40283, -2071.57617, 60.83640,   -1.00000, -360.00000, -90.00000);
	CreateDynamicObject(3655, 1269.64954, -2071.69800, 60.83640,   -1.00000, -360.00000, -77.00000);
	CreateDynamicObject(3655, 1276.04138, -2044.70850, 60.83640,   -1.00000, -360.00000, -269.00000);
	CreateDynamicObject(3655, 1286.36646, -2044.46582, 60.83640,   -1.00000, -360.00000, -269.00000);
	CreateDynamicObject(3655, 1298.00049, -2044.43103, 60.83640,   3.00000, -360.00000, -272.00000);
	CreateDynamicObject(3655, 1309.37708, -2044.79919, 60.29040,   4.00000, -360.00000, -272.00000);
	CreateDynamicObject(3655, 1319.94861, -2044.73291, 59.90040,   0.00000, -360.00000, -272.00000);
	CreateDynamicObject(3655, 1330.83789, -2044.12170, 59.90040,   0.00000, -360.00000, -269.00000);
	CreateDynamicObject(3655, 1340.87219, -2043.47009, 59.90040,   0.00000, -360.00000, -269.00000);
	CreateDynamicObject(3655, 1351.63025, -2042.24304, 59.90040,   0.00000, -360.00000, -261.00000);
	CreateDynamicObject(3655, 1363.19788, -2040.36877, 58.62640,   0.00000, -360.00000, -261.00000);
	CreateDynamicObject(3655, 1374.60254, -2038.20093, 58.62640,   0.00000, -360.00000, -258.00000);
	CreateDynamicObject(3655, 1385.45789, -2035.30383, 57.13140,   0.00000, -360.00000, -254.00000);
	CreateDynamicObject(3655, 1395.10852, -2031.09155, 56.66340,   0.00000, -360.00000, -245.00000);
	CreateDynamicObject(3655, 1403.85498, -2026.41187, 56.66340,   0.00000, -360.00000, -240.00000);
	CreateDynamicObject(3655, 1408.99072, -2020.94482, 54.81740,   0.00000, -360.00000, -206.00000);
	CreateDynamicObject(3655, 1413.78223, -2010.88123, 54.81740,   0.00000, -360.00000, -206.00000);
	CreateDynamicObject(3655, 1415.28174, -2003.07458, 53.19240,   4.00000, -360.00000, -176.00000);
	CreateDynamicObject(3655, 1412.44495, -1995.82288, 50.44940,   11.00000, -360.00000, -146.00000);
	CreateDynamicObject(3655, 1295.06970, -1966.15588, 31.40100,   2.00000, -360.00000, -106.00000);
	CreateDynamicObject(3655, 1398.84290, -1986.09375, 43.00540,   12.00000, -360.00000, -102.00000);
	CreateDynamicObject(3655, 1387.73254, -1984.06189, 39.91340,   12.00000, -360.00000, -102.00000);
	CreateDynamicObject(3655, 1377.28906, -1982.81067, 37.23740,   5.00000, -360.00000, -95.00000);
	CreateDynamicObject(3655, 1365.36938, -1981.31665, 35.23740,   5.00000, -360.00000, -99.00000);
	CreateDynamicObject(3655, 1353.59729, -1979.39160, 34.00000,   5.00000, -360.00000, -99.00000);
	CreateDynamicObject(3655, 1342.13928, -1977.33142, 32.88200,   5.00000, -360.00000, -99.00000);
	CreateDynamicObject(3655, 1330.53857, -1975.25232, 31.88200,   5.00000, -360.00000, -99.00000);
	CreateDynamicObject(3655, 1318.60840, -1972.13025, 31.40100,   2.00000, -360.00000, -102.00000);
	CreateDynamicObject(3655, 1307.14172, -1969.68921, 31.40100,   2.00000, -360.00000, -102.00000);
	CreateDynamicObject(3655, 1406.45007, -1903.89819, 16.69800,   9.00000, -360.00000, -210.00000);
	CreateDynamicObject(3655, 1283.79126, -1962.88953, 31.40100,   2.00000, -360.00000, -106.00000);
	CreateDynamicObject(3655, 1272.51404, -1959.63550, 31.40100,   2.00000, -360.00000, -106.00000);
	CreateDynamicObject(3655, 1260.00354, -1954.26831, 31.40100,   2.00000, -360.00000, -121.00000);
	CreateDynamicObject(3655, 1249.37378, -1946.32141, 31.79100,   2.00000, -360.00000, -136.00000);
	CreateDynamicObject(3655, 1241.26135, -1935.60461, 32.54500,   2.00000, -360.00000, -152.00000);
	CreateDynamicObject(3655, 1237.21716, -1921.67212, 32.54500,   2.00000, -360.00000, -178.00000);
	CreateDynamicObject(3655, 1241.92834, -1906.53467, 32.54500,   2.00000, -360.00000, -216.00000);
	CreateDynamicObject(3655, 1253.19116, -1897.34644, 32.16800,   6.00000, -360.00000, -245.00000);
	CreateDynamicObject(3655, 1267.11450, -1894.08887, 30.81600,   7.00000, -360.00000, -268.00000);
	CreateDynamicObject(3655, 1278.69824, -1894.28259, 28.99600,   12.00000, -360.00000, -275.00000);
	CreateDynamicObject(3655, 1290.58044, -1895.39148, 27.76100,   8.00000, -360.00000, -275.00000);
	CreateDynamicObject(3655, 1303.13599, -1897.21155, 26.65600,   8.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1314.74902, -1899.57874, 25.34300,   8.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1326.42554, -1902.13916, 24.64100,   8.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1338.07349, -1904.60010, 23.77000,   8.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1349.56580, -1907.13147, 22.99000,   4.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1360.95703, -1909.45862, 22.45700,   4.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1372.37646, -1911.84607, 21.66400,   4.00000, -360.00000, -282.00000);
	CreateDynamicObject(3655, 1383.23438, -1913.55933, 20.81900,   2.00000, -360.00000, -277.00000);
	CreateDynamicObject(3655, 1395.00073, -1915.37146, 19.63600,   3.00000, -360.00000, -277.00000);
	CreateDynamicObject(3655, 1402.50146, -1913.98975, 18.34900,   3.00000, -360.00000, -244.00000);
	CreateDynamicObject(19129, 1269.73889, -2017.09753, 58.20800,   0.00000, 0.00000, -1.00000);
	CreateDynamicObject(19129, 1269.20032, -2028.06226, 58.20800,   0.00000, 0.00000, -1.00000);
	CreateDynamicObject(19129, 1252.60632, -2035.82019, 58.76700,   -1.00000, 2.00000, -1.00000);
	CreateDynamicObject(19129, 1255.70984, -2016.80151, 58.76700,   -1.00000, 2.00000, -1.00000);
	CreateDynamicObject(19129, 1252.65149, -2016.45447, 58.76700,   -1.00000, 2.00000, -1.00000);
	CreateDynamicObject(19129, 1260.05969, -2036.10303, 58.76700,   -1.00000, 2.00000, -1.00000);
	CreateDynamicObject(14537, 1252.61597, -2018.50476, 61.14830,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1267.49927, -2012.24487, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1259.86670, -2020.62598, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1259.79175, -2016.45239, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1259.63074, -2012.39063, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1263.56616, -2012.29443, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1263.60486, -2016.59961, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1263.56238, -2020.91040, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1267.02734, -2021.17029, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 1267.36047, -2015.67065, 59.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(712, 1269.53540, -2046.81360, 67.83810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(712, 1256.74902, -2047.08899, 67.83810,   0.00000, 0.00000, 0.00000);
   	
   	//Spawn
   	CreateDynamicObject(970, 1689.41003, -2333.80151, 13.02380,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(970, 1681.87280, -2333.76099, 13.02380,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(970, 1671.39429, -2311.35889, 13.02380,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(970, 1677.09546, -2311.35547, 13.02380,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(19128, 1683.89954, -2333.76758, 12.54350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 1687.36377, -2333.72974, 12.54350,   0.00000, 0.00000, 0.00000);
	//Casa Dreigon
	CreateDynamicObject(8040, 1541.36340, -1542.74268, 13.34160,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8041, 1541.41980, -1581.07690, 18.38570,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19788, 1641.81824, -1458.64172, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1643.82605, -1456.47620, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1605.05701, -1458.17090, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10378, 1488.94800, -1551.64722, 12.52550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1478.49402, -1566.59253, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.45459, -1535.54297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.31494, -1535.70093, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.07129, -1521.20422, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.70520, -1521.01965, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.71216, -1520.97278, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.27954, -1520.92712, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.38428, -1535.62537, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.87207, -1535.72107, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1499.09583, -1566.94519, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.40356, -1566.65918, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.22961, -1581.97729, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.89331, -1581.49597, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.34229, -1581.62646, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.01355, -1581.46265, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.03870, -1566.92297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1342, 1488.69934, -1556.65027, 13.51200,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11475, -180.99570, 4393.77051, 8033.51611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11475, 1487.25037, -1502.56885, 17.99020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1541.66321, -1516.93164, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1546.61243, -1517.15967, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1544.38293, -1512.18494, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1543.01819, -1521.45752, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8040, 1541.36340, -1542.74268, 13.34160,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8041, 1541.41980, -1581.07690, 18.38570,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19788, 1641.81824, -1458.64172, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1643.82605, -1456.47620, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1605.05701, -1458.17090, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10378, 1488.94800, -1551.64722, 12.52550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1478.49402, -1566.59253, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.45459, -1535.54297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.31494, -1535.70093, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.07129, -1521.20422, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.70520, -1521.01965, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.71216, -1520.97278, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.27954, -1520.92712, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.38428, -1535.62537, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.87207, -1535.72107, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1499.09583, -1566.94519, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.40356, -1566.65918, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.22961, -1581.97729, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.89331, -1581.49597, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.34229, -1581.62646, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.01355, -1581.46265, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.03870, -1566.92297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1342, 1488.69934, -1556.65027, 13.51200,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11475, -180.99570, 4393.77051, 8033.51611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11475, 1487.25037, -1502.56885, 17.99020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1541.66321, -1516.93164, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1546.61243, -1517.15967, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1544.38293, -1512.18494, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1543.01819, -1521.45752, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 2107.25928, 1876.22791, 13.34850,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(971, 2107.44702, 1885.02905, 13.34850,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(971, 2107.52344, 1893.81409, 13.34850,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(971, 2107.60254, 1902.70142, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.69434, 1911.53748, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.81787, 1920.21814, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.85889, 1928.85229, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.88965, 1937.66650, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2108.02979, 1946.40210, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2108.06372, 1955.18811, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2108.00269, 1955.96558, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.18774, 1982.75171, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.29443, 1991.57874, 13.34850,   0.00000, 0.00000, 89.00000);
	CreateDynamicObject(971, 2107.18481, 2000.30261, 13.34850,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(971, 2107.24658, 2007.71362, 13.34850,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(971, 2102.63452, 2012.02637, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2093.78076, 2011.99414, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2085.02539, 2012.10864, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2076.16553, 2012.09924, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2067.30396, 2012.10913, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2058.44019, 2012.06445, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2049.57178, 2012.05994, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2040.73926, 2012.11633, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2031.83862, 2012.11096, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2022.95813, 2012.12109, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2014.05066, 2012.12756, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2005.22498, 2012.11243, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1996.34253, 2012.08789, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1987.42285, 2012.08521, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1978.52234, 2012.11426, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1969.66321, 2012.09167, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1960.78784, 2012.06519, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1951.85608, 2012.08838, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1942.93884, 2012.05981, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1934.05835, 2012.02856, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1925.14893, 2011.99109, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1917.17029, 2022.26880, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1921.70422, 2012.02954, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1917.18384, 2016.38684, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1912.63660, 2026.69666, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1905.46765, 2026.70386, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1896.74768, 2027.93420, 13.34850,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(971, 1888.25220, 2030.33716, 13.34850,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(971, 1879.73730, 2032.72327, 13.34850,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(971, 1872.73010, 2034.60889, 13.34850,   0.00000, 0.00000, -194.00000);
	CreateDynamicObject(971, 1863.97363, 2035.71423, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1856.52393, 2035.70361, 13.34850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1852.17700, 2031.24487, 13.34850,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(971, 1852.22510, 2022.44312, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.11536, 2013.62341, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.05103, 2004.76343, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.15564, 1995.98413, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.24341, 1987.04443, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.15698, 1978.15613, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.09680, 1969.30347, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.10742, 1960.45129, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.09180, 1951.60083, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.09009, 1942.70325, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.19409, 1933.67139, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.20569, 1924.76611, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.15771, 1915.85815, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.09204, 1906.97119, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.14893, 1898.02795, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.07227, 1889.16223, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.10876, 1880.28320, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.09814, 1871.38733, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.08252, 1862.54749, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.99475, 1853.61963, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.98169, 1844.79895, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.93225, 1835.87817, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.98206, 1826.98865, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.90955, 1818.15845, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1851.88611, 1809.29065, 13.34850,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(971, 1852.84973, 1801.07764, 13.34850,   0.00000, 0.00000, -255.00000);
	CreateDynamicObject(971, 1856.20740, 1793.08167, 13.34850,   0.00000, 0.00000, -239.00000);
	CreateDynamicObject(971, 1861.10901, 1785.67700, 13.34850,   0.00000, 0.00000, -234.00000);
	CreateDynamicObject(971, 1866.59314, 1778.75574, 13.34850,   0.00000, 0.00000, -229.00000);
	CreateDynamicObject(971, 1868.87585, 1776.00732, 13.34850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1868.96936, 1776.03711, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1866.59314, 1778.75574, 12.24850,   0.00000, 0.00000, -229.00000);
	CreateDynamicObject(971, 1861.10901, 1785.67700, 11.88850,   0.00000, 0.00000, -234.00000);
	CreateDynamicObject(971, 1856.20740, 1793.08167, 11.44850,   0.00000, 0.00000, -239.00000);
	CreateDynamicObject(971, 1852.80078, 1801.14441, 11.60850,   0.00000, 0.00000, -255.00000);
	CreateDynamicObject(971, 1874.36584, 1768.92456, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1879.79187, 1761.84180, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1885.26038, 1754.86096, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1890.65662, 1747.85864, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1896.05786, 1740.91199, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1901.45251, 1734.11255, 12.36850,   0.00000, 0.00000, -232.00000);
	CreateDynamicObject(971, 1904.13599, 1727.84534, 12.36850,   0.00000, 0.00000, -268.00000);
	CreateDynamicObject(971, 1910.21289, 1723.59766, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1919.13379, 1723.63831, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1927.87207, 1723.45508, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1936.74634, 1723.54480, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1945.62927, 1723.73181, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1954.55627, 1723.73645, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1963.41895, 1723.71008, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1972.28088, 1723.74316, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1981.16931, 1723.61377, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 1992.19373, 1723.62927, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2001.09277, 1723.42871, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2009.87585, 1723.56250, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2018.82959, 1723.59644, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2027.80054, 1723.58594, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2032.92358, 1723.58826, 12.36850,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(971, 2039.21558, 1727.66321, 12.36850,   0.00000, 0.00000, -296.00000);
	CreateDynamicObject(971, 2043.11902, 1735.65015, 12.36850,   0.00000, 0.00000, -296.00000);
	CreateDynamicObject(971, 2047.20776, 1743.48596, 12.36850,   0.00000, 0.00000, -298.00000);
	CreateDynamicObject(971, 2051.22803, 1751.47693, 12.36850,   0.00000, 0.00000, -296.00000);
	CreateDynamicObject(971, 2055.14673, 1759.49231, 12.36850,   0.00000, 0.00000, -296.00000);
	CreateDynamicObject(971, 2059.11816, 1767.46362, 12.36850,   0.00000, 0.00000, -296.00000);
	CreateDynamicObject(971, 2063.22583, 1775.26733, 12.36850,   0.00000, 0.00000, -298.00000);
	CreateDynamicObject(971, 2067.20581, 1783.23767, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2071.12256, 1791.11816, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2075.14868, 1798.99243, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2079.12476, 1806.95532, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2083.08716, 1814.93079, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2087.11499, 1822.91931, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2099.19531, 1846.60144, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2091.08203, 1830.78821, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2095.11572, 1838.75830, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(971, 2101.33496, 1850.72046, 12.36850,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(9241, 2000.32825, 1913.78833, 28.30690,   0.00000, 0.00000, -181.00000);
	CreateDynamicObject(19550, 1940.53918, 1787.18677, 9.22680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2040, 1962.24829, 1785.63599, 10.87690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19129, 2035.09241, 1852.42407, 26.40697,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19608, 2047.37903, 1858.43701, 26.44430,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(2231, 2049.67554, 1854.36304, 26.47700,   0.00000, 0.00000, -87.00000);
	CreateDynamicObject(2231, 2049.43433, 1861.91968, 26.47700,   0.00000, 0.00000, -87.00000);
	CreateDynamicObject(19474, 2040.84558, 1851.82715, 27.02470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2784, 2045.42041, 1847.00146, 27.87420,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19824, 2045.35156, 1850.12830, 27.40540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19824, 2045.23340, 1849.43555, 27.40540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19824, 2045.16821, 1848.65845, 27.40540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19824, 2045.27917, 1847.82654, 27.40540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19525, 2045.47534, 1847.07825, 27.37040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19847, 2045.03882, 1845.90161, 27.45040,   0.00000, 0.00000, 17.00000);
	CreateDynamicObject(2858, 2045.03308, 1843.95715, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, 2045.09924, 1844.50781, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, 2044.87207, 1844.48474, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, 2045.05652, 1844.73767, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, 2044.88538, 1844.68469, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, 2045.12231, 1844.88867, 27.45040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2437, 2045.83630, 1845.47803, 27.34060,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7073, 1978.36011, 1915.69385, 148.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9241, 2044.40833, 1955.52747, 36.08690,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(5820, 2028.38074, 1937.18518, 30.87350,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8613, 2029.94019, 1948.35120, 23.30210,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(8613, 2038.44067, 1945.33899, 15.35290,   0.00000, 0.00000, -0.02000);
	CreateDynamicObject(19788, 2035.91077, 1956.70398, 18.56840,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(5820, 2034.85645, 1958.41406, 18.56159,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 2030.74634, 1936.82361, 26.44840,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(3666, 2057.58350, 1944.02283, 37.60110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2033.59546, 1942.42847, 37.60110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2031.48340, 1966.12207, 37.60110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2055.85229, 1967.89539, 37.60110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2012.54675, 1925.76331, 29.65320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2012.44470, 1901.59985, 29.65320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1987.98474, 1901.81750, 29.65320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1988.22754, 1926.06409, 29.65320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2045.03259, 1862.83459, 26.92840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 2104.80005, 1862.91077, 15.78500,   0.00000, 0.00000, 75.00000);
	CreateDynamicObject(3749, 2108.26440, 1969.63123, 15.55570,   0.00000, 0.00000, 90.00000);
	//Caixinhas
	CreateDynamicObject(2754, 2127.97827, -1154.18250, 23.83960,   0.00000, 0.00000, -89.00000);//Caixa 1
	CreateDynamicObject(2754, 1862.84668, -1270.50769, 13.34580,   0.00000, 0.00000, -90.00000);//Caixa 2
	CreateDynamicObject(2754, 1833.49316, -1405.77771, 13.15980,   0.00000, 0.00000, -90.00000);//Caixa 3
	CreateDynamicObject(2754, 1810.37793, -1900.41040, 13.38740,   0.00000, 0.00000, 0.00000);//Caixa 4
	CreateDynamicObject(2754, 1468.12195, -1772.01233, 18.46230,   0.00000, 0.00000, -88.00000);//Caixa 5
	CreateDynamicObject(2754, 1363.04089, -1747.25623, 13.61550,   0.00000, 0.00000, 0.00000);//Caixa 6
	CreateDynamicObject(2754, 1186.46924, -1379.03796, 13.34980,   0.00000, 0.00000, -173.00000); //Caixa 7
	CreateDynamicObject(2754, 1523.9661, -1583.6688, 13.85870,   0.00000, 0.00000, 89.00000); //Caixa 8
	//Estacionamento
	CreateDynamicObject(8040, 1541.36340, -1542.74268, 13.34160,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8041, 1541.41980, -1581.07690, 18.38570,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19788, 1641.81824, -1458.64172, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1643.82605, -1456.47620, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19788, 1605.05701, -1458.17090, 12.13072,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10378, 1488.94800, -1551.64722, 12.52550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1478.49402, -1566.59253, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.45459, -1535.54297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.31494, -1535.70093, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.07129, -1521.20422, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.70520, -1521.01965, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.71216, -1520.97278, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.27954, -1520.92712, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.38428, -1535.62537, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.87207, -1535.72107, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1499.09583, -1566.94519, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.40356, -1566.65918, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1522.22961, -1581.97729, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1498.89331, -1581.49597, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1478.34229, -1581.62646, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.01355, -1581.46265, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1231, 1455.03870, -1566.92297, 15.63281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1342, 1488.69934, -1556.65027, 13.51200,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11475, -180.99570, 4393.77051, 8033.51611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11475, 1487.25037, -1502.56885, 17.99020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1541.66321, -1516.93164, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1546.61243, -1517.15967, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1544.38293, -1512.18494, 32.26090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4020, 1543.01819, -1521.45752, 32.26090,   0.00000, 0.00000, 0.00000);
	//Prefeitura
	CreateDynamicObject(970, 1490.76636, -1742.11267, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1473.81909, -1742.01550, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1494.96802, -1741.95593, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1499.13208, -1742.02795, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1503.27454, -1742.06177, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1469.69995, -1742.01514, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1465.56189, -1742.11511, 13.17930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1461.42212, -1742.13452, 13.17930,   0.00000, 0.00000, 0.00000);
	//Estacionamentos
	CreateDynamicObject(8040, 1224.43164, -1451.02747, 13.36280,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(8041, 1224.40002, -1412.57178, 18.34770,   0.00000, 0.00000, 91.00000);
	//Praca
	new g_Object[29];
	g_Object[0] = CreateObject(11313, 1554.9207, -1679.7110, 20.4291, 1.1000, -4.6999, -2.3998); //modshopdoor_SFSe
	SetObjectMaterialText(g_Object[0], "Militar", 0, 90, "Calibri", 40, 1, 0xFF000000, 0x0, 0);
	g_Object[1] = CreateObject(11313, 1463.5720, -1020.4387, 30.0571, -0.3000, 0.0000, -90.3999); //modshopdoor_SFSe
	SetObjectMaterialText(g_Object[1], "BPR", 0, 90, "Candara", 50, 1, 0xFF162248, 0x0, 0);
	g_Object[2] = CreateObject(11313, 1466.0026, -1020.4566, 30.0844, -0.3000, 0.0000, -90.3999); //modshopdoor_SFSe
	SetObjectMaterialText(g_Object[2], "Bank", 0, 90, "Candara", 50, 1, 0xFF162248, 0x0, 0);
	g_Object[3] = CreateObject(11313, 1477.1519, -1638.6977, 20.9513, 0.0000, 0.2998, -90.4999); //modshopdoor_SFSe
	//SetObjectMaterialText(g_Object[3], "B", 0, 90, "Arial", 160, 1, 0xFF162248, 0x0, 0);
	//g_Object[4] = CreateObject(11313, 1554.7248, -1676.7235, 20.3521, 1.7999, -2.5000, -2.3998); //modshopdoor_SFSe
	SetObjectMaterialText(g_Object[4], "Policia", 0, 90, "Calibri", 40, 1, 0xFF000000, 0x0, 0);
	g_Object[5] = CreateObject(11313, 1478.4127, -1638.9884, 16.7698, 0.0000, 0.2998, -90.4999); //modshopdoor_SFSe
	
	CreateDynamicObject(970, 1440.94434, -1718.79700, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8841, 1483.12622, -1720.79138, 15.51990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1501.77759, -1722.05469, 11.77750,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(3578, 1498.24463, -1721.93433, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1494.74561, -1721.94788, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1490.91003, -1721.67761, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1487.44397, -1721.66382, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1484.28162, -1721.84167, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1480.46460, -1721.99011, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1476.55762, -1721.80603, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1472.91528, -1721.83521, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1469.27124, -1721.84460, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1465.89026, -1721.49207, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 1462.53357, -1721.54907, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1443.06018, -1720.91162, 13.18230,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(970, 1447.19739, -1720.86292, 13.18230,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(970, 1451.40771, -1720.79651, 13.18230,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(970, 1455.56104, -1720.78198, 13.18230,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(970, 1459.29419, -1720.90601, 13.18230,   0.00000, 0.00000, -184.00000);
	CreateDynamicObject(970, 1441.05017, -1710.76111, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1440.99023, -1714.80676, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.01001, -1706.58899, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.00891, -1702.40601, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1443.08984, -1695.64099, 13.18230,   0.00000, 0.00000, 11.00000);
	CreateDynamicObject(970, 1441.06262, -1694.07141, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.01318, -1689.86890, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.00891, -1686.61731, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1442.40137, -1634.47363, 13.18230,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(970, 1442.98157, -1701.05432, 13.18230,   0.00000, 0.00000, -20.00000);
	CreateDynamicObject(1215, 1441.50085, -1697.56030, 13.16950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1441.48145, -1699.26099, 13.16950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1442.37805, -1683.02100, 13.18230,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(970, 1441.32947, -1630.87402, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.30359, -1626.66895, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1443.43835, -1625.25696, 13.18230,   0.00000, 0.00000, -17.00000);
	CreateDynamicObject(970, 1443.37317, -1620.00586, 13.18230,   0.00000, 0.00000, 11.00000);
	CreateDynamicObject(970, 1441.32056, -1618.33252, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1215, 1442.10303, -1621.68005, 13.16950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1442.01868, -1623.44299, 13.16950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1441.30750, -1614.20593, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.29700, -1610.02527, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1441.23022, -1605.92529, 13.18230,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, 1443.29517, -1603.93835, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1447.39771, -1603.92932, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1451.57983, -1603.95068, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1455.70239, -1603.97363, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1459.82397, -1603.95642, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1463.94556, -1603.99316, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1468.12854, -1604.00940, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1472.29138, -1603.99011, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1490.90112, -1603.94775, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1495.00256, -1603.96582, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1499.20520, -1603.93958, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1503.34949, -1603.90125, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1507.49536, -1603.92920, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1511.69580, -1603.93054, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1515.87805, -1603.92114, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1489.35107, -1605.93665, 13.18230,   0.00000, 0.00000, -255.00000);
	CreateDynamicObject(970, 1473.35645, -1605.58813, 13.18230,   0.00000, 0.00000, -302.00000);
	CreateDynamicObject(1215, 1475.60461, -1605.01111, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1477.36194, -1604.98206, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1478.83838, -1604.99597, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1480.41382, -1605.00134, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1481.66406, -1604.99451, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1483.00818, -1605.03198, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1484.53455, -1605.05737, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1486.05212, -1605.11719, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1487.69629, -1605.15698, 13.30790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1517.94849, -1605.99353, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.94617, -1610.19385, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.90344, -1614.37500, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.79590, -1618.62512, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.75562, -1626.93713, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.74585, -1631.12219, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1517.71277, -1635.28259, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1516.38147, -1640.78662, 13.18230,   0.00000, 0.00000, -287.00000);
	CreateDynamicObject(970, 1517.71277, -1635.28259, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1516.88013, -1639.20520, 13.18230,   0.00000, 0.00000, -287.00000);
	CreateDynamicObject(970, 1516.06287, -1625.43481, 13.18230,   0.00000, 0.00000, -163.00000);
	CreateDynamicObject(970, 1515.85657, -1619.84070, 13.18230,   0.00000, 0.00000, -204.00000);
	CreateDynamicObject(1215, 1517.40588, -1623.82349, 13.31510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1517.32861, -1621.97852, 13.31510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1516.68250, -1689.61597, 13.18230,   0.00000, 0.00000, -229.00000);
	CreateDynamicObject(970, 1518.13708, -1693.24744, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1518.15442, -1697.41602, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1517.94495, -1706.17285, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1518.03381, -1710.27319, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1518.12000, -1714.41150, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1518.15625, -1718.55676, 13.18230,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(970, 1516.41394, -1705.47681, 13.18230,   0.00000, 0.00000, -138.00000);
	CreateDynamicObject(970, 1516.91357, -1698.06091, 13.18230,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject(1215, 1517.35706, -1702.26147, 13.30950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1517.37659, -1700.65320, 13.30950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1516.00830, -1720.84351, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1511.87012, -1720.82373, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1507.69666, -1720.79822, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1503.51868, -1720.82275, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1499.34558, -1720.78308, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1495.21350, -1720.84705, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1491.02527, -1720.79675, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1482.70142, -1720.78613, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1474.32300, -1720.83069, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1470.25439, -1720.79932, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1466.10449, -1720.78296, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1462.16919, -1720.97253, 13.18230,   0.00000, 0.00000, -356.00000);
	CreateDynamicObject(970, 1475.19666, -1719.07727, 13.18230,   0.00000, 0.00000, -236.00000);
	CreateDynamicObject(970, 1483.64111, -1719.06458, 13.18230,   0.00000, 0.00000, -236.00000);
	CreateDynamicObject(970, 1481.55005, -1719.14722, 13.18230,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(970, 1489.94336, -1718.89185, 13.18230,   0.00000, 0.00000, -297.00000);
	CreateDynamicObject(1215, 1477.20776, -1719.94617, 13.37140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1478.88733, -1719.99219, 13.37140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1485.95374, -1720.05530, 13.37140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1487.60596, -1720.24084, 13.37140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 1487.44397, -1721.66382, 11.77750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19425, 1442.27332, -1734.86963, 12.36960,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19986, 1418.38281, -1738.48682, 12.34110,   0.00000, 0.00000, 266.00000);
	CreateDynamicObject(19986, 1520.33374, -1724.70581, 12.60770,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19425, 1516.67761, -1729.70886, 12.36260,   0.00000, 0.00000, -92.00000);
	CreateDynamicObject(970, 1504.00659, -1747.96191, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1503.95337, -1744.32617, 13.18230,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(970, 1501.78638, -1742.13196, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1497.58752, -1742.02649, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1493.36584, -1742.10901, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1489.04663, -1742.07117, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1486.24475, -1742.17297, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1476.40430, -1742.05347, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1472.14368, -1742.03528, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1467.84351, -1742.03650, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1463.64441, -1742.09192, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(970, 1458.50244, -1747.51514, 13.18230,   0.00000, 0.00000, -272.00000);
	CreateDynamicObject(970, 1458.53162, -1744.05493, 13.18230,   0.00000, 0.00000, -272.00000);
	CreateDynamicObject(970, 1460.66321, -1742.06323, 13.18230,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1492.11401, -1751.55078, 15.95220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1492.13452, -1751.49133, 19.21220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1486.60876, -1751.45056, 15.95220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1475.74609, -1751.25537, 15.95220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1470.17139, -1751.50098, 15.95220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1492.13293, -1751.54419, 22.31220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1492.13293, -1751.54419, 24.99220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1486.63538, -1751.46985, 19.27220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1486.61536, -1751.46948, 22.57220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1486.61536, -1751.46948, 25.75220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1481.31787, -1751.48865, 25.75220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1481.29468, -1751.40442, 22.57220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1481.09338, -1751.54187, 19.27220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1475.74609, -1751.25537, 19.19220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1475.74609, -1751.25537, 22.45220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1475.74609, -1751.25537, 25.71220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1470.17139, -1751.50098, 19.13220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1470.17139, -1751.50098, 22.35220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1470.17139, -1751.50098, 25.55220,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1492.12817, -1751.71167, 15.95220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1486.55054, -1751.55176, 15.95220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1492.12817, -1751.71167, 19.19220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1492.12817, -1751.71167, 22.41220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1492.12817, -1751.71167, 25.71220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1486.57080, -1751.48474, 19.29220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1486.57080, -1751.48474, 22.57220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1486.57080, -1751.48474, 25.71220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1481.09998, -1751.55603, 19.29220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1481.09998, -1751.55603, 22.55220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1481.09998, -1751.55603, 25.83220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1475.71899, -1751.40955, 15.95220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1470.14331, -1751.56506, 15.95220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1475.70911, -1751.54517, 19.29220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1470.16956, -1751.51465, 19.29220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1475.76074, -1751.46838, 22.55220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1470.30164, -1751.52295, 22.55220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1475.76074, -1751.64941, 25.83220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1649, 1470.17200, -1751.88269, 25.83220,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1342, 1470.13770, -1698.28638, 14.04640,   0.00000, 0.00000, -360.00000);
	CreateDynamicObject(1215, 1351.41504, -1742.06750, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1341.71716, -1741.96289, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1326.26563, -1732.29736, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1332.07251, -1732.27063, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1337.41162, -1732.23462, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1344.78979, -1732.28931, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1353.23682, -1732.36743, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1360.72144, -1732.28955, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1368.59351, -1732.34009, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1378.07117, -1732.29944, 12.87140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2631, 1480.87122, -1744.18982, 12.54400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1342, 1487.37927, -1699.31580, 14.04640,   0.00000, 0.00000, -178.00000);
//=-=-=-=-=-=-=-=-=-=-=-= PORTOES =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=
	PDDOORa = CreateObject(985 , 247.005905 , 72.448440 , 1003.640625 , 0.000000 , 0.000000 , 1260.000000 );
	PDDOORb = CreateObject(985 , 250.774871 , 60.822799 , 1003.640625 , 0.000000 , 0.000000 , 5130.000000 );
	PDDOORc = CreateObject(986 , 248.142105 , 78.125961 , 1003.640625 , 0.000000 , 0.000000 , 12690.000000 );
	PDPMLS = CreateObject(980,1545.50000000,-1628.40002441,15.19999981,0.00000000,0.00000000,270.00000000);
	gt3gate = CreateObject(971, 283.095062, -1542.899170, 25.510294, 0.0000, 0.0000, 326.2500);
	gt3gate3 = CreateObject(971, 321.832672, -1488.615112, 25.527353, 0.0000, 0.0000, 323.6717);
	PortaoDreigon = CreateObject(980, 2105.34399, 1862.65869, 12.71300,   0.00000, 0.00000, 76.00000);//Portao Dreigon
	PortaoDreigon2 = CreateObject(980, 2108.12549, 1969.66614, 12.71300,   0.00000, 0.00000, 90.00000);// Portao Dreigon
	PDGARAGE = CreateObject(980,1588.195,-1637.969,15.193,0.0,0.0,0.0);
	portaoPC1 = CreateObject(980, 923.80151367188, -1224.8518066406, 18.749954223633, 0, 0, 270);
	portaoPC2 = CreateObject(980, 923.73193359375, -1217.4801025391, 18.749954223633, 0, 0, 270);
	PDEx = CreateObject(980, -1531.3978271484, 482.25979614258, 8.9530792236328, 0, 0, 359.99975585938);
	PortaoSFN = CreateObject(980, -2262.5871582031, 553.69573974609, 36.789016723633, 0, 0, 2);
	PortaoGov = CreateObject(980, 1539.2235107422, -1838.2176513672, 15.320266723633, 0, 0, 91.309509277344);
	PortaoReporter = CreateObject(971, 777.80017089844, -1330.2664794922, 14.200000762939, 0, 0, 0);
	pFamiliaShelby1 = CreateObject(980,664.862,-1309.311,15.234,0.0,0.0,0.0);
	pFamiliaShelby3 = CreateObject(980,785.128,-1152.442,25.430,0.0,0.0,88.522);
	PortaoTaxi = CreateObject(971,1803.40002441,-1721.19995117,16.10000038,0.00000000,0.00000000,0.00000000);
	PortaoBOPE = CreateObject(980,-1742.13061523,985.34228516,19.34956932,0.00000000,0.00000000,268.69067383);
	PortaoTaxiSF = CreateObject(980, -2016.2495117188, 395.068359375, 36.945266723633, 0, 0, 270);
	PortaoSlander = CreateObject(980, 2979.81348, -769.83441, 18.01630,   0.00000, 0.00000, 94.00000);
	acn = CreateObject(19313, 321.39999389648, -1188.1999511719, 77.099998474121, 0, 359, 37.996215820313);//2933
	prf1 = CreateObject(2990,-1635.46447754,688.27337646,10.10410309,0.00000000,0.00000000,0.00000000); //object(wongs_gate) (1)
 	prf2 = CreateObject(2990,-1627.49902344,688.27178955,10.10148048,0.00000000,0.00000000,0.00000000); //object(wongs_gate) (2)
	prf3 = CreateObject(986,-1619.85461426,688.06866455,6.18750000,0.00000000,0.00000000,0.00000000); //object(gate_autol) (1)
	prf4 = CreateObject(980,-1572.03344727,661.12640381,8.96089172,0.00000000,0.00000000,268.00000000,0.0); //object(airportgate) (1)
	pfdoor = CreateObject(980,-2433.97338867,496.39559937,31.70938301,0.00000000,0.00000000,24.00000000,0.0); //object(airportgate) (1)
	pfdoor2 = CreateObject(971,-2424.72973633,500.50247192,30.89804077,0.00000000,0.00000000,24.00000000,0.0); //object(subwaygate) (1)
	 /*-- CAIXAS ELETRONICOS --*/
    CreateDynamicObject(2942,1928.6000000,-1785.4000000,13.0000000,0.0000000,0.0000000,88.0000000); /*-- OBJETOS DOS CAIXAS ELETRONICOS --*/
    CreateDynamicObject(2942,2123.2000000,896.7999900,10.8000000,0.0000000,0.0000000,182.0000000);
    CreateDynamicObject(2942,2187.8000000,2464.2000000,10.9000000,0.0000000,0.0000000,94.0000000);
    CreateDynamicObject(2942,2156.5000000,2733.8999000,10.8000000,0.0000000,0.0000000,184.0000000);
    CreateDynamicObject(2942,1590.4000000,2218.0000000,10.7000000,0.0000000,0.0000000,0.0000000);
    CreateDynamicObject(2942,58.9000000,1212.9000000,18.5000000,0.0000000,0.0000000,90.0000000);
    CreateDynamicObject(2942,-2032.9000000,151.0000000,28.7000000,0.0000000,0.0000000,92.0000000);
    CreateDynamicObject(2942,-2420.1001000,959.2999900,44.9000000,0.0000000,0.0000000,92.0000000);
    CreateDynamicObject(2942,-2232.6001000,-2560.5000000,31.6000000,0.0000000,0.0000000,244.0000000);
    CreateDynamicObject(2942,-1572.6000000,-2725.0000000,48.4000000,0.0000000,0.0000000,326.0000000);
    CreateDynamicObject(2942,-79.5000000,-1172.3000000,1.8000000,0.0000000,0.0000000,246.0000000);
    CreateDynamicObject(2942,1009.5000000,-929.5000000,42.0000000,0.0000000,0.0000000,6.0000000);
    CreateDynamicObject(2942,1389.4000000,462.7999900,19.8000000,0.0000000,0.0000000,340.0000000);
//======================Estacao Unity===========================================
    CreateDynamicObject(3863,1776.75231900,-1932.56506300,13.55876100,0.00000000,0.00000000,90.00000000); //convertffs(0)
    CreateDynamicObject(3862,1776.95141600,-1927.77514600,13.55941400,0.00000000,0.00000000,90.00000000); //convertffs(1)
    CreateDynamicObject(3861,1777.08984375,-1921.80273438,13.55951595,0.00000000,0.00000000,90.00000000); //convertffs(2)
    CreateDynamicObject(3860,1776.38281300,-1905.00341800,13.55899700,0.00000000,0.00000000,90.00000000); //convertffs(3)
    CreateDynamicObject(3862,1776.11914062,-1913.84570312,13.55880547,0.00000000,0.00000000,90.00000000); //convertffs(4)
    CreateDynamicObject(1571,1797.53710900,-1932.35290500,13.71735000,0.00000000,0.00000000,180.00000000); //convertffs(5)
    CreateDynamicObject(1570,1805.44799800,-1911.40039100,13.72789400,0.00000000,0.00000000,270.00000000); //convertffs(6)
    CreateDynamicObject(1363,1808.53295900,-1922.61535600,13.39126500,0.00000000,0.00000000,0.00000000); //convertffs(7)
    CreateDynamicObject(1342,1805.51892100,-1926.92065400,13.42288000,0.00000000,0.00000000,180.00000000); //convertffs(8)
    CreateDynamicObject(1341,1791.37780800,-1933.23669400,13.38868900,0.00000000,0.00000000,90.00000000); //convertffs(9)
    CreateDynamicObject(1340,1786.15564000,-1888.56420900,13.52141300,0.00000000,0.00000000,270.00000000); //convertffs(10)
    CreateDynamicObject(1257,1827.92944300,-1891.16516100,13.78591400,0.00000000,0.00000000,0.00000000); //convertffs(11)
    CreateDynamicObject(13562,1798.05639648,-1932.19726562,16.53595352,0.00000000,0.00000000,236.25000000); //convertffs(12)
    CreateDynamicObject(1775,1799.92724600,-1933.03723100,13.48323600,0.00000000,0.00000000,180.00000000); //convertffs(13)
    CreateDynamicObject(956,1801.34790000,-1933.05859400,12.79020300,0.00000000,0.00000000,180.00000000); //convertffs(14)
    CreateDynamicObject(1236,1786.22631800,-1939.90185500,13.21888400,0.00000000,0.00000000,0.00000000); //convertffs(18)
    CreateDynamicObject(1265,1786.79235800,-1938.69482400,13.02109300,0.00000000,0.00000000,0.00000000); //convertffs(19)
    CreateDynamicObject(1264,1785.82983400,-1938.60571300,13.02438200,0.00000000,0.00000000,0.00000000); //convertffs(20)
    CreateDynamicObject(615,1792.09167500,-1913.59314000,12.38953000,0.00000000,0.00000000,0.00000000); //convertffs(21)
    CreateDynamicObject(3860,1804.87915000,-1920.67016600,13.56457100,0.00000000,0.00000000,270.00000000); //convertffs(22)
    CreateDynamicObject(3863,1785.43383800,-1934.22668500,13.55795100,0.00000000,0.00000000,180.00000000); //convertffs(23)
    CreateDynamicObject(3861,1791.59155300,-1887.03515600,13.57013900,0.00000000,0.00000000,0.00000000); //convertffs(24)
    CreateDynamicObject(6462,1758.39013700,-1883.95532200,14.56501200,0.00000000,0.00000000,0.00000000); //convertffs(25)
    CreateDynamicObject(970,1792.71362300,-1910.91357400,12.94848600,0.00000000,0.00000000,0.00000000); //convertffs(26)
    CreateDynamicObject(970,1794.75988800,-1912.98352100,12.94747500,0.00000000,0.00000000,270.00000000); //convertffs(27)
    CreateDynamicObject(970,1792.66601600,-1915.05822800,12.94646300,0.00000000,0.00000000,0.00000000); //convertffs(28)
    CreateDynamicObject(970,1790.55566400,-1913.02563500,12.94853000,0.00000000,0.00000000,270.00000000); //convertffs(29)
    CreateDynamicObject(1229,1827.82385300,-1894.69055200,14.06918700,0.00000000,0.00000000,11.25000000); //convertffs(30)
    CreateDynamicObject(1233,1811.99328600,-1895.22753900,14.13727500,0.00000000,0.00000000,78.75000000); //convertffs(31)
    CreateDynamicObject(1233,1812.26904300,-1883.42883300,14.13780500,0.00000000,0.00000000,90.00000000); //convertffs(32)
    CreateDynamicObject(1234,1806.52856400,-1923.76098600,13.95041100,0.00000000,0.00000000,258.75000000); //convertffs(33)
    CreateDynamicObject(1443,1777.63635300,-1902.85876500,13.02039700,0.00000000,0.00000000,67.50000000); //convertffs(34)
    CreateDynamicObject(2047,1769.48596200,-1918.16540500,14.64368800,0.00000000,0.00000000,90.00000000); //convertffs(35)
    CreateDynamicObject(2048,1769.48596200,-1918.17382800,13.82802800,0.00000000,0.00000000,90.00000000); //convertffs(36)
    CreateDynamicObject(2587,1775.04980500,-1905.96850600,14.18687500,0.00000000,0.00000000,90.00000000); //convertffs(38)
    CreateDynamicObject(2580,1775.04980500,-1904.37512200,14.12210400,0.00000000,0.00000000,90.00000000); //convertffs(39)
    CreateDynamicObject(2588,1775.04980500,-1905.91198700,13.19144100,0.00000000,0.00000000,90.00000000); //convertffs(40)
    CreateDynamicObject(2599,1777.54199200,-1903.84375000,13.66830500,0.00000000,0.00000000,270.00000000); //convertffs(41)
    CreateDynamicObject(2684,1784.36804200,-1935.55969200,14.01755400,0.00000000,0.00000000,180.00000000); //convertffs(42)
    CreateDynamicObject(2714,1796.54284700,-1931.26574700,14.47520200,0.00000000,0.00000000,180.00000000); //convertffs(43)
    CreateDynamicObject(2730,1806.21215800,-1919.72729500,14.04540700,0.00000000,0.00000000,270.00000000); //convertffs(44)
    CreateDynamicObject(2729,1806.21215800,-1920.92297400,14.05302400,0.00000000,0.00000000,90.00000000); //convertffs(45)
    CreateDynamicObject(2731,1806.21215800,-1922.08007800,14.02384900,0.00000000,0.00000000,90.00000000); //convertffs(46)
    CreateDynamicObject(3467,1792.84545900,-1932.86181600,13.08909800,0.00000000,0.00000000,0.00000000); //convertffs(47)
    CreateDynamicObject(3468,1790.55456500,-1932.92334000,13.08906700,0.00000000,0.00000000,180.00000000); //convertffs(48)
    CreateDynamicObject(3471,1810.45031738,-1895.92126465,13.85359478,0.00000000,0.00000000,90.00000000); //convertffs(49)
    CreateDynamicObject(3471,1810.20336914,-1883.59033203,13.85306835,0.00000000,0.00000000,270.00000000); //convertffs(50)
    CreateDynamicObject(638,1793.89502000,-1913.11022900,13.09296500,0.00000000,0.00000000,0.00000000); //convertffs(51)
    CreateDynamicObject(638,1792.23974600,-1912.12963900,13.09344400,0.00000000,0.00000000,90.00000000); //convertffs(52)
    CreateDynamicObject(638,1791.22839400,-1913.82592800,13.09261600,0.00000000,0.00000000,0.00000000); //convertffs(53)
    CreateDynamicObject(638,1792.88879400,-1914.62329100,13.09222700,0.00000000,0.00000000,270.00000000); //convertffs(54)
    CreateDynamicObject(1280,1795.01696800,-1913.11877400,12.79728400,0.00000000,0.00000000,180.00000000); //convertffs(55)
    CreateDynamicObject(1280,1793.01196300,-1915.39086900,12.79617400,0.00000000,0.00000000,90.00000000); //convertffs(56)
    CreateDynamicObject(1280,1790.28064000,-1913.24340800,12.79820300,0.00000000,0.00000000,0.00000000); //convertffs(57)
    CreateDynamicObject(1280,1792.74121100,-1910.55151400,12.79853700,0.00000000,0.00000000,270.00000000); //convertffs(58)
    CreateDynamicObject(1542,1797.48498500,-1930.95239300,13.62219300,0.00000000,0.00000000,180.00000000); //convertffs(59)
    CreateDynamicObject(2374,1803.77929700,-1919.32788100,13.68416500,0.00000000,0.00000000,281.25000000); //convertffs(60)
    CreateDynamicObject(2377,1803.79809600,-1921.60168500,13.72010800,0.00000000,0.00000000,270.00000000); //convertffs(61)
    CreateDynamicObject(1281,1766.60217300,-1902.58606000,13.36661700,0.00000000,0.00000000,0.00000000); //convertffs(62)
    CreateDynamicObject(1281,1761.04126000,-1902.39099100,13.36516300,0.00000000,0.00000000,0.00000000); //convertffs(63)
    CreateDynamicObject(1281,1770.89416500,-1897.88281300,13.35626400,0.00000000,0.00000000,270.00000000); //convertffs(64)
    CreateDynamicObject(1281,1770.90100100,-1891.02136200,13.36201900,0.00000000,0.00000000,270.00000000); //convertffs(65)
    CreateDynamicObject(1281,1755.72424300,-1887.63842800,13.35699800,0.00000000,0.00000000,0.00000000); //convertffs(66)
    CreateDynamicObject(1281,1762.73413100,-1887.59765600,13.35528600,0.00000000,0.00000000,0.00000000); //convertffs(67)
    CreateDynamicObject(2496,1774.74462891,-1914.17028809,13.91392899,0.00000000,0.00000000,89.91036987); //object(vice_toy2_2) (1)
    CreateDynamicObject(2494,1774.76550293,-1913.22167969,13.92822742,0.00000000,0.00000000,89.89190674); //object(manhunt_toy2_2) (1)
    CreateDynamicObject(2495,1776.94360352,-1912.91430664,13.33371067,0.00000000,0.00000000,89.47039795); //object(vice_toy_2) (1)
    CreateDynamicObject(2489,1776.92175293,-1914.90734863,13.33678055,0.00000000,0.00000000,88.87957764); //object(manhunt_toy_2) (1)
    CreateDynamicObject(2486,1777.70275879,-1921.50830078,13.23391247,0.00000000,0.00000000,85.57855225); //object(model_car) (1)
    CreateDynamicObject(2485,1777.93908691,-1922.75805664,13.25791168,0.00000000,0.00000000,106.88265991); //object(model_car_1) (1)
    CreateDynamicObject(2484,1777.38415527,-1921.78442383,13.87130451,0.00000000,0.00000000,91.76629639); //object(model_yaught) (1)
    CreateDynamicObject(2362,1777.51684570,-1926.41125488,13.20501137,0.00000000,0.00000000,87.49285889); //object(cj_sweetie_tray_1) (1)
    CreateDynamicObject(2471,1775.45251465,-1932.00939941,14.03764343,0.00000000,0.00000000,96.62536621); //object(model_trains2) (1)
    CreateDynamicObject(2474,1777.22888184,-1933.43786621,13.20435810,0.00000000,0.00000000,85.19692993); //object(model_trains1) (1)
    CreateDynamicObject(2501,1775.55590820,-1933.45629883,13.86676121,0.00000000,0.00000000,93.15307617); //object(train_toy_1) (1)
    CreateDynamicObject(2503,1775.55187988,-1932.90649414,13.86978626,0.00000000,0.00000000,91.76629639);
    CreateDynamicObject(2513,1777.52563477,-1931.86181641,13.31890965,0.00000000,0.00000000,92.99386597);
    CreateDynamicObject(2585,1786.23046875,-1935.43579102,13.64354324,0.00000000,0.00000000,181.17228699);
    CreateDynamicObject(2362,1777.55358887,-1928.60656738,13.20501137,0.00000000,0.00000000,87.48962402);
    CreateDynamicObject(2579,1784.66491699,-1935.47521973,13.63928127,0.00000000,0.00000000,180.21752930);
//Igreja
    CreateDynamicObject(5710,-2035.896,1092.055,21.414,0.0,0.0,0.0);
    CreateDynamicObject(5710,-2021.334,1074.279,21.330,0.0,0.0,-89.381);
    CreateDynamicObject(5710,-2023.422,1074.527,24.567,180.482,0.0,-87.663);
    CreateDynamicObject(5710,-2010.786,1092.276,21.418,0.0,0.0,180.482);
    CreateDynamicObject(10676,-2024.834,1101.626,9.607,0.0,0.0,0.0);
    CreateDynamicObject(5710,-2003.884,1124.533,22.372,0.0,0.0,2.578);
    CreateDynamicObject(5710,-2044.215,1124.109,22.372,0.0,0.0,179.622);
    CreateDynamicObject(5710,-2024.951,1145.353,20.497,0.0,0.0,273.301);
    CreateDynamicObject(10676,-2025.565,1132.252,31.499,180.482,0.0,1.719);
    CreateDynamicObject(17950,-2025.184,1147.850,19.802,-6.016,0.0,-177.044);
    CreateDynamicObject(10676,-2081.264,1094.225,18.983,0.0,0.0,89.381);
    CreateDynamicObject(10676,-1965.052,1091.448,18.998,0.0,0.0,-88.522);
    CreateDynamicObject(616,-2055.353,1090.207,-2.164,0.0,0.0,-7.735);
    CreateDynamicObject(616,-1992.356,1092.405,-2.399,0.0,0.0,2.578);
    CreateDynamicObject(617,-2039.203,1124.151,12.521,0.0,0.0,0.0);
    CreateDynamicObject(617,-2009.599,1123.927,13.046,0.0,0.0,0.0);
    CreateDynamicObject(3406,-2024.756,1139.860,14.998,0.0,0.0,91.960);
    CreateDynamicObject(14535,-2002.932,1089.430,19.881,0.0,0.0,0.0);
    CreateDynamicObject(2591,-2005.792,1087.077,18.070,0.0,0.0,0.0);
    CreateDynamicObject(2591,-2007.452,1088.775,18.059,0.0,0.0,-91.100);
    CreateDynamicObject(2591,-2010.355,1090.212,18.159,0.0,0.0,-274.160);
    CreateDynamicObject(2639,-2026.608,1129.086,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.664,1129.044,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.265,1129.003,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2026.460,1125.217,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.505,1125.171,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.316,1125.076,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2026.407,1121.527,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.439,1121.477,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.265,1121.446,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2026.299,1117.462,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.308,1117.420,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.234,1117.276,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2026.137,1114.010,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.174,1113.973,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.392,1113.952,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2026.029,1110.293,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2028.039,1110.233,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.395,1110.150,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2025.828,1105.819,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2027.845,1105.769,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2032.477,1105.597,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2025.950,1102.415,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2020.607,1102.462,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.182,1106.072,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.068,1106.128,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.293,1110.423,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.176,1110.462,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.494,1114.056,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.416,1114.099,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.488,1117.377,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.359,1117.439,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.701,1121.653,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.672,1121.698,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.795,1125.266,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.715,1125.309,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2021.890,1129.222,17.680,0.0,0.0,181.341);
    CreateDynamicObject(2639,-2019.839,1129.284,17.680,0.0,0.0,181.341);
    CreateDynamicObject(949,-2025.626,1099.546,18.491,0.0,0.0,0.0);
    CreateDynamicObject(949,-2021.007,1099.579,18.496,0.0,0.0,0.0);
    CreateDynamicObject(3406,-2024.526,1133.215,14.998,0.0,0.0,91.960);
    CreateDynamicObject(3406,-2024.287,1126.647,14.998,0.0,0.0,91.960);
    CreateDynamicObject(3406,-2024.092,1120.099,14.998,0.0,0.0,91.960);
    CreateDynamicObject(3406,-2023.873,1113.530,15.003,0.0,0.0,91.960);
    CreateDynamicObject(3406,-2023.646,1107.074,14.998,0.0,0.0,91.960);
    CreateDynamicObject(1841,-2013.758,1101.719,21.371,0.0,0.0,-42.112);
    CreateDynamicObject(1841,-2033.508,1101.456,21.313,0.0,0.0,-140.088);
    CreateDynamicObject(14527,-2024.357,1125.755,21.458,0.0,0.0,0.0);
    CreateDynamicObject(14527,-2023.682,1110.281,21.211,0.0,0.0,0.0);
    CreateDynamicObject(14527,-2023.954,1118.863,21.359,0.0,0.0,0.0);
    CreateDynamicObject(2048,-2032.371,1100.039,21.713,0.0,0.0,91.100);
    CreateDynamicObject(2048,-2014.370,1100.264,21.664,0.859,-0.859,270.723);
    CreateDynamicObject(626,-2032.645,1086.687,19.916,0.0,0.0,0.0);
    CreateDynamicObject(626,-2013.396,1086.476,19.920,0.0,0.0,0.0);
    CreateDynamicObject(936,-2022.400,1095.251,17.527,0.0,0.0,0.0);
    CreateDynamicObject(936,-2024.281,1095.263,17.527,0.0,0.0,0.0);
    CreateDynamicObject(936,-2024.247,1094.204,17.527,0.0,0.0,-178.763);
    CreateDynamicObject(936,-2022.370,1094.223,17.527,0.0,0.0,-179.622);
    CreateDynamicObject(936,-2023.282,1093.588,17.277,0.0,0.0,-178.763);
    CreateDynamicObject(936,-2023.265,1093.137,16.952,0.0,0.0,-178.763);
    CreateDynamicObject(1743,-2023.655,1094.334,18.020,0.0,0.0,0.0);
    CreateDynamicObject(1510,-2023.410,1095.185,19.017,0.0,0.0,0.0);
    CreateDynamicObject(1667,-2023.043,1095.203,19.119,0.0,0.0,0.0);
    CreateDynamicObject(1668,-2022.793,1095.308,19.197,0.0,0.0,31.799);
    CreateDynamicObject(1720,-2025.537,1097.943,17.051,0.0,0.0,42.972);
    CreateDynamicObject(1720,-2021.614,1097.964,17.051,0.0,0.0,-42.112);
    CreateDynamicObject(1720,-2024.596,1086.202,17.051,0.0,0.0,-182.201);
    CreateDynamicObject(1720,-2023.301,1086.164,17.051,0.0,0.0,-181.341);
    CreateDynamicObject(1720,-2022.044,1086.137,17.051,0.0,0.0,-179.622);
    CreateDynamicObject(2745,-2015.290,1099.679,19.087,0.0,0.0,-89.381);
    CreateDynamicObject(2745,-2031.465,1099.431,19.076,0.0,0.0,91.100);
    CreateDynamicObject(3462,-2023.001,1140.864,18.566,0.0,0.0,68.755);
    CreateDynamicObject(3462,-2026.740,1141.009,18.566,0.0,0.0,118.602);
    CreateDynamicObject(626,-2021.627,1141.992,19.101,0.0,0.0,0.0);
    CreateDynamicObject(626,-2019.373,1142.115,19.101,0.0,0.0,0.0);
    CreateDynamicObject(626,-2027.930,1141.726,19.101,0.0,0.0,0.0);
    CreateDynamicObject(626,-2030.010,1141.719,19.101,0.0,0.0,0.0);
    CreateDynamicObject(2639,-2020.268,1140.766,17.680,0.0,0.0,182.201);
    CreateDynamicObject(2639,-2028.983,1140.265,17.680,0.0,0.0,182.201);
    CreateDynamicObject(1720,-2015.520,1125.016,17.051,0.0,0.0,-60.161);
    CreateDynamicObject(1720,-2015.694,1123.822,17.051,0.0,0.0,-85.944);
    CreateDynamicObject(1720,-2015.421,1122.463,17.051,0.0,1.719,-139.229);
    CreateDynamicObject(1491,-2016.199,1124.526,16.765,0.0,0.0,-86.803);
    CreateDynamicObject(967,-2015.487,1123.763,17.010,0.0,0.0,93.679);
    CreateDynamicObject(1497,-2016.280,1124.456,15.831,0.0,0.0,2.578);
    CreateDynamicObject(15035,-2042.980,1096.350,17.845,0.0,0.0,90.241);
    CreateDynamicObject(2591,-2038.595,1100.055,18.894,0.0,0.0,-179.622);
//PEDAGIO
	CreateObject(18452,-81.473,-911.504,19.637,0.0,3.438,64.458, 300.0);
	CreateObject(18452,-86.795,-909.016,19.657,0.0,3.438,64.458, 300.0);
	CreateObject(4639,-84.176,-910.267,18.590,0.0,3.438,64.458, 300.0);
	CreateObject(1215,-86.564,-914.933,17.577,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-91.347,-912.313,17.664,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-81.359,-917.616,17.690,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-86.973,-903.254,16.768,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-76.825,-908.465,16.782,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-81.946,-905.872,16.711,0.0,0.0,0.0, 300.0);
	CreateObject(10281,-89.741,-908.728,25.320,0.0,0.0,-24.924, 300.0);
	CreateObject(3435,-79.336,-913.316,21.928,0.0,0.0,65.317, 300.0);
	CreateObject(3435,-89.129,-907.520,21.904,0.0,0.0,65.317, 300.0);
	CreateObject(10281,-79.505,-914.833,25.343,0.0,0.0,-24.924, 300.0);
	CreateObject(10281,-88.794,-906.180,25.131,0.0,0.0,-204.546, 300.0);
	CreateObject(10281,-78.944,-911.967,25.173,0.0,0.0,-204.546, 300.0);
	CreateObject(3435,-973.189,-343.464,40.641,0.0,0.0,-102.273, 300.0);
	CreateObject(18452,-964.780,-345.105,38.414,0.0,0.0,78.209, 300.0);
	CreateObject(18452,-970.554,-343.918,38.375,0.0,0.0,78.209, 300.0);
	CreateObject(3435,-962.014,-346.031,40.681,0.0,0.0,-102.273, 300.0);
	CreateObject(4641,-967.585,-344.193,37.361,0.0,0.0,79.068, 300.0);
	CreateObject(10281,-962.404,-347.406,43.984,0.0,0.0,-12.892, 300.0);
	CreateObject(10281,-973.883,-344.792,43.945,0.0,0.0,-12.892, 300.0);
	CreateObject(10281,-972.806,-342.067,43.945,0.0,0.0,-191.654, 300.0);
	CreateObject(10281,-961.830,-344.614,43.984,0.0,0.0,-191.654, 300.0);
	CreateObject(983,-976.888,-342.692,36.449,0.0,0.0,78.209, 300.0);
	CreateObject(983,-959.000,-346.646,36.143,0.0,0.0,78.209, 300.0);
	CreateObject(1215,-974.420,-347.943,36.069,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-968.680,-349.104,35.844,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-963.013,-350.329,35.617,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-966.861,-339.749,35.842,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-972.551,-338.784,36.027,0.0,0.0,0.0, 300.0);
	CreateObject(1215,-961.036,-340.733,35.646,0.0,0.0,0.0, 300.0);
//PEDAGIO LOS SANTOS
	CreateObject(4641, 35.632293701172, -1529.076171875, 6.1357402801514, 0, 0, 266.70568847656, 300.0);
	CreateObject(4641, 67.10196685791, -1533.9455566406, 5.8311233520508, 0, 0, 87.337829589844, 300.0);
	CreateObject(10281, 68.36555480957, -1534.0847167969, 8.1223773956299, 0, 344.99816894531, 83.3662109375, 300.0);
	CreateObject(10281, 34.36937713623, -1528.9321289063, 8.4724159240723, 0, 344.99816894531, 264.00048828125, 300.0);
	CreateObject(10281, 36.68558883667, -1529.1614990234, 8.4724159240723, 0, 344.99816894531, 81.381225585938, 300.0);
	CreateObject(10281, 66.0478515625, -1533.8525390625, 8.1223773956299, 0, 344.98718261719, 263.99047851563, 300.0);
	CreateObject(978, 60.978630065918, -1534.8353271484, 5.0441765785217, 0, 0, 171.42504882813, 300.0);
	CreateObject(978, 50.605979919434, -1533.9216308594, 5.1404309272766, 0, 0, 173.40466308594, 300.0);
	CreateObject(978, 40.753074645996, -1532.0096435547, 5.2318620681763, 0, 0, 169.43469238281, 300.0);
	CreateObject(978, 61.552124023438, -1531.3885498047, 5.0221199989319, 0, 0, 352.06005859375, 300.0);
	CreateObject(978, 51.23265838623, -1529.9393310547, 5.1295471191406, 0, 0, 352.05688476563, 300.0);
	CreateObject(978, 41.44654083252, -1528.3891601563, 5.2254266738892, 0, 0, 352.05688476563, 300.0);
	CreateObject(1374, 34.944358825684, -1526.9171142578, 4.4455451965332, 0, 0, 0);
	CreateObject(1374, 34.724945068359, -1531.2094726563, 4.4395666122437, 0, 0, 176.66442871094, 300.0);
	CreateObject(1374, 67.949798583984, -1532.0815429688, 4.1140956878662, 0, 0, 0, 300.0);
	CreateObject(1374, 67.731735229492, -1536.064453125, 4.1398868560791, 0, 0, 178.6494140625, 300.0);
//PEDAGIO ESTRADA
    CreateObject(4642, 2539.505859375, 304.08911132813, 29.58589553833, 0, 0, 358.01501464844, 300.0);
    CreateObject(4642, 2539.3637695313, 296.65670776367, 29.878120422363, 0, 0, 179.36279296875, 300.0);
    CreateObject(4642, 2516.4106445313, 299.26815795898, 30.043827056885, 0, 0, 173.40783691406, 300.0);
    CreateObject(4642, 2517.1833496094, 306.50720214844, 30.054021835327, 0, 0, 173.40270996094, 300.0);
    CreateObject(3435, 2542.1904296875, 284.4162902832, 33.259044647217, 0, 0, 356.03002929688, 300.0);
    CreateObject(10281, 2514.6286621094, 299.31967163086, 31.99974822998, 0, 345, 262.73571777344, 300.0);
    CreateObject(10281, 2515.4172363281, 306.69549560547, 31.99974822998, 0, 344.99816894531, 262.73254394531, 300.0);
    CreateObject(10281, 2541.2858886719, 304.17156982422, 31.799747467041, 0, 344.99816894531, 87.336486816406, 300.0);
    CreateObject(10281, 2541.1345214844, 296.68963623047, 31.799747467041, 0, 344.99267578125, 87.335815429688, 300.0);
    CreateObject(1374, 2515.8540039063, 308.88681030273, 28.409870147705, 0, 0, 352.06005859375, 300.0);
    CreateObject(1374, 2514.7370605469, 297.09048461914, 28.372844696045, 0, 0, 176.6611328125, 300.0);
    CreateObject(1374, 2540.87890625, 294.59899902344, 28.200183868408, 0, 0, 176.66015625, 300.0);
    CreateObject(1374, 2541.1525878906, 305.9892578125, 27.81209564209, 0, 0, 355.30920410156, 300.0);
//PEDAGIO NOVO(ESTRADA PERTO HQ DOS SONS)
    CreateObject(4642, 92.7236328125, -1275.1638183594, 14.942341804504, 0, 0, 306.40576171875, 300.0);
    CreateObject(4642, 84.917510986328, -1266.1041259766, 15.224144935608, 0, 0, 123.78649902344, 300.0);
    CreateObject(1374, 83.284629821777, -1265.0596923828, 13.53085899353, 0, 0, 29.774780273438, 300.0);
    CreateObject(4642, 76.391235351563, -1254.0012207031, 15.168005943298, 0, 0, 127.7529296875, 300.0);
    CreateObject(1374, 76.749130249023, -1255.9631347656, 13.67283821106, 0, 0, 215.09399414063, 300.0);
    CreateObject(4642, 101.51268005371, -1286.8515625, 14.994458198547, 0, 0, 306.40319824219, 300.0);
    CreateObject(1374, 99.806381225586, -1285.7977294922, 13.25719833374, 0, 0, 33.742919921875, 300.0);
    CreateObject(1374, 93.132995605469, -1277.1209716797, 13.212397575378, 0, 0, 215.09033203125, 300.0);
    CreateObject(10281, 79.237091064453, -1260.0068359375, 21.52029800415, 0, 339.99938964844, 300.26733398438, 300.0);
    CreateObject(10281, 80.713813781738, -1259.1701660156, 21.466123580933, 0, 339.99938964844, 120.90167236328, 300.0);
    CreateObject(10281, 95.587707519531, -1281.2474365234, 21.230987548828, 0, 339.99938964844, 300.26733398438, 300.0);
    CreateObject(10281, 96.950485229492, -1280.2509765625, 21.179170608521, 0, 339.99938964844, 121.61853027344, 300.0);
//Nova DP
	CreateDynamicObject(979,1534.19995117,-1668.59997559,13.19999981,0.00000000,0.00000000,90.00000000); //object(sub_roadleft) (2)
	CreateDynamicObject(978,1534.19995117,-1678.00000000,13.19999981,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (1)
	CreateDynamicObject(984,1546.00000000,-1602.40002441,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
	CreateDynamicObject(984,1558.50000000,-1602.59997559,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (2)
	CreateDynamicObject(984,1571.30004883,-1602.59997559,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (3)
	CreateDynamicObject(984,1584.09997559,-1602.59997559,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (4)
	CreateDynamicObject(984,1596.80004883,-1602.50000000,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (5)
	CreateDynamicObject(984,1601.69995117,-1602.50000000,16.50000000,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (6)
	CreateDynamicObject(984,1608.30004883,-1609.00000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (7)
	CreateDynamicObject(984,1608.40002441,-1621.80004883,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (8)
	CreateDynamicObject(984,1608.09997559,-1631.80004883,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (9)
	CreateDynamicObject(984,1601.80004883,-1638.00000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (10)
	CreateDynamicObject(983,1539.59997559,-1605.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (2)
	CreateDynamicObject(983,1539.59997559,-1611.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
	CreateDynamicObject(983,1539.50000000,-1614.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
	CreateDynamicObject(983,1542.59997559,-1617.80004883,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (7)
	CreateDynamicObject(983,1546.30004883,-1617.59997559,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (8)
	CreateDynamicObject(3749,1547.19995117,-1628.50000000,18.39999962,0.00000000,0.00000000,92.00000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(7922,1546.00000000,-1618.69995117,13.30000019,0.00000000,0.00000000,0.00000000); //object(vgwstnewall6905) (2)
	CreateDynamicObject(7922,1546.09997559,-1618.69995117,16.10000038,0.00000000,0.00000000,0.00000000); //object(vgwstnewall6905) (3)
//Outros Objetos
	CreateDynamicObject(1689,1543.99800000,-1646.44900000,28.61300000,0.00000000,0.00000000,90.24100000); //
	CreateDynamicObject(1689,1543.90600000,-1705.89800000,28.60600000,0.00000000,0.00000000,90.24100000); //
	CreateDynamicObject(1234,1536.25800000,-1638.56300000,14.10700000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1363,1535.51500000,-1638.29000000,13.38300000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2886,924.93914795,-1210.93774414,17.40651703,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,921.93853760,-1211.12341309,17.38725090,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2886,247.72758484,72.33472443,1003.92919922,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2886,250.40625000,64.48971558,1003.90820312,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2886,250.90625000,64.57377625,1003.92028809,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,244.89843750,73.80095673,1003.94177246,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,248.41078186,74.61183929,1003.93310547,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2886,247.88383484,77.16934967,1003.94836426,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(3749,1547.55212402,-1627.36657715,18.24122620,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(980,659.65700000,-1227.17100000,17.18500000,0.00000000,0.00000000,-118.60200000); //
	CreateDynamicObject(971,665.18500000,-1215.18300000,19.24000000,0.00000000,-0.85900000,54.14400000); //
	CreateDynamicObject(1271,1324.88684100,-635.91516100,108.48490100,0.00000000,0.00000000,17.18870000); //
	CreateDynamicObject(1271,1325.54064900,-635.74383500,108.48490100,0.00000000,0.00000000,17.18870000); //
	CreateDynamicObject(1271,1325.28625500,-635.80456500,109.17587300,0.00000000,0.00000000,17.18870000); //
	CreateDynamicObject(2930, 1582.6254882813, -1638.0324707031, 15.007925987244, 0, 0, 91.309509277344);//36 objetos*/
	CreateDynamicObject(1676, 1000.5368041992, -937.51239013672, 42.908992767334, 0, 0, 9.9249267578125);
	CreateDynamicObject(1676, 1007.5074462891, -936.49285888672, 42.908992767334, 0, 0, 7.939208984375);//2 objetos
	CreateDynamicObject(987, 1490.6391601563, -1824.5861816406, 12.546875, 0, 0, 268.69067382813);
	CreateDynamicObject(987, 1490.3248291016, -1836.5666503906, 12.546875, 0, 0, 268.68713378906);
	CreateDynamicObject(986, 1539.1845703125, -1828.4642333984, 12.546875, 0, 0, 268.69067382813);
	CreateDynamicObject(971, 1499.8586425781, -1860.7644042969, 16.116792678833, 0, 0, 0);//4 objetos
	CreateDynamicObject(14877,1688.62219238,-2079.71215820,14.61565590,0.00000000,0.00000000,0.00000000); //ESCADA HQ AZTECA
	CreateDynamicObject(8572,674.68878174,-448.07546997,17.56110191,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1216, 1124.8205566406, -1472.7642822266, 15.472403526306, 0, 0, 178.6494140625);
	CreateDynamicObject(1216, 1804.5754394531, -1167.1788330078, 23.520128250122, 0, 0, 344.1201171875);
	CreateDynamicObject(1216, 1363.7294921875, -1749.3428955078, 13.222763061523, 0, 0, 264.720703125);
	CreateDynamicObject(7927,366.49870000,189.72340000,1008.61030000,0.00000000,0.00000000,90.00000000); //
//COFRES LOJA DE ARMAS, AMMU NATION, ZIP, VICTIM
	CreateObject(1829, 820.33020019531, 8.3643178939819, 1003.6611938477, 0, 0, 91.309509277344, 300.0);
	CreateDynamicObject(1829, 294.78848266602, -57.060501098633, 1000.9801635742, 0, 0, 0);
	CreateDynamicObject(1550, 295.85116577148, -56.5666847229, 1000.908996582, 0, 0, 0);
	CreateDynamicObject(2036, 314.02340698242, -167.28829956055, 999.70867919922, 0, 0, 0);
	CreateDynamicObject(2035, 311.97988891602, -167.01052856445, 999.69909667969, 0, 0, 0);
	CreateDynamicObject(1829, 304.01489257813, -169.71098327637, 999.05828857422, 0, 0, 180);
	CreateDynamicObject(1550, 302.81533813477, -170.18684387207, 998.98712158203, 0, 0, 0);
	CreateDynamicObject(1550, 303.3544921875, -170.03125, 998.98712158203, 0, 0, 0);
	CreateDynamicObject(1550, 295.36669921875, -56.58052444458, 1000.908996582, 0, 0, 0);
	CreateDynamicObject(640, 299.03555297852, -56.658596038818, 1001.2126464844, 0, 0, 90);
	CreateDynamicObject(640, 292.94067382813, -70.411643981934, 1001.2126464844, 0, 0, 0);
	CreateDynamicObject(1775, 293.07434082031, -74.597625732422, 1001.6126708984, 0, 0, 90);
	CreateDynamicObject(1829, 211.35824584961, -95.523803710938, 1004.7223510742, 0, 0, 0);
	CreateDynamicObject(1550, 212.02578735352, -94.979904174805, 1004.651184082, 0, 0, 322);
	CreateDynamicObject(2957, -797.28912353516, 492.06140136719, 1367.8525390625, 0, 0, 90);
	CreateDynamicObject(18553, -791.23748779297, 497.20590209961, 1367.6591796875, 90, 0, 90);
	CreateDynamicObject(1829, 204.75688171387, -11.586506843567, 1004.6754760742, 0, 0, 90);
	CreateDynamicObject(1550, 204.11708068848, -10.964441299438, 1004.604309082, 0, 0, 0);
	CreateDynamicObject(1829, 162.76036071777, -79.767936706543, 1001.2692260742, 0, 0, 270);
//PORTA BURGER SHOT 2
	CreateDynamicObject(2957,681.56121826,-446.03887939,-24.98997688,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(2957,680.94635010,-449.14892578,-26.68190193,90.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2957,680.94635010,-447.48925781,-26.68190193,90.00000000,0.00000000,0.00000000); //
// COFRE DO BANCO
	CreateObject(2930, 2148.7333984375, 1604.6456298828, 1007.8063354492, 0, 0, 272,300.0);
	CreateObject(2904, 2147.7658691406, 1604.8271484375, 1006.2691650391, 0, 0, 0,300.0);
	CreateObject(2904, 2148.14453125, 1604.7364501953, 1001.7691650391, 0, 0, 0,300.0);
	CreateObject(2904, 2148.14453125, 1604.736328125, 1003.5191650391, 0, 0, 0,300.0);
	CreateObject(1829, 2144.3503417969, 1642.2572021484, 993.04064941406, 0, 0, 0,300.0);
	CreateObject(1829, 2177.8913574219, 1627.2242431641, 999.43316650391, 0, 0, 0,300.0);
//HQ TAXISTAS
	CreateDynamicObject(970,1809.69995117,-1722.00000000,16.89999962,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1809.69995117,-1722.00000000,17.89999962,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1811.50000000,-1720.00000000,16.89999962,0.00000000,0.00000000,92.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1811.50000000,-1720.00000000,17.89999962,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (4)
	CreateDynamicObject(970,1811.19995117,-1711.80004883,16.89999962,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (5)
	CreateDynamicObject(970,1811.40002441,-1715.90002441,17.89999962,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (6)
	CreateDynamicObject(970,1811.30004883,-1715.90002441,16.89999962,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (7)
	CreateDynamicObject(970,1811.19921875,-1711.79980469,17.89999962,0.00000000,0.00000000,91.99951172); //object(fencesmallb) (9)
	CreateDynamicObject(970,1809.50000000,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99951172); //object(fencesmallb) (10)
	CreateDynamicObject(970,1811.09997559,-1707.69995117,16.89999962,0.00000000,0.00000000,89.99951172); //object(fencesmallb) (12)
	CreateDynamicObject(970,1811.09997559,-1707.69995117,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (14)
	CreateDynamicObject(970,1811.09997559,-1703.59997559,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (15)
	CreateDynamicObject(970,1811.09960938,-1703.59960938,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (16)
	CreateDynamicObject(970,1811.09960938,-1703.59960938,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (17)
	CreateDynamicObject(970,1811.09997559,-1699.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (18)
	CreateDynamicObject(970,1811.09960938,-1699.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (19)
	CreateDynamicObject(970,1811.09960938,-1699.50000000,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (20)
	CreateDynamicObject(970,1811.19995117,-1695.40002441,17.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (21)
	CreateDynamicObject(970,1811.19921875,-1695.39941406,16.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (22)
	CreateDynamicObject(970,1811.30004883,-1691.30004883,17.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (23)
	CreateDynamicObject(970,1811.29980469,-1691.29980469,17.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (24)
	CreateDynamicObject(970,1811.29980469,-1691.29980469,16.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (25)
	CreateDynamicObject(970,1811.50000000,-1688.59997559,17.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (26)
	CreateDynamicObject(970,1811.50000000,-1688.59960938,17.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (27)
	CreateDynamicObject(970,1811.50000000,-1688.59960938,16.89999962,0.00000000,0.00000000,87.99499512); //object(fencesmallb) (28)
	CreateDynamicObject(970,1809.50000000,-1686.50000000,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (29)
	CreateDynamicObject(970,1805.40002441,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (30)
	CreateDynamicObject(970,1809.50000000,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (31)
	CreateDynamicObject(970,1805.40002441,-1686.50000000,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (32)
	CreateDynamicObject(970,1801.30004883,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (33)
	CreateDynamicObject(970,1805.39941406,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (34)
	CreateDynamicObject(970,1801.30004883,-1686.50000000,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (35)
	CreateDynamicObject(970,1797.19995117,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (36)
	CreateDynamicObject(970,1797.19995117,-1686.50000000,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (37)
	CreateDynamicObject(970,1793.19995117,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (38)
	CreateDynamicObject(970,1793.19995117,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (39)
	CreateDynamicObject(970,1793.19921875,-1686.59960938,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (40)
	CreateDynamicObject(970,1789.09997559,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (41)
	CreateDynamicObject(970,1789.09997559,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (42)
	CreateDynamicObject(970,1785.00000000,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (43)
	CreateDynamicObject(970,1785.00000000,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (44)
	CreateDynamicObject(970,1780.90002441,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (45)
	CreateDynamicObject(970,1785.00000000,-1686.59960938,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (46)
	CreateDynamicObject(970,1780.90002441,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (47)
	CreateDynamicObject(970,1780.89941406,-1686.59960938,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (48)
	CreateDynamicObject(970,1776.80004883,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (50)
	CreateDynamicObject(970,1772.69995117,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (51)
	CreateDynamicObject(970,1772.69995117,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (52)
	CreateDynamicObject(970,1768.59997559,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (53)
	CreateDynamicObject(970,1768.59997559,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (54)
	CreateDynamicObject(970,1764.50000000,-1686.59997559,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (55)
	CreateDynamicObject(970,1768.59960938,-1686.59960938,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (56)
	CreateDynamicObject(970,1764.50000000,-1686.59997559,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (57)
	CreateDynamicObject(970,1763.00000000,-1686.50000000,16.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (58)
	CreateDynamicObject(970,1763.00000000,-1686.50000000,17.89999962,0.00000000,0.00000000,179.99450684); //object(fencesmallb) (59)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (60)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (61)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (62)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (63)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (64)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (65)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (66)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (67)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,16.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (68)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,17.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (69)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,15.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (70)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,15.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (71)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,14.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (72)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,13.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (74)
	CreateDynamicObject(970,1761.09997559,-1688.50000000,12.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (73)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,14.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (75)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,13.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (76)
	CreateDynamicObject(970,1761.00000000,-1692.30004883,12.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (77)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,15.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (78)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,15.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (79)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,14.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (80)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,13.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (81)
	CreateDynamicObject(970,1761.09997559,-1696.50000000,12.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (82)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,14.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (83)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,13.69999981,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (84)
	CreateDynamicObject(970,1761.19995117,-1700.50000000,12.69999981,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (85)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,15.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (86)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,14.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (87)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,13.69999981,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (88)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,12.50000000,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (89)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,18.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (90)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,19.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (91)
	CreateDynamicObject(970,1761.30004883,-1704.50000000,20.89999962,0.00000000,0.00000000,89.99450684); //object(fencesmallb) (92)
	CreateDynamicObject(1215,1808.00000000,-1720.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1799.30004883,-1720.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1778.80004883,-1705.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1761.80004883,-1696.00000000,15.30000019,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
//HQ REPORTER
	CreateDynamicObject(3458,749.21500000,-1331.67400000,16.38900000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(3458,749.21500000,-1331.67400000,16.38900000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1536,754.68400000,-1362.56100000,12.50600000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,754.13600000,-1363.51700000,13.18400000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,757.41900000,-1360.20600000,13.19900000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(983,754.64000000,-1360.06900000,13.18400000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1215,754.69100000,-1356.67500000,13.06400000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1215,757.40300000,-1356.81800000,13.08000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1215,757.37000000,-1363.54400000,13.08000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1291,773.09400000,-1386.00700000,13.20100000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(8947,777.85700000,-1372.67800000,15.67300000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(11472,738.68500000,-1360.54800000,21.54300000,0.00000000,0.00000000,-90.00000000); //
	CreateDynamicObject(12839,769.97500000,-1372.19600000,15.89600000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1216,784.57600000,-1329.88000000,13.23900000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(984,785.13300000,-1378.28700000,19.36300000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(984,785.13300000,-1367.08200000,19.36300000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(984,778.73500000,-1384.69600000,19.36300000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,773.93200000,-1384.69200000,19.41000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,770.74800000,-1381.49800000,19.41000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(983,770.76400000,-1371.35000000,19.41000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(983,770.76400000,-1364.97300000,19.38500000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(984,778.71600000,-1360.69300000,19.36300000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,773.92300000,-1360.70200000,19.41000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(983,770.75300000,-1363.87000000,19.41000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(983,770.74900000,-1379.88300000,19.41000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(7927,366.49870000,189.72340000,1008.61030000,0.00000000,0.00000000,90.00000000); //
//PORTA BOPE
	CreateDynamicObject(2946, 327.39999389648, -1511.8000488281, 35, 0, 0, 142);
	CreateDynamicObject(2946, 327.39999389648, -1511.8000488281, 35, 0, 0, 320.99829101563);
//GRADES CELAS PM,PF
	CreateDynamicObject(988,266.34863281,82.44824219,1000.08843994,0.00000000,0.00000000,89.32434082); //
	CreateDynamicObject(988,266.34918213,86.14559174,1000.03906250,0.00000000,0.00000000,89.32434082); //
//HQ GI
	CreateDynamicObject(8172,-2268.69995117,2190.10009766,5.59999990,0.00000000,0.00000000,0.00000000); //object(vgssairportland07) (1)
	CreateDynamicObject(8172,-2254.60009766,2190.69995117,5.69999981,0.00000000,0.00000000,0.00000000); //object(vgssairportland07) (2)
	CreateDynamicObject(712,-2287.69995117,2269.89990234,15.19999981,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (1)
	CreateDynamicObject(712,-2237.30004883,2269.39990234,15.30000019,0.00000000,0.00000000,0.00000000); //object(vgs_palm03) (2)
	CreateDynamicObject(620,-2265.80004883,2283.69995117,3.79999995,0.00000000,0.00000000,0.00000000); //object(veg_palm04) (1)
	CreateDynamicObject(620,-2255.89990234,2283.89990234,3.79999995,0.00000000,0.00000000,0.00000000); //object(veg_palm04) (2)
// Caixas Eletronicos
    CreateDynamicObject(2754, 1928.6437988281, -1785.1895751953, 13.449019432068, 0, 0, 178);
	CreateDynamicObject(2754, 2232.9113769531, -1163.0958251953, 25.792768478394, 0, 0, 2);
	CreateDynamicObject(2754, 1551.2775878906, -1669.8072509766, 13.462940216064, 0, 0, 358);
    CreateDynamicObject(2754, 1779.8050537109, -1160.0457763672, 23.738018035889, 0, 0, 82);
//HQ Reporteres SF
    CreateDynamicObject(987, -2296.849609375, 519.11340332031, 34.160091400146, 0, 0, 0);
    CreateDynamicObject(987, -2285.7268066406, 519.01867675781, 34.171875, 0, 0, 358);
    CreateDynamicObject(987, -2274.0810546875, 518.14984130859, 34.162841796875, 0, 0, 0);
    CreateDynamicObject(987, -2262.09375, 518.19244384766, 34.171875, 0, 0, 0);
    CreateDynamicObject(987, -2250.3669433594, 518.31396484375, 34.171875, 0, 0, 0);
    CreateDynamicObject(987, -2248.6169433594, 518.22027587891, 34.171875, 0, 0, 2);
    CreateDynamicObject(987, -2236.8000488281, 518.58782958984, 34.171875, 0, 0, 90);
    CreateDynamicObject(987, -2236.857421875, 530.60870361328, 34.171875, 0, 0, 88);
    CreateDynamicObject(987, -2236.4943847656, 542.51916503906, 34.171875, 0, 0, 90);
    CreateDynamicObject(987, -2248.1145019531, 554.05755615234, 34.171875, 0, 0, 2);
    CreateDynamicObject(987, -2279.5786132813, 553.48022460938, 34.171875, 0, 0, 272);
    CreateDynamicObject(987, -2279.4738769531, 553.57653808594, 34.239475250244, 0, 0, 0);
    CreateDynamicObject(987, -2257.5104980469, 553.91973876953, 34.015625, 0, 0, 0);
	CreateDynamicObject(5822, -2277.8515625, 538.36657714844, 41.487823486328, 0, 0, 186);
	//Nova Hq Taxistas SF
	CreateDynamicObject(987, -2016.8342285156, 422.1989440918, 34.172294616699, 0, 0, 90);
    CreateDynamicObject(987, -2016.4759521484, 410.16912841797, 34.171875, 0, 0, 92);
    CreateDynamicObject(987, -2016.4188232422, 399.11505126953, 34.171875, 0, 0, 90);
    CreateDynamicObject(987, -2016.5552978516, 378.22860717773, 34.171875, 0, 0, 92);
    CreateDynamicObject(974, -2020.4290771484, 378.3024597168, 36.949615478516, 0, 0, 0);
    CreateDynamicObject(987, -2098.9638671875, 384.58312988281, 34.171875, 0, 0, 90);
    CreateDynamicObject(987, -2099.0466308594, 379.17947387695, 34.172294616699, 0, 0, 90);
//Nova HQ Guarda Nacional
	CreateDynamicObject(17068, -1410.7862548828, 283.09564208984, 0, 0, 0, 0.7156982421875);
	CreateDynamicObject(17068, -1400.8154296875, 290.65908813477, 0, 0, 0, 88.769134521484);
	CreateDynamicObject(5130, -1334.916015625, 478.67578125, 8.1070232391357, 0, 0, 223.74755859375);
	CreateDynamicObject(1473, -1334.6796875, 485.5703125, 10.673759460449, 0, 0, 179.99450683594);
	CreateDynamicObject(1473, -1336.0780029297, 485.61975097656, 10.673759460449, 0, 0, 179.99450683594);
	CreateDynamicObject(1473, -1333.2388916016, 485.57757568359, 10.673759460449, 0, 0, 179.99450683594);
	CreateDynamicObject(987, -1482.9261474609, 481.27862548828, 6.1875, 0, 0, 179.36492919922);
	CreateDynamicObject(987, -1494.923828125, 481.3837890625, 6.1809148788452, 0, 0, 179.36279296875);
	CreateDynamicObject(987, -1470.8608398438, 481.11569213867, 6.1875, 0, 0, 179.36279296875);
	CreateDynamicObject(987, -1458.8930664063, 480.90756225586, 6.1875, 0, 0, 179.36279296875);
	CreateDynamicObject(3279, -1550.8330078125, 488.42578125, 6.1796855926514, 0, 0, 354.03991699219);
	CreateDynamicObject(970, -1525.8287353516, 483.50256347656, 10.353620529175, 0, 0, 269.74731445313);
	CreateDynamicObject(970, -1520.6147460938, 491.69000244141, 10.353620529175, 0, 0, 0);
	CreateDynamicObject(970, -1523.7607421875, 491.8095703125, 10.353620529175, 0, 0, 0);
	CreateDynamicObject(970, -1525.8466796875, 489.734375, 10.353620529175, 0, 0, 269.74182128906);
	CreateDynamicObject(970, -1518.4343261719, 484.01605224609, 10.350336074829, 0, 0, 269.74731445313);
	CreateDynamicObject(970, -1518.41796875, 489.740234375, 10.353620529175, 0, 0, 269.74731445313);
	CreateDynamicObject(970, -1518.4326171875, 485.66818237305, 10.353620529175, 0, 0, 269.74731445313);
	CreateDynamicObject(970, -1525.8530273438, 485.59240722656, 10.353620529175, 0, 0, 269.74731445313);
	CreateDynamicObject(3749, -1549.8818359375, 515.99145507813, 12.038102149963, 0, 0, 262.72705078125);
	CreateDynamicObject(987, -1534.7143554688, 525.1533203125, 6.1796875, 0, 0, 179.36279296875);
	CreateDynamicObject(987, -1522.7165527344, 525.0341796875, 6.1796875, 0, 0, 179.36279296875);
	CreateDynamicObject(987, -1517.9741210938, 524.93438720703, 6.328125, 0, 0, 179.36279296875);
	CreateDynamicObject(987, -1517.8359375, 501.0260925293, 6.3030548095703, 0, 0, 90.037750244141);
	CreateDynamicObject(987, -1517.8955078125, 513.02075195313, 6.328125, 0, 0, 90.027465820313);
	CreateDynamicObject(987, -1517.583984375, 489.64501953125, 6.2259769439697, 0, 0, 90.027465820313);
	CreateDynamicObject(987, -1517.4719238281, 481.65148925781, 6.3621611595154, 0, 0, 90.032958984375);
	CreateDynamicObject(987, -1517.4716796875, 481.6513671875, 6.3621611595154, 0, 0, 90.032958984375);
	CreateDynamicObject(987, -1517.8359375, 501.025390625, 6.3030548095703, 0, 0, 90.032958984375);
	CreateDynamicObject(987, -1555.9455566406, 482.54217529297, 6.5021677017212, 0, 0, 356.73706054688);
	CreateDynamicObject(987, -1554.5007324219, 494.49368286133, 6.1796875, 0, 0, 84.072875976563);
	CreateDynamicObject(987, -1555.673828125, 482.8505859375, 6.1796875, 0, 0, 84.072875976563);
	CreateDynamicObject(4100, -1525.0867919922, 516.79132080078, 7.8813571929932, 0, 0, 318.31506347656);
	CreateDynamicObject(4100, -1525.2099609375, 507.6328125, 7.8813571929932, 0, 0, 318.31237792969);
	CreateDynamicObject(987, -1513.0437011719, 481.26333618164, 6.1875, 0, 0, 179.36279296875);
	CreateDynamicObject(3877, -1328.373046875, 341.40234375, 7.8593668937683, 0, 0, 0);
	CreateDynamicObject(3877, -1328.0982666016, 328.30810546875, 7.8532409667969, 0, 0, 0);
	CreateDynamicObject(3877, -1328.0852050781, 312.75302124023, 7.8532409667969, 0, 0, 0);
	CreateDynamicObject(3877, -1333.0601806641, 301.05755615234, 7.8532409667969, 0, 0, 0);
	CreateDynamicObject(3877, -1341.783203125, 292.49017333984, 7.8532409667969, 0, 0, 0);
	CreateDynamicObject(3877, -1362.3359375, 292.31427001953, 7.8532409667969, 0, 0, 0);
	CreateDynamicObject(3877, -1383.3970947266, 292.22592163086, 7.8466567993164, 0, 0, 0);
	CreateDynamicObject(2921, -1525.8616943359, 491.82330322266, 10.019522666931, 0, 21.75, 352);
	CreateDynamicObject(2921, -1551.9770507813, 522.75897216797, 12.07932472229, 0, 1.9849853515625, 63.52001953125);
	CreateDynamicObject(10610, -1546.0615234375, 387.8740234375, 16.673295974731, 0, 0, 267.99499511719);
	CreateDynamicObject(11444, -1424.1829833984, 311.29385375977, 6.1875, 0, 0, 0);
	CreateDynamicObject(11458, -1407.8226318359, 307.33377075195, 6.1875, 0, 0, 0);
	CreateDynamicObject(11446, -1434.6168212891, 314.74746704102, 6.1875009536743, 0, 0, 87);
	CreateDynamicObject(11444, -1435.9548339844, 321.38842773438, 6.1875, 0, 0, 0);
	CreateDynamicObject(11445, -1408.5272216797, 312.02523803711, 6.1875, 0, 3.9700012207031, 358.919921875);
	CreateDynamicObject(11444, -1384.9031982422, 300.21127319336, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1387.80078125, 320.72833251953, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1419.8818359375, 322.15151977539, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1424.2872314453, 299.77267456055, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1406.8911132813, 324.20706176758, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1380.5866699219, 312.46936035156, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1435.8316650391, 300.07946777344, 6.1875, 0, 0, 0);
	CreateDynamicObject(11446, -1434.7456054688, 327.25015258789, 6.1875, 0, 0, 86.995239257813);
	CreateDynamicObject(11446, -1435.4519042969, 307.03015136719, 6.1875, 0, 0, 179.36492919922);
	CreateDynamicObject(11444, -1412.8623046875, 297.5771484375, 6.1809196472168, 0, 0, 0);
	CreateDynamicObject(14791, -1471.7823486328, 318.95712280273, 8.2325611114502, 0, 0, 0);
	CreateDynamicObject(11483, -1526.3857421875, 437.013671875, 6.1875, 0, 0, 234.23010253906);
	CreateDynamicObject(11444, -1406.9381103516, 297.59976196289, 6.1809158325195, 0, 0, 0);
	CreateDynamicObject(11444, -1374.5122070313, 318.85443115234, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1366.2670898438, 321.95324707031, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1365.76171875, 299.4453125, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1364.6942138672, 311.2392578125, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1373.51953125, 307.49609375, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1380.4752197266, 323.48886108398, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1377.6247558594, 298.64535522461, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1388.9564208984, 310.2001953125, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1394.5573730469, 319.93862915039, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1393.2456054688, 300.34616088867, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1354.431640625, 308.19729614258, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1355.4453125, 320.2265625, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1354.2149658203, 297.69702148438, 6.1875, 0, 0, 0);
	CreateDynamicObject(11444, -1354.431640625, 308.197265625, 6.1875, 0, 0, 0);
	CreateDynamicObject(5816, -1618.4801025391, 321.24826049805, 15.378778457642, 0, 2, 89.75);
	CreateDynamicObject(10244, -1610.2878417969, 319.50234985352, 19.096202850342, 0, 16.265014648438, 359.75);
	CreateDynamicObject(986, -1651.5334472656, 303.36358642578, 6.1875, 0, 0, 182.41088867188);
	CreateDynamicObject(986, -1646.310546875, 267.6591796875, 6.1875, 0, 0, 271.73583984375);
	CreateDynamicObject(986, -1646.59375, 275.6845703125, 6.1875, 0, 0, 271.73583984375);
	CreateDynamicObject(986, -1646.7919921875, 283.62890625, 6.1875, 0, 0, 271.73583984375);
	CreateDynamicObject(986, -1647.060546875, 291.6015625, 6.1875, 0, 0, 271.73583984375);
	CreateDynamicObject(986, -1647.4462890625, 299.564453125, 6.1875, 0, 0, 271.73583984375);
	CreateDynamicObject(986, -1659.4970703125, 303.04974365234, 6.1875, 0, 0, 182.40600585938);
	CreateDynamicObject(986, -1667.4859619141, 302.79602050781, 6.1875, 0, 0, 182.40600585938);
	CreateDynamicObject(986, -1675.4888916016, 302.51473999023, 6.1875, 0, 0, 182.40600585938);
	CreateDynamicObject(986, -1683.4372558594, 302.15295410156, 6.1875, 0, 0, 2.9459838867188);
	CreateDynamicObject(986, -1689.8803710938, 298.86077880859, 6.1818180084229, 0, 0, 232.25598144531);
	CreateDynamicObject(3819, -1651.0146484375, 295.46752929688, 7.1852583885193, 0, 0, 0);
	CreateDynamicObject(3819, -1650.9970703125, 278.564453125, 7.1852583885193, 0, 0, 0);
	CreateDynamicObject(3819, -1650.990234375, 287.0029296875, 7.1852583885193, 0, 0, 0);
	CreateDynamicObject(986, -1692.1739501953, 291.65698242188, 6.1818189620972, 0, 0, 270.0009765625);
	CreateDynamicObject(986, -1692.1975097656, 283.67687988281, 6.1875, 0, 0, 270);
	CreateDynamicObject(986, -1692.0378417969, 275.76635742188, 6.1875, 0, 0, 270);
	CreateDynamicObject(18051, 126.97455596924, 2011.1419677734, 19.602378845215, 0, 0, 0);
	CreateDynamicObject(2051, 128.99127197266, 2017.5531005859, 18.129173278809, 0, 0, 310.25);
	CreateDynamicObject(2114, 296.8720703125, 2051.0373535156, 16.786935806274, 0, 0, 0);
	CreateDynamicObject(1320, 67.880401611328, 2063.8591308594, 17.9296875, 0, 0, 181.34996032715);
	CreateDynamicObject(1260, -3.3745112419128, 2079.91015625, 29.651861190796, 0, 0, 37.714996337891);
	CreateDynamicObject(4735, -2.9373333454132, 2079.578125, 35.563167572021, 0, 0, 39.700012207031);
	CreateDynamicObject(3114, -1414.3292236328, 511.26937866211, 16.569067001343, 0, 0, 181.34991455078);
	CreateDynamicObject(3115, -1456.5814208984, 501.36312866211, 16.873210906982, 0, 0, 0);
	
//======= ENTREGA DE PRODUTOS =====================================================================================================================================================
	AddStaticVehicleEx(456,1670.7562,-1476.2228,13.5562,88.9853,5,5,-1);//1
	AddStaticVehicleEx(456,1680.2968,-1476.3918,13.5573,88.9854,86,86,-1);// truck 2    [ 2 ]
	AddStaticVehicleEx(440,1697.7805,-1476.0262,13.4957,90.0862,14,14,-1); // truck 3    [ 3 ]
	AddStaticVehicleEx(440,1691.4647,-1476.0363,13.5047,90.0953,2,2,-1); // truck 4    [ 3 ]
//=====MECANICOS 1==============================================================
	AddStaticVehicleEx(525,960.8705,-1523.7804,13.4300,181.2015,255,1,-1); // mecanico 5
	AddStaticVehicleEx(525,965.1165,-1523.5040,13.4375,179.1248,0,0,-1); // mecanico 6
	AddStaticVehicleEx(525,969.3458,-1523.5670,13.4463,177.8837,1,1,-1); // mecanico 7
	AddStaticVehicleEx(525,973.9606,-1523.4875,13.4352,178.9259,2,2,-1); // mecanico 8
	AddStaticVehicleEx(525,978.2086,-1523.6873,13.4457,176.4233,3,3,-1); // mecanico 9
//=====ONIBUS 1=================================================================
	AddStaticVehicleEx(431,1217.3790,-1737.4086,13.6848,90.7661,9,125,-1); // onibus 10
	AddStaticVehicleEx(431,1217.2191,-1732.7500,13.6793,91.3240,9,125,-1); // onibus 11
	AddStaticVehicleEx(431,1197.5940,-1758.3660,13.6840,359.4407,9,125,-1); // onibus 12
	AddStaticVehicleEx(431,1193.0269,-1758.2762,13.6798,0.8152,9,125,-1); // onibus 13
	AddStaticVehicleEx(431,-2243.2869,-1722.5043,480.4032,187.4451,1,1,-1);//Onibus 14
//=====ONIBUS 2=================================================================
	AddStaticVehicleEx(437,1391.4984,-2362.7532,13.6826,0.1325,3,3,-1);//onibus 15
	AddStaticVehicleEx(437,1367.7448,-2365.5542,13.6782,270.0238,3,3,-1);//onibus 16
//====CAMINHoES 1===============================================================
	AddStaticVehicleEx(514,-77.5039,-1108.1729,1.6683,161.8915,13,13,-1);//truck 17
	AddStaticVehicleEx(514,-72.3507,-1109.7822,1.6670,161.7769,13,13,-1);//truck 18
	AddStaticVehicleEx(514,-67.0126,-1111.7156,1.6688,160.4800,13,13,-1);//truck 19
	AddStaticVehicleEx(435,-51.0638,-1135.2831,1.0781,68.3320,1,1,-1);//trailer 20
	AddStaticVehicleEx(435,-53.6230,-1139.7546,1.0781,67.5604,1,1,-1);//trailer 21
	AddStaticVehicleEx(435,-55.0517,-1144.3676,0.8018,68.1347,1,1,-1);//trailer 22
//========================[Mecanicos 2]=========================================
	AddStaticVehicleEx(525,982.7087,-1523.8787,13.4345,177.9075,4,4,-1); // mecanico 23
	AddStaticVehicleEx(525,986.8973,-1524.0548,13.4254,178.3448,5,5,-1); // mecanico 24
	AddStaticVehicleEx(525,990.8581,-1523.7737,13.4276,180.4166,6,6,-1); // mecanico 25
	AddStaticVehicleEx(525,960.1063,-1541.0845,13.4747,358.9919,7,7,-1); // mecanico 26
	AddStaticVehicleEx(525,964.8918,-1541.0861,13.4678,358.4241,8,8,-1); // mecanico 27
	AddStaticVehicleEx(525,968.9952,-1541.0129,13.4600,359.8230,9,9,-1); // mecanico 28
	AddStaticVehicleEx(525,973.1286,-1541.0415,13.4681,359.7242,10,10,-1); // mecanico 29
	AddStaticVehicleEx(525,977.5458,-1541.2117,13.4678,1.2631,11,11,-1); // mecanico 30
	AddStaticVehicleEx(525,981.7236,-1541.0249,13.4691,0.9957,12,12,-1); // mecanico 31
	AddStaticVehicleEx(525,986.5685,-1540.8392,13.4707,2.3242,13,13,-1); // mecanico 32
	AddStaticVehicleEx(525,990.8370,-1540.7626,13.4640,1.3304,14,14,-1); // mecanico 33
//=============================[Mecanicos SF]===================================
	AddStaticVehicleEx(525,-1737.3251,45.1916,3.4409,269.9934,0,0,-1); // 34
	AddStaticVehicleEx(525,-1737.3944,49.4270,3.4331,268.3645,1,1,-1); // 35
	AddStaticVehicleEx(525,-1737.3307,53.9096,3.4309,270.4709,2,2,-1); // 36
	AddStaticVehicleEx(525,-1737.0857,58.5693,3.4367,269.8252,4,4,-1); // 37
	AddStaticVehicleEx(525,-1737.3252,63.1936,3.4355,271.6133,5,5,-1); // 38
	AddStaticVehicleEx(525,-1737.3665,67.6933,3.4345,270.5290,6,6,-1); // 39
	AddStaticVehicleEx(525,-1737.4166,21.1761,3.4174,269.9124,7,7,-1); // 40
	AddStaticVehicleEx(525,-1737.4020,16.8189,3.4200,269.6834,8,8,-1); // 41
	AddStaticVehicleEx(525,-1737.3824,11.9699,3.4339,269.8694,9,9,-1); // 42
	AddStaticVehicleEx(525,-1737.4219,6.9925,3.4235,269.7342,11,11,-1); // 43
	AddStaticVehicleEx(525,-1737.3607,2.2889,3.4204,271.6690,12,12,-1); // 44
	AddStaticVehicleEx(525,-1737.3323,-2.5335,3.4290,270.0871,13,13,-1); // 45
	//Veiculos Casa Dreigon
	AddStaticVehicleEx(520,2044.7028,1955.0586,37.9150,23.2847,0,0,60000);//Hydra 46
	AddStaticVehicleEx(487,2002.1702,1913.2932,38.7329,149.8011,0,0,60000);//Helicoptero0 47
	//Voadores EB
	AddStaticVehicleEx(520,-1573.4214,336.7833,22.6014,2.2625,0,0,60000); // Hydra EB 48
	AddStaticVehicleEx(425,-1585.9563,340.7948,22.5600,353.7979,0,0,60000); // Heli EB 49
	
	for(new i = 1; i < sizeof(CarInfo); i++){CarInfo[i][ownedvehicle] = AddStaticVehicleEx(CarInfo[i][cModel],CarInfo[i][cLocationx],CarInfo[i][cLocationy],CarInfo[i][cLocationz],CarInfo[i][cAngle],CarInfo[i][cColorOne],CarInfo[i][cColorTwo],-1);}

	for(new i=0; i<MAX_PLAYERS; i++)
	{
		Speed[i] = TextDrawCreate(25.000000, 265.000000, "_");
		TextDrawFont(Speed[i], 0);
		TextDrawLetterSize(Speed[i], 0.500000, 1.000000);
		TextDrawSetOutline(Speed[i], 0);
		TextDrawSetProportional(Speed[i], 1);
		TextDrawSetShadow(Speed[i], 1);

	}
   	for(new th=0;th<MAX_VEHICLES;th++)
	{
    	SetVehicleNumberPlate(th, "BPR - RP");
   	}
   	
   	if(_:g_WelcomeChannelId == 0)
   	g_WelcomeChannelId = DCC_FindChannelById("865653915735293952");
	new str[128];
	new DCC_Embed:embed = DCC_CreateEmbed();
	DCC_SetEmbedTitle(embed, "AVISO");
    DCC_SetEmbedColor(embed, 0xFF0000);
    format(str, sizeof str, "Servidor se encontra online novamente, podem entrar e fazer seu RP!");
    DCC_SetEmbedDescription(embed, str);
	DCC_AddEmbedField(embed, "IP:", "20.206.69.206:7777", false);
	DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
	DCC_SetEmbedFooter(embed, "Atenciosamente, Equipe Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
	//DCC_SendChannelEmbedMessage(g_WelcomeChannelId, embed);
	return 1;

}

BPR::SyncTime()
{
	new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	Fixhour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "[BPR]: Agora sao %d:00 horas",shifthour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		SetHora();
	}
}
BPR::GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
BPR::Production()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel (i, 0); GameTextForPlayer(i, "~w~O efeito da bebida~n~~b~acabou", 3500, 1); }
 		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		}
	}
}
BPR::PayDay()
{
	new Conta,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
		    	if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COR_TDR, "Voce devia ter debitado suas dividas, lhe enviaram um pedido de prisao.");
				    GameTextForPlayer(i, "~r~apreendido !", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeapons(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(gstring, sizeof(gstring), "Voce foi preso por %d segundos.   Fianca: Desativada", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
				}
				if(Multa[i] > 1)
				{
				    SendClientMessage(i, COR_TDR, "Voce devia ter debitado suas dividas, lhe enviaram um pedido de prisao.");
				    GameTextForPlayer(i, "~r~apreendido !", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeapons(i);
					WantedPoints[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					format(gstring, sizeof(gstring), "Voce foi preso por %d segundos.   Fianca: Desativada", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
				}
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voce nao pagou a sua divida e foi preso.");
				    GameTextForPlayer(i, "~r~Preso!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsEx(i);
                    WantedPoints[i] = 0;
      				SetPlayerWantedLevel(i, 0);
					PlayerInfo[i][pJailTime] = 600;
					format(gstring, sizeof(gstring), "Voce foi preso por %d segundos.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				Conta = PlayerInfo[i][pConta];
				new key = PlayerInfo[i][pPHousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoneyEx(i))
					{
						PlayerInfo[i][pPHousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, "Voce foi expulso(a).");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
			    if(PlayerInfo[i][pVIP] == 1) { tmpintrate = 3; }
			    else if(PlayerInfo[i][pVIP] == 2) { tmpintrate = 4; }
				else { tmpintrate = 1; }
				if(PlayerInfo[i][pPayDay] >= 3)
				{
				    Tax += TaxValue;//Shorld work for every player online
				    PlayerInfo[i][pConta] -= TaxValue;
					new checks = PlayerInfo[i][pSalario];
				    new ebill = (PlayerInfo[i][pConta]/30000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    GivePlayerMoneyEx(i, checks);
				    PassadoUmDia++;
					if(PassadoUmDia >= 24)
					{
					}
				    if(PlayerInfo[i][pConta] > 0)
				    {
				    	PlayerInfo[i][pConta] -= ebill;
					}
					else
					{
					    ebill = 0;
					}
					if(CHitman == CTriad && Avisouc == 0)
					{
					//SendClientMessageToAll(COLOR_LIGHTBLUE, "Os Hitmans e os Triads concluiram o mesmo numero de contratos.");
					Avisouc = 1;
					}
					if(CHitman > CTriad && Avisouc == 0)
					{
					//SendClientMessageToAll(COLOR_LIGHTBLUE, "Os Hitmans concluiram um maior numero de contratos do que os Triads e ganharam um Bonus Especial.");
					CHitman = 0;
					CTriad = 0;
					Avisouc = 1;
					GanhouArmamento = 8;
					}
					if(CTriad > CHitman && Avisouc == 0)
					{
					//SendClientMessageToAll(COLOR_LIGHTBLUE, "Os Triads concluiram um maior numero de contratos do que os Hitmans e ganharam um Bonus Especial.");
					CHitman = 0;
					CTriad = 0;
					Avisouc = 1;
					GanhouArmamento = 26;
                    }
                    Avisouc = 0;
					new rand = random(80);
					if(rand < 77) { rand += 3; }
					Lotto(rand);
					Checkprop();
                    //new nxtlevel = PlayerInfo[i][pLevel]+1;
					interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					PlayerPlayMusic(i);
					PlayerInfo[i][pConta] = Conta+interest;
					SendClientMessage(i, COLOR_WHITE, "{0000FF}\
					.=.=.=.=.=.=.=.=.=.| Pay Day |.=.=.=.=.=.=.=.=.=.\
					");
					
					format(gstring, sizeof(gstring), "  {F4A201}Salario: {71906E}R$%d", checks);
					SendClientMessage(i, COLOR_GRAD1, gstring);
					
					format(gstring, sizeof(gstring), "  {F4A201}Imposto: {FF0040}-R$%d", TaxValue);
					SendClientMessage(i, COLOR_GRAD1, gstring);
					
					format(gstring, sizeof(gstring), "  {F4A201}Respeito: {71906E}(%d/4)", PlayerInfo[i][pExp]);
					SendClientMessage(i, COLOR_GRAD5, gstring);

					format(gstring, sizeof(gstring), "  {F4A201}Novo Saldo: {71906E}R$%d", PlayerInfo[i][pConta]);
					SendClientMessage(i, COLOR_GRAD5, gstring);
					
					SendClientMessage(i, COLOR_WHITE, "{0000FF}=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.");
					
					PlayerPlaySound(i, 1185, 0.0, 0.0, 0.0);
					//format(gstring, sizeof(gstring), "~w~-==- ~p~Payday Recebido ~w~ -==-");
					//GameTextForPlayer(i, gstring, 5000, 1);
					//GivePlayerMoney(i,- 100);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pSalario] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					pban[i] = 0;
					if(PlayerInfo[i][pEmprego] > 0)
	    			{
	    	    		if(PlayerInfo[i][pContractTime] < 25)
	    	    		{
							PlayerInfo[i][pContractTime] ++;
						}
	    			}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* Voce nao jogou tempo suficiente para receber salario!.");
				}
			}
		}
		new lolbagui;
		lolbagui = PlayerInfo[i][pExp];
		//new nxtlevel = PlayerInfo[i][pLevel]+1;
		//if(lolbagui >= nxtlevel*levelexp)
		if(lolbagui >= 4)
		{
		    PlayerInfo[i][pLevel]++;
			ScoreLevel(i);
			PlayerInfo[i][pExp] = 0;
			PlayerInfo[i][gPupgrade] = PlayerInfo[i][gPupgrade]+2;
		    GameTextForPlayer(i, "~g~Mais um nivel recebido!", 5000, 1);
		}
		printf("Payday Efetuado!");
	}
	//return true;
}

stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock strtokEx(const string[], &index)
{
	new length = strlen(string);
 	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[64];
	while ((index < length) && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
BPR::split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return true;
}
BPR::OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Contas/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
			    strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			    new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "ID=%d\n",PlayerInfo[playerid][pID]);fwrite(hFile, var);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "HelperLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
				format(var, 32, "ModLevel=%d\n",PlayerInfo[playerid][pMod]);fwrite(hFile, var);
				format(var, 32, "Developer=%d\n",PlayerInfo[playerid][pScripter]);fwrite(hFile, var);
				format(var, 32, "Modeler=%d\n",PlayerInfo[playerid][pMapper]);fwrite(hFile, var);
				format(var, 32, "ResponsavelEquipe=%d\n",PlayerInfo[playerid][pResp]);fwrite(hFile, var);
				format(var, 32, "Equipe=%d\n",PlayerInfo[playerid][pEquipe]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Coins=%d\n",PlayerInfo[playerid][pCoins]);fwrite(hFile, var);
				format(var, 32, "Dinheiro Sujo=%d\n",PlayerInfo[playerid][pDsujo]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "HeadValueT=%d\n",PlayerInfo[playerid][pHeadValueT]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Pecas=%d\n",PlayerInfo[playerid][pPecas]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "Gold=%d\n",PlayerInfo[playerid][pGold]);fwrite(hFile, var);
				format(var, 32, "Origem=%d\n",PlayerInfo[playerid][pOrigem]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				format(var, 32, "Ajustado=%d\n",PlayerInfo[playerid][pAjustado]);fwrite(hFile, var);
				format(var, 32, "Voto=%d\n",PlayerInfo[playerid][pVoto]);fwrite(hFile, var);
				format(var, 32, "Salario=%d\n",PlayerInfo[playerid][pRecebeuSalario]);fwrite(hFile, var);
				format(var, 32, "Gerente=%d\n",PlayerInfo[playerid][pGerente]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
                    PlayerInfo[playerid][pPos_x] = 1684.9;
					PlayerInfo[playerid][pPos_y] = -2244.5;
					PlayerInfo[playerid][pPos_z] = 13.5;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado2]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
   				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				format(var, 32, "Carro1=%d\n", PlayerInfo[playerid][pCar1]);fwrite(hFile, var);
				format(var, 32, "Carro2=%d\n", PlayerInfo[playerid][pCar2]);fwrite(hFile, var);
				format(var, 32, "Carro3=%d\n", PlayerInfo[playerid][pCar3]);fwrite(hFile, var);
				format(var, 32, "Carro4=%d\n", PlayerInfo[playerid][pCar4]);fwrite(hFile, var);
				format(var, 32, "Ban=%d\n",PlayerInfo[playerid][pBan]);fwrite(hFile, var);
				fclose(hFile);
			}
   			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Fazendo Seu Login", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nConta registrada, para logar digite sua senha corretamente!", "Logar", "Esperar");
	}
	return true;
}
BPR::OnPlayerLogin(playerid,password[])
{
    new string2[64];
	format(string2, sizeof(string2), "Contas/%s.ini", PlayerName(playerid));
	strmid(PlayerInfo[playerid][pKey], dini_Get(string2, "Key"), 0, strlen(dini_Get(string2, "Key")), 255);
	new File: UserFile = fopen(string2, io_read);
	if (UserFile)
	{
		if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0)
		{
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
			    while (fread(UserFile, Data, sizeof(Data)))
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "ID" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pID] = strval( val ); }
					if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
			    	if( strcmp( key , "HelperLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHelper] = strval( val ); }
					if( strcmp( key , "Developer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pScripter] = strval( val ); }
					if( strcmp( key , "Modeler" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMapper] = strval( val ); }
					if( strcmp( key , "ModLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMod] = strval( val ); }
					if( strcmp( key , "ResponsavelEquipe" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pResp] = strval( val ); }
					if( strcmp( key , "Equipe" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEquipe] = strval( val ); }
					if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
			        if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
			        if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
			        if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
			        if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
			        if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
			        if( strcmp( key , "Coins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCoins] = strval( val ); }
			        if( strcmp( key , "Dinheiro Sujo" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDsujo] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
			        if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConta] = strval( val ); }
			        if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
			        if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
			        if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
			        if( strcmp( key , "Emprego" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEmprego] = strval( val ); }
			        if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSalario] = strval( val ); }
			        if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
			        if( strcmp( key , "HeadValueT" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValueT] = strval( val ); }
			        if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
			        if( strcmp( key , "Pecas" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPecas] = strval( val ); }
					if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
			        if( strcmp( key , "Materiais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
			        if( strcmp( key , "Maconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas] = strval( val ); }
			        if( strcmp( key , "Cocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas2] = strval( val ); }
			        if( strcmp( key , "Crack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas3] = strval( val ); }
			        if( strcmp( key , "Lider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLider] = strval( val ); }
			        if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMembro] = strval( val ); }
			        if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCargo] = strval( val ); }
			        if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSkin] = strval( val ); }
			        if( strcmp( key , "Gold" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGold] = strval( val ); }
			        if( strcmp( key , "Origem" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOrigem] = strval( val ); }
			        if( strcmp( key , "ContractTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContractTime] = strval( val ); }
			        if( strcmp( key , "DetSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDetSkill] = strval( val ); }
			        if( strcmp( key , "SexSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSexSkill] = strval( val ); }
			        if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
			        if( strcmp( key , "LawSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLawSkill] = strval( val ); }
			        if( strcmp( key , "MechSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMechSkill] = strval( val ); }
			        if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
			        if( strcmp( key , "DrogasSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogasSkill] = strval( val ); }
			        if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
			        if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
			        if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
			        if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
			        if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPHousekey] = strval( val ); }
			        if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
			        if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_x] = floatstr( val ); }
			        if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_y] = floatstr( val ); }
			        if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_z] = floatstr( val ); }
			        if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
                    if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
					if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
			        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
			        if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
			        if( strcmp( key , "CDPlayer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCDPlayer] = strval( val ); }
			        if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
			        if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
			        if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
			        if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
			        if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
			        if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
			        if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
			        if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
			        if( strcmp( key , "Avisos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
			        if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
			        if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Spawn" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSpawn] = strval( val ); }
			        if( strcmp( key , "SafeMaconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas] = strval( val ); }
			        if( strcmp( key , "SafeCocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas2] = strval( val ); }
			        if( strcmp( key , "SafeCrack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas3] = strval( val ); }
			        if( strcmp( key , "NivelProcurado" , true ) == 0 ) { val = ini_GetValue( Data ); WantedPoints[playerid] = strval( val ); }
			        if( strcmp( key , "SafeMateriais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][psMats] = strval( val ); }
			        if( strcmp( key , "Luta" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLuta] = strval( val ); }
			        if( strcmp( key , "Dorgado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado] = strval( val ); }
			        if( strcmp( key , "Dorgado2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado2] = strval( val ); }
			        if( strcmp( key , "Doenca" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDoenca] = strval( val ); }
			        if( strcmp( key , "LU" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pLastLogin], val, 0, strlen(val)-1, 255); }
           			if( strcmp( key , "Gun1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun1] = strval( val ); }
					if( strcmp( key , "Gun2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun2] = strval( val ); }
					if( strcmp( key , "Gun3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun3] = strval( val ); }
					if( strcmp( key , "Gun4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun4] = strval( val ); }
					if( strcmp( key , "Gun5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun5] = strval( val ); }
					if( strcmp( key , "Gun6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun6] = strval( val ); }
					if( strcmp( key , "Gun7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun7] = strval( val ); }
					if( strcmp( key , "Gun8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun8] = strval( val ); }
					if( strcmp( key , "Gun9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun9] = strval( val ); }
					if( strcmp( key , "Gun10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun10] = strval( val ); }
					if( strcmp( key , "Gun11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun11] = strval( val ); }
					if( strcmp( key , "Gun12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun12] = strval( val ); }
					if( strcmp( key , "Ammo1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo1] = strval( val ); }
					if( strcmp( key , "Ammo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo2] = strval( val ); }
					if( strcmp( key , "Ammo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo3] = strval( val ); }
					if( strcmp( key , "Ammo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo4] = strval( val ); }
					if( strcmp( key , "Ammo5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo5] = strval( val ); }
					if( strcmp( key , "Ammo6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo6] = strval( val ); }
					if( strcmp( key , "Ammo7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo7] = strval( val ); }
					if( strcmp( key , "Ammo8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo8] = strval( val ); }
					if( strcmp( key , "Ammo9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo9] = strval( val ); }
					if( strcmp( key , "Ammo10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo10] = strval( val ); }
					if( strcmp( key , "Ammo11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo11] = strval( val ); }
					if( strcmp( key , "Ammo12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo12] = strval( val ); }
					if( strcmp( key , "Carro1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCar1] = strval( val ); }
					if( strcmp( key , "Carro2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCar2] = strval( val ); }
					if( strcmp( key , "Carro3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCar3] = strval( val ); }
					if( strcmp( key , "Carro4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCar4] = strval( val ); }
                    if( strcmp( key , "Ban" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBan] = strval( val ); }
                    if( strcmp( key , "Ajustado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAjustado] = strval( val ); }
					if( strcmp( key , "Voto" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVoto] = strval( val ); }
					if( strcmp( key , "Salario" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRecebeuSalario] = strval( val ); }
					if( strcmp( key , "Gerente" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGerente] = strval( val ); }
			        logouagora[playerid] = 1;
			        CheckOwner(playerid);
			        TextDrawHideForPlayer(playerid, BPRText[playerid]);
			        CheckOwnerb(playerid);
					CheckOwnerh(playerid);
                }
                fclose(UserFile);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Senha Errada, se errar 6 vezes sera banido automaticamente !");
			SetPlayerCameraPos(playerid, 1225.2864,-1712.3047,13.3828);
			SetPlayerCameraLookAt(playerid, 1228.9581,-1712.3171,13.3828);
			SetPlayerPos(playerid, 1409.3607,-1713.2329,30.7422);
			SetPlayerInterior(playerid, 0);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Fazendo Seu Login", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nConta registrada, para logar digite sua senha corretamente!", "Logar", "Esperar");
			fclose(UserFile);
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 6)
			{
				ShowPlayerDialog(playerid, 5062, DIALOG_STYLE_MSGBOX, "Aviso {FFFFFF}Brasil {0000FF}Play {FFFFFF}Real", "Voce foi expulso por errar a senha mais de 6 vezes! Tente novamente mais tarde", "Entendido", "Cancelar");
				SetTimerEx("KickarWL", 1000, 0, "i", playerid);
			}
	        return true;
		}
		ClearChatbox(playerid, 100);
		ResetPlayerMoney(playerid);
		ConsumingMoney[playerid] = 1;
		GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
		CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 2;
			PlayerInfo[playerid][pSHealth] = 100;
			PlayerInfo[playerid][pPos_x] = 2246.6;
			PlayerInfo[playerid][pPos_y] = -1161.9;
			PlayerInfo[playerid][pPos_z] = 1029.7;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
			PlayerInfo[playerid][pTeam] = 3;
			if(PlayerInfo[playerid][pSex] == 1){SetPlayerSkin(playerid, 23);}else{SetPlayerSkin(playerid, 40);}
			new randphone = 1000 + random(8999);//
			PlayerInfo[playerid][pPnumber] = randphone;
			PlayerInfo[playerid][pPHousekey] = 255;
			PlayerInfo[playerid][pPbiskey] = 255;
			PlayerInfo[playerid][pConta] = 100;
			PlayerInfo[playerid][pReg] = 1;
			PlayerInfo[playerid][pEmprego] = 0;
			PlayerInfo[playerid][pKills] = 0;
			PlayerInfo[playerid][pDeaths] = 0;
			ResetPlayerMoney(playerid);
		}
		if(PlayerInfo[playerid][pWarns] == 1) //1 aviso
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta Ja tem 1 Aviso!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Voce tiver 3 avisos sera banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] == 2) //2 avisos
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta Ja tem 2 Avisos!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Voce tiver 3 avisos sera banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] >= 3) //3 avisos
		{
		    PlayerInfo[playerid][pWarns] = 0;
		}
		printf("%s has logged in.",PlayerName(playerid));
  		DateProp(playerid);
		TextDrawHideForPlayer(playerid, BPRText[playerid]);
		TextDrawHideForPlayer(playerid, BPRText[playerid]);
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, COLOR_RED, "Seja muito bem-vindo novamente ao Brasil Play Real");
		SendClientMessage(playerid, COLOR_WHITE, "Caso precise de ajuda use /relatorio");
		SendClientMessage(playerid, COLOR_WHITE, "Tenha um otimo RolePlay!");
		SendClientMessage(playerid, -6, "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=");
		SendClientMessage(playerid, -1,"[{0622c2}DICA{FFFFFF}] Caso queira voltar pra sua posicao use /continuar!");
		SetTimerEx("continuou", 60000, true, "i", playerid);
		if (VipCheck(playerid) == 0 && PlayerInfo[playerid][pVIP] > 0)
		{
			PlayerInfo[playerid][pVIP] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Voce nao e mais um jogador VIP, renove seu VIP e receba seus beneficios de volta");
		}
		else if (PlayerInfo[playerid][pVIP] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce logou com uma conta {FFFF00}Vip");
  		}
    	else if (PlayerInfo[playerid][pVIP] == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED,"Voce logou com uma conta {00FFFF}Socio");
		}
		if (AdmCheck(playerid) == 0 && PlayerInfo[playerid][pAdmin] > 0)
		{
			PlayerInfo[playerid][pAdmin] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Voce nao e mais um Admin.");
		}
		if (HelperCheck(playerid) == 0 && PlayerInfo[playerid][pHelper] > 0)
		{
			PlayerInfo[playerid][pHelper] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Voce nao e mais um Helper.");
		}
		if (HelperCheck(playerid) == 0 && PlayerInfo[playerid][pMod] > 0)
		{
			PlayerInfo[playerid][pMod] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Voce nao e mais um Moderador.");
		}
		else if(PlayerInfo[playerid][pAdmin] > 0)
		{
			format(string2, sizeof(string2), "[BPR]: Voce Logou Como Admin Nivel %d.",PlayerInfo[playerid][pAdmin]);
			SendClientMessage(playerid, COLOR_LIGHTRED,string2);
		}
		else if(PlayerInfo[playerid][pHelper] > 0)
		{
			format(string2, sizeof(string2), "[BPR]: Voce Logou Como Helper Level [%d].",PlayerInfo[playerid][pHelper]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE,string2);
		}
		else if(PlayerInfo[playerid][pMod] > 0)
		{
			format(string2, sizeof(string2), "[BPR]: Voce Logou Como Moderador Level [%d].",PlayerInfo[playerid][pMod]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE,string2);
		}
		format(string2, sizeof(string2), "[{0622c2}AVISO{FFFFFF}] %s logou no servidor!",PlayerName(playerid));
		ABroadCast(COLOR_WHITE,string2,1);
		new str[128];
		new player[128];
		new pip[16];
		new ipuser[128];
		GetPlayerIp(playerid, pip, sizeof(pip));
		new DCC_Embed:embed = DCC_CreateEmbed();
		DCC_SetEmbedTitle(embed, "Log Login");
		DCC_SetEmbedColor(embed, 0xFF0000);
		format(str, sizeof str, "Alguém acabou de logar no servidor!");
		DCC_SetEmbedDescription(embed, str);
		format(player, sizeof player, "`%s`", PlayerName(playerid));
		DCC_AddEmbedField(embed, "Player:", player, false);
		format(ipuser, sizeof ipuser, "`%s`", pip);
		DCC_AddEmbedField(embed, "IP:", ipuser, false);
		DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
		DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
		DCC_SendChannelEmbedMessage(logLogin, embed);
		SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
		if(gTeam[playerid] == 0)
		{
			gTeam[playerid] = 3;
		}
		else
		{
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
		}
		MedicBill[playerid] = 0;
		gPlayerLogged[playerid] = 1;
		SpawnPlayer(playerid);
		TextDrawHideForPlayer(playerid, BPRText[playerid]);
  		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
    	ScoreLevel(playerid);
	    gmsg[playerid] = 1;
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			new AdminName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, AdminName, sizeof(AdminName));
    		/*format(gstring, sizeof(gstring), "~y~%s: ~g~ON", AdminName);
			for(new i=0; i<MAX_PLAYERS; i++)
			{
    			if(IsPlayerConnected(i)) GameTextForPlayer(i, gstring , 5000, 1);
			}*/
		}
		TempoLogin = SetTimerEx("LoginAgora", 10000, 0, "i", playerid);
	}
	return true;
}
BPR::OnPlayerUpdate(playerid)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
	{
		if(GetTickCount() - gpTimes[playerid] >= 1000)
		{
			gpTimes[playerid] = GetTickCount();
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Contas/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "ID=%d\n",PlayerInfo[playerid][pID]);fwrite(hFile, var);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "HelperLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
				format(var, 32, "ModLevel=%d\n",PlayerInfo[playerid][pMod]);fwrite(hFile, var);
				format(var, 32, "Developer=%d\n",PlayerInfo[playerid][pScripter]);fwrite(hFile, var);
				format(var, 32, "Modeler=%d\n",PlayerInfo[playerid][pMapper]);fwrite(hFile, var);
				format(var, 32, "ResponsavelEquipe=%d\n",PlayerInfo[playerid][pResp]);fwrite(hFile, var);
				format(var, 32, "Equipe=%d\n",PlayerInfo[playerid][pEquipe]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Coins=%d\n",PlayerInfo[playerid][pCoins]);fwrite(hFile, var);
				format(var, 32, "Dinheiro Sujo=%d\n",PlayerInfo[playerid][pDsujo]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "HeadValueT=%d\n",PlayerInfo[playerid][pHeadValueT]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Pecas=%d\n",PlayerInfo[playerid][pPecas]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "Gold=%d\n",PlayerInfo[playerid][pGold]);fwrite(hFile, var);
				format(var, 32, "Origem=%d\n",PlayerInfo[playerid][pOrigem]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				format(var, 32, "Ajustado=%d\n",PlayerInfo[playerid][pAjustado]);fwrite(hFile, var);
				format(var, 32, "Voto=%d\n",PlayerInfo[playerid][pVoto]);fwrite(hFile, var);
				format(var, 32, "Salario=%d\n",PlayerInfo[playerid][pRecebeuSalario]);fwrite(hFile, var);
				format(var, 32, "Gerente=%d\n",PlayerInfo[playerid][pGerente]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
					PlayerInfo[playerid][pPos_x] = 1684.9;
					PlayerInfo[playerid][pPos_y] = -2244.5;
					PlayerInfo[playerid][pPos_z] = 13.5;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
    			GetPlayerWeaponData(playerid, 1, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
		    	GetPlayerWeaponData(playerid, 2, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
		    	GetPlayerWeaponData(playerid, 3, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
		    	GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
		    	GetPlayerWeaponData(playerid, 5, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
		    	GetPlayerWeaponData(playerid, 6, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
		    	GetPlayerWeaponData(playerid, 7, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
		    	GetPlayerWeaponData(playerid, 8, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
		    	GetPlayerWeaponData(playerid, 9, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
		    	GetPlayerWeaponData(playerid, 10, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
		    	GetPlayerWeaponData(playerid, 11, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
		    	GetPlayerWeaponData(playerid, 12, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				format(var, 32, "Carro1=%d\n", PlayerInfo[playerid][pCar1]);fwrite(hFile, var);
				format(var, 32, "Carro2=%d\n", PlayerInfo[playerid][pCar2]);fwrite(hFile, var);
				format(var, 32, "Carro3=%d\n", PlayerInfo[playerid][pCar3]);fwrite(hFile, var);
				format(var, 32, "Carro4=%d\n", PlayerInfo[playerid][pCar4]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    	{
        	for(new i = 0; i < sizeof(SpikeInfo); i++)
  	    	{
  	       		if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
           		{
  	           		if(SpikeInfo[i][sCreated] == 1)
  	           		{
  	               		new panels, doors, luzes, tires;
  	               		new carid = GetPlayerVehicleID(playerid);
		           		GetVehicleDamageStatus(carid, panels, doors, luzes, tires);
		           		tires = encode_tires(1, 1, 1, 1);
		           		UpdateVehicleDamageStatus(carid, panels, doors, luzes, tires);
  	           		}
  	       		}
  	    	}
  		}
	}
	new vehicleID = GetPlayerVehicleID(playerid);
    if(lastVehicle[playerid] != vehicleID)
    {
        lastVehicle[playerid] = vehicleID;
        if(GetVehicleModel(vehicleID))
        {
            CallRemoteFunction("OnPlayerChangeVehicle","ii", playerid, vehicleID);
        }
    }
 	if(!IsPlayerInAnyVehicle(playerid))
	{
    	new Arma[MAX_PLAYERS],Bala[MAX_PLAYERS];
    	GetPlayerWeaponData(playerid, 5, Arma[playerid], Bala[playerid]);
		if(Arma[playerid] == 30 && Bala[playerid] >= 1)//Ak-47
		{
               if(GetPlayerWeapon(playerid) == 30) RemovePlayerAttachedObject(playerid,SlotAKM4);
               else SetPlayerAttachedObject(playerid, SlotAKM4, 355, 1, -0.060921, -0.141673, 0.000000, 0.000000, 35.362735, 0.000000);
		}
		else if(Arma[playerid] == 31 && Bala[playerid] >= 1) //M4
		{
			if(GetPlayerWeapon(playerid) == 31) RemovePlayerAttachedObject(playerid,SlotAKM4);
            else SetPlayerAttachedObject(playerid, SlotAKM4, 356, 1, -0.099681, -0.133408, 0.000000, 1.027592, 19.667785, 0.000000);
		}
		else
		{
		    RemovePlayerAttachedObject(playerid,SlotAKM4);
		}
        GetPlayerWeaponData(playerid, 3, Arma[playerid], Bala[playerid]);
	}
	//RG TextDraw
	new string[2000];
	format(string, 1500, "%s", PlayerName(playerid));
	    
	PlayerTextDrawSetString(playerid, Nomep[playerid], string);

	format(string, 2000, "ID: %d", playerid);

	PlayerTextDrawSetString(playerid, IDp[playerid], string);

	format(string, 2000, "Dinheiro: R$%d", GetPlayerMoney(playerid));

	PlayerTextDrawSetString(playerid, Dinheirop[playerid], string);
	    
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);

		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
		    MoveCamera(playerid);
		}
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0){
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
		return 0;
	}
	return true;
}
forward OnPlayerSave(playerid);
BPR::OnPlayerSave(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new Float:cordx, Float:cordy, Float:cordz;
			GetPlayerPos(playerid, cordx,cordy,cordz);
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Contas/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "ID=%d\n",PlayerInfo[playerid][pID]);fwrite(hFile, var);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "HelperLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
				format(var, 32, "ModLevel=%d\n",PlayerInfo[playerid][pMod]);fwrite(hFile, var);
				format(var, 32, "Developer=%d\n",PlayerInfo[playerid][pScripter]);fwrite(hFile, var);
				format(var, 32, "Modeler=%d\n",PlayerInfo[playerid][pMapper]);fwrite(hFile, var);
				format(var, 32, "ResponsavelEquipe=%d\n",PlayerInfo[playerid][pResp]);fwrite(hFile, var);
				format(var, 32, "Equipe=%d\n",PlayerInfo[playerid][pEquipe]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Coins=%d\n",PlayerInfo[playerid][pCoins]);fwrite(hFile, var);
				format(var, 32, "Dinheiro Sujo=%d\n",PlayerInfo[playerid][pDsujo]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Pecas=%d\n",PlayerInfo[playerid][pPecas]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "Gold=%d\n",PlayerInfo[playerid][pGold]);fwrite(hFile, var);
				format(var, 32, "Origem=%d\n",PlayerInfo[playerid][pOrigem]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				format(var, 32, "Gerente=%d\n",PlayerInfo[playerid][pGerente]);fwrite(hFile, var);
				PlayerInfo[playerid][pPos_x] = cordx;
				PlayerInfo[playerid][pPos_y] = cordy;
				PlayerInfo[playerid][pPos_z] = cordz;
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
 				GetPlayerWeaponData(playerid, 1, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
		    	GetPlayerWeaponData(playerid, 2, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
		    	GetPlayerWeaponData(playerid, 3, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
		    	GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
		    	GetPlayerWeaponData(playerid, 5, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
		    	GetPlayerWeaponData(playerid, 6, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
		    	GetPlayerWeaponData(playerid, 7, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
		    	GetPlayerWeaponData(playerid, 8, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
		    	GetPlayerWeaponData(playerid, 9, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
		    	GetPlayerWeaponData(playerid, 10, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
		    	GetPlayerWeaponData(playerid, 11, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
		    	GetPlayerWeaponData(playerid, 12, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				format(var, 32, "Carro1=%d\n", PlayerInfo[playerid][pCar1]);fwrite(hFile, var);
				format(var, 32, "Carro2=%d\n", PlayerInfo[playerid][pCar2]);fwrite(hFile, var);
				format(var, 32, "Carro3=%d\n", PlayerInfo[playerid][pCar3]);fwrite(hFile, var);
				format(var, 32, "Carro4=%d\n", PlayerInfo[playerid][pCar4]);fwrite(hFile, var);
				format(var, 32, "Ban=%d\n",PlayerInfo[playerid][pBan]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
	}
	return true;
}
BPR::OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmorrx],
		HouseInfo[idx][hArmorry],
		HouseInfo[idx][hArmorrz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hWorld]);

		HouseInfo[idx][hWorld] = idx;
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/Casas.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Casas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior]);
		//BizzInfo[idx][VirtualWorld]);
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/Empresas.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Empresas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked]);
		if(idx == 0)
		{
			file2 = fopen("Configuracoes/MiniEmpresas.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/MiniEmpresas.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}

BPR::BroadCast(COLOR,const string[])
{
	SendClientMessageToAll(COLOR, string);
	return true;
}

BPR::ABroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level || PlayerInfo[i][pHelper] >= level || PlayerInfo[i][pMod] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}
BPR::HelperBroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pHelper] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return true;
}

BPR::OOCNews(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

BPR::SendEmpregoMessage(Emprego, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pEmprego] == Emprego)
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

BPR::SendFamilyMessage(family, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMembro] == family || PlayerInfo[i][pLider] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, COLOR, string);
				}
			}
		}
	}
}

BPR::PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

BPR::StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

BPR::PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

BPR::PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::OnPlayerCommandText(playerid, cmdtext[])
{
	OnConsoleSaveData(playerid, cmdtext);
 	new string[600];
	new playerdinheiro;
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new plname[MAX_PLAYER_NAME];
	new cmd[128];
	new tmp[128];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
	if((strcmp(cmd, "/atualizar3dtext", true)==0 || strcmp(cmd, "/a3d", true) ==0) && PlayerInfo[playerid][pAdmin] == 1341)
	{
		Atualizar3Dtexts();
		return true;
	}
	if((strcmp(cmd, "/deletarconta", true)==0 || strcmp(cmd, "/dc", true) ==0) && PlayerInfo[playerid][pAdmin] == 1341)
	{
	    new file[64];
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "USE: /deletarconta [Nick]");
     	if (PlayerInfo[playerid][pAdmin] != 1341)
		{
     		SendClientMessage(playerid, COLOR_GREY,"Voce nao tem permissao para usar esse comando!");
     		return true;
		}
		getdate(v[0], v[1], v[2]);
		gettime(v[3], v[4], v[5]);
		format(string, 128, "[%d/%d/%d] [%d:%d:%d] %s Apagou a conta: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), tmp);
		AComandosLog(string);
     	format(file,sizeof(file),"Contas/%s.ini",tmp);
		format(string, 128, "%s.bak", file);
     	DINI_fcopytextfile(file, string);
     	fremove(file);
     	return true;
	}
	
	
	if((strcmp(cmd, "/adicionarwl", true)==0 || strcmp(cmd, "/wladd", true) ==0 || strcmp(cmd, "/adicionarwhitelist", true) ==0) && (PlayerInfo[playerid][pAdmin] >= 1339))
	{
	    new file[64];
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "USE: /adicionarwl [Nick]");
     	if (PlayerInfo[playerid][pAdmin] >= 1339)
		{
	     	format(file,sizeof(file),"Whitelist/%s.ini",tmp);
	     	fopen(file);
	     	//Mensagem no Chat para a pessoa
	     	new Str[999];
	     	format(Str,sizeof(Str),"Usuario %s adicionado com sucesso!",tmp);
	     	SendClientMessage(playerid, COLOR_WHITE,Str);
	     	//Mensagem no chat para todos
	     	new WLMessage[999];
	     	format(WLMessage,sizeof(WLMessage),"{0000FF}AVISO:{FFFFFF} O usuario %s foi adicionado na Whitelist por %s", tmp, PlayerName(playerid));
	     	SendClientMessageToAll(COLOR_WHITE,WLMessage);
			//Pasta logs/Whitelist.log
	     	format(string, 128, "%s adicionou %s na Whitelist\n", PlayerName(playerid), tmp);
			WLLog(string);

			//if(_:g_WelcomeChannelId == 0)
			//g_WelcomeChannelId = DCC_FindChannelById("865659345412292628");
			new str[128];
			new usuario[128];
			new adicionado[128];
			new DCC_Embed:embed = DCC_CreateEmbed();
			DCC_SetEmbedTitle(embed, "Log Whitelist");
			DCC_SetEmbedColor(embed, 0xFF0000);
			format(str, sizeof str, "Alguém foi adicionado na Whitelist!");
			DCC_SetEmbedDescription(embed, str);
			format(usuario, sizeof usuario, "`%s`", PlayerName(playerid));
			DCC_AddEmbedField(embed, "Staff:", usuario, false);
			format(adicionado, sizeof adicionado, "`%s`", tmp);
			DCC_AddEmbedField(embed, "Usuário Adicionado:", adicionado, false);
			DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SendChannelEmbedMessage(logWl, embed);
  		}
  		else return SendClientMessage(playerid, COLOR_GREY,"Voce nao tem permissao para usar esse comando!");
	    return true;
	}
	
	if((strcmp(cmd, "/gerarcodigo", true)==0) && (PlayerInfo[playerid][pAdmin] >= 1339))
	{
		    new Arquivin[64];
		    new codigo = 100000 + random(100000000);
		    tmp = strtok(cmdtext, idx);

			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /gerarcodigo [valor]");
				return true;
			}
			//Define o Código e o valor que será criado
	     	new pao123[100];
			format(pao123, sizeof(pao123), "Valor=%s", tmp);
			format(Arquivin,sizeof(Arquivin),"Codigos/%d.ini",codigo);
			
			//Coloca o Código na pasta
			dini_Create(Arquivin);
			dini_Set(Arquivin,"Valor",tmp);
	     	
	     	//Mensagem no Chat para a pessoa
	     	new Str[999];
	     	format(Str,sizeof(Str),"Voce criou o codigo %d com sucesso com o valor %s!",codigo, tmp);
	     	SendClientMessage(playerid, COLOR_WHITE,Str);

			//Discord
			//if(_:g_WelcomeChannelId == 0)
			//g_WelcomeChannelId = DCC_FindChannelById("865653951721635881");
			new str[128];
			new codiguin[128];
			new usuario[128];
			new valorzin[128];
			new DCC_Embed:embed = DCC_CreateEmbed();
			DCC_SetEmbedTitle(embed, "Log Códigos");
			DCC_SetEmbedColor(embed, 0xFF0000);
			format(str, sizeof str, "Um novo Código de Coins Criado!");
			DCC_SetEmbedDescription(embed, str);
			format(usuario, sizeof usuario, "`%s`", PlayerName(playerid));
			DCC_AddEmbedField(embed, "Staff:", usuario, false);
			format(codiguin, sizeof codiguin, "`%d`", codigo);
			DCC_AddEmbedField(embed, "Código:", codiguin, false);
			format(valorzin, sizeof valorzin, "`%s`", tmp);
			DCC_AddEmbedField(embed, "Valor:", valorzin, false);
			DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
	    	return true;
	}
	
	if((strcmp(cmd, "/resgatarcodigo", true)==0 || strcmp(cmd, "/ativarcoins", true) ==0 || strcmp(cmd, "/resgatarcoins", true) ==0 || strcmp(cmd, "/resgatar", true) ==0))
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTRED, "ERRO: Use /resgatar [CODIGO]");

        format(gstring, 64, "Codigos/%s.ini", tmp);
        if(fexist(gstring))
		{
		    PlayerInfo[playerid][pCoins] += dini_Int(gstring,"Valor");
            fremove(gstring);
			SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=. PARABENS .=.=.=.=.=.=.=.=.=.");
			SendClientMessage(playerid, COLOR_GREEN, "{00FFFF}Voce resgatou seus coins com sucesso!");
			SendClientMessage(playerid, COLOR_GREEN, "{00FFFF}Utilize /menucoins para ver as opcoes!");
			SendClientMessage(playerid, COLOR_GREEN, "=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=.=");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Esse codigo ja foi utilizado ou nao existe!");
	    return true;
	}
	
	if((strcmp(cmd, "/removewl", true)==0 || strcmp(cmd, "/wlremove", true) ==0 || strcmp(cmd, "/removerwhitelist", true) ==0) && (PlayerInfo[playerid][pAdmin] >= 1339))
	{
	    new file[64];
		new str[128];
        new usuario[128];
        new adicionado[50];
        new DCC_Embed:embed = DCC_CreateEmbed();
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "USE: /removewl [Nick]");
     	if (PlayerInfo[playerid][pAdmin] >= 1339)
		{
	     	format(file,sizeof(file),"Whitelist/%s.ini",tmp);
	     	fremove(file);
			//Mensagem para a pessoa
	     	new Str[999];
	     	format(Str,sizeof(Str),"Usuario %s removido com sucesso!",tmp);
	     	SendClientMessage(playerid, COLOR_WHITE,Str);
	     	
	     	//Pasta logs/Whitelist.log
	     	format(string, 128, "%s removeu %s da Whitelist\n", PlayerName(playerid), tmp);
			WLLog(string);

			//if(_:g_WelcomeChannelId == 0)
            //g_WelcomeChannelId = DCC_FindChannelById("865659345412292628");
            DCC_SetEmbedTitle(embed, "Log Whitelist");
            DCC_SetEmbedColor(embed, 0xFF0000);
            format(str, sizeof str, "Alguém foi removido da Whitelist!");
            DCC_SetEmbedDescription(embed, str);
            format(usuario, sizeof usuario, "`%s`", PlayerName(playerid));
            DCC_AddEmbedField(embed, "Staff:", usuario, false);
            format(adicionado, sizeof adicionado, "`%s`", tmp);
            DCC_AddEmbedField(embed, "Usuário removido:", adicionado, false);
            DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SendChannelEmbedMessage(logWl, embed);
  		}
  		else return SendClientMessage(playerid, COLOR_GREY,"Voce nao tem permissao para usar esse comando!");
  		
   	    return true;
	}
	
	
	if (strcmp(cmd, "/mercadorials", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce nao e um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve esperar 5 minutos pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, 1756.1359,-2064.8230,13.2708, 8.0);
        TruckMission[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}
	if (strcmp(cmd, "/mercadorialv", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce nao e um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve esperar o tempo de recarga pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, 2054.3250,1919.5562,11.8507, 8.0);
        TruckMission[playerid] = 3;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}
	if (strcmp(cmd, "/mercadoriasf", true) == 0)
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce nao e um caminhoneiro");
			return true;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve esperar o tempo de recarga pra entregar mais mercadorias");
			return true;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce deve entregar a mercadoria primeiro");
			return true;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voce precisa estar na HQ pra pegar mercadoria");
			return true;
	    }
	    SetPlayerCheckpoint(playerid, -1729.3041,-123.8946,3.2335, 8.0);
        TruckMission[playerid] = 2;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return true;
	}
	if(strcmp(cmd,"/terminais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new Veh = GetPlayerVehicleID(playerid);
	        if(!IsAOniCar(Veh))
	        {
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em um onibus!");
			    return true;
	        }
			if(PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce esta de folga e recebeu R$%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return true;
				}
				else
				{
			    	BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = 100;
   					format(string, sizeof(string), "Motorista de onibus %s esta em servico, Corrida: R$100 - Va para o terminal mais proximo", PlayerName(playerid));
   					OOCNews(TEAM_GROVE_COLOR,string);
			    	SendClientMessage(playerid, COLOR_RED,"Voce comecou o circuito, siga os checkpoints ate finalizar a viajem");
			    	SendClientMessage(playerid, COLOR_RED,"Voce recebera R$50 a cada checkpoint que passar.");
			    	SendClientMessage(playerid, COLOR_RED,"USE: /terminais novamente para parar o servico");
			    	SetPlayerCheckpoint(playerid, 1369.0927,-1736.0730,13.4787,8.0);
					gPlayerTerminal[playerid] = 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"Voce nao e um motorista de onibus.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/pontos", true) == 0)
    {
        if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " Nao esta tendo guerra!");
  			return true;
        }
        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//Forcas Armadas ownou
 			{
                SendClientMessage(playerid, COLOR_EXE, "Voce e as Forcas Armadas estao ganhando a guerra.");
        		format(string, sizeof(string), "Morreram %d membros do Peaky Blinders, %d membros da F.A.R.C, e %d membros das Forcas Armadas!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//F.A.R.C ownou
 			{
                SendClientMessage(playerid, COLOR_EXE, "Voces estao perdendo a guerra para a F.A.R.C.");
      			format(string, sizeof(string), "Morreram %d membros seus, %d membros do Peaky Blinders, %d membros da F.A.R.C!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//Peaky Blinders ownou
 			{
                SendClientMessage(playerid, COLOR_EXE, "Voces estao perdendo a guerra para o Peaky Blinders.");
 	  			format(string, sizeof(string), "Morreram %d membros seus, %d membros da F.A.R.C e %d membros do Peaky Blinders!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return true;
 			}
 			else
 			{
                SendClientMessage(playerid, COLOR_EXE, "Esta Havendo Um Empate na Guerra.");
 			    format(string, sizeof(string), "Morreram %d membros seus, %d membros da F.A.R.C e %d membros do Peaky Blinders!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return true;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//Forcas Armadas ownou
 			{
                SendClientMessage(playerid, COR_GI, "Voces estao perdendo a guerra para as Forcas Armadas.");
        		format(string, sizeof(string), "Morreram %d membros seus, %d membros da F.A.R.C e %d membros das Forcas Armadas!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COR_GI, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//F.A.R.C ownou
 			{
                SendClientMessage(playerid, COR_GI, "Voces estao perdendo a guerra para a F.A.R.C.");
      			format(string, sizeof(string), "Morreram %d membros seus, %d membros das Forcas Armadas e %d membros da F.A.R.C!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_GI, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//Peaky Blinders ownou
 			{
                SendClientMessage(playerid, COR_GI, "Voce e o Peaky Blinders estao ganhando a guerra.");
 	  			format(string, sizeof(string), "Morreram %d membros das Forcas Armadas, %d membros da F.A.R.C e %d membros do Peaky Blinders!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_GI, string);
       			return true;
 			}
 			else
 			{
                SendClientMessage(playerid, COR_GI, "Esta Havendo Um Empate na Guerra.");
      			format(string, sizeof(string), "Morreram %d membros seus, %d membros das Forcas Armadas, %d membros da F.A.R.C!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_GI, string);
       			return true;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//Forcas Armadas ownou
 			{
                SendClientMessage(playerid, COR_FARC, "Voces estao perdendo a guerra para as Forcas Armadas.");
        		format(string, sizeof(string), "Morreram %d membros seus, %d membros do Peaky Blinders e %d membros das Forcas Armadas!",Territorio[almortos], Territorio[talmortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COR_FARC, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//Peaky Blinders ownou
 			{
                SendClientMessage(playerid, COR_FARC, "Voces estao perdendo a guerra para o Peaky Blinders.");
      			format(string, sizeof(string), "Morreram %d membros seus, %d membros das Forcas Armadas e %d membros do Peaky Blinders!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_FARC, string);
       			return true;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//F.A.R.C ownou
 			{
                SendClientMessage(playerid, COR_FARC, "Voce e a F.A.R.C estao ganhando a guerra.");
 	  			format(string, sizeof(string), "Morreram %d membros das Forcas Armadas, %d membros do Peaky Blinders e %d membros da F.A.R.C!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_FARC, string);
       			return true;
 			}
 			else
 			{
                SendClientMessage(playerid, COR_FARC, "Esta Havendo Um Empate na Guerra.");
 				format(string, sizeof(string), "Morreram %d membros seus, %d membros das Forcas Armadas e %d membros do Peaky Blinders!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_FARC, string);
       			return true;
 			}
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "  Sua Organizacao nao possui nenhuma guerra");
        }
		return true;
	}
//=====================================[INFOORG]================================
 	if(strcmp(cmd, "/limparvaga", true) == 0 || strcmp(cmd, "/lvaga", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente lideres podem usar este comando!");
			return true;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvaga [Vaga]");
			return true;
		}
		new Vaga2 = strval(tmp);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
		if(strcmp(tmp,"sub444",true)==0)
		{
   			if(IsPlayerOnline(InfoOrg[org][Sub444]))
  			{
  			    id=GetPlayerID(InfoOrg[org][Sub444]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][Sub444], "Ninguem", 0, strlen("Ninguem"), 255);
		    dini_Set(arquivo,"Sub444","Ninguem");
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga do Sub444");
		    return true;
		}
		if(strcmp(tmp,"sub555",true)==0)
		{
   			if(IsPlayerOnline(InfoOrg[org][Sub555]))
  			{
  			    id=GetPlayerID(InfoOrg[org][Sub555]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][Sub555], "Ninguem", 0, strlen("Ninguem"), 255);
		    dini_Set(arquivo,"Sub555","Ninguem");
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga do Sub555");
		    return true;
		}
		if(Vaga2 == 1)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro1]);
		    if(IsPlayerOnline(InfoOrg[org][Membro1])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro1","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 1");
		   	return true;
		}
		if(Vaga2 == 2)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro2]);
		    if(IsPlayerOnline(InfoOrg[org][Membro2])) Demitir(playerid, id);
  			strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
 			dini_Set(arquivo,"Membro2","Ninguem");
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 2");
		}
		if(Vaga2 == 3)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro3]);
		    if(IsPlayerOnline(InfoOrg[org][Membro3])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro3","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 3");
		}
		if(Vaga2 == 4)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro4]);
		    if(IsPlayerOnline(InfoOrg[org][Membro4])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro4","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 4");
		}
		if(Vaga2 == 5)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro5]);
		    if(IsPlayerOnline(InfoOrg[org][Membro5])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro5","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 5");
		}
		if(Vaga2 == 6)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro6]);
		    if(IsPlayerOnline(InfoOrg[org][Membro6])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro6","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 6");
		}
		if(Vaga2 == 7)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro7]);
		    if(IsPlayerOnline(InfoOrg[org][Membro7])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro7","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 7");
		}
		if(Vaga2 == 8)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro8]);
		    if(IsPlayerOnline(InfoOrg[org][Membro8])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro8","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 8");
		}
		if(Vaga2 == 9)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro9]);
		    if(IsPlayerOnline(InfoOrg[org][Membro9])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro9","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 9");
		}
		if(Vaga2 == 10)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro10]);
		    if(IsPlayerOnline(InfoOrg[org][Membro10])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro10","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 10");
		}
		if(Vaga2 == 11)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro11]);
		    if(IsPlayerOnline(InfoOrg[org][Membro11])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro11","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 11");
		}
		if(Vaga2 == 12)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro12]);
		    if(IsPlayerOnline(InfoOrg[org][Membro12])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro12","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 12");
		}
		if(Vaga2 == 13)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro13]);
		    if(IsPlayerOnline(InfoOrg[org][Membro13])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro13","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 13");
		}
		if(Vaga2 == 14)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro14]);
		    if(IsPlayerOnline(InfoOrg[org][Membro14])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro14","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 14");
		}
		if(Vaga2 == 15)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro15]);
		    if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro15","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 15");
		}
		if(Vaga2 == 16)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro16]);
		    if(IsPlayerOnline(InfoOrg[org][Membro16])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro16","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 16");
		}
		if(Vaga2 == 17)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro17]);
		    if(IsPlayerOnline(InfoOrg[org][Membro17])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro17","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 17");
		}
		if(Vaga2 == 18)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro18]);
		    if(IsPlayerOnline(InfoOrg[org][Membro18])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro18","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 18");
		}
		if(Vaga2 == 19)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro19]);
		    if(IsPlayerOnline(InfoOrg[org][Membro19])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro19","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 19");
		}
		if(Vaga2 == 20)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro20]);
		    if(IsPlayerOnline(InfoOrg[org][Membro20])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro20","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce Limpou a Vaga 20");
		}
	    return true;
	}
//==============================================================================
   	if (strcmp(cmd, "/limpartodas", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente lideres podem usar este comando!");
			return true;
		}
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
		id=GetPlayerID(InfoOrg[org][Sub444]);
 	 	strmid(InfoOrg[org][Sub444], "Ninguem", 0, strlen("Ninguem"), 255);
  		dini_Set(arquivo,"Sub444","Ninguem");
		id=GetPlayerID(InfoOrg[org][Sub555]);
		strmid(InfoOrg[org][Sub555], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Sub555","Ninguem");
  		id=GetPlayerID(InfoOrg[org][Membro1]);
  		if(IsPlayerOnline(InfoOrg[org][Membro1])) Demitir(playerid, id);
  		strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
 		dini_Set(arquivo,"Membro1","Ninguem");
  		id=GetPlayerID(InfoOrg[org][Membro2]);
  		if(IsPlayerOnline(InfoOrg[org][Membro2])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro2","Ninguem");
	 	id=GetPlayerID(InfoOrg[org][Membro3]);
		if(IsPlayerOnline(InfoOrg[org][Membro3])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro3","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro4]);
	 	if(IsPlayerOnline(InfoOrg[org][Membro4])) Demitir(playerid, id);
	 	strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro4","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro5]);
		if(IsPlayerOnline(InfoOrg[org][Membro5])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro5","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro6]);
 		if(IsPlayerOnline(InfoOrg[org][Membro6])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro6","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro7]);
 		if(IsPlayerOnline(InfoOrg[org][Membro7])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro7","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro8]);
		if(IsPlayerOnline(InfoOrg[org][Membro8])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro8","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro9]);
		if(IsPlayerOnline(InfoOrg[org][Membro9])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro9","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro10]);
		if(IsPlayerOnline(InfoOrg[org][Membro10])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro10","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro11]);
		if(IsPlayerOnline(InfoOrg[org][Membro11])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro11","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro12]);
		if(IsPlayerOnline(InfoOrg[org][Membro12])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro12","Ninguem");
		id=GetPlayerID(InfoOrg[org][Membro13]);
		if(IsPlayerOnline(InfoOrg[org][Membro13])) Demitir(playerid, id);
	 	strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro13","Ninguem");
	 	id=GetPlayerID(InfoOrg[org][Membro14]);
		if(IsPlayerOnline(InfoOrg[org][Membro14])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro14","Ninguem");
	 	id=GetPlayerID(InfoOrg[org][Membro15]);
	 	if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
	 	strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro15","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro16]);
 		if(IsPlayerOnline(InfoOrg[org][Membro16])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
		dini_Set(arquivo,"Membro16","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro17]);
 		if(IsPlayerOnline(InfoOrg[org][Membro17])) Demitir(playerid, id);
		strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro17","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro18]);
		if(IsPlayerOnline(InfoOrg[org][Membro18])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro18","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro19]);
		if(IsPlayerOnline(InfoOrg[org][Membro19])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro19","Ninguem");
 		id=GetPlayerID(InfoOrg[org][Membro20]);
 		if(IsPlayerOnline(InfoOrg[org][Membro20])) Demitir(playerid, id);
 		strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
     	dini_Set(arquivo,"Membro20","Ninguem");
     	SendClientMessage(playerid, COLOR_GRAD2, "Voce limpou todas as vagas da Org!");
	    return true;
	}
//==============================================================================
   	if (strcmp(cmd, "/limparlider", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
			return true;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparlider [organizacao]");
			return true;
		}
		new Vaga2 = strval(tmp);
		if(Vaga2 < 1 || Vaga2 > 35) { SendClientMessage(playerid, COLOR_GREY, "Vaga minima 1, maximo 35 !"); return true; }
		new id=GetPlayerID(InfoOrg[Vaga2][Lider]);
		format(string, sizeof(string), "ADMIN: %s limpou a vaga %d do lider %s",PlayerName(playerid), Vaga2, InfoOrg[Vaga2][Lider]);
		LideresLog(string);
		if(IsPlayerOnline(InfoOrg[Vaga2][Lider])) DemitirLider(id);
		strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring, 128, "ORG Arquivos/Org%d.cfg", Vaga2);
       	dini_Set(gstring,"Lider","Ninguem");
		format(string, sizeof(string), "Voce limpou o lider da organizacao Numero %d",Vaga2);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return true;
	}

	if (strcmp(cmd, "/removermembro", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
       		if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /removermembro [id]");
				return true;
			}
			new Vaga2 = ReturnUser(tmp);//strval(tmp);
			//if(Vaga2 < 1 || Vaga2 > 35) { SendClientMessage(playerid, COLOR_GREY, "Vaga minima 1, maximo 35 !"); return true; }
			gTeam[Vaga2] = 3;
			PlayerInfo[Vaga2][pTeam] = 3;
			PlayerInfo[Vaga2][pMembro] = 0;
			PlayerInfo[Vaga2][pCargo] = 0;
			if(PlayerInfo[Vaga2][pSex] == 1) { PlayerInfo[Vaga2][pSkin] = 23; } else { PlayerInfo[Vaga2][pSkin] = 41; }
			SetSpawnInfo(Vaga2, gTeam[Vaga2], PlayerInfo[Vaga2][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			format(string, sizeof(string), "Voce removeu %s da org!",Vaga2);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else return SendClientMessage(playerid, -1, "Somente staffs podem usar esse comando!");
	    return true;
	}
//==============================================================================
	if(strcmp(cmd,"/carid",true) == 0 && PlayerInfo[playerid][pAdmin] == 1341)
	{
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		format(string,sizeof(string), "Carro ID: %d", vehicle);
		SendClientMessage(playerid, COLOR_GREY, string);
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/rcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "[BPR]: Voce nao esta autorizado a usar este comando!");
			    return true;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
                new name[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, name, sizeof(name));
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    PlayerPlaySound(playerid, 1057, 0,0,0);
			    SendClientMessage(playerid, COLOR_GREY, "[BPR]: Carro concertado!");
			    format(string, 256, "O ADM %s Reparou seu carro.",name);
			    ABroadCast(COLOR_WHITE,string,1);
			}
		}
		return true;
	}
//==============================================================================
	if((strcmp(cmd, "/promoveradmin", true) == 0 || strcmp(cmd, "/padmin", true) == 0) && (PlayerInfo[playerid][pAdmin] == 1342))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /padmin [id] [Nivel]");
				return 1;
			}
			new level, para1;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /padmin [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			strmid(giveplayer, AdmInfo[para1][gMembro], 0, strlen(AdmInfo[para1][gMembro]), 255);
			if(strcmp(giveplayer,"Vazio", true ) == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nao tem nenhum admin nessa vaga");
				return 1;
			}
			if(IsPlayerOnline(giveplayer))
  			{
				SendClientMessage(playerid, COLOR_GRAD2, "O Viado esta online");
				return 1;
 			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			getdate(year, month, day);
			gettime(hour,minute,second);
			new arquivo[64];
		    format(arquivo, sizeof(arquivo), "Contas/%s.ini",giveplayer);
		    dini_IntSet(arquivo,"AdminLevel",level);
			format(string, sizeof(string), "   Voce promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "(OFF)%s deu admin nivel %d para %s [%d/%d/%d] as [%d:%d:%d].", sendername, level, giveplayer, day,
			month, year, hour, minute, second);
			PAdminsLog(string);
		}
		return 1;
	}
//==============================================================================
	if((strcmp(cmd, "/promoverhelper", true) == 0 || strcmp(cmd, "/phelper", true) == 0) && (PlayerInfo[playerid][pAdmin] == 1342))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /phelper [id] [Nivel]");
				return 1;
			}
			new level, para1;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /phelper [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			strmid(giveplayer, HelperInfo[para1][hMembro], 0, strlen(HelperInfo[para1][hMembro]), 255);
			if(strcmp(giveplayer,"Vazio", true ) == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nao tem nenhum admin nessa vaga");
				return 1;
			}
			if(IsPlayerOnline(giveplayer))
  			{
				SendClientMessage(playerid, COLOR_GRAD2, "O Viado esta online");
				return 1;
 			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			getdate(year, month, day);
			gettime(hour,minute,second);
			new arquivo[64];
		    format(arquivo, sizeof(arquivo), "Contas/%s.ini",giveplayer);
		    dini_IntSet(arquivo,"HelperLevel",level);
			format(string, sizeof(string), "   Voce promoveu o(a) %s Para o level %d de Helper.", giveplayer,level);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "(OFF)%s deu helper nivel %d para %s [%d/%d/%d] as [%d:%d:%d].", sendername, level, giveplayer, day,
			month, year, hour, minute, second);
			PHelpersLog(string);
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/tornarcandidato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /tornarcandidato [id]");
				return 1;
			}
			new NomePlayer[MAX_PLAYER_NAME];
			GetPlayerName(strval(tmp), NomePlayer, sizeof(NomePlayer));
			if(CandidatosRegistrados < 1 || CandidatosRegistrados > 3)
			{
			    format(Candidato1, sizeof(Candidato1), NomePlayer);
			    CandidatosRegistrados = 1;
			    SendClientMessage(playerid, COLOR_YELLOW, "Voce fez um jogador virar o Primeiro Candidato!");
			}
			else if(CandidatosRegistrados == 1)
			{
			    format(Candidato2, sizeof(Candidato2), NomePlayer);
			    CandidatosRegistrados = 2;
			    SendClientMessage(playerid, COLOR_YELLOW, "Voce fez um jogador virar o Segundo Candidato!");
			}
			else if(CandidatosRegistrados == 2)
			{
			    format(Candidato3, sizeof(Candidato3), NomePlayer);
			    CandidatosRegistrados = 3;
			    SendClientMessage(playerid, COLOR_YELLOW, "Voce fez um jogador virar o Terceiro Candidato!");
			}
			else if(CandidatosRegistrados == 3)
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Total de Candidatos ja foi atingido");
			    return 1;
			}
            dini_IntSet("Eleicoes.ini","TotalCandidatos",CandidatosRegistrados);
			dini_Set("Eleicoes.ini","Candidato1",Candidato1);
			dini_Set("Eleicoes.ini","Candidato2",Candidato2);
			dini_Set("Eleicoes.ini","Candidato3",Candidato3);
			dini_IntSet("Eleicoes.ini","Votos1",Votos[0]);
			dini_IntSet("Eleicoes.ini","Votos2",Votos[1]);
			dini_IntSet("Eleicoes.ini","Votos3",Votos[2]);
			dini_IntSet("Eleicoes.ini","PassadoUmDia",PassadoUmDia);
			dini_Set("Eleicoes.ini","Partido1",Partido1);
			dini_Set("Eleicoes.ini","Partido2",Partido2);
			dini_Set("Eleicoes.ini","Partido3",Partido3);
			return 1;
		}
    	return 1;
	}
//==============================================================================
    if(strcmp(cmd, "/meupartido", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new Civil[MAX_PLAYER_NAME];
		    new texto[MAX_STRING];
      		GetPlayerName(playerid, Civil, sizeof(Civil));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /meupartido [nome do seu novo partido]");
				return 1;
			}
			for(new x = 0; x <= 3; x++)
			{
			    format(texto, sizeof(texto), "Candidato%i", x);
				if(strcmp(dini_Get("Eleicoes.ini",texto),Civil,true)==0)
				{
				    format(texto, sizeof(texto), "Partido%i", x);
				    dini_Set("Eleicoes.ini",texto,tmp);
					SetPVarInt(playerid, "Partido", 255);
				}
			}
			if(GetPVarInt(playerid, "Partido") == 255)
			{
			    format(texto, sizeof(texto), "Seu novo partido agora e o %s", tmp);
			    SendClientMessage(playerid, COLOR_YELLOW, texto);
                SetPVarInt(playerid, "Partido", false);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Voce nao e um candidato.");
				return 1;
			}
			format(Partido1, sizeof(Partido1), dini_Get("Eleicoes.ini","Partido1"));
			format(Partido2, sizeof(Partido2), dini_Get("Eleicoes.ini","Partido2"));
			format(Partido3, sizeof(Partido3), dini_Get("Eleicoes.ini","Partido3"));
			dini_IntSet("Eleicoes.ini","TotalCandidatos",CandidatosRegistrados);
			dini_Set("Eleicoes.ini","Candidato1",Candidato1);
			dini_Set("Eleicoes.ini","Candidato2",Candidato2);
			dini_Set("Eleicoes.ini","Candidato3",Candidato3);
			dini_IntSet("Eleicoes.ini","Votos1",Votos[0]);
			dini_IntSet("Eleicoes.ini","Votos2",Votos[1]);
			dini_IntSet("Eleicoes.ini","Votos3",Votos[2]);
			dini_IntSet("Eleicoes.ini","PassadoUmDia",PassadoUmDia);
			dini_Set("Eleicoes.ini","Partido1",Partido1);
			dini_Set("Eleicoes.ini","Partido2",Partido2);
			dini_Set("Eleicoes.ini","Partido3",Partido3);
			return 1;
		}
    	return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/votar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(strcmp(Candidato1,"Vazio",true)==0&&strcmp(Candidato2,"Vazio",true)==0&&strcmp(Candidato3,"Vazio",true)==0)
			{
                SendClientMessage(playerid, COLOR_GRAD1, "[BPR] Nao e epoca de Eleicoes !");
				return 1;
			}
	        if(PlayerInfo[playerid][pVoto] == 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Voce ja votou !");
				return 1;
			}
	        new texto[MAX_STRING];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /votar [numero do candidato]");
				return 1;
			}
			if(strval(tmp) < 1 || strval(tmp) > 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /votar [numero do candidato]");
				return 1;
			}
			Votos[strval(tmp)-1] += 1;
            format(texto, sizeof(texto), "Voce votou no candidato de numero %i", strval(tmp));
			SendClientMessage(playerid, COLOR_YELLOW, texto);
			dini_IntSet("Eleicoes.ini","TotalCandidatos",CandidatosRegistrados);
			dini_Set("Eleicoes.ini","Candidato1",Candidato1);
			dini_Set("Eleicoes.ini","Candidato2",Candidato2);
			dini_Set("Eleicoes.ini","Candidato3",Candidato3);
			dini_IntSet("Eleicoes.ini","Votos1",Votos[0]);
			dini_IntSet("Eleicoes.ini","Votos2",Votos[1]);
			dini_IntSet("Eleicoes.ini","Votos3",Votos[2]);
			dini_IntSet("Eleicoes.ini","PassadoUmDia",PassadoUmDia);
			dini_Set("Eleicoes.ini","Partido1",Partido1);
			dini_Set("Eleicoes.ini","Partido2",Partido2);
			dini_Set("Eleicoes.ini","Partido3",Partido3);
			return 1;
		}
    	return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/candidatos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new texto[MAX_STRING];
			SendClientMessage(playerid, COLOR_WHITE, "Candidatos Online:");
			format(texto, sizeof(texto), "Candidato: %s.  Numero: 1.  Partido: %s.  Votos: %d", Candidato1, Partido1, Votos[0]);
			SendClientMessage(playerid, COLOR_GREEN, texto);
			format(texto, sizeof(texto), "Candidato: %s.  Numero: 2.  Partido: %s.  Votos: %d", Candidato2, Partido2, Votos[1]);
			SendClientMessage(playerid, COLOR_GREEN, texto);
			format(texto, sizeof(texto), "Candidato: %s.  Numero: 3.  Partido: %s.  Votos: %d", Candidato3, Partido3, Votos[2]);
			SendClientMessage(playerid, COLOR_GREEN, texto);
		}
    	return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/setarresp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] != 1341)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarresp [id] [Equipe]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarresp [id] [Equipe]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));

		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof(string), "%s foi setado como Resp Equipe %d", sendername, level);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "Voce setou %s como Resp Equipe %d", giveplayer, level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerInfo[para1][pResp] = level;
					PlayerInfo[para1][pEquipe] = level;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/darmode", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1341)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darmode [id] [Nivel]");
				return 1;
			}
			new para1;
			//new level;
			para1 = ReturnUser(tmp);
			/*tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darmode [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);*/
			//if(PlayerInfo[playerid][pAdmin] <= level) return SendClientMessage(playerid, -1, "Voce nao pode setar um cargo maior ou igual o seu!");
			
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof(string), "   Voce foi setado como Modeler - Por %s", sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Voce setou o(a) %s para Modeler.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerInfo[para1][pMapper] = 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/dardev", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1341)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dardev [id] [Nivel]");
				return 1;
			}
			new para1;
			//new level;
			para1 = ReturnUser(tmp);
			/*tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dardev [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);*/
			//if(PlayerInfo[playerid][pAdmin] <= level) return SendClientMessage(playerid, -1, "Voce nao pode setar um cargo maior ou igual o seu!");
			
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof(string), "   Voce foi setado como Scripter - Por %s", sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Voce setou o(a) %s para scripter.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerInfo[para1][pScripter] = 1;
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1340)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setcarro [id] [Carro]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setcarro [id] [Carro]");
				return 1;
			}
			level = strval(tmp);
			if(level < 400 || level > 611) return SendClientMessage(playerid, -1, "Esse carro nao existe!");
			//Avioes e jatos
			if(level == 592) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 577) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 511) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 512) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 593) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 520) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 553) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 476) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 519) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 460) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 513) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			//Helicopteros Proibidos
			if(level == 548) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 425) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 417) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 497) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 563) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			//Barcos
			if(level == 472) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 473) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 493) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 595) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 484) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 430) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 453) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 452) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 446) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			if(level == 454) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			//Carros
			if(level == 432) return SendClientMessage(playerid, -1, "Esse Carro esta proibido!!");
			//Script para detectar se o Player esta on e setar o veiculo
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof(string), "   O Admin %s setou um veiculo em sua Garagem!", sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Voce setou um veiculo para %s", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					//Se o Slots 1 estiver Vazio
					if(PlayerInfo[para1][pCar1] == 0){
						PlayerInfo[para1][pCar1] = level;
						return 1;
					}
					//Se o Slot 2 estiver vazio
					else if(PlayerInfo[para1][pCar2] == 0){
						PlayerInfo[para1][pCar2] = level;
						return 1;
					}
					//Se o Slot 3 estiver vazio
					else if(PlayerInfo[para1][pCar3] == 0){
						PlayerInfo[para1][pCar3] = level;
						return 1;
					}
					//Se o Slots 4 estiver vazio
					else if(PlayerInfo[para1][pCar4] == 0){
						PlayerInfo[para1][pCar4] = level;
						return 1;
					}
					else if(PlayerInfo[para1][pCar1] != 0 && PlayerInfo[para1][pCar2] != 0 && PlayerInfo[para1][pCar3] != 0 && PlayerInfo[para1][pCar4] != 0) return SendClientMessage(playerid, -1, "O player nao possui slots disponiveis!");
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/daradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1340)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] <= level) return SendClientMessage(playerid, -1, "Voce nao pode setar um cargo maior ou igual o seu!");
			
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		        	if(PlayerInfo[para1][pAdmin] >= PlayerInfo[playerid][pAdmin])
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode promover alguem com cargo igual ou maior que o seu!");
						return 1;
					}
					format(string, sizeof(string), "   Voce foi promovido para level  %d de Admin - Por %s", level, sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Voce promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu admin nivel %d para %s [%d/%d/%d] as [%d:%d:%d].", sendername, level, giveplayer, day,
					month, year, hour, minute, second);
					PAdminsLog(string);
					for(new i = 0; i < sizeof(AdmInfo); i++)
    				{
						if(PlayerInfo[para1][pAdmin] > 0)
						{
						    PlayerInfo[para1][pAdmin] = level;
						    break;
						}
   						else if(AdmInfo[i][AdminVaga] == 0)
						{
							PlayerInfo[para1][pAdmin] = level;
							AdmInfo[i][gMembro] = giveplayer;
							AdmInfo[i][AdminVaga] = 1;
							SaveAdm();
							break;
						}
					}
				}
			}
		}
		return 1;
	}
	if (strcmp("/limparadm", cmdtext, true, 10) == 0 || strcmp("/limparadmin", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1339)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voce nao esta autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparadm [ Vaga ]");
			return 1;
		}
		new Vagao = strval(tmp);
		if(Vagao < 1 || Vagao > 30) { SendClientMessage(playerid, COLOR_GREY, "Vaga minima 1 maximo 30!"); return 1; }
		getdate(year, month, day);
		gettime(hour,minute,second);
		format(string, sizeof(string), "%s apagou a vaga %d de %s [%d/%d/%d] as [%d:%d:%d].", PlayerName(playerid), Vagao, AdmInfo[Vagao][gMembro], day,
		month, year, hour, minute, second);
		PAdminsLog(string);
		strmid(AdmInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
		AdmInfo[Vagao][AdminVaga] = 0;
	    SaveAdm();
	    format(string, sizeof(string), "Voce Limpou A Vaga Ni %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if (strcmp("/limparhelper", cmdtext, true, 10) == 0 || strcmp("/limparhelpers", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1339)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voce nao esta autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparhelper [ Vaga ]");
			return 1;
		}
		new Vagao = strval(tmp);
		if(Vagao < 1 || Vagao > 30) { SendClientMessage(playerid, COLOR_GREY, "Vaga minima 1 maximo 30!"); return 1; }
		getdate(year, month, day);
		gettime(hour,minute,second);
		format(string, sizeof(string), "%s apagou a vaga %d de %s [%d/%d/%d] as [%d:%d:%d].", PlayerName(playerid), Vagao, HelperInfo[Vagao][hMembro], day,
		month, year, hour, minute, second);
		PHelpersLog(string);
		strmid(HelperInfo[Vagao][hMembro], "Vazio", 0, strlen("Vazio"), 255);
		HelperInfo[Vagao][HelperVaga] = 0;
	    SaveHelper();
	    format(string, sizeof(string), "Voce Limpou A Vaga N %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if (strcmp("/infoadm", cmdtext, true, 10) == 0 || strcmp("/infoadmin", cmdtext, true, 10) == 0 || strcmp("/infoadmins", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
	    new arquivo[128];
		SendClientMessage(playerid, COLOR_WHITE, "Carregando a lista de admin on.....");
	    while (lol < sizeof(AdmInfo))
		{
			if(lol == 0)
			{
			    format(string, sizeof(string), "Dono/Scripter: %s", AdmInfo[0][gMembro]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
			else
			{
			    if(strcmp(AdmInfo[lol][gMembro],"Vazio",true) != 0)
				{
				    if(PlayerInfo[playerid][pAdmin] == 1342)
				    {
				    	format(arquivo, sizeof(arquivo), "Contas/%s.ini",AdmInfo[lol][gMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s, Cargo: %d", lol, AdmInfo[lol][gMembro],dini_Int(arquivo,"AdminLevel"));
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
					else
				    {
				    	format(arquivo, sizeof(arquivo), "Contas/%s.ini",AdmInfo[lol][gMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s", lol, AdmInfo[lol][gMembro]);
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
				}
			}
			lol++;
		}
		return 1;
   	}
	if (strcmp("/infohelper", cmdtext, true, 10) == 0 || strcmp("/infohelpers", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
	    new arquivo[128];
		SendClientMessage(playerid, COLOR_WHITE, "|______________ Helpers do Server ______________|");
	    while (lol < sizeof(HelperInfo))
		{
			if(lol == 0)
			{
			    format(string, sizeof(string), "Dono/Scripter: %s", HelperInfo[0][hMembro]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
			else
			{
			    if(strcmp(HelperInfo[lol][hMembro],"Vazio",true) != 0)
				{
				    if(PlayerInfo[playerid][pAdmin] >= 1)
				    {
				    	format(arquivo, sizeof(arquivo), "Contas/%s.ini",HelperInfo[lol][hMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s, Cargo: %d", lol, HelperInfo[lol][hMembro],dini_Int(arquivo,"HelperLevel"));
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
					else
				    {
				    	format(arquivo, sizeof(arquivo), "Contas/%s.ini",HelperInfo[lol][hMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s", lol, HelperInfo[lol][hMembro]);
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
				}
			}
			lol++;
		}
		return 1;
   	}
   	if (strcmp("/infovip", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para usar esse comando.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_WHITE, "|______________ Vips do Server ______________|");
	    for(new x=0; x<sizeof(VipInfo); x++)
		{
			if(strcmp(VipInfo[x][vNick],"Ninguem",true) != 0)
			{
			    format(string, sizeof(string), "Vip ID:[%d]: %s Nivel:[%d]", x, VipInfo[x][vNick], VipInfo[x][vTipo]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
		}
		return 1;
   	}
	if (strcmp("/limparvip", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1340)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voce nao esta autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvip [Vaga]");
			return 1;
		}
		new Vagao = strval(tmp);
		if(Vagao < 0 || Vagao > 50) { SendClientMessage(playerid, COLOR_GREY, "Vaga minima 0 maximo 50!"); return 1; }
		if(IsPlayerOnline(VipInfo[Vagao][vNick]))
  		{
		    new id=GetPlayerID(VipInfo[Vagao][vNick]);
		    PlayerInfo[id][pVIP] = 0;
			SendClientMessage(id, COLOR_YELLOW, "Voce perdeu seu VIP, renove-o e receba seus beneficios de volta");
		}
		getdate(year, month, day);
		gettime(hour,minute,second);
		format(string, sizeof(string), "%s limpou vip vaga %d de %s (%d/%d/%d - %d:%d)",PlayerName(playerid),Vagao,VipInfo[Vagao][vNick],day, month, year,hour, minute);
		VipsLog(string);
		strmid(VipInfo[Vagao][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
		VipInfo[Vagao][vTipo] = 0;
	    SaveVip();
	    format(string, sizeof(string), "Voce Limpou A Vaga VIP N %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if (strcmp(cmd, "/mudarluta", true) == 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    Controle(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "Estilos De Luta", "Cotoveladas\nRua\nKickBoxing\nKarate\nNormal", "Confirma", "Cancela");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Voce nao esta no ginasio de luta de LS.");
		}
		return true;
	}
	if(strcmp(cmd, "/mala", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_AZULBB, "USE: /mala [Nome]");
			    SendClientMessage(playerid, COLOR_WHITE, "Nomes Disponiveis para VIPS: info, guardar(Guardar Arma), pegar(Pegar Arma)");
			    if(IsACop(playerid))
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "Nomes Disponiveis para COPs: revistar(Revista a Mala), apreender(Retira as Armas)");
			    }
			    return true;
			}
			if(strcmp(x_nr,"info",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ser um usuario VIP para usar esse comando !");
			    	return true;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
       			for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = ChecarveiculoMatheus(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto de nenhum carro !");
			        }

			        case 1:
			        {
			        	if(CarroMala(result))
		        		{
							if(PlayerInfo[playerid][pCarKey] == result) { }
							else if(PlayerInfo[playerid][pCarKey2] == result) { }
               		    	else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    	else
               		    	{
			               		SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           			return true;
							}
						}
						else
			            {
			            	SendClientMessage(playerid, COLOR_GREY, "  Somente carros VIP tem espaco no porta-malas !");
			            	return true;
						}
			            if(IsPlayerInAnyVehicle(playerid))
      					{
			                SendClientMessage(playerid, COLOR_GREY, "  Voce nao pode abrir o porta-malas de dentro do carro");
			            	return true;
               			}
						SendClientMessage(playerid, COLOR_WHITE, "|______________[ Sistema de Porta-Malas ]______________|");
						for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
						{
						    new gunname[100];
						    if(vehTrunk[result][slot] != 0)
						    {
						        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						        format(string, sizeof(string), "| Arma %i: %s (Municao: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						    else
						    {
						        format(string, sizeof(string), "| Arma %i: Vazio (Municao: N/A)", slot);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						}
               			GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s esta mexendo no porta-malas.", sendername);
                  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return true;
			        }
			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return true;
			        }
			    }
			    return true;
			}
			else if(strcmp(x_nr,"guardar",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ser um usuario VIP para usar esse comando !");
			    	return true;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = ChecarveiculoMatheus(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto de nenhum carro !");
			        }

			        case 1:
			        {
			            if(vehTrunkCounter[result] != (MAX_TRUNK_SLOTS-1))
			            {
                			if(CarroMala(result))
		        			{
								if(PlayerInfo[playerid][pCarKey] == result) { }
								else if(PlayerInfo[playerid][pCarKey2] == result) { }
               		    		else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    		else
               		    		{
			               			SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           				return true;
								}
							}
			            	if(ReduceTime[playerid] == 1)
			            	{
			            	    SendClientMessage(playerid, COLOR_GREY, "   Espere 3 segundos para usar o comando de novo !");
			            	    return true;
			            	}
			                if(IsPlayerInAnyVehicle(playerid))
			                {
			                    SendClientMessage(playerid, COLOR_GREY, "  Voce nao pode abrir o porta-malas de dentro do carro");
			                    return true;
			                }
                            new buffer[512];
                            new gunname[100];
                            new gunID = GetPlayerWeapon(playerid);
                            new gunAmmo = GetPlayerAmmo(playerid);

                            if(gunID != 0 && gunAmmo != 0)
                            {
                                ReduceTime[playerid] = 1;
                				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
                                GetWeaponName(gunID, gunname, sizeof(gunname));
                                vehTrunkCounter[result]++;
                                vehTrunk[result][vehTrunkCounter[result]] = gunID;
                                vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
                                format(buffer, sizeof(buffer), "Voce guardou uma %s (Municao: %i) no porta-mala do carro.", gunname, gunAmmo);
                                SendClientMessage(playerid, COLOR_WHITE, buffer);
                                RemovePlayerWeapon(playerid, gunID);
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* %s abre o porta-malas e guarda armas.", sendername);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                SaveTrunk();
                                return true;
                            }
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, " Porta-mala cheio");
			                return true;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return true;
			        }
			    }
			    return true;
			}
			else if(strcmp(x_nr,"pegar",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ser um usuario VIP para usar esse comando !");
			    	return true;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = ChecarveiculoMatheus(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }

			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto de nenhum carro !");
			            return true;
			        }
			        case 1:
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode abrir o porta-malas de dentro do carro");
			                return true;
			            }
			            if(ReduceTime[playerid] == 1)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Espere 3 segundos para usar o comando de novo !");
			                return true;
		            	}
		            	if(CarroMala(result))
		        		{
							if(PlayerInfo[playerid][pCarKey] == result) { }
							else if(PlayerInfo[playerid][pCarKey2] == result) { }
               		    	else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    	else
               		    	{
			               		SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           			return true;
							}
						}
			            if(vehTrunkCounter[result] != 0)
			            {
			                ReduceTime[playerid] = 1;
               				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                new buffer[512];
			                new gunName[100];

			                GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
			                format(buffer, sizeof(buffer), "Voce pegou uma %s (Municao: %i) do porta-mala do veiculo.", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                SendClientMessage(playerid, COLOR_WHITE, buffer);
			                vehTrunk[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkCounter[result]--;
			                GetPlayerName(playerid, sendername, sizeof(sendername));
			                format(string, sizeof(string), "* %s abre o porta-malas e retira armas.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                SaveTrunk();
			                return true;
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Porta-mala vazio ! ");
			                return true;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return true;
			        }
			    }
			    return true;
			}
			else if(strcmp(x_nr,"revistar",true) == 0)
			{
			    if(IsACop(playerid))
			    {
			    	new counter = 0;
			    	new result;
			    	new plyName[MAX_PLAYER_NAME];

				    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				    for(new i; i != MAX_VEHICLES; i++)
				    {
				        new dist = ChecarveiculoMatheus(3.5, playerid, i);
			    	    if(dist)
			        	{
			           		result = i;
			            	counter++;
			        	}
			    	}
			    	switch(counter)
			    	{
			        	case 0:
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto de nenhum carro !");
			        	}

			        	case 1:
			        	{
			            	if(IsPlayerInAnyVehicle(playerid))
      						{
			                	SendClientMessage(playerid, COLOR_GREY, "  Voce nao pode abrir o porta-malas de dentro do carro");
			            		return true;
               				}
							SendClientMessage(playerid, COLOR_WHITE, "|______________[ Sistema de Porta-Malas ]______________|");
							for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
							{
							    new gunname[100];
							    if(vehTrunk[result][slot] != 0)
							    {
							        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						    	    format(string, sizeof(string), "| Arma %i: %s (Municao: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
						    	else
						    	{
						        	format(string, sizeof(string), "| Arma %i: Vazio (Municao: N/A)", slot);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
							}
							GetPlayerName(playerid, sendername, sizeof(sendername));
    	                    format(string, sizeof(string), "* COP %s abre o porta-malas e ve o que tem dentro.", sendername);
        	          		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return true;
			        	}

				        default:
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
				            return true;
			    	    }
			    	}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial ! ");
					return true;
				}
			    return true;
			}
			else if(strcmp(x_nr,"apreender",true) == 0)
			{
			    if(IsACop(playerid))
			    {
			    	new counter = 0;
			    	new result;
			    	new plyName[MAX_PLAYER_NAME];

				    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				    for(new i; i != MAX_VEHICLES; i++)
				    {
				        new dist = ChecarveiculoMatheus(3.5, playerid, i);
			    	    if(dist)
			        	{
			           		result = i;
			            	counter++;
			        	}
			    	}
			    	switch(counter)
			    	{
			        	case 0:
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto de nenhum carro !");
			        	}

			        	case 1:
			        	{
			            	if(IsPlayerInAnyVehicle(playerid))
      						{
			                	SendClientMessage(playerid, COLOR_GREY, "  Voce nao pode apreender o que esta no porta-malas de dentro do carro");
			            		return true;
               				}
               				if(vehTrunkCounter[result] != 0)
			            	{
			                	new gunName[100];
			                	GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
			                	GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                	format(gstring, sizeof(gstring), "Voce apreendeu uma %s (Municao: %i) do porta-mala do veiculo.", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                	SendClientMessage(playerid, COLOR_WHITE, gstring);
			                	vehTrunk[result][vehTrunkCounter[result]] = '\0';
			                	vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
			                	vehTrunkCounter[result]--;
			                	GetPlayerName(playerid, sendername, sizeof(sendername));
			                	format(gstring, sizeof(gstring), "* COP %s apreende armas do porta-malas.", sendername);
        	          			ProxDetector(30.0, playerid, gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                	SaveTrunk();
			                	return true;
			            	}
			            	else
			            	{
			                	SendClientMessage(playerid, COLOR_GREY, "   Porta-mala vazio ! ");
			                	return true;
			            	}
			        	}

				        default:
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
				            return true;
			    	    }
			    	}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial ! ");
					return true;
				}
			    return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /mala [name]");
			    SendClientMessage(playerid, COLOR_WHITE, "Nomes Disponiiveis: info, garma(Guardar Arma), parma(Pegar Arma)");
			    if(IsACop(playerid))
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "/mala revistar & apreender Somente para Policiais");
			    }
			    return true;
			}
	    }
	    return true;
	}
//=======================[ROUBO CAIXA]========================

    if(strcmp(cmd,"/roubarcaixa",true)==0)
	{
	    if(IsACop(playerid)) return SendClientMessage(playerid, -1, "Policiais nao podem assaltar!");
		if(ContarPM() <= 1) return SendClientMessage(playerid, -1, "Voce nao pode roubar sem 2 policiais na cidade!");
		if(roubando[playerid] == 1)
	    {
	   		SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta roubando algum lugar.");
	    	return true;
    	}
		new str[128];
		new player[128];
		new organ[128];
		new PmOnline[128];
		new DCC_Embed:embed = DCC_CreateEmbed();
		DCC_SetEmbedTitle(embed, "Log Roubo");
		DCC_SetEmbedColor(embed, 0xFF0000);
		format(str, sizeof str, "Alguém esta tentando roubar um caixa!!");
		DCC_SetEmbedDescription(embed, str);
		format(player, sizeof player, "`%s`", PlayerName(playerid));
		DCC_AddEmbedField(embed, "Player:", player, false);
		format(organ, sizeof organ, "`%s`", NomeORG(playerid));
		DCC_AddEmbedField(embed, "Org:", organ, false);
		format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
		DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
		DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
		DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
		DCC_SendChannelEmbedMessage(logRoubos, embed);
		if(PlayerToPoint(2.0,playerid, 1101.7953,-1375.0850,13.7594))
		{
	    	if(roubocaixa == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nesse caixa.");
	    		return true;
	    	}
	    	if(temporoubocaixa == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram esse caixa espere 3 minutos para roubar de novo!");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a caixinha)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar o caixa da loja atras do Market! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para terminar de roubar o caixa.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Caixa");
            roubando[playerid] = 1;
            ProvocoCaixa[playerid] = 1;
            roubocaixa = 1;
            temporoubocaixa = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 1101.7953,-1375.0850,13.7594);
            SetPlayerFacingAngle(playerid,1.2666);
            SetTimer("Aroubo", 220000, 0);
            SetTimerEx("AnimRouboBanco", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
        	tempobanco = SetTimerEx("RouboCaixa", 60000, 0, "i", playerid);
        	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 80000, 0, "i", playerid);
        	return true;
		}
		if(PlayerToPoint(2.0,playerid, 1101.7953,-1375.0850,13.7594))
		{
	    	if(roubocaixa == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nesse caixa.");
	    		return true;
	    	}
	    	if(temporoubocaixa == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram esse caixa espere 3 minutos para roubar de novo!");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a caixinha)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar o caixa da loja do Pier! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para terminar de roubar o caixa.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Caixa");
            roubando[playerid] = 1;
            ProvocoCaixaP[playerid] = 1;
            roubocaixa = 1;
            temporoubocaixa = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 1101.7953,-1375.0850,13.7594);
            SetPlayerFacingAngle(playerid,1.2666);
            SetTimer("Aroubo", 220000, 0);
            SetTimerEx("AnimRouboBanco", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
        	tempobanco = SetTimerEx("RouboCaixa", 60000, 0, "i", playerid);
        	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 80000, 0, "i", playerid);
        	return true;
		}
		if(PlayerToPoint(2.0,playerid, 1026.6843,-1996.4766,13.1968))
		{
	    	if(roubocaixa == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nesse caixa.");
	    		return true;
	    	}
	    	if(temporoubocaixa == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram esse caixa espere 3 minutos para roubar de novo!");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a caixinha)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar o caixa da loja de Verona Beach! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para terminar de roubar o caixa.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Caixa");
            roubando[playerid] = 1;
            ProvocoCaixV[playerid] = 1;
            roubocaixa = 1;
            temporoubocaixa = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 1026.6843,-1996.4766,13.1968);
            SetPlayerFacingAngle(playerid,1.2666);
            SetTimer("Aroubo", 220000, 0);
            SetTimerEx("AnimRouboBanco", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
        	tempobanco = SetTimerEx("RouboCaixa", 60000, 0, "i", playerid);
        	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 80000, 0, "i", playerid);
        	return true;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao esta em um local de assalto !");
			return true;
		}
		//return true;
	}
	
	if(strcmp(cmd,"/roubar",true)==0)
	{
	    if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5 //Tropa da Turquia
	    && PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pLider] != 8 //Hitmans
		&& PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14 //Groove Street
		&& PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17 //Ballas
		&& PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18 //Vagos
		&& PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19 //Comando Vermelho
		&& PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20 //Sons of Anarchy
		&& PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21 //Elements
		&& PlayerInfo[playerid][pMembro] != 22 && PlayerInfo[playerid][pLider] != 22 //Triads
		&& PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 //Bonde dos 40
		&& PlayerInfo[playerid][pMembro] != 25 && PlayerInfo[playerid][pLider] != 25 //Familia do Norte
		&& PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26 //Terceiro comando Puro
		&& PlayerInfo[playerid][pMembro] != 28 && PlayerInfo[playerid][pLider] != 28 //Grota
		&& PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] !=29 //Amigos dos Amigos
		&& PlayerInfo[playerid][pMembro] != 31 && PlayerInfo[playerid][pLider] != 31 //Milicia
		&& GetPlayerOrg(playerid) != 6 //Peaky Blinders
		&& GetPlayerOrg(playerid) != 12 //Mafia Cosa Nostra
		&& GetPlayerOrg(playerid) != 13 //Familia Shelby
		&& GetPlayerOrg(playerid) != 15 //FARC
		&& GetPlayerOrg(playerid) != 23) //Primeiro Comando Capital
	    {
			SendClientMessage(playerid,COLOR_GREY,"Voce nao pode assaltar !");
            return true;
		}
		if(ContarPM() <= 2) return SendClientMessage(playerid, -1, "Voce nao pode roubar sem 3 policiais na cidade!");
		if(roubando[playerid] == 1)
	    {
	   		SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta roubando algum lugar.");
	    	return true;
    	}
		if(PlayerToPoint(2.0,playerid, 2144.4177,1641.5360,993.5761))
		{
	    	if(roubobanco == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nesse cofre.");
	    		return true;
	    	}
	    	if(temporoubobanco == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram o cofre do banco espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto ao Banco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar o cofre banco! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar o banco.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Banco");
            roubando[playerid] = 1;
            ProvocoBanco[playerid] = 1;
            roubobanco = 1;
            temporoubobanco = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 2144.3711,1641.4792,993.5761);
            SetPlayerFacingAngle(playerid,1.2666);
            SetTimer("Aroubo", 220000, 0);
            SetTimerEx("AnimRouboBanco", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
        	tempobanco = SetTimerEx("RouboBanco", 120000, 0, "i", playerid);
        	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 80000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar o Banco!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
		else if(PlayerToPoint(2.0,playerid,820.6042,8.3990,1004.1962))
		{
	    	if(roubolot == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nesse cofre.");
	    		return true;
	    	}
	    	if(temporoubolot == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram o cofre da Loterica espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Loterica)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar o cofre da Loterica! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Loterica.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loterica");
            roubando[playerid] = 1;
            ProvocoLot[playerid] = 1;
            roubolot = 1;
            temporoubolot = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 820.9382,8.4020,1004.1957);
            SetPlayerFacingAngle(playerid,91.2409);
            SetTimer("Aroubo2", 220000, 0);
        	tempolot = SetTimerEx("RouboLot", 120000, 0, "i", playerid);
         	SetTimerEx("AnimRouboLot", 20000, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 80000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a lotérica!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
		else if(PlayerToPoint(2.0,playerid,303.9740,-168.8060,999.5938))
		{
	    	if(rouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nessa loja.");
	    		return true;
	    	}
	    	if(temporouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram a Loja de Armas 1 espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Loja de Armas)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar a Loja de Armas 1! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Loja de Armas 1.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 1");
            roubando[playerid] = 1;
            ProvocoLoja1[playerid] = 1;
            rouboloja1 = 1;
            temporouboloja1 = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 303.9886,-169.0725,999.5938);
            SetPlayerFacingAngle(playerid,178.6149);
            SetTimer("Aroubo3", 220000, 0);
        	tempoloja1 = SetTimerEx("RouboLoja1", 120000, 0, "i", playerid);
         	SetTimerEx("AnimRouboLoja", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 120000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}

			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a loja de armas!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
		else if(PlayerToPoint(2.0,playerid,294.8272,-57.8448,1001.5156))
		{
	    	if(rouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nessa loja.");
	    		return true;
	    	}
	    	if(temporouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram a Ammu Nation espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Ammu Nation)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar a Ammu Nation! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Ammu Nation.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Ammu Nation");
            roubando[playerid] = 1;
            ProvocoLoja2[playerid] = 1;
            rouboloja2 = 1;
            temporouboloja2 = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 294.8029,-57.8727,1001.5156);
            SetPlayerFacingAngle(playerid,356.5900);
            SetTimer("Aroubo4", 220000, 0);
        	tempoloja2 = SetTimerEx("RouboLoja2", 120000, 0, "i", playerid);
         	SetTimerEx("AnimRouboAmmu", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 120000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a loja de armas!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
		//========== BINCO ==================================================================================
		    else if(PlayerToPoint(2.0,playerid,211.3917,-96.1839,1005.2578))
		    {
	    	if(roubobinco == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nessa Loja de Roupas.");
	    		return true;
	    	}
	    	if(temporoubobinco == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram a Binco espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Binco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar a Binco ! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Binco.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Roupas");
            roubando[playerid] = 1;
            ProvocoBinco[playerid] = 1;
            roubobinco = 1;
            temporoubobinco = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 211.3817,-96.1272,1005.2578);
            SetPlayerFacingAngle(playerid,2.5667);
            SetTimer("Aroubo6", 220000, 0);
        	tempobinco = SetTimerEx("RouboBinco", 120000, 0, "i", playerid);
         	SetTimerEx("AnimRouboBinco", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 120000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a Binco!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
		//================= ZIP =========================================================================
  			else if(PlayerToPoint(2.0,playerid,162.1060,-79.8251,1001.8047))
		    {
	    	if(roubozip == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nessa Loja de Roupas.");
	    		return true;
	    	}
	    	if(temporoubozip == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram a Zip espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Zip)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar a Zip ! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Zip.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Roupas");
            roubando[playerid] = 1;
            ProvocoZip[playerid] = 1;
            roubozip = 1;
            temporoubozip = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 162.1254,-79.7925,1001.8047);
            SetPlayerFacingAngle(playerid,269.5058);
            SetTimer("Aroubo7", 220000, 0);
        	tempozip = SetTimerEx("RouboZip", 120000, 0, "i", playerid);
         	SetTimerEx("AnimRouboZip", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 120000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a Zip!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}

		//================= VICTIM =========================================================================
  			else if(PlayerToPoint(2.0,playerid,205.4029,-11.5629,1005.2109))
		    {
	    	if(roubovictim == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma tentativa de roubo nessa Loja de Roupas.");
	    		return true;
	    	}
	    	if(temporoubovictim == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Ja roubaram a Victim espere 3 minutos para roubar de novo !");
	    		return true;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Victim)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            format(string, sizeof(string), "%s e os %s estao tentando roubar a Victim ! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 2 minutos para terminar de roubar a Victim.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Roupas");
            roubando[playerid] = 1;
            ProvocoVictim[playerid] = 1;
            roubovictim = 1;
            temporoubovictim = 1;
            Controle(playerid, 0);
            SetPlayerPos(playerid, 205.4959,-11.5585,1005.2109);
            SetPlayerFacingAngle(playerid,90.3009);
            SetTimer("Aroubo8", 120000, 0);
            SetTimerEx("AnimRouboVictim", 900, 0, "i", playerid);
            ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
           	SetPlayerAttachedObject(playerid, 0, 1550, 1, 0.000000, -0.313611, 0.021003, 0.445490, 86.754409, 355.370239, 0.926815, 1.000000, 1.000000);
        	SetTimerEx("AcabarMochila", 120000, 0, "i", playerid);

			if(ContarPM() < 2){
				format(string, sizeof(string), "%s foi preso por 20 minutos! Por estar Roubando com menos de 2 policiais on!",PlayerName(playerid));
				CadeiaLog(string);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				ResetPlayerWeaponsEx(playerid);
				OnPlayerUpdate(playerid);
				PlayerInfo[playerid][pJailed] = 6;
				PlayerInfo[playerid][pJailTime] = 20 * 60;
				SetPlayerInterior(playerid, 5);
				SetPlayerPos(playerid, 318.5804,316.9043,999.1484);
				ClearAnimations(playerid);
				return 1;
			}
			else{
				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653941370880030");
				new str[128];
				new player[128];
				new organ[128];
				new PmOnline[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Roubo");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Alguém esta tentando roubar a Victim!");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", NomeORG(playerid));
				DCC_AddEmbedField(embed, "Org:", organ, false);
				format(PmOnline, sizeof PmOnline, "`%d`", ContarPM());
				DCC_AddEmbedField(embed, "Policiais online:", PmOnline, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logRoubos, embed);
			}
        	return true;
		}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao esta em um local de assalto !");
				return true;
			}
		//return true;
	}
	if (strcmp(cmd, "/tunning", true) == 0 || strcmp(cmd, "/tunning", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!!");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/fim", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2415.3999,2219.0083,4.9844); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!!");
			}
		}
		return true;
	}
	if (strcmp(cmd, "/ircamera", true) == 0 || strcmp(cmd, "/ircameraa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 539.5369,-891.6889,1304.2013); LinkVehicleToInterior(tmpcar, 0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,539.5369,-891.6889,1304.2013);
					SetPlayerFacingAngle(playerid,2.7415);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/descricao", true) == 0 && PlayerInfo[playerid][pAdmin] == 1341)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtokEx(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ Editar ]______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /descricao [nome] (Use para casas e empresas)");
				return true;
			}
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Descricao da Casa: %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(HouseInfo[i][hDiscription], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Descricao da Empresa(Empresa com interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(BizzInfo[i][bMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "Descricao da SEmpresa(Empresa sem interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(SBizzInfo[i][sbMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd,"/trazersemp",true)==0  && PlayerInfo[playerid][pAdmin] >= 1341)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazersemp [ID]");
	       	return true;
	    }
		new idsemp = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		SBizzInfo[idsemp][sbEntranceX] = x;
		SBizzInfo[idsemp][sbEntranceY] = y;
		SBizzInfo[idsemp][sbEntranceZ] = z;
		return true;
	}
	if(strcmp(cmd,"/trazeremp",true)==0  && PlayerInfo[playerid][pAdmin] >= 1341)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazeremp [ID]");
	       	return true;
	    }
		new idemp = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		BizzInfo[idemp][bEntranceX] = x;
		BizzInfo[idemp][bEntranceY] = y;
		BizzInfo[idemp][bEntranceZ] = z;
		return true;
	}
	if(strcmp(cmd,"/trazercasa",true)==0  && PlayerInfo[playerid][pAdmin] >= 1337)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazercasa [ID]");
	       	return true;
	    }
		new idcasa = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		HouseInfo[idcasa][hEntrancex] = x;
		HouseInfo[idcasa][hEntrancey] = y;
		HouseInfo[idcasa][hEntrancez] = z;
		return true;
	}
	if(strcmp(cmd,"/mudarcasa",true)==0)
	{
	    new House = PlayerInfo[playerid][pPHousekey];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
	    	if(HouseEntered[playerid] != 255)
   			{
   				SendClientMessage(playerid,COLOR_GREY,"Voce nao pode usar esse comando dentro de uma casa");
	        	return true;
	    	}
	    	if(GetPlayerMoney(playerid) < 200)
			{
				SendClientMessage(playerid, COLOR_GRAD5, "Voce nao tem dinheiro suficiente R$200");
				return true;
			}
			if(!strlen(tmp))
	    	{
	        	SendClientMessage(playerid,COLOR_GREY,"USE: /mudarcasa [1 a 10]");
	        	return true;
	    	}
			new idcasa = strval(tmp);
	    	switch (idcasa)
			{
				case 1:
				{
					HouseInfo[House][hExitx] = 2467.4951;
					HouseInfo[House][hExity] = -1698.4037;
					HouseInfo[House][hExitz] = 1013.5078;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 1.");
				}
	    		case 2:
				{
				    HouseInfo[House][hExitx] = 318.564971;
					HouseInfo[House][hExity] = 1118.209960;
					HouseInfo[House][hExitz] = 1083.882812;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 2.");
				}
				case 3:
				{
				    HouseInfo[House][hExitx] = 2324.419921;
					HouseInfo[House][hExity] = -1145.568359;
					HouseInfo[House][hExitz] = 1050.710083;
					HouseInfo[House][hInt] = 12;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 3.");
				}
				case 4:
				{
				    HouseInfo[House][hExitx] = 235.508994;
					HouseInfo[House][hExity] = 1189.169897;
					HouseInfo[House][hExitz] = 1080.339966;
					HouseInfo[House][hInt] = 3;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 4.");
				}
				case 5:
				{
				    HouseInfo[House][hExitx] = 225.756989;
					HouseInfo[House][hExity] = 1240.000000;
					HouseInfo[House][hExitz] = 1082.149902;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 5.");
				}
				case 6:
				{
				    HouseInfo[House][hExitx] = 223.043991;
					HouseInfo[House][hExity] = 1289.259888;
					HouseInfo[House][hExitz] = 1082.199951;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 6.");
				}
				case 7:
				{
				    HouseInfo[House][hExitx] = 225.630997;
					HouseInfo[House][hExity] = 1022.479980;
					HouseInfo[House][hExitz] = 1084.069946;
					HouseInfo[House][hInt] = 7;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 7.");
				}
				case 8:
				{
				    HouseInfo[House][hExitx] = 328.493988;
					HouseInfo[House][hExity] = 1480.589966;
					HouseInfo[House][hExitz] = 1084.449951;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 8.");
				}
				case 9:
				{
				    HouseInfo[House][hExitx] = 234.0843;
					HouseInfo[House][hExity] = 1064.6896;
					HouseInfo[House][hExitz] = 1084.2108;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 9.");
				}
				case 10:
				{
				    HouseInfo[House][hExitx] = 260.4075;
					HouseInfo[House][hExity] = 1238.6646;
					HouseInfo[House][hExitz] = 1084.2578;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 10.");
				}

			}
			GivePlayerMoney(playerid,-200);
			SBizzInfo[6][sbTill] += 200;
			ExtortionSBiz(6, 200);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			OnPropUpdate();
			return true;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem uma casa");
			return true;
		}
	}
// ||||||||||||||||||||||||||||||||||ELEVADORES ORGS/GANGS/MAFIAS||||||||||||||||||||||||||||||||||
	if (strcmp(cmd, "/epc", true) == 0)
	{
	    if(IsACop(playerid))
		{
		    if(PlayerToPoint(2.0, playerid, 903.3665,-1272.1648,14.5035))
			{
	    		SetPlayerPos(playerid, 901.4695,-1276.5393,23.0861);
    		}
		    if(PlayerToPoint(2.0, playerid, 901.4695,-1276.5393,23.0861))
		    {
		        SetPlayerPos(playerid, 903.3665,-1272.1648,14.5035);
		    }
		}
		return true;
	}
 	if (strcmp(cmd, "/epf", true) == 0)
	{
	    if(IsACop(playerid))
		{
		    if(PlayerToPoint(2.0, playerid, -50.5607,-233.6536,6.7646))
			{
	    		SetPlayerPos(playerid, -54.8425,-237.7034,31.6468);
    		}
		    if(PlayerToPoint(2.0, playerid, -54.8425,-237.7034,31.6468))
		    {
		        SetPlayerPos(playerid, -50.5607,-233.6536,6.7646);
		    }
		}
		return true;
	}
	if (strcmp(cmd, "/epr", true) == 0)
	{
	    if(IsACop(playerid))
		{
		    if(PlayerToPoint(2.0, playerid, 346.8519,-1494.9565,36.0391))
			{
	    		SetPlayerPos(playerid, 345.1602,-1482.8597,76.5391);
    		}
		    if(PlayerToPoint(2.0, playerid, 345.1602,-1482.8597,76.5391))
		    {
		        SetPlayerPos(playerid, 346.8519,-1494.9565,36.0391);
		    }
		}
		return true;
	}
	if (strcmp(cmd, "/esf", true) == 0)
	{
	    if(IsACop(playerid))
		{
		    if(PlayerToPoint(2.0, playerid, -1707.3776,1018.2072,17.5859))
			{
	    		SetPlayerPos(playerid, -1746.0360,972.7875,95.8438);
    		}
		    if(PlayerToPoint(2.0, playerid, -1746.0360,972.7875,95.8438))
		    {
		        SetPlayerPos(playerid, -1707.3776,1018.2072,17.5859);
		    }
		}
		return true;
	}
    if(strcmp(cmd, "/retirargrana", true) == 0)
    {
        if(PlayerInfo[playerid][pCarKey] != 0 || PlayerInfo[playerid][pCarKey2] != 0)
		{
			for(new i = 1; i < sizeof(CarInfo); i++)
			{
			    new keycar;
			    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey]) { keycar = PlayerInfo[playerid][pVeiculo]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey2]) { keycar = PlayerInfo[playerid][pVeiculo2]; }
				format(gstring, 128, "Voce retirou R$%d do seu carro vip!", CarInfo[keycar][cGrana]);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			    GivePlayerMoney(playerid, CarInfo[keycar][cGrana]);
			    CarInfo[keycar][cGrana] = 0;
			    return true;
			}
		}
		return true;
    }

	if(strcmp(cmd, "/cvip", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVIP] >= 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /v [Chat Vip]");
				return true;
			}
			format(string, sizeof(string), "** VIP %s: %s", sendername, result);
			SendVIPMessage(0xFFCCFFAA,string);
			printf("VIP %s: %s", sendername, result);
		}
		return true;
	}
	
	if(strcmp(cmd, "/ticket", true) == 0 || strcmp(cmd, "/senha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[100];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
                result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /Senha [Pergunta]");
                return 1;
            }
            if(InfoKelve[playerid][NumSenha] != 999)
            {
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Voce ja Pediu uma Senha, Aguarde ela ser Atendida!");
                return 1;
            }
            if(SenhasAtendimento >= 8)
            {
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] O Atendimento esta Lotado, Por favor Aguarde alguns Segundos!");
                return 1;
            }
            if( PlayerInfo[playerid][pJailed] > 0 ) return SendClientMessage( playerid, -1, "Voce nao pode pegar uma senha estando preso." );
            if(InfoKelve[playerid][NumSenha] == 999)
            {
                InfoKelve[playerid][NumSenha] = playerid;
                SenhasAtendimento ++;
                strmid(InfoKelve[playerid][PergSenha], result, 0, strlen(result), 255);
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Voce Enviou uma Senha de Ajuda, Aguarde ate que ela seja Atendida!");
                format(string,sizeof(string),"Player %s[ID:%d] Pediu uma Senha de Ajuda (/senhas), Digite /irsenha %d.",PlayerName(playerid),playerid,InfoKelve[playerid][NumSenha]);
                ABroadCast(0xFFBE93AA,string,1);
                return 1;
            }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"Voce precisa estar logado");
        return 1;
    }

    if(strcmp(cmd, "/versenhas", true) == 0 || strcmp(cmd, "/versenha", true) == 0 || strcmp(cmd, "/senhas", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                SendClientMessage(playerid, 0x55aafdFF, "[Atendimento] Senhas de suporte abertas:");
                for(new i = 0; i < MaiorID; i++)
                {
                    if(InfoKelve[i][NumSenha] != 999 && IsPlayerConnected(i))
                    {
                        format(string,sizeof(string),"Senha ID: %d, %s, Pergunta: %s.",i,PlayerName(i),InfoKelve[i][PergSenha]);
                        SendClientMessage(playerid,0x77EEA1FF,string);
                    }
                }
                SendClientMessage(playerid,0xFFFFFFFF,"Para ir ate o player digite: /irsenha [ID]");
            }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"Voce precisa estar logado.");
        return 1;
    }

    if(strcmp(cmd, "/irsenha", true) == 0 || strcmp(cmd, "/atendersenha", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /irsenha [id]");
                return 1;
            }
            new Float:plocx,Float:plocy,Float:plocz;
            new plo;
            plo = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                if (IsPlayerConnected(plo))
                {
                    if(InfoKelve[plo][NumSenha] == 999)
                    {
                        SendClientMessage(playerid,0xFFFFFFFF,"[BPR] Esse jogador nao solicitou ajuda ou ja foi atendido.");
                        return 1;
                    }
                    GetPlayerPos(plo, plocx, plocy, plocz);
                    format(string,sizeof(string),"[SENHA] %s esta atendendo a senha: %d de %s, para mais informacoes digite: /senhas.",PlayerName(playerid),plo,PlayerName(plo));
                    ABroadCast(COLOR_YELLOW,string,1);
                    format(string,sizeof(string),"[Atendimento] %s esta atendendo o seu pedido, aguarde em sua posicao atual (fique parado).",PlayerName(playerid));
                    SendClientMessage(plo,COLOR_YELLOW,string);
                    format(string,sizeof(string),"[SENHA] Player %s pergunta: %s.",PlayerName(plo),InfoKelve[plo][PergSenha]);
                    SendClientMessage(playerid,0xFEEA5CAA,string);
                    if (GetPlayerState(playerid) == 2)
                    {
                        new tmpcar = GetPlayerVehicleID(playerid);
                        SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
                        TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
                    }
                    else
                    {
                        SetPlayerPos(playerid,plocx,plocy+2, plocz);
                    }
                    SetPlayerInterior(playerid,GetPlayerInterior(plo));
                    SetPlayerVirtualWorld(playerid,GetPlayerInterior(plo));
                    PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                    SenhasAtendimento --;
                    strmid(InfoKelve[plo][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
                    InfoKelve[plo][NumSenha] = 999;
                }
            }
        }
        return 1;
    }

	if(strcmp(cmd, "/ilegal", true) == 0)
	{
 			if(PlayerInfo[playerid][pJailed] != 0)
	    	{
				SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!!");
	      		return true;
	    	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GREEN, "USE: /ilegal [Chat Crimonoso]");
				return true;
			}
			format(string, sizeof(string), "{6e7f80}ILEGAL{FFFFFF} -{0000ff} [%d]:{FFFFFF} %s",playerid, result);
			SendClientMessageToAll(COLOR_LIGHTBLUE,string);
			printf("[ILEGAL][%d]%s:{FFFFFF} %s",playerid, sendername, result);

			//if(_:g_WelcomeChannelId == 0)
            //g_WelcomeChannelId = DCC_FindChannelById("865653937155342376");
            new str[128];
            new player[128];
            new organ[128];
            new DCC_Embed:embed = DCC_CreateEmbed();
            DCC_SetEmbedTitle(embed, "Log /ilegal");
            DCC_SetEmbedColor(embed, 0xFF0000);
            format(str, sizeof str, "Alguém enviou alguma mensagem no chat Ilegal!");
            DCC_SetEmbedDescription(embed, str);
            format(player, sizeof player, "`%s`", PlayerName(playerid));
            DCC_AddEmbedField(embed, "Player:", player, false);
            format(organ, sizeof organ, "`%s`", result);
            DCC_AddEmbedField(embed, "Mensagem:", organ, false);
            DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SendChannelEmbedMessage(logBp, embed);
			return 1;
	}

	if(strcmp(cmd, "/olx", true) == 0)
	{
 			if(PlayerInfo[playerid][pJailed] != 0)
	    	{
				SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!!");
	      		return true;
	    	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GREEN, "USE: /olx [Chat Vendas/Compras]");
				return true;
			}
			format(string, sizeof(string), "{8a2be2}O{66ff00}L{cc5500}X {FFFFFF}-{0000ff} [%d]%s:{FFFFFF} %s",playerid, sendername, result);
			SendClientMessageToAll(COLOR_LIGHTBLUE,string);
			printf("[OLX][%d]%s:{FFFFFF} %s",playerid, sendername, result);

			//if(_:g_WelcomeChannelId == 0)
            //g_WelcomeChannelId = DCC_FindChannelById("865653937155342376");
            new str[128];
            new player[128];
            new organ[128];
            new DCC_Embed:embed = DCC_CreateEmbed();
            DCC_SetEmbedTitle(embed, "Log /olx");
            DCC_SetEmbedColor(embed, 0xFF0000);
            format(str, sizeof str, "Alguém enviou alguma mensagem no chat OLX!");
            DCC_SetEmbedDescription(embed, str);
            format(player, sizeof player, "`%s`", PlayerName(playerid));
            DCC_AddEmbedField(embed, "Player:", player, false);
            format(organ, sizeof organ, "`%s`", result);
            DCC_AddEmbedField(embed, "Mensagem:", organ, false);
            DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SendChannelEmbedMessage(logBp, embed);
			return 1;
	}

	if(strcmp(cmd, "/190", true) == 0)
	{
 			if(PlayerInfo[playerid][pJailed] != 0)
	    	{
				SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!!");
	      		return true;
	    	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GREEN, "USE: /190 [Chat IC]");
				return true;
			}
			format(string, sizeof(string), "{36454f}190 {FFFFFF}-{0000ff} [%d]%s:{FFFFFF} %s",playerid, sendername, result);
			SendClientMessageToAll(COLOR_LIGHTBLUE,string);
			printf("[190][%d]%s:{FFFFFF} %s",playerid, sendername, result);

			//if(_:g_WelcomeChannelId == 0)
            //g_WelcomeChannelId = DCC_FindChannelById("865653937155342376");
            new str[128];
            new player[128];
            new organ[128];
            new DCC_Embed:embed = DCC_CreateEmbed();
            DCC_SetEmbedTitle(embed, "Log /190");
            DCC_SetEmbedColor(embed, 0xFF0000);
            format(str, sizeof str, "Alguém enviou alguma mensagem no chat 190!");
            DCC_SetEmbedDescription(embed, str);
            format(player, sizeof player, "`%s`", PlayerName(playerid));
            DCC_AddEmbedField(embed, "Player:", player, false);
            format(organ, sizeof organ, "`%s`", result);
            DCC_AddEmbedField(embed, "Mensagem:", organ, false);
            DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SendChannelEmbedMessage(logBp, embed);
			return 1;
	}
	
	if(strcmp(cmd, "/batepapo", true) == 0 || strcmp(cmd, "/bp", true) == 0)
	{
 			if(PlayerInfo[playerid][pJailed] != 0)
	    	{
				SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!!");
	      		return true;
	    	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GREEN, "USE: /bp [Chat OOC]");
				return true;
			}
			format(string, sizeof(string), "[BATE PAPO][%d]%s:{FFFFFF} %s",playerid, sendername, result);
			SendClientMessageToAll(COLOR_LIGHTBLUE,string);
			printf("[BATE PAPO][%d]%s:{FFFFFF} %s",playerid, sendername, result);

			//if(_:g_WelcomeChannelId == 0)
            //g_WelcomeChannelId = DCC_FindChannelById("865653937155342376");
            new str[128];
            new player[128];
            new organ[128];
            new DCC_Embed:embed = DCC_CreateEmbed();
            DCC_SetEmbedTitle(embed, "Log Bate Papo");
            DCC_SetEmbedColor(embed, 0xFF0000);
            format(str, sizeof str, "Alguém enviou alguma mensagem no chat geral!");
            DCC_SetEmbedDescription(embed, str);
            format(player, sizeof player, "`%s`", PlayerName(playerid));
            DCC_AddEmbedField(embed, "Player:", player, false);
            format(organ, sizeof organ, "`%s`", result);
            DCC_AddEmbedField(embed, "Mensagem:", organ, false);
            DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
            DCC_SendChannelEmbedMessage(logBp, embed);
			return 1;
	}
    //-------------------------------[Pay]--------------------------------------------------------------------------
	if(strcmp(cmd, "/pagardsujo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagardsujo [id] [quantidade]");
				return true;
			}
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagardsujo [id] [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode usar este comando neste local");
						return true;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheiro = PlayerInfo[playerid][pDsujo];
						if (playerdinheiro >= moneys)
						{
							PlayerInfo[playerid][pDsujo] -= moneys;
							PlayerInfo[giveplayerid][pDsujo] += moneys;
							format(string, sizeof(string), "   Voce deu Dinheiro Sujo para %s (Para: %d) Quantidade: %d", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   Voce recebeu %d Dinheiro Sujo de %s(ID: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "* %s deu alguma coisa para %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Voce nao possui essa quantidade de Dinheiro Sujo");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador esta longe.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}

	if(strcmp(cmd, "/pagar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return true;
			}
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return true;
			}
			if(admtrampando[giveplayerid] != 0 && PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar para admins em trabalho!");
			    return true;
			}
			moneys = strval(tmp);
			if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce precisa ser nivel 2 ou mais para pagar mais que R$ 1000");
				return true;
			}
			if(moneys < 1 || moneys > 100000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Pagamento minimo 1, maximo 100000 por vez");
			    return true;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode usar este comando neste local");
						return true;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheiro = GetPlayerMoney(playerid);
						if (playerdinheiro >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							GivePlayerMoney(playerid, (0 - moneys));
							GivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "   Voce pagou %s(Para: %d), R$%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   Voce recebeu R$%d de %s(ID: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "%s deu grana para %s", sendername, giveplayer);
							PayLog(string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s deu alguma grana para %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta com essa grana no bolso.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador esta longe.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}

	if(strcmp(cmd, "/caridade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /caridade [quantidade]");
				return true;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode usar este comando neste local");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Minimo R$1");
				return true;
			}
			if(GetPlayerMoney(playerid) < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta com essa grana no bolso.");
				return true;
			}
			GivePlayerMoney(playerid, -moneys);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s obrigado pela sua doacao de R$%d.",sendername, moneys);
			printf("%s", string);
			Tax += moneys;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PayLog(string);
		}
		return true;
	}

	new bombath;
	if(strcmp(cmd, "/comprarbomba", true)==0 || strcmp(cmd, "/cbomba", true)==0)
	{
		new org = GetPlayerOrg(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
		new location = PlayerInfo[playerid][pLocal];
		if(location == 99 || location == 100 || location == 102)
	    {
	    if(GetPlayerMoneyEx(playerid) < 200) return SendClientMessage(playerid,COLOR_GREY,"Voce nao tem R$200 para comprar uma bomba.");
		if (pbomba3[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Voce ja comprou uma bomba devera esperar 10 minutos");
        {
	        if(org == 6 || org == 15 || org == 23)
	        {
	        SendClientMessage(playerid, 0x33FF00FF, "Voce comprou uma bomba por R$200");
	        pbomba3[playerid] = 1;
	        pbomba[playerid] = 1;
	        GivePlayerMoney(playerid, - 200);
		    return true;
			}
		  }
		}
	}
	if(strcmp(cmd, "/plantarbomba", true)==0 || strcmp(cmd, "/pbomba", true)==0)
	{
		new org = GetPlayerOrg(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
		if(usarbombas == 1) return SendClientMessage(playerid, COLOR_GREY, "Uma bomba ja foi plantada,voce devera esperar");
	    {
		if (pbomba[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Voce ja plantou uma bomba devera esperar.");
        {
	        if(org == 6 || org == 15 || org == 23)
	        {
            format(string, sizeof(string), "Terrorista{23f518} %s {f5f3f0}Plantou uma bomba em algum local da cidade",playername);
  			SendClientMessageToAll(COLOR_WHITE, string);
  			GetPlayerPos(playerid,PosBombaX,PosBombaY,PosBombaZ);
  			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
  			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
  			new Float: X, Float: Y, Float: Z;
  			bombath = CreateDynamicObject(1279,X,Y,Z,0,0,0);
	        pbomba[playerid] = 0;
	        pbomba2[playerid] = 1;
	        usarbombas = 1;
	        SetTimer("usarbomba", 2700000, false);
		    return true;
			}
		}
		}
	}
    if(strcmp(cmd, "/desarmarbomba", true)==0 || strcmp(cmd, "/dsbomba", true)==0)
	{
		new org = GetPlayerOrg(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
		if (pbomba2[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Voce nao plantou uma bomba");
        {
	        if(org == 6 || org == 15 || org == 23)
	        {
            format(string, sizeof(string), "Terrorista{23f518} %s {f5f3f0}Desarmou a bomba",playername);
  			SendClientMessageToAll(COLOR_WHITE, string);
  			SetTimerEx("usebomb", 1200000, false, "i", playerid);
  			DestroyObject(bombath);
  			DestroyObject(bombath);
  			DestroyObject(bombath);
	        pbomba[playerid] = 0;
	        pbomba2[playerid] = 0;
		    return true;
			}
		}
	}
    if(strcmp(cmd, "/detonarbomba", true)==0 || strcmp(cmd, "/dbomba", true)==0)
	{
		new org = GetPlayerOrg(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
		if (pbomba2[playerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Voce nao plantou uma bomba");
        {
	        if(org == 6 || org == 15 || org == 23)
	        {
            format(string, sizeof(string), "Terrorista{23f518} %s {f5f3f0}Detonou a bomba",playername);
  			SendClientMessageToAll(COLOR_WHITE, string);
  			CreateExplosion(PosBombaX,PosBombaY,PosBombaZ,7,30.0);
  			CreateExplosion(PosBombaX,PosBombaY+3,PosBombaZ,7,30.0);
  			CreateExplosion(PosBombaX+8,PosBombaY,PosBombaZ+4,7,30.0);
  			CreateExplosion(PosBombaX,PosBombaY+2,PosBombaZ+4,7,30.0);
  			CreateExplosion(PosBombaX+10,PosBombaY+2,PosBombaZ+4,7,30.0);
  			CreateExplosion(PosBombaX+12,PosBombaY+2,PosBombaZ+4,7,30.0);
  			CreateExplosion(PosBombaX+20,PosBombaY+2,PosBombaZ+20,7,30.0);
  			CreateExplosion(PosBombaX+23,PosBombaY+2,PosBombaZ+22,7,30.0);
  			CreateExplosion(PosBombaX+30,PosBombaY+5,PosBombaZ+40,7,30.0);
  			CreateExplosion(PosBombaX+38,PosBombaY+7,PosBombaZ+20,7,30.0);
  			CreateExplosion(PosBombaX+45,PosBombaY+10,PosBombaZ+80,7,30.0);
  			SetTimerEx("usebomb", 1200000, false, "i", playerid);
	        pbomba[playerid] = 0;
	        pbomba2[playerid] = 0;
  			DestroyObject(bombath);
  			DestroyObject(bombath);
  			DestroyObject(bombath);
		    return true;
			}
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
   	if(strcmp(cmd, "/cv", true) == 0 || strcmp(cmd, "/controleveiculo", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			ShowPlayerDialog(playerid, DIALOG_RANGE, DIALOG_STYLE_LIST,"Controle do Veiculo","\nLuzes\nAlarme\nCapo\nPorta-Malas ","Ok","Sair");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/sacar_input_type", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

	        if(IsPlayerConnected(playerid))
	        {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacar [Quantidade]");
				format(string, sizeof(string), "  Voce tem R$%d na sua conta!.", PlayerInfo[playerid][pConta]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacar [Quantidade]");
				format(string, sizeof(string), "  Voce tem R$%d na sua conta!.", PlayerInfo[playerid][pConta]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			if (cashdeposit > PlayerInfo[playerid][pConta] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce  nao tem tudo isso na sua conta! !");
				return true;
			}
		    ConsumingMoney[playerid] = 1;
		    new saldo;
		    saldo = PlayerInfo[playerid][pConta];
			GivePlayerMoneyEx(playerid,cashdeposit);
			PlayerInfo[playerid][pConta] = saldo-cashdeposit;
			format(string, sizeof(string), "[BPR] Voce Sacou R$%d da sua conta. Total: R$%d ", cashdeposit,PlayerInfo[playerid][pConta]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return true;
			}else
			{
			SendClientMessage(playerid, COLOR_GREY, "  Voce nao esta no banco ou em um Caixa Eletronico!");
			}
		}
		return true;
	}
    if(strcmp(cmd, "/grampear", true) == 0 || strcmp(cmd, "/rastrear", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /grampear [ID/Nome]");
                return true;
            }
            if(strcmp(tmp,"off",true)==0)
            {
                PlayerInfo[playerid][pGrampo] = INVALID_PLAYER_ID;
                SendClientMessage(playerid, COLOR_GRAD1, "Voce desligou a escuta");
                return true;
            }
            if(gTeam[playerid] == 2  || IsACop(playerid))
			{
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        PlayerInfo[playerid][pGrampo] = giveplayerid;
                        format(string, sizeof(string), "Voce grampeou o Tefelone de %s.", PlayerName(giveplayerid));
                        SendClientMessage(playerid, COLOR_GRAD1, "Para desligar a escuta use: /grampear off");
                        SendClientMessage(playerid, COLOR_GREY, string);
                        return true;
                    }
                }
            }
            else
            {
                format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
                SendClientMessage(playerid, COLOR_GRAD1, string);
            }
        }
        return true;
    }


//-------------------------------[Stats]--------------------------------------------------------------------------
	if (strcmp(cmd, "/rg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta logado !");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/mochila", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowMochila(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta logado !");
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/rgteste", true) == 0)
	{
	    if(OlhandoRG[playerid] == true) return SumirRG(playerid),Controle(playerid, 1), OlhandoRG[playerid] = false;
	    
    	new str[2000];
	    
	    format(str, 2000, "%s", PlayerName(playerid));
	    
	    PlayerTextDrawSetString(playerid, Nomep[playerid], str);
	    
	    format(str, 2000, "ID: %d", playerid);

	    PlayerTextDrawSetString(playerid, IDp[playerid], str);
	    
	    format(str, 2000, "Dinheiro: R$%d", GetPlayerMoney(playerid));

	    PlayerTextDrawSetString(playerid, Dinheirop[playerid], str);
	    
	    TextDrawShowForPlayer(playerid, Text_RG[0]);
	    TextDrawShowForPlayer(playerid, Text_RG[1]);
	    TextDrawShowForPlayer(playerid, Text_RG[2]);
	    TextDrawShowForPlayer(playerid, Text_RG[3]);
	    TextDrawShowForPlayer(playerid, Text_RG[4]);
	    TextDrawShowForPlayer(playerid, Text_RG[5]);
	    TextDrawShowForPlayer(playerid, Text_RG[6]);
	    TextDrawShowForPlayer(playerid, Text_RG[7]);
	    
	    PlayerTextDrawShow(playerid, Nomep[playerid]);
	    PlayerTextDrawShow(playerid, IDp[playerid]);
	    PlayerTextDrawShow(playerid, Dinheirop[playerid]);
	    
	    OlhandoRG[playerid] = true;
	    Controle(playerid, 0);
	    return 1;
	}
	//-------------------------------[Mostrar RG]--------------------------------------------------------------------------
	if (strcmp(cmd, "/mostrarrg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /mostrarrg [ID/Nome]");
					return true;
				}
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(giveplayerid,playerid);
						format(string, sizeof(string), "* %s mostrou o seu rg para %s.",PlayerName(playerid),PlayerName(giveplayerid));
			            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
		      }
		}
		return true;
	}
	if(strcmp(cmd, "/desligarpar", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (HidePM[playerid] == 0)
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "   Mensagens Privadas Desativadas !");
			}
			else if (HidePM[playerid] == 1)
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "   Mensagens Privadas Ativadas !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/capacete", true) == 0)
	{
	   if(IsPlayerInAnyVehicle(playerid))
       {
			if(CapacetePlayer[playerid] == 0)
			{
				CapacetePlayer[playerid] = 1;
        		GetPlayerName(playerid, sendername, sizeof(sendername));
             	SendClientMessage(playerid, COLOR_YELLOW,"[BPR] Voce colocou o Capacete, Agora Esta Protegido (/tirarcapacete)");
               	format(string, sizeof(string), "%s Coloca seu Capacete!.", sendername);
			   	ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			   	SetPlayerAttachedObject ( playerid, 1 , 18645 , 2 , 0.07 , 0 , 0 , 88 , 75 , 0 ) ;
          	}
	      	else
	     	{
				SendClientMessage(playerid, COLOR_GREY,"Voce ja esta de Capacete");
		 	}
   		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY," Voce nao esta em um Veiculo ");
			return true;
		}
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if (strcmp(cmd, "/tirarcapacete", true) == 0)
    {
        if(CapacetePlayer[playerid] == 1)
        {
            CapacetePlayer[playerid] = 0;
            GetPlayerName(playerid, sendername, sizeof(sendername));
            SendClientMessage(playerid, COLOR_YELLOW,"[BPR] Voce esta sem Capacete, Use: (/capacete)");
            format(string, sizeof(string), "%s Tira seu Capacete!.", sendername);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            RemovePlayerAttachedObject(playerid, 1);
        }
       	else
        {
            SendClientMessage(playerid, COLOR_YELLOW,"[BPR] Voce ja esta sem Capacete!");
        }
        return true;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/discord", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "|___________________[ Discord ]_____________________|");
	    SendClientMessage(playerid, 0xACFF48AA,"      Discord do Server:                               ");
        SendClientMessage(playerid, 0xACFF48AA,"         https://discord.gg/MSh42WBfnw                    ");
        SendClientMessage(playerid, 0xACFF48AA,"            Entre e Conheca Mais Sobre o Servidor!   ");
        SendClientMessage(playerid, COLOR_WHITE,"____________________________________________________");
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/kitadm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_YELLOW, "[Kit Admin]Voce pegou o kit de armas ecko!");
			    SetPlayerArmour(playerid, 100.0);
			    SetPlayerHealth(playerid, 100.0);
				GivePlayerWeapon(playerid, 25, 999);
				GivePlayerWeapon(playerid, 24, 999);
				GivePlayerWeapon(playerid, 31, 999);
				GivePlayerWeapon(playerid, 29, 999);
				GivePlayerWeapon(playerid, 34, 999);
			    format(string, 256, "[AVISO]O ADM %s usou o /kitadmin.",sendername);
			    ABroadCast(COLOR_LIGHTRED,string,1);
        	}
        	else
        	{
            	SendClientMessage(playerid, -1, "Voce nao e um Administrador");
        	}
    	}
    	return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/darkit",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darkit [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			    		SendClientMessage(playerid, COLOR_YELLOW, "[Kit Ecko]Voce pegou o kit de armas ecko!");
			    		SetPlayerArmour(giveplayerid, 100.0);
			    		SetPlayerHealth(giveplayerid, 100.0);
						GivePlayerWeapon(giveplayerid, 25, 999);
						GivePlayerWeapon(giveplayerid, 24, 999);
						GivePlayerWeapon(giveplayerid, 31, 999);
						GivePlayerWeapon(giveplayerid, 29, 999);
						GivePlayerWeapon(giveplayerid, 34, 999);
			    		format(string, 256, "[AVISO]O ADM %s usou o /kitecko em %s.",sendername,giveplayer);
			    		ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/mudarorigem", true) == 0)
	{
	    if(PlayerToPoint(2, playerid,360.4069,169.9995,1008.3893))
		{
			ShowPlayerDialog(playerid, 1993, DIALOG_STYLE_LIST, "Mudar Origem", "Los Santos - R$100\nSan Fierro R$100", "Selecionar", "Cancelar");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/creditos", true) == 0)
	{
		new Strings[2900];
		strcat(Strings, "====================== x Creditos Do Servidor x ====================== \n\n");

		strcat(Strings, "Desenvolvedor da GM: Logan_Walker(Coyote)\n");
		strcat(Strings, "CEO: Logan Walker(Coyote)\n");
		strcat(Strings, "Fundador: Slander\n");
		strcat(Strings, "Sub Fundadores: N/A\n");
		strcat(Strings, "Developer: Coyote\n");
		strcat(Strings, "Agradecimentos especiais a toda equipe BPR\n");

		ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Creditos", Strings, "Fechar", "");
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmd,"/pagamento",true))
	{
    	PassadoUmDia = 0;
    	SendClientMessage(playerid, 0x33CCFFAA, "Voce liberou o salario dos Membros da Org.");
    	for(new xxx = 0; xxx < MAX_PLAYERS; xxx++)
    	{
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pRecebeuSalario] != char)
        	{
            	PlayerInfo[xxx][pRecebeuSalario] = char;
        	}
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pCargo] == 1)
        	{
           	 	GivePlayerMoney(xxx, SalarioCargo1);
        	}
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pCargo] == 2)
        	{
            	GivePlayerMoney(xxx, SalarioCargo2);
        	}
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pCargo] == 3)
        	{
            	GivePlayerMoney(xxx, SalarioCargo3);
        	}
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pCargo] == 4)
        	{
            	GivePlayerMoney(xxx, SalarioCargo4);
        	}
        	if(IsPlayerConnected(xxx) && PlayerInfo[xxx][pCargo] == 5)
        	{
            	GivePlayerMoney(xxx, SalarioCargo5);
        	}
    	}
    	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmd,"/editarsalario",true))
    {
        new Salario[128];
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid,-1,"Use /editarsalario [Cargo(1-5)][Salario]");
        Salario = strtok(cmdtext, idx);
        if(!strlen(Salario)) return SendClientMessage(playerid,-1,"Use /editarsalario [Cargo(1-5)][Salario]");
        if(strlen(Salario) < 1000 || strlen(Salario) > 1000000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Salario minimo 1000, maximo 1000000");
			    return true;
			}
        if(strval(tmp) == 1) SalarioCargo1 = strval(Salario);
        if(strval(tmp) == 2) SalarioCargo2 = strval(Salario);
        if(strval(tmp) == 3) SalarioCargo3 = strval(Salario);
        if(strval(tmp) == 4) SalarioCargo4 = strval(Salario);
        if(strval(tmp) == 5) SalarioCargo5 = strval(Salario);
        SendClientMessage(playerid,-1,"Salario editado.");
        return true;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/adrift", true) == 0)
    {
       if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
       {
			if(StreetCallTime[playerid] > 0)
			{
	   			SendClientMessage(playerid, COLOR_GREY, "Voce aceitou a Participar do Drift!.");
				return 1;
	     	}
	      	if(StreetCall < 999)
	      	{
	       		if(IsPlayerConnected(StreetCall))
	         	{
	             	GetPlayerName(playerid, sendername, sizeof(sendername));
	                GetPlayerName(StreetCall, giveplayer, sizeof(giveplayer));
	                format(string, sizeof(string), "Voce aceitou participar do Drift de %s, Siga o Checkpoint!.",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(StreetCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					GameTextForPlayer(playerid, "~r~Va ate ao Drift", 5000, 1);
					StreetCallTime[playerid] = 1;
					StreetAccepted[playerid] = StreetCall;
					StreetCall = 999;
					return 1;
				}
    		}
      		else
        	{
         		SendClientMessage(playerid, COLOR_GREY, "Nenhuma chamada para racha!.");
			  	return 1;
	      	}
	   }
       else
       {
           SendClientMessage(playerid, COLOR_GREY, "Voce nao e membro dos Elements!");
 	 	   return 1;
       }
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/desmanchar", true) == 0)
    {
    	if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
		{
			new vehicle;
			vehicle = GetPlayerVehicleID(playerid);
			if(vehicle == CarroPlayer[playerid] || vehicle == RetirouCarro1[playerid] || vehicle == RetirouCarro2[playerid] || vehicle == RetirouCarro3[playerid] || vehicle == RetirouCarro4[playerid] || vehicle == BikeSpawn[playerid]) return SendClientMessage(playerid, -1, "Voce nao pode desmanchar um carro seu!");
	        if(IsPlayerInRangeOfPoint(playerid, 3.0, 2770.0596,-1620.2411,12.8336))
	    	{
		    	if(IsPlayerInAnyVehicle(playerid))
				{
			    	SetTimerEx("Desmanche", 10000, 0, "i", playerid);
			    	Controle(playerid, 0);
			    	SendClientMessage(playerid, -1, "Seu veiculo esta sendo desmanchado!");
				}
				else return SendClientMessage(playerid, -1, "| ERRO | Voce nao esta em um veiculo");
	    	}
		}
		else return SendClientMessage(playerid, COLOR_GREY,"Voce nao e um membro dos Elements!");
		return 1;
	}

	if(strcmp(cmd,"/rota",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			//if(PlayerInfo[playerid][pLider] == 21)
			//{
				if(EmRota[playerid] > 0)
				{
				    if(EmRota[playerid] == 1)

				    EmRota[playerid] = 0;
					format(string, sizeof(string), "Rota Finalizada com sucesso!");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					DisablePlayerCheckpoint(playerid);
					return true;
				}
				else
				{
			    	EmRota[playerid] = 1;
			    	SendClientMessage(playerid, COLOR_RED,"Rota iniciada com sucesso! Siga os checkpoints");
			    	SendClientMessage(playerid, COLOR_RED,"A cada checkpoint voce recebe pecas!");
			    	SendClientMessage(playerid, COLOR_RED,"USE: /rota novamente para finalizar a rota!");
			    	SetPlayerCheckpoint(playerid, 1249.9547,-740.4484,94.3671,8.0);
					gPlayerRota[playerid] = 1;
				}
			//}
			//else
			//{
			//    SendClientMessage(playerid, COLOR_GREY,"Voce nao e um motorista de onibus.");
			//}
		}
		return true;
	}

	if(strcmp(cmd, "/montararma", true) == 0)
    {
    	//if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
		//{
	        if(IsPlayerInRangeOfPoint(playerid, 3.0, 1516.4386,-660.2062,94.7500))
	    	{
		    	if(PlayerInfo[playerid][pPecas] > 100)
				{
					SendClientMessage(playerid, -1, "Montando sua Arma");
			    	Controle(playerid, 0);
					ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
			    	SetTimerEx("MontarArma", 15000, 0, "i", playerid);
				}
				else return SendClientMessage(playerid, -1, "Voce nao possui 100 pecas!");
	    	}
			else return SendClientMessage(playerid, -1, "Voce nao esta no local de montagem!");
		//}
		//else return SendClientMessage(playerid, COLOR_GREY,"Voce nao e um membro dos Elements!");
			return 1;
	}


    if(strcmp(cmd, "/drift", true) == 0)
    {
       if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
       {
			GetPlayerName(playerid, sendername, sizeof(sendername));
	    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce propos um Desafio espere um Drifter.");
		    format(string, sizeof(string), "[DRIFT] %s Propos um Drift, use: /adrift para aceitar o Drift!.", sendername);
	    	SendFamilyMessage(21, COLOR_YELLOW, string);
			StreetCall = playerid;
			format(string,sizeof(string), "*%s fez uma ligacao.", sendername);
			ProxDetector(15.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
		}
		else
		{
		   SendClientMessage(playerid, COLOR_GREY,"Voce nao e membro dos Elements!");
		   return 1;
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/transformargold", true) == 0)
    {
        if(GetPlayerMoney(playerid) < 1000000) return SendClientMessage(playerid, -1, "ERROR: Voce nao tem 1kk");
        GivePlayerMoney(playerid, -1000000);
        PlayerInfo[playerid][pGold]++;
        format(string,sizeof(string),"1kk transformado para 1 Gold. Voce agora possui %i Gold e %i$ em maos.", PlayerInfo[playerid][pGold], GetPlayerMoney(playerid));
        SendClientMessage(playerid,-1,string);
        return 0x01;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/destranformargold", true) == 0)
    {
        new gold;
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, -1, "/destranformargold [golds]");
        gold = strval(tmp);
        if(PlayerInfo[playerid][pGold] < gold || gold < 1 || gold > 10) return SendClientMessage(playerid, -1, "ERROR: Voce nao tem essa quantia | Min 1 - max 10");
        PlayerInfo[playerid][pGold]-=gold;
        GivePlayerMoney(playerid, 1000000*gold);
        format(string,sizeof(string),"Voce tem %i gold's disponiveis e possui agora %i em maos.", PlayerInfo[playerid][pGold], GetPlayerMoney(playerid));
        SendClientMessage(playerid,-1,string);
        return 0x01;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if (strcmp(cmd, "/empregos", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828))
		{
			Controle(playerid, 0);
    		ShowPlayerDialog(playerid,2569,DIALOG_STYLE_LIST,"Empregos","Detetive\nAdvogado\nProfissional do sexo\nVendedor de Drogas\nMecanico\nSeguranca\nVendedor de Armas\nMotorista de Onibus\nCaminhoneiro","Aceitar","Cancelar");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/licencas", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 1491.0469,1306.2272,1093.2964))
		{
    		Controle(playerid, 0);
    		ShowPlayerDialog(playerid,2571,DIALOG_STYLE_LIST,"Licencas","Voo     R$800\nNavegacao     R$800\nPorte Armas     R$1200		 \nMotorista     R$1000","Ok","Cancelar");
    	}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/gps441", true) == 0)
	{
		Controle(playerid, 0);
    	ShowPlayerDialog(playerid,9001,DIALOG_STYLE_LIST,"GPS","Los Santos\nSan Fierro","Aceitar","Sair");
		return true;
	}

	if (strcmp(cmd, "/gps", true) == 0)
	{
		Controle(playerid, 0);
    	ShowPlayerDialog(playerid,9010,DIALOG_STYLE_LIST,"GPS Brasil Play Real","Locais Publicos\nEmpregos\nHQs\nEstacionamentos\n24/7","Clicar","Sair");
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/menucoins", true) == 0 || strcmp(cmd, "/menuvip", true) == 0 || strcmp(cmd, "/menucash", true) == 0)
	{
	    new DialogTheus[5000];
		Controle(playerid, 0);
		format(string,sizeof(string), "{FFFFFF}1 - {0000FF}Comprar Vip\n{FFFFFF}2 - {00BFFF}Comprar Dinheiro\n{FFFFFF}3 - {00FF00}Comprar Level\n\n\n\n{FFFF00}Coins: {00FF00}%d", PlayerInfo[playerid][pCoins]);
 		strcat(DialogTheus,string);
		ShowPlayerDialog(playerid,MenuCoins,DIALOG_STYLE_LIST,"Menu Coins",DialogTheus, "Proximo","Sair");
		return true;
	}
	
	if (strcmp(cmd, "/conce", true) == 0 || strcmp(cmd, "/concessionaria", true) == 0 || strcmp(cmd, "/conse", true) == 0)
	{
	    if(PlayerToPoint(5,playerid,553.1498,-1292.4086,17.2482))
   		{
			Controle(playerid, 0);
			ShowPlayerDialog(playerid,MenuConce,DIALOG_STYLE_LIST,"Concessionaria Brasil Play Real","Carros\nMotos", "Proximo","Sair");
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao esta na Concessionaria Vip!");
	
	    return true;
	}
	
	if(strcmp(cmd, "/pegarveiculo", true) == 0 || strcmp(cmd, "/garagem", true) == 0)
	{
	    if(PlayerToPoint(5.0,playerid,1541.4535,-1563.2844,13.7479) || PlayerToPoint(5.0,playerid,1225.1034,-1433.0675,13.7690)
 		|| PlayerToPoint(5.0,playerid,310.3948,-1799.8964,4.5043) || PlayerToPoint(5.0,playerid,1563.0857,-2323.9531,13.5531)
		|| PlayerToPoint(5.0,playerid,535.3613,-1274.7592,17.2422))
	    {
		    GetPlayerName(playerid, plname, sizeof(plname));

		    new text1[20];
	 		new text2[20];
			new text3[20];
			new text4[20];
	 		new DialogTheus[50];

	        if(PlayerInfo[playerid][pCar1] > 0) { text1 = "Veiculo 1"; } else { text1 = "Vazio"; }

	        format(string,sizeof(string), "%s\n", text1);
			strcat(DialogTheus,string);

	  		if(PlayerInfo[playerid][pCar2] > 0) { text2 = "Veiculo 2"; } else { text2 = "Vazio"; }

	  		format(string,sizeof(string), "%s\n", text2);
			strcat(DialogTheus,string);

	  		if(PlayerInfo[playerid][pCar3] > 0) { text3 = "Veiculo 3"; } else { text3 = "Vazio"; }

	  		format(string,sizeof(string), "%s\n", text3);
			strcat(DialogTheus,string);

	  		if(PlayerInfo[playerid][pCar4] > 0) { text4 = "Veiculo 4"; } else { text4 = "Vazio"; }

	  		format(string,sizeof(string), "%s\n", text4);
			strcat(DialogTheus,string);

	  		ShowPlayerDialog(playerid,MenuGaragem,DIALOG_STYLE_LIST,"Garagem",DialogTheus, "Pegar","Fechar");
		}
  		else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao esta em uma garagem!");
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/eMedicos", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    if(PlayerToPoint(2.0, playerid, 2041.6371,-1392.5150,48.3359))
			{
	    		SetPlayerPos(playerid, 2037.6494,-1404.6544,17.2538);
    		}
		    if(PlayerToPoint(2.0, playerid, 2037.6494,-1404.6544,17.2538))
		    {
		        SetPlayerPos(playerid, 2041.6371,-1392.5150,48.3359);
		    }
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/elevadortaxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
		{
		    if(PlayerToPoint(2.0, playerid, 1785.2893,-1704.9707,13.5217))
			{
	    		SetPlayerPos(playerid, 1794.7760,-1707.7697,27.6250);
    		}
		    if(PlayerToPoint(2.0, playerid, 1794.7760,-1707.7697,27.6250))
		    {
		        SetPlayerPos(playerid, 1785.2893,-1704.9707,13.5217);
		    }
		}
		return 1;
	}
//==============================================================================
	if (strcmp(cmd, "/elevadorfa", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
		    if(PlayerToPoint(2.0, playerid, -1563.8582,400.6823,7.1875))
			{
	    		SetPlayerPos(playerid, -1538.3254,397.8237,28.1746);
    		}
		    if(PlayerToPoint(2.0, playerid, -1538.3254,397.8237,28.1746))
		    {
		        SetPlayerPos(playerid, -1563.8582,400.6823,7.1875);
		    }
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/egroove", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
		{
		    if(PlayerToPoint(2.0, playerid, 2522.9346,-1679.4137,15.4970))
			{
	    		SetPlayerPos(playerid, 2524.4297,-1681.8153,19.9302);
    		}
		    if(PlayerToPoint(2.0, playerid, 2524.4297,-1681.8153,19.9302))
		    {
		        SetPlayerPos(playerid, 2522.9346,-1679.4137,15.4970);
		    }
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/voar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!");
					return true;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao e admin !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/verrg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /verrg [id]");
					return true;
				}
			    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador nao esta ativo!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao e admin !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/agenda", true) == 0 || strcmp(cmd, "/telefone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /agenda [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string, 128, "Nick: %s ~ Numero: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ID Invalido !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Voce nao tem uma agenda! digite /gps 24-7 !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/resetarmelhorias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta logado !");
				return true;
			}
			if (GetPlayerMoney(playerid) < 100)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   O reset custa R$100 !");
				return true;
			}
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce deve ter no minimo niivel 2 !");
				return true;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GivePlayerMoney(playerid,-100);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 128, "   Voce tem %d pontos de melhoria !",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/comprararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem todo esse dinheiro!!");
			    return true;
			}
			new gun;
			new gunid[16];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100 || location == 102)
			{
				new mod = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Armas ]______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprararma [arma] [municao]");
					format(gstring, 128, "Armas: parachute (R$%d) golfclub (R$%d) nightstick (R$%d) baseballbat (R$%d) shovel (R$%d) poolcue (R$%d)",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: purpledildo (R$%d) whitedildo (R$%d) longwhitedildo (R$%d) whitedildo2 (R$%d) flowers (R$%d) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: eagle (R$%d) pistola (R$%d) mp5 (R$%d)",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: shotgun (R$%d) ak47 (R$%d) m4 (R$%d) rifle (R$%d)",
					GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: pistolammo (R$%d) shotgunammo (R$%d) smgammo (R$%d) assaultammo (R$%d) rifleammo (R$%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return true;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /comprararma [arma] [municao]");
					return true;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Municao tem que ser entre 1 e 999 !"); return true; }
				if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "Vendedor: Nunca ouvi falar dessa arma.");
					return true;
				}
				if((guncharge+ammocharge) > GetPlayerMoney(playerid))
				{
					format(gstring, 128, "   Voce nao tem R$%d para pagar !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return true;
				}
				new payout = guncharge + ammocharge;
				format(gstring, 128, "Voce comprou um(a) %s com %d bala(s) por R$%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, gstring);
				if(location == 102 && location == 99 && location == 102 && IsACop(playerid)) { }
				else { GivePlayerMoney(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeapon(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
				printf("%s", gstring);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"Voce nao esta em uma loja de armas.");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/melhorar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(gstring, sizeof(gstring), "USE: /melhorar [pontos] (Voce tem %d pontos de melhora)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_WHITE, "|______________[ UPGRADES ]______________|");
				SendClientMessage(playerid, COLOR_GRAD2,gstring);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nivel 2 Melhorias: Alcool, Drogas");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nivel 3 Melhorias: Alcool, Drogas, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nivel 4 Melhorias: Alcool, Drogas, Avareza, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nivel 5 Melhorias: Alcool, Drogas, Avareza, Comercio, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Extra: Vida");
				return true;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] >= 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "Vida", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(gstring, 128, "Atualizacao: voce vai nascer com %.2f de vida (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Voce ja esta no maximo de vida");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Alcool", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(gstring, 128, "Nova Atualizacao: Agora seu nivel de alcool e %d.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nivel de alcool ja esta no maximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Drogas", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(gstring, 128, "Nova Atualizacao: Agora seu nivel de drogas e %d.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nivel de drogas ja esta no maximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "Avareza", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(gstring, 128, "Nova Atualizacao: Agora sua avareza e nivel %d.",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualizacao de Avareza esta no maximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "Comercio", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(gstring, 128, "Nova Atualizacao: Agora seu Comercio e nivel %d.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualizacao de comercio esta no maximo !");
						return true;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(gstring, 128, "Nova Atualizacao: Seu nivel de Pain Killers agora e %d.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualizacao de Pain Killers ja esta no maximo !");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Atualizacao desconhecida");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Voce tem 0 Pontos de Melhoria");
				return true;
			}
			SendClientMessage(playerid, COLOR_GRAD6, gstring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if (strcmp(cmd, "/logar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
	        new tmppass[64];
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Voce ja esta logado.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /logar [Senha]");
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Fazendo Seu Login", "Conta registrada, agora voce pode logar\n\nbasta apenas digitar sua senha.\n\nDigite sua senha corretamente!", "Logar", "Esperar");
				return true;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/registrar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Voce ja esta logado.");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 64, "Contas/%s.ini", sendername);
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "O Nick que voce esta usando ja existe, use outro por favor.");
				fclose(hFile);
 				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Fazendo Seu registro", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nPara se registrar digite uma senha!\nLembrando seu nome deve ser um nome RP!", "Registrar", "Cancelar");
				return true;
			}
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
 				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Fazendo Seu registro", "{FFFFFF}Brasil {0000FF}Play {FFFFFF}Real\nPara se registrar digite uma senha!\nLembrando seu nome deve ser um nome RP!", "Registrar", "Cancelar");
				return true;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd,"/mudarsenha",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	 	{
	 	    if(gPlayerLogged[playerid] == 0)
	        {
	           	SendClientMessage(playerid,CINZA,"Voce nao esta logado !");
	           	return true;
      		}
	 		if(MudarSenhaAceito[playerid] == 0)
	     	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce precisa pedir permissao para um admin mudar seu nick, use /relatorio");
	     		return true;
	     	}
	        if(gPlayerLogged[playerid] == 0)
	        {
	           	SendClientMessage(playerid,CINZA,"Voce nao esta logado !");
	           	return true;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"Contas/%s.ini",sendername);
	        new tmppass[64];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,CINZA1,"Use: /mudarsenha [Nova Senha]");
				SendClientMessage(playerid,CINZA1,"Guarde a senha ou tire SS da tela apertando F8 para nao esquecer!");
				return true;
			}
			strmid(tmppass,tmp,0,strlen(cmdtext),255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
			return true;
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/amudarsenha",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /amudarsenha [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			GetPlayerName(playerid, sendername, 256);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        MudarSenhaAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
		         		format(string, sizeof(string), "Admin %s: Autorizou voce a mudar a Senha, digite /mudarsenha.", sendername);
		        		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/anvip", true) == 0 || strcmp(cmd, "/anunciovip", true) == 0)
    {
        if(PlayerInfo[playerid][pVIP] >= 1)
        {
	        	if(PlayerInfo[playerid][pJailed] != 0)
		    	{
					SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!!");
		      		return true;
		    	}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[100];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GREEN, "USE: /anvip [Texto do Anuncio]");
					return true;
				}
				format(string, sizeof(string), "Anuncio vip: %s |Contato: %s", result, sendername, PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(0xAA3333AA,string);
				printf("[/bp]%s: %s", sendername, result);
				return true;
		}
		else
		{
  			SendClientMessage(playerid,COLOR_YELLOW," Voce e um jogandor vip!!");
			return true;
		}
    }

	if(strcmp(cmd, "/anuncio", true) == 0 || strcmp(cmd, "/an", true) == 0)
	{
        if(gPlayerLogged[playerid] == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta logado!");
            return 1;
        }
        if(PlayerInfo[playerid][pConnectTime] < 2)
        {
            SendClientMessage(playerid,COLOR_GRAD2,"Apos 2 horas jogadas, voce podera mandar anincios.");
            return true;
        }
        
        GetPlayerName(playerid, sendername, sizeof(sendername));
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' '))
        {
            idx++;
        }
        new offset = idx;
        new result[126];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
        {
            result[idx - offset] = cmdtext[idx];
            idx++;
        }
        result[idx - offset] = EOS;
        if(!strlen(result))
        {
            SendClientMessage(playerid, COLOR_GRAD2, "USE: (/an)uncio [Texto do Anuncio]");
            return 1;
        }
        new payout = idx * 10;
        if(GetPlayerMoneyEx(playerid) < payout)
        {
            format(string, sizeof(string), "* Voce usou %d caracteres que custou $%d, voce nao possui essa grana.", offset, payout);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            return 1;
        }
        if(GetTickCount() - FloodAn[playerid] < 80000)
        {
            format(string, sizeof(string), "   Espere %d segundos para um novo anuncio!",80-(GetTickCount() - FloodAn[playerid])/1000);
            SendClientMessage(playerid, COLOR_GRAD2, string);
            return 1;
        }
        if(IsPlayerInLosSantos(playerid)|| IsPlayerInSanFierro(playerid))
        {
        	if(IsPlayerInLosSantos(playerid))
           	{
            	format(string, sizeof(string), "Anuncio LS: %s, Contato: %s Tel: %d",  result, sendername,PlayerInfo[playerid][pPnumber]);
    	        GivePlayerMoneyEx(playerid, - payout);
        		SBizzInfo[7][sbTill] += payout;
        		ExtortionSBiz(7, payout);
        		OOCNews(TEAM_GROVE_COLOR,string);
        		format(string, sizeof(string), "~r~Pagou $%d~n~~w~Mensagem continha: %d Caracteres", payout, idx);
        		GameTextForPlayer(playerid, string, 5000, 5);
        		FloodAn[playerid] = GetTickCount();

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653939399163926");
				new str[128];
				new player[128];
				new organ[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Anuncio");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Novo anuncio in game");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", result);
				DCC_AddEmbedField(embed, "Anuncio:", organ, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logAn, embed);
			}
			if(IsPlayerInSanFierro(playerid))
           	{
           		format(string, sizeof(string), "Anuncio SF: %s, Contato: %s Tel: %d",  result, sendername,PlayerInfo[playerid][pPnumber]);
   		        GivePlayerMoneyEx(playerid, - payout);
        		SBizzInfo[7][sbTill] += payout;
        		ExtortionSBiz(7, payout);
        		OOCNews(TEAM_GROVE_COLOR,string);
        		format(string, sizeof(string), "~r~Pagou $%d~n~~w~Mensagem continha: %d Caracteres", payout, idx);
        		GameTextForPlayer(playerid, string, 5000, 5);
        		FloodAn[playerid] = GetTickCount();

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653939399163926");
				new str[128];
				new player[128];
				new organ[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Log Anuncio");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Novo anuncio in game");
				DCC_SetEmbedDescription(embed, str);
				format(player, sizeof player, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Player:", player, false);
				format(organ, sizeof organ, "`%s`", result);
				DCC_AddEmbedField(embed, "Anuncio:", organ, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logAn, embed);

			}
    	}
    	return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/governo", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando!");
				    return true;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[126];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/gov)erno [texto]");
					return true;
				}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	            if(org != 4 ||org != 27)
	            {
					SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio Do Governo ______________|");
					format(string, sizeof(string), "%s - %s: %s", NomeORG(playerid), sendername, result);
					SendClientMessageToAll(COLOR_DBLUE, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else
				{
					SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio Da Medicos ______________|");
					format(string, sizeof(string), "Medico %s: %s", sendername, result);
					SendClientMessageToAll(COLOR_DBLUE, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(78, 30);
				}
				print(string);
			}
			else
			{
			SendClientMessageToAll(COLOR_WHITE, "Voce nao pode usar esse comando!!");
   			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/ang", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode se comunicar na cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
            if(IsABandido(playerid))
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando");
				    return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[126];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /ang [texto]");
					return true;
				}
				SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio de organizacao ______________|");
				format(string, sizeof(string), "%s - %s: %s", NomeORG(playerid), sendername, result);
				SendClientMessageToAll(COLOR_RED, string);
				SBizzInfo[7][sbTill] += 30;
				print(string);
			    ExtortionSBiz(7, 30);
			}
			else
			{
			SendClientMessageToAll(COLOR_WHITE, "Voce nao pode usar esse comando!!");
   			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/prefeito", true) == 0 || strcmp(cmd, "/pre", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode se comunicar na cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 7  || IsAGOV(playerid) || IsAGOVSF(playerid))
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando");
				    return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[126];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/pre)feito [texto]");
					return true;
				}
				SendClientMessageToAll(COLOR_WHITE, "|______________ Anuncio da Prefeitura ______________|");
				format(string, sizeof(string), "Governo %s: %s", sendername, result);
				SendClientMessageToAll(COR_PRE, string);
				SBizzInfo[7][sbTill] += 30;
				print(string);
			    ExtortionSBiz(7, 30);
			}
			else
			{
			SendClientMessageToAll(COLOR_WHITE, "Voce nao pode usar esse comando!!");
   			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/desativar", true) == 0)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD3, "    Voce nao fez o login");
			return true;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponiveis: org, noticias, celular");
			return true;
		}
	    if(strcmp(tmp, "noticias", true) == 0)
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de noticias desativado !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de noticias ativado !");
			}
		}
	    if(strcmp(tmp, "org", true) == 0)
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organizacao desativado !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organizacao ativado !");
			}
		}
	    else if(strcmp(tmp, "celular", true) == 0)
	    {
	        if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce desligou seu celular (nao recebera ligacoes nem SMS) !");
					CellTime[playerid] = 0;
					Mobile[playerid] = 255;
					new pSpecialAction = GetPlayerSpecialAction(playerid);
					if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
					{
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce ligou seu celular !");
				}
			}
		}
		else
		{
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponiveis: org, noticias, celular");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/eu", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta logado !");
	            return true;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /eu [action]");
				return true;
			}
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
			    format(string, sizeof(string), "* Mascara %s", result);
			}
			else
			{
				format(string, sizeof(string), "* %s %s", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/sussurro", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode sussurrar da cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao logou ainda !");
	            return true;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /(s)ussurro [Para falar pra quem esta perto]");
				return true;
			}
			format(string, sizeof(string), "%s Sussurra: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd,"/gritar",true) == 0 || strcmp(cmd,"/g",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode gritar na cadeia!");
		   return true;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid,CINZA,"Voce nao esta logado/registrado!");
	            return true;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,CINZA2,"Use: (/G)ritar [Texto]");
				return true;
			}
			format(string,sizeof(string),"%s Grita: %s!!!",sendername,result);
			ProxDetector(30.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			printf("%s",string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/megafone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/m)egafone [megaphone chat]");
				return true;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 1||PlayerInfo[playerid][pLider] == 1)
				{
					format(string, sizeof(string), "Policial Militar LS %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 34||PlayerInfo[playerid][pLider] == 34)
				{
					format(string, sizeof(string), "Policial Militar SF %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "BOPE %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 35||PlayerInfo[playerid][pLider] == 35)
				{
					format(string, sizeof(string), "Forca Tatica%s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 3||PlayerInfo[playerid][pLider] == 3)
				{
				    format(string, sizeof(string), "Forcas Armadas %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(IsAGOV(playerid) || IsAGOVSF(playerid))
				{
				    format(string, sizeof(string), "Governo %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 16||PlayerInfo[playerid][pLider] == 16)
				{
				    format(string, sizeof(string), "Policia Civil %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 11||PlayerInfo[playerid][pLider] == 11)
				{
				    format(string, sizeof(string), "Policia Federal %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao faz parte de nenhuma equipe !");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/abordagem", true) == 0 || strcmp(cmd, "/ab", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 1||PlayerInfo[playerid][pLider] == 1)
				{
					format(string, sizeof(string), "Policia Militar: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
					ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				if(PlayerInfo[playerid][pMembro] == 34||PlayerInfo[playerid][pLider] == 34)
				{
					format(string, sizeof(string), "Policia Rodoviaria: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
					ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				else if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "BOPE: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
					ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				else if(PlayerInfo[playerid][pMembro] == 35||PlayerInfo[playerid][pLider] == 35)
				{
					format(string, sizeof(string), "Forca Tatica: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
					ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				else if(PlayerInfo[playerid][pMembro] == 3||PlayerInfo[playerid][pLider] == 3)
				{
				    format(string, sizeof(string), "Forcas Armadas: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
				    ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				else if(PlayerInfo[playerid][pMembro] == 16||PlayerInfo[playerid][pLider] == 16)
				{
				    format(string, sizeof(string), "Policia Civil: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
				    ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				else if(PlayerInfo[playerid][pMembro] == 11||PlayerInfo[playerid][pLider] == 11)
				{
				    format(string, sizeof(string), "Policia Federal: ESCOSTA E COLOQUE AS MAOS PARA CIMA!!!", sendername);
				    ProxDetector(60.0, playerid, string,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR,TEAM_CYAN_COLOR);
				}
				printf(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Voce nao e um policial!");
				return true;
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/assalto", true) == 0 || strcmp(cmd, "/as", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsABandido(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "Voce nao e um bandido!");
			    return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			if(IsABandido(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 5||PlayerInfo[playerid][pLider] == 5)
				{
					format(string, sizeof(string), "Tropa da Turquia: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 6||PlayerInfo[playerid][pLider] == 6)
				{
					format(string, sizeof(string), "Peaky Blinders: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 8||PlayerInfo[playerid][pLider] == 8)
				{
					format(string, sizeof(string), "Hitmans: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 12||PlayerInfo[playerid][pLider] == 12)
				{
					format(string, sizeof(string), "Mafia Cosa Nostra: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 13||PlayerInfo[playerid][pLider] == 13)
				{
					format(string, sizeof(string), "Familia Shelby: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 14||PlayerInfo[playerid][pLider] == 14)
				{
					format(string, sizeof(string), "Groove Street: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 15||PlayerInfo[playerid][pLider] == 15)
				{
					format(string, sizeof(string), "FARC: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 17||PlayerInfo[playerid][pLider] == 17)
				{
					format(string, sizeof(string), "Ballas: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 18||PlayerInfo[playerid][pLider] == 18)
				{
					format(string, sizeof(string), "Vagos: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 19||PlayerInfo[playerid][pLider] == 19)
				{
					format(string, sizeof(string), "Comando Vermelho: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 20||PlayerInfo[playerid][pLider] == 20)
				{
					format(string, sizeof(string), "Sons of Anarchy: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 21||PlayerInfo[playerid][pLider] == 21)
				{
					format(string, sizeof(string), "Elements: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 22||PlayerInfo[playerid][pLider] == 22)
				{
					format(string, sizeof(string), "Triads: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 23||PlayerInfo[playerid][pLider] == 23)
				{
					format(string, sizeof(string), "Primeiro Comando Capital: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 24||PlayerInfo[playerid][pLider] == 24)
				{
					format(string, sizeof(string), "Bonde dos 40: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 25||PlayerInfo[playerid][pLider] == 25)
				{
					format(string, sizeof(string), "Familia do Norte: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 26||PlayerInfo[playerid][pLider] == 26)
				{
					format(string, sizeof(string), "Terceiro Comando Puro: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 28||PlayerInfo[playerid][pLider] == 28)
				{
					format(string, sizeof(string), "Grota: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 29||PlayerInfo[playerid][pLider] == 29)
				{
					format(string, sizeof(string), "Amigos dos Amigos: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				if(PlayerInfo[playerid][pMembro] == 31||PlayerInfo[playerid][pLider] == 31)
				{
					format(string, sizeof(string), "Milicia: ENCOSTE AGORA, ISSO E UM ASSALTO!!!", sendername);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				
				printf(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao faz parte de nenhuma equipe !");
				return true;
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_R, "USE: (/r)adio [radio chat]");
				return true;
			}
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(1,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(34,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Vereador %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguranca %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Motorista %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(7,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Vereador %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguranca %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Motorista %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(30,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Cabo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** 1 Soldado %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** 2 Soldado %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Recruta %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(2,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Tenente %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Cabo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Soldado %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Recruta %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Recruta %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(2,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** General %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Tenente Coronel %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Major %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Sargento %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Soldado %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Soldado %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(3,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor Hospitalar %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Diretor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medico Profissional %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medico %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Enfermeiro %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(4,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor Hospitalar %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Diretor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medico Profissional %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medico %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Enfermeiro %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(27,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro]== 16 || PlayerInfo[playerid][pLider]== 16)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Delegado %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Inspetor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Escrivao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Datiloscopistas %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Agente %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Aluno %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Novato %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(16,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro]== 11 || PlayerInfo[playerid][pLider]== 11)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capitao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Atirador %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Espiao %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Agente %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Agente %s: %s, cambio. **", sendername, result);
				}
				SendFamilyMessage(11,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no radio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e de nenhuma equipe !");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmd,"/equipamentos",true))
	{
 		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
		PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
		PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
		PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
    	PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
		PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
    	{
        	if(Equipamentos[playerid] == 1)
        	{
            	RemovePlayerAttachedObject(playerid,1);
				RemovePlayerAttachedObject(playerid,2);
				RemovePlayerAttachedObject(playerid,3);
            	Equipamentos[playerid] = 0;
            	return true;
        	}
        	if(Equipamentos[playerid] == 0)
        	{
            	SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
            	SetPlayerAttachedObject(playerid,1,19142,1,0.1,0.05,0.0,0.0,0.0,0.0);
            	SetPlayerAttachedObject(playerid,2,19200,2,0.11,0.0,0.0,0.0,0.0,0.0);
            	SendClientMessage(playerid,COR_PM,"Voce pegou seus Equipamentos !");
            	Equipamentos[playerid] = 1;
            	return true;
        	}
    	}
    	else
    	{
        	SendClientMessage(playerid,COLOR_WHITE,"Voce nao e um COP.");
    	}
    	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/batercartao", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 4||PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 27||PlayerInfo[playerid][pLider] == 27)
            {
                if(PlayerToPoint(1,playerid,326.6374,307.1123,999.1484) || PlayerToPoint(1,playerid,302.7936,-1529.9443,24.9219) || PlayerToPoint(1,playerid,240.6516,112.8062,1003.2188) || PlayerToPoint(1,playerid,255.1123,77.4241,1003.6406) || PlayerToPoint(1,playerid,229.8059,164.7830,1003.0234)
			 	|| PlayerToPoint(1,playerid,-1553.6349,410.1176,7.3699) || PlayerToPoint(1,playerid,712.7550,-554.5677,-3.5950))
                if(EmpregoDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voce Esta De Folga, e nao recebera chamados!");
                    EmpregoDuty[playerid] = 0;
                    Medics -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voce esta de plantao com o seu trabalho e ira receber chamadas de pessoas que precisam.");
                    EmpregoDuty[playerid] = 1;
                    format(string, sizeof(string), "Medico %s esta em servico, /servico medico.", sendername);
                    OOCNews(0x2993EDAA,string);
                    Medics += 1;
                }
            }
            else if(PlayerInfo[playerid][pEmprego] == 5)
            {
                if(EmpregoDuty[playerid] == 1)
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voce Esta De Folga, e nao recebera chamados!");
                    EmpregoDuty[playerid] = 0;
                    Mechanics -= 1;
                }
                else
                {
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voce esta de plantao como mecanico e ira receber chamadas de pessoas que precisam.");
                    EmpregoDuty[playerid] = 1;
                    format(string, sizeof(string), "[Anuncio] O Mecanico %s esta em servico, /servico mecanico.", sendername);
                    OOCNews(0x2993EDAA,string);
                    Mechanics += 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao e Um Oficial/Medico/Mecanico !");
            }
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/fardapf", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,229.6736,164.7480,1003.0234))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,286);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
    //---------------------
    if(strcmp(cmd, "/fardapm", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,255.1924,77.5279,1003.6406))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,281);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
    //---------------------
    if(strcmp(cmd, "/fardapc", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,918.8886,-1257.7316,15.6641))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,282);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
//---------------------
    if(strcmp(cmd, "/fardabope", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,302.6426,-1530.1610,24.9219))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,285);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
//---------------------
    if(strcmp(cmd, "/fardafa", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,-1553.5636,410.0868,7.3742))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,287);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
    //---------------------
    if(strcmp(cmd, "/fardaft", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,240.6302,112.5663,1003.2188))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,280);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
    //----------------------------
    if(strcmp(cmd, "/rocam", true) == 0)
    {
        if(PlayerInfo[playerid][pJailed] != 0)
        {
            SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode batercartao na cadeia!");
            return 1;
        }
        if(IsPlayerConnected(playerid))
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(IsACop(playerid))
            {
            	if(PlayerToPoint(1,playerid,923.1970,-1191.6493,16.9766) || PlayerToPoint(1,playerid,1565.0715,-1634.6024,13.5551)
			 	|| PlayerToPoint(1,playerid,311.8593,-1511.3285,24.9219) || PlayerToPoint(1,playerid,-1716.2454,1018.5618,17.5859))
				{
                    if(OnDuty[playerid]==0)
                    {
                        format(string, sizeof(string), "Oficial %s bateu o cartao Rocam e esta em servico, digite /servico policia.", sendername);
                        OOCNews(COLOR_LIGHTRED,string);
                        SetPlayerArmour(playerid, 100);
                        SetPlayerHealth(playerid, 100);
                        skinadm[playerid] = GetPlayerSkin(playerid);
						SetPlayerSkin(playerid,284);
                        OnDuty[playerid] = 1;
                        EmpregoDuty[playerid] = 2;
                        Copsronda += 1;
                    }
                    else if(OnDuty[playerid]==1)
                    {
                        format(string, sizeof(string), "Oficial %s esta de folga e nao vai mais receber seus chamados.", sendername);
                        OOCNews(COLOR_DBLUE,string);
                        SetPlayerSkin(playerid,skinadm[playerid]);
                        OnDuty[playerid] = 0;
                        EmpregoDuty[playerid] = 0;
                        Copsronda -= 1;
                    }
                }
			}
        }
        return 1;
    }
    //-----------------------------------------------------------------------------------
    
    if (strcmp(cmd, "/menugov", true) == 0)
	{
	    if(IsAGOV(playerid))
	    {
   			if(PlayerToPoint(1,playerid,1509.6018,-1849.7678,13.5469))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuGOV,DIALOG_STYLE_LIST,"Veiculos do Governo","Sultan\nLimousine\nNRG","Pegar","Sair");
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/menugovsf", true) == 0)
	{
	    if(IsAGOVSF(playerid))
		{
		    if(PlayerToPoint(1,playerid,-2764.9688,379.0204,6.3375))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuGOVSF,DIALOG_STYLE_LIST,"Veiculos do Governo","Sultan\nLimousine\nNRG","Pegar","Sair");
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/menupm", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 1)
	    {
   			if(PlayerToPoint(1,playerid,1532.4894,-1681.5950,5.8906))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuPM,DIALOG_STYLE_LIST,"Veiculos da Policia Militar", "Police Car\nPolice Ranger\nHPV1000\nFBI Rancher\nEnforcer\nFBI Truck", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menumcn", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12)
	    {
   			if(PlayerToPoint(1,playerid,282.5849,-1163.2761,80.9141))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuMCN,DIALOG_STYLE_LIST,"Veiculos da Mafia Cosa Nostra", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menuvagos", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 18)
	    {
   			if(PlayerToPoint(1,playerid,2806.4182,-1183.8268,25.4097))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuVagos,DIALOG_STYLE_LIST,"Veiculos dos Vagos", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menucv", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 19)
	    {
   			if(PlayerToPoint(1,playerid,2157.9736,-1800.8035,13.3718))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuCV,DIALOG_STYLE_LIST,"Veiculos do Comando Vermelho", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menusoa", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 20)
	    {
   			if(PlayerToPoint(1,playerid,709.2042,-458.0265,16.3359))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuSOA,DIALOG_STYLE_LIST,"Veiculos do Sons Of Anarchy", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menuelements", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
	    {
   			if(PlayerToPoint(1,playerid,2795.2830,-1588.8105,10.9270))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuElements,DIALOG_STYLE_LIST,"Veiculos do Elements", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menutriads", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 22)
	    {
   			if(PlayerToPoint(1,playerid,-1699.1467,1332.3953,7.1791))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuTriads,DIALOG_STYLE_LIST,"Veiculos da Triad", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menupcc", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 23)
	    {
   			if(PlayerToPoint(1,playerid,1309.8995,-856.0664,39.5781))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuPCC,DIALOG_STYLE_LIST,"Veiculos do Primeiro Comando da Capital", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menugrota", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 28)
	    {
   			if(PlayerToPoint(1,playerid,-2515.5208,1209.7000,37.4219))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuGrota,DIALOG_STYLE_LIST,"Veiculos da Grota", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menugroove", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 14)
	    {
   			if(PlayerToPoint(1,playerid,2462.7847,-1700.2332,13.5188))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuGroove,DIALOG_STYLE_LIST,"Veiculos da Groove", "Landstalker\nBurrito\nFCR-900", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menubope", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 2)
	    {
   			if(PlayerToPoint(1,playerid,300.9082,-1492.3870,24.5938))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuBOPE,DIALOG_STYLE_LIST,"Veiculos do BOPE", "Police Car\nPolice Ranger\nHPV1000\nFBI Rancher\nEnforcer\nFBI Truck", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menufa", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 3 || PlayerInfo[playerid][pMembro] == 3)
	    {
   			if(PlayerToPoint(1,playerid,-1533.7620,422.3723,7.1875))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuEB,DIALOG_STYLE_LIST,"Veiculos das Forcas Armadas", "Patriot\nCOP Car\nHPV1000", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menulsnews", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 9)
	    {
   			if(PlayerToPoint(1,playerid,741.7016,-1334.9618,13.5394))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuLSNews,DIALOG_STYLE_LIST,"Veiculos da Los Santos News", "Van\nSultan\nPCJ-600", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menupf", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 11)
	    {
   			if(PlayerToPoint(1,playerid,-2442.6738,526.4616,29.9201))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuPF,DIALOG_STYLE_LIST,"Veiculos da Policia Federal", "Police Car\nPolice Ranger\nHPV1000\nFBI Rancher\nEnforcer\nFBI Truck", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menupc", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 16)
	    {
   			if(PlayerToPoint(1,playerid,900.5388,-1257.6967,14.9560))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuPC,DIALOG_STYLE_LIST,"Veiculos da Policia Civil", "Police Car\nPolice Ranger\nHPV1000\nFBI Rancher\nEnforcer\nFBI Truck", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menutaxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 10)
	    {
   			if(PlayerToPoint(1,playerid,1793.0687,-1704.5559,13.5281))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuTaxi,DIALOG_STYLE_LIST,"Veiculos dos Taxistas", "Taxi\nMoto", "Pegar","Sair");
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/menumedicos", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 4)
	    {
   			if(PlayerToPoint(1,playerid,2038.3962,-1411.6052,17.1641))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuMEDICOS,DIALOG_STYLE_LIST,"Veiculos dos Medicos", "Ambulancia\nMoto\nHelicoptero\n", "Pegar","Sair");
			}
		}
		return true;
	}

	if (strcmp(cmd, "/menumedicossf", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 27)
	    {
   			if(PlayerToPoint(1,playerid,-2660.8481,632.0801,14.4531))
			{
				Controle(playerid, 0);
   				ShowPlayerDialog(playerid,MenuMEDICOSSF,DIALOG_STYLE_LIST,"Veiculos dos Medicos", "Ambulancia\nMoto\nHelicoptero\n", "Pegar","Sair");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/setarmat", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1341)
		{
			CofreOrg[5][Materiais] = CofreOrg[5][Materiais]+2000; // Tropa da Turquia
			CofreOrg[31][Materiais] = CofreOrg[5][Materiais]+2000; // Tropa da Turquia
			CofreOrg[5][Maconha] = CofreOrg[5][Maconha]+2000; // Tropa da Turquia
			CofreOrg[31][Maconha] = CofreOrg[5][Maconha]+2000; // Tropa da Turquia
			CofreOrg[14][Materiais] = CofreOrg[14][Materiais]+2000; //groove
			CofreOrg[24][Materiais] = CofreOrg[24][Materiais]+2000; //groove
			CofreOrg[14][Maconha] = CofreOrg[14][Maconha]+2000; //groove
			CofreOrg[24][Maconha] = CofreOrg[24][Maconha]+2000; //groove
			CofreOrg[17][Materiais] = CofreOrg[17][Materiais]+2000; // ballas
			CofreOrg[29][Materiais] = CofreOrg[29][Materiais]+2000; // ballas
			CofreOrg[17][Maconha] = CofreOrg[17][Maconha]+2000; // ballas
			CofreOrg[29][Maconha] = CofreOrg[29][Maconha]+2000; // ballas
			CofreOrg[18][Materiais] = CofreOrg[18][Materiais]+2000; // vagos
			CofreOrg[18][Materiais] = CofreOrg[25][Materiais]+2000; // vagos
			CofreOrg[18][Maconha] = CofreOrg[18][Maconha]+2000; // vagos
			CofreOrg[25][Maconha] = CofreOrg[25][Maconha]+2000; // vagos
			CofreOrg[19][Materiais] = CofreOrg[19][Materiais]+2000; // Comando Vermelho
			CofreOrg[28][Materiais] = CofreOrg[28][Materiais]+2000; // Comando Vermelho
			CofreOrg[19][Maconha] = CofreOrg[19][Maconha]+2000; // Comando Vermelho
			CofreOrg[28][Maconha] = CofreOrg[28][Maconha]+2000; // Comando Vermelho
			CofreOrg[20][Materiais] = CofreOrg[20][Materiais]+2000; // sons
			CofreOrg[21][Materiais] = CofreOrg[21][Materiais]+2000; // Elements
			CofreOrg[20][Maconha] = CofreOrg[20][Maconha]+2000; // sons
			CofreOrg[21][Maconha] = CofreOrg[21][Maconha]+2000; // Elements
			CofreOrg[23][Materiais] = CofreOrg[23][Materiais]+2000; // PCC
			CofreOrg[26][Materiais] = CofreOrg[26][Materiais]+2000; // PCC
			CofreOrg[23][Maconha] = CofreOrg[23][Maconha]+2000; // PCC
			CofreOrg[26][Maconha] = CofreOrg[26][Maconha]+2000; // PCC
			SendClientMessage(playerid, COLOR_WHITE,"Materiais setados para todas as gang's.");
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/abastecerhq", true) == 0)
	{
		new org = GetPlayerOrg(playerid);
    	if(org != 12 && org != 13)
    	{
   			SendClientMessage(playerid,COLOR_GREY," Voce nao e um mafioso!");
   			return true;
    	}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "USE: /abastecerhq [materiais]");
			return true;
		}
		if(PlayerInfo[playerid][pMats] < 1000)
	    {
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem materiais suficientes para abastecer a HQ.");
				return true;
	    }
    	new ammount = strval(tmp);
    	new price;
    	if(PlayerToPoint(3, playerid, 2811.7102,-1166.1824,1025.5703))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Tropa da Turquia com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[5][Materiais] = CofreOrg[5][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -2323.5017,-158.8510,35.5547))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Milicia com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[31][Materiais] = CofreOrg[31][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 2465.0017,-1680.2899,13.5217))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Groove com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[14][Materiais] = CofreOrg[14][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -2458.0613,785.0059,35.1719))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Bonde dos 40 com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[24][Materiais] = CofreOrg[24][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 1074.7671,-1204.1219,18.1446))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Ballas com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[17][Materiais] = CofreOrg[17][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -2354.0254,996.4910,50.8984))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Terceiro Comando Puro com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[26][Materiais] = CofreOrg[26][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 1304.8378,-866.4293,39.5781))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Primeiro Comando Capital com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[23][Materiais] = CofreOrg[23][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 296.2728,1489.4459,1080.2578))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Vagos  com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[18][Materiais] = CofreOrg[18][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -1827.8589,100.6187,15.1172))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Tropa do Egitocom %d materiais por R$%d!", ammount, price);
    	    CofreOrg[25][Materiais] = CofreOrg[25][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 2151.3218,-1789.1669,13.5097))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Comando Vermelho com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[19][Materiais] = CofreOrg[19][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
            PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -2456.1233,126.3469,35.1719))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Tropa da MDLcom %d materiais por R$%d!", ammount, price);
    	    CofreOrg[29][Materiais] = CofreOrg[29][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
            PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, -2543.3452,1216.0988,37.4219))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Tropa da Turquiacom %d materiais por R$%d!", ammount, price);
    	    CofreOrg[28][Materiais] = CofreOrg[28][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
            PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 681.3650,-445.1725,16.3359))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Sons of Anarchy com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[20][Materiais] = CofreOrg[20][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
    	if(PlayerToPoint(3, playerid, 2768.6760,-1626.2833,10.9272))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Elements com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[21][Materiais] = CofreOrg[21][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
   		if(PlayerToPoint(3, playerid, 1304.8378,-866.4293,39.5781))
    	{
    	    price = ammount*10;
    	    format(string, 128, " Voce abasteceu a HQ Elements com %d materiais por R$%d!", ammount, price);
    	    CofreOrg[21][Materiais] = CofreOrg[21][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			PlayerInfo[playerid][pMats] -= ammount;
   			return true;
    	}
	    return true;
	}
//==============================================================================
	if(strcmp(cmd, "/fodak", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] >= 1)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] >= 1)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] >= 1)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] >= 1)
            {
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/fodak2", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] >= 2)
            {
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/fodak3", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] >= 3)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] >= 3)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] >= 3)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] >= 3)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] >= 3)
            {
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/fodak4", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] >= 4)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] >= 4)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] >= 4)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] >= 4)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] >= 4)
			{
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/fodak5", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] == 444 || PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] == 444 || PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] == 444 || PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] == 444 || PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] == 444 || PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/fodak6", true) == 0)
    {
        GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
        PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
        PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
        PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
        PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
        PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
        PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
        {
            if(PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Policial %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 190);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 29, 450);
                GivePlayerWeapon(playerid, 31, 550);
                GivePlayerWeapon(playerid, 17, 30);
                GivePlayerWeapon(playerid, 41, 9999);
                GivePlayerWeapon(playerid, 3, 0);
            }
        }
        if(PlayerInfo[playerid][pLider] == 7 || PlayerInfo[playerid][pLider] == 30 || PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pMembro] == 30)
        {
            if(PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Servidor Publico %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                ResetPlayerWeaponsEx(playerid);
                SetPlayerArmour(playerid, 100.0);
                SetPlayerHealth(playerid, 100.0);
                GivePlayerWeapon(playerid, 25, 80);
                GivePlayerWeapon(playerid, 24, 150);
                GivePlayerWeapon(playerid, 3, 0);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 17, 20);
                GivePlayerWeapon(playerid, 41, 9999);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
        || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
        || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
        || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
        || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
		|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
        {
            if(PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
            }
        }
        if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 13) // Mafia Cosa Nostra
        {
            if(PlayerInfo[playerid][pCargo] == 6)
            {
                format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", PlayerName(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
                GivePlayerWeapon(playerid, 24, 120);
                GivePlayerWeapon(playerid, 25, 140);
                GivePlayerWeapon(playerid, 29, 130);
                GivePlayerWeapon(playerid, 31, 250);
                return true;
            }
        }
        return true;
    }
//==============================================================================
	if(strcmp(cmd, "/mudarsexo", true) == 0)
	{
	    if(PlayerToPoint(10, playerid,359.0656,187.9718,1008.3828))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			new x_sexo[32];
			x_sexo = strtok(cmdtext, idx);
			if(!strlen(x_sexo))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartorio ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "|Use: /mudarsexo [Numero]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 - Homem");
				SendClientMessage(playerid, COLOR_GREY, "| 2 - Mulher");
				return true;
			}
            if(strcmp(x_sexo,"1",true) == 0)
			{
				format(string, sizeof(string), "* Jogador %s mudou seu sexo para masculino.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pSex] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Voce mudou seu sexo para masculino!");
		   	 	return true;
			}
            if(strcmp(x_sexo,"2",true) == 0)
			{
		   		format(string, sizeof(string), "* Jogador %s mudou seu sexo para feminino.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				PlayerInfo[playerid][pSex] = 2;
				SendClientMessage(playerid,COLOR_GREEN,"Voce trocou seu sexo para feminino!");
		   		return true;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao esta na Prefeitura de LS.");
		}
	}
//==============================================================================
 	if(strcmp(cmd, "/separacao", true) == 0)
	{
		if(PlayerToPoint(10, playerid,-2023.5865,1097.1720,18.0524))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(IsPlayerConnected(playerid))
			{
      			new x_separar[32];
				x_separar = strtok(cmdtext, idx);
				if(!strlen(x_separar))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartorio ______________|");
					SendClientMessage(playerid, COLOR_WHITE, "|Use: /separacao [Numero]");
					SendClientMessage(playerid, COLOR_GREY, "| 1 - Sim");
					SendClientMessage(playerid, COLOR_GREY, "| 2 - Nao");
					return true;
				}
                if(strcmp(x_separar,"1",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						format(string, sizeof(string), "* Jogador %s se divorciou!", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessage(playerid,COLOR_GREY,"Voce se divorciou!");
						ClearMarriage(playerid);
			   	 		return true;
			   	 	}
			   	 	SendClientMessage(playerid,COLOR_GREEN,"Voce nao e casado(a)!");
				}
                if(strcmp(x_separar,"2",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						SendClientMessage(playerid,COLOR_GREEN,"Voce continuou casado(a)!");
			   	 		return true;
					}
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao esta na igreja de LS!");
		}
	}
//==============================================================================
    if(strcmp(cmd, "/kitvip", true) == 0 || strcmp(cmd, "/kitvip", true) == 0)
	{
	    new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pVIP] >= 1)
			{
	   	 		format(string, sizeof(string), "* %s Pegou Seu Kit VIP.", PlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 46, 1);
				GivePlayerWeapon(playerid, 24, 1000);
   				GivePlayerWeapon(playerid, 31, 1999);
    			GivePlayerWeapon(playerid, 29, 1999);
    			GivePlayerWeapon(playerid, 25, 999);
    			GivePlayerWeapon(playerid, 4, 1);
    			GivePlayerWeapon(playerid, 1, 1);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
			   	return true;
			}
			else if(PlayerInfo[playerid][pVIP] == 2)
			{
	   		format(string, sizeof(string), "* %s Pegou Seu Kit Vip.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ResetPlayerWeaponsEx(playerid);
    		GivePlayerWeapon(playerid, 24, 2500);
	    	GivePlayerWeapon(playerid, 31, 2500);
		   	GivePlayerWeapon(playerid, 29, 2500);
		   	GivePlayerWeapon(playerid, 27, 2500);
		   	GivePlayerWeapon(playerid, 4, 1);
		   	GivePlayerWeapon(playerid, 1, 1);
		   	GivePlayerWeapon(playerid, 34, 2500);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealth(playerid, 100);
 			return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao e VIP");
			    return true;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao esta em uma loja de armas.");
		}
		return true;
	}
//SISTEMA DE DROGAS
	if(strcmp(cmd, "/Usedrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Use Drogas ]______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"USE: /usemaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /usecocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /usecrack");
			}
		return true;
	}



 	if(strcmp(cmd, "/cartorio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Cartorio ]______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"USE: /mudarsexo");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /separacao");
            SendClientMessage(playerid, COLOR_GRAD1,"USE: /loteria");
			}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/departamento", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[126];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_DEPTH, "USE: (/d)epartamento [Texto]");
				return true;
			}
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PM Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Policia Militar %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PM Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PM %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Policia Militar %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** BOPE Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** BOPE Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** BOPE %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Forcas Armadas Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Forcas Armadas %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente do Governo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguranca do Governo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista do Governo %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Governo %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente do Governo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguranca do Governo %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista do Governo %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Governo %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PC Delegado %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** PC %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PC %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PC %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PC %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** PC %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Policia Civil %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
   			else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** PF Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** PF %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Medicos Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Medicos Lider %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 555 || PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Medicos %s: %s, cambio. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPTH, string);
				SendFamilyMessage(1, COLOR_DEPTH, string);
				SendFamilyMessage(34, COLOR_DEPTH, string);
				SendFamilyMessage(3, COLOR_DEPTH, string);
				SendFamilyMessage(16, COLOR_DEPTH, string);
				SendFamilyMessage(7, COLOR_DEPTH, string);
				SendFamilyMessage(30, COLOR_DEPTH, string);
				SendFamilyMessage(11, COLOR_DEPTH, string);
				SendFamilyMessage(4, COLOR_DEPTH, string);
				SendFamilyMessage(27, COLOR_DEPTH, string);
				SendFamilyMessage(35, COLOR_DEPTH, string);
				printf("%s", string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e um Policial/Medico!");
				return true;
			}
		}
		return true;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/ficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ficha [id]");
				return true;
			}

			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(60.0, playerid,232.8069,164.0555,1003.0234)||PlayerToPoint(60.0, playerid,232.2051,117.3912,1003.2188)||PlayerToPoint(20.0, playerid,322.4880,309.1409,999.1484)||PlayerToPoint(40.0, playerid,246.1936,69.8609,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, COLOR_WHITE, "|______________ Ficha Na Policia ______________|");
						format(string, sizeof(string), "Nome: %s", PlayerName(playerid));
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "Crime: %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "Relato: %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "Acusado: %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "  Voce tem que estar em um carro da policia ou em alguma HQ da policia!");
				return true;
			}
		}
		return true;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspeito", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{

	    if(IsPlayerConnected(playerid))
	    {
 	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descricao do Crime]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid))
			{
            	if(IsPlayerConnected(giveplayerid))
				{
 					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode dar su em Policiais!");
						return true;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[100];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descricao do Crime]");
								return true;
							}
							SetPlayerCriminal(giveplayerid,playerid, result);
							return true;
					}
				}
				else
				{
						SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador nao esta conectado.");
						return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e um Policial !");
			}
		}
		return true;
 }
//---------------------------------[Casa Slander e Coyote]----------------------------------------------
	if (strcmp("/pnrg", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3051.6091,-722.7493,16.2101))
    	{
 			new carid = CreateVehicle(522,3048.5317,-738.8381,16.2025,173.3492,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	
	if (strcmp("/pinfernus", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3051.6091,-722.7493,16.2101))
    	{
 			new carid = CreateVehicle(411,3045.6460,-707.4608,16.2025,2.9176,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	if (strcmp("/pinfernus", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3051.6091,-722.7493,16.2101))
    	{
 			new carid = CreateVehicle(411,3045.6460,-707.4608,16.2025,2.9176,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	if (strcmp("/pfusca", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3051.6091,-722.7493,16.2101))
    	{
 			new carid = CreateVehicle(545,3042.3223,-708.7457,16.2025,346.0442,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	if (strcmp("/psultan", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3051.6091,-722.7493,16.2101))
    	{
 			new carid = CreateVehicle(560,3045.2739,-738.2759,16.2025,194.7262,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	if (strcmp("/phydra", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,3086.4063,-733.0134,18.8266))
    	{
 			new carid = CreateVehicle(520,3080.8701,-721.3737,18.8281,34.8778,0,0,60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
    	}
    	return 1;
	}
	
	if (strcmp("/pheli", cmdtext, true, 10) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,2994.8564,-818.6587,18.8266))
		{
			new carid = CreateVehicle(487,3007.8159,-813.0328,18.8281,188.0033,0,0,60000);
			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;
   		}
    	return 1;
	}
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/trancar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um carro de casa/alugado.");
					return true;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPHousekey]+totalveiculos)
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
					{
						gLastDriver[HireCar[playerid]] = 300;
						VTrancado[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPHousekey] == 255)
			{
				if(HireCar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um carro.");
					return true;
				}
			}
			carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
			if(HireCar[playerid] > 0 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			new lockstatus = VTrancado[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um carro");
						return true;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
					}
					else if(PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
						return true;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um carro");
						return true;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0);
					}
					if (PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
						return true;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Erro");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um carro!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/chave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~ Voce nao tem essa chave", 5000, 6);
						return true;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem essa chave", 5000, 6);
						return true;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
       						SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return true;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem essa chave", 5000, 6);
						return true;
					}
				}
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/dado", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem um dado, compre em uma 24/7, Dica: use /gps");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/banco", true) == 0)
 	{
 	    if(IsPlayerConnected(playerid) && IsPlayerInCaixa(playerid)) //Coloque as coordenadas aqui
	 	{
	 	    ShowPlayerDialog(playerid, DIALOG_CAIXA_ELETRONICO,DIALOG_STYLE_LIST,"Caixa Eletronico","Saque\nDeposito\nSaldo\nTransferir\nRoubar","Confirmar", "Cancelar");
	 	}
		return 1;
	}

	if (strcmp("/bike", cmdtext, true, 10) == 0)
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,1682.5848,-2308.7366,13.5409))
    	{
    	    if(GetPlayerMoneyEx(playerid) < 5) return SendClientMessage(playerid,COLOR_GREY,"Voce nao tem R$5 para alugar a bike!");
    	    GivePlayerMoney(playerid, - 5);
    	    DestroyVehicle(BikeSpawn[playerid]);
        	BikeSpawn[playerid] = -1;
        	SendClientMessage(playerid, COLOR_WHITE, "Voce alugou sua bike por R$5");
 			BikeSpawn[playerid] = AddStaticVehicle(481,1675.5558,-2311.2139,13.5426,187.1792,1,1);
   			PutPlayerInVehicle(playerid, BikeSpawn[playerid], 0);
    	}
    	return 1;
	}
	
	if(strcmp(cmd, "/transferir", true) == 0 || strcmp(cmd, "/trans", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce presisa ter level 1 !");
				return true;
			}
	    	if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
			|| PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.7908,-13.2499,26.7422) || PlayerToPoint(1.5,playerid,1363.0376,-1745.4191,13.5439) || PlayerToPoint(1.0,playerid,1468.7977,-1770.6053,18.7958)
/*Caixas*/	|| PlayerToPoint(1.0,playerid,1142.03601,-1762.05994,13.23080) || PlayerToPoint(1.0,playerid,1367.46753,-1283.17358,13.16540) || PlayerToPoint(1.0,playerid,1148.57678,-1772.64233,16.20010) || PlayerToPoint(1.0,playerid,1070.86182,-1866.00525,13.14770)
			|| PlayerToPoint(1.0,playerid,1493.56433,-1022.13391,23.39950) || PlayerToPoint(1.0,playerid,1336.97156,-1751.75830,13.12390)|| PlayerToPoint(1.0,playerid,1828.19751,-1405.80310,13.02530)|| PlayerToPoint(1.0,playerid,2235.82324,-1150.29150,25.48200)
			|| PlayerToPoint(1.0,playerid,1186.23511,-1377.27698,13.18340) || PlayerToPoint(1.0,playerid,429.11661, -1445.17566, 30.29910))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao esta em um caixa eletronico ^^!");
	            return true;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "/transferir [ id ] [quantidade]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "/transferir [ id ] [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playerdinheiro = PlayerInfo[playerid][pConta] ;
					if (moneys > 0 && playerdinheiro >= moneys)
					{
						PlayerInfo[playerid][pConta] -= moneys;
						PlayerInfo[giveplayerid][pConta] += moneys;
						format(string, sizeof(string), "Voce transferiu R$%d para %s's ", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "Voce recebeu R$%d pela sua conta de %s", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s Transferido R$%d to %s", sendername, moneys, giveplayer);
		                if(moneys >= 500000)
						{
							ABroadCast(COLOR_YELLOW,string,1);
						}
						printf("%s", string);

						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Transferencia Invalida!.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "[ID]%d Nao esta ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/comprar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerToPoint(1.5, playerid,-30.875, -88.9609, 1004.53) || PlayerToPoint(1.5, playerid,1101.9640,-1373.0610,13.7591))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /comprar [Numero do item]");
					SendClientMessage(playerid, COLOR_WHITE, "|______________ 24-7 ______________|");
					SendClientMessage(playerid, COLOR_GRAD1, "| 1: Celular 	   R$100		2: Agenda 	   R$2");
					SendClientMessage(playerid, COLOR_GRAD2, "| 3: Dado 	   R$2		4: Camisinha   R$2");
					SendClientMessage(playerid, COLOR_GRAD4, "| 5: CD-Player   R$2		6: Frango 	   R$10");
					SendClientMessage(playerid, COLOR_GRAD5, "| 7: Hamburger   R$10			8: Pizza 	   R$10");
					return true;
				}
				new item = strval(tmp);
				if (item == 1 && GetPlayerMoney(playerid) >= 100)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 100 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 100 - price;
				        format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
						GivePlayerMoney(playerid,- payout);
						BizzInfo[3][bTill] += payout;
	                    ExtortionBiz(3, payout);
				    }
				    else
				    {
				        format(string, sizeof(string), "~r~-R$%d", 100);
						GameTextForPlayer(playerid, string, 5000, 1);
						GivePlayerMoney(playerid,-100);
						BizzInfo[3][bTill] += 100;
	                    ExtortionBiz(3, 100);
				    }
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new randphone = 1000 + random(8999);//minimo 1000  maximo 14999
					PlayerInfo[playerid][pPnumber] = randphone;
					format(string, sizeof(string), "Seu novo numero de celular e %d", randphone);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_GRAD5, "De uma olhada nos seus documentos /rg");
					SendClientMessage(playerid, COLOR_WHITE, "Dica: Digite /ajuda em caso de duvidas");
					return true;
				}
				else if (item == 2 && GetPlayerMoney(playerid) >= 2)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 2 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 2 - price;
						GivePlayerMoney(playerid,- payout);
						BizzInfo[3][bTill] += payout;
	                    ExtortionBiz(3, payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-2);
						BizzInfo[3][bTill] += 2;
	                    ExtortionBiz(3, 5000);
						format(string, sizeof(string), "~r~-R$%d", 2);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                PlayerInfo[playerid][pPhoneBook] = 1;
					SendClientMessage(playerid, COLOR_GRAD4, "   Nova agenda telefonica comprada!");
					SendClientMessage(playerid, COLOR_MSG, "[BPR]: Digite /agenda <id/nome>.");
					return true;
				}
				else if (item == 3 && GetPlayerMoney(playerid) >= 2)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 2 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 2 - price;
						GivePlayerMoney(playerid,- payout);
						BizzInfo[3][bTill] += payout;
	                    ExtortionBiz(3, payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-2);
						BizzInfo[3][bTill] += 2;
	                    ExtortionBiz(3, 2);
						format(string, sizeof(string), "~r~-R$%d", 2);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gDice[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD4, "   Voce comprou um dado! Aproveite.");
					SendClientMessage(playerid, COLOR_MSG, "[BPR]: Digite /dado");
					return true;
				}
				else if (item == 4 && GetPlayerMoney(playerid) >= 2)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 2 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 2 - price;
						GivePlayerMoney(playerid,- payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid,-2);
						format(string, sizeof(string), "~r~-R$%d", 2);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "Camisinha comprada.");
					SendClientMessage(playerid, COLOR_WHITE, "Agora voce pode fazer sexo com seguranca.");
					return true;
				}
				else if (item == 5 && GetPlayerMoneyEx(playerid) >= 2)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 2 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 2 - price;
						GivePlayerMoneyEx(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoneyEx(playerid, - 2);
						format(string, sizeof(string), "~r~-$%d", 2);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "CD-Player comprado.");
					SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /musica");
					PlayerInfo[playerid][pCDPlayer] = 1;
					return true;
				}
				else if (item == 6 && GetPlayerMoney(playerid) >= 10)
				{
				    if(Groceries[playerid][pChickens] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce tem muitos frangos, coma alguns antes de comprar mais !");
				        return true;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-R$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
				    GivePlayerMoney(playerid, - 10);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "Frango comprado.");
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
					new rand = random(15);
					Groceries[playerid][pChickens] += 1;
					Groceries[playerid][pChicken] += rand;
					return true;
				}
				else if (item == 7 && GetPlayerMoney(playerid) >= 10)
				{
				    if(Groceries[playerid][pHamburgers] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce tem muitos Hamburgers, coma alguns antes de comprar mais!");
				        return true;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-R$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
				    GivePlayerMoney(playerid, - 10);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "Hamburger Comprado.");
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
					new rand = random(15);
					Groceries[playerid][pHamburgers] += 1;
					Groceries[playerid][pHamburger] += rand;
					return true;
				}
				else if (item == 8 && GetPlayerMoney(playerid) >= 10)
				{
				    if(Groceries[playerid][pPizzas] >= 3)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce tem muitas pizzas, coma algumas antes de comprar mais!");
				        return true;
				    }
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						GivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-R$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    GivePlayerMoney(playerid, - 10);
						format(string, sizeof(string), "~r~-R$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "Pizza Comprado.");
					new rand = random(15);
					Groceries[playerid][pPizzas] += 1;
					Groceries[playerid][pPizza] += rand;
					return true;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro o suficiente.");
				}
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "Voce nao esta em uma loja! Use /gps");
		}
		return true;
	}
	if(strcmp(cmd, "/comprarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   Voce precisa ter nivel %d Para comprar! !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voce tem uma casa para vender digite /vendercasa, voce recebera o mesmo valor que foi pago!");
						return true;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPHousekey] = h;
	        	    	PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						HouseInfo[h][hOwned] = 1;
					    HouseInfo[h][hExitx] = 234.0843;
						HouseInfo[h][hExity] = 1064.6896;
						HouseInfo[h][hExitz] = 1084.2108;
						HouseInfo[h][hInt] = 6;
					    HouseInfo[h][hRentabil] = 1;
					    HouseInfo[h][hRent] = 200;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajuda Em caso de duvidas!");
						PlayerInfo[playerid][pSpawn] = 1;
					    DateProp(playerid);
                        Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voce nao tem dinheiro o suficiente. !");
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/alugarquarto", true) == 0 || strcmp(cmd, "/alugar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voce tem uma casa, para vender digite /vendercasa, voce recebera o mesmo valor que foi pago!");
						return true;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPHousekey] = h;
						PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajuda Em caso de duvidas!");
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Voce nao tem dinheiro o suficiente.");
						return true;
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/alugarcarro", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if((GetPlayerVehicleID(playerid) >= 332 && GetPlayerVehicleID(playerid) <= 351))//Pronto
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[14][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[14][sbEntranceCost]);
				SBizzInfo[14][sbTill] += SBizzInfo[14][sbEntranceCost];
				ExtortionSBiz(14, SBizzInfo[14][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else if((GetPlayerVehicleID(playerid) >= 364 && GetPlayerVehicleID(playerid) <= 377))//Pronto
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else if((GetPlayerVehicleID(playerid) >= 352 && GetPlayerVehicleID(playerid) <= 363))//Pronto
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[0][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[0][sbEntranceCost]);
				SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];
				ExtortionSBiz(0, SBizzInfo[0][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			else if((GetPlayerVehicleID(playerid) >= 640 && GetPlayerVehicleID(playerid) <= 654))//Pronto
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[10][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[10][sbEntranceCost]);
				SBizzInfo[10][sbTill] += SBizzInfo[10][sbEntranceCost];
				ExtortionSBiz(10, SBizzInfo[10][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
			
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/alugaraero", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
   			if((GetPlayerVehicleID(playerid) >= 378 && GetPlayerVehicleID(playerid) <= 380))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[3][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[2][sbEntranceCost]);
				SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntranceCost];
				ExtortionSBiz(2, SBizzInfo[2][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
   			else if((GetPlayerVehicleID(playerid) >= 458 && GetPlayerVehicleID(playerid) <= 465))
			{ 
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[2][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem esse dinheiro !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicle(playerid);
					return true;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem ja alugou esse veiculo !");
				        Controle(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return true;
				    }
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[2][sbEntranceCost]);
				SBizzInfo[2][sbTill] += SBizzInfo[2][sbEntranceCost];
				ExtortionSBiz(2, SBizzInfo[2][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
				Controle(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return true;
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        Controle(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/desalugarheli", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        Controle(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o heli", 5000, 3);
			}
		}
		return true;
	}
 	if(strcmp(cmd, "/trocarchave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
				}
				return true;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/darchaves", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darchaves [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Voce nao tem uma chave para dar");
				return true;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					VTrancado[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPHousekey]+totalveiculos;
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							VTrancado[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						HireCar[playerid] = 999;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   Voce deu a chave do seu veiculo para %s", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   Voce recebeu a chave do veiuclo de %s", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s da uma chave para %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/desalugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Voce desalugou uma casa, e agora esta desabrigado!");
				PlayerInfo[playerid][pPHousekey] = 255;
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Voce nao alugou nenhuma casa.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/cofrecasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new borse = PlayerInfo[playerid][pPHousekey];
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Voce tem R$%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return true;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Voce tem R$%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return true;
				}
				if (cashdeposit >  HouseInfo[borse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem tudo isso !");
					return true;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce esta longe de sua casa !");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					HouseInfo[borse][hTakings]=HouseInfo[borse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  Voce retirou R$%d de seu cofre Total: R$%d ", cashdeposit,HouseInfo[borse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem uma casa.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/admvemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvemp [empresa id]");
				return true;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem permissao para usar esse comando !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/admvsemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvsemp [sempresa id]");
				return true;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem permissao para usar esse comando !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/admvcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcasa [Casa id]");
				return true;
			}
			new House = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem permissao para usar esse comando !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Voce nao tem casa.");
				return true;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce e casado ( a ) nao pode vender a casa !");
		        return true;
		    }
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,HouseInfo[House][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d", HouseInfo[House][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPHousekey] = 255;
				if(PlayerInfo[playerid][pLocal] == House)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem casa.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/moveis", true) == 0 || strcmp(cmd, "/mv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /moveis [Numero do iten]");
					SendClientMessage(playerid, COLOR_WHITE, "|______________[ Moveis da casa ]______________|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Vida  R$50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Colete R$100000");
					return true;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(GetPlayerMoney(playerid) < 100)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce nao tem R$100!");
							return true;
						}
						HouseInfo[House][hHel] = 1;
						GivePlayerMoney(playerid,-100);
						SBizzInfo[6][sbTill] += 100;//curar buisness
						ExtortionSBiz(6, 100);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de vida, Digite /curar.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode comprar isso, voce nao e um policial !");
							return true;
					    }
						if(GetPlayerMoney(playerid) < 300)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce nao tem R$300!");
							return true;
						}
						HouseInfo[House][hArm] = 1;
						GivePlayerMoney(playerid,-300);
						SBizzInfo[6][sbTill] += 300;//curar buisness
						ExtortionSBiz(6, 300);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de colete, Digite /curar.");
					}
					default:
					{
						SendClientMessage(playerid, COLOR_GREY, "Numero de movel desconhecido.");
					}
				}
				OnPropUpdate();
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aluguel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /aluguel [Preco]");
					return true;
				}
				if(strval(tmp) < 1 || strval(tmp) > 500)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Preco Minimo R$1, Maximo R$500.");
					return true;
				}
				HouseInfo[borse][hRent] = strval(tmp);
				Atualizar3Dtexts();
				OnPropUpdate();
				format(string, sizeof(string), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/despejartodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "Voce foi despejado de sua casa.");
								SendClientMessage(playerid, COLOR_WHITE, "Voce expulsou todos os inquilinos de sua casa.");
								PlayerInfo[i][pPHousekey] = 255;
								return true;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/despejar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /despejar [id]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "Voce nao pode despejar a si mesmo.");
					return true;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "Voce foi despejado");
							SendClientMessage(playerid, COLOR_WHITE, "Voce despejou o jogador");
							PlayerInfo[target][pPHousekey] = 255;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "O Jogador nao alugou sua casa !");
						    return true;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/alugada", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /alugada [0 - Nao / 1 - Sim]");
				}
				HouseInfo[borse][hRentabil] = strval(tmp);
				OnPropUpdate();
				Atualizar3Dtexts();
				format(string, sizeof(string), "Status do aluguel da casa setado para - %d.", HouseInfo[borse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao e dono de uma casa !");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/ligar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ligar [Telefone]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um celular");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pega o celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja esta em uma ligacao...");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja esta em uma ligacao...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid;
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "Jogador Off-Line!");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular esta tocando (/at) Chamando: %s", sendername);
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %s's esta tocando o celular.", sendername);
									SendClientMessage(playerid, COLOR_YELLOW, "[BPR]: Use 'T' para falar, digite /des para desligar");
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									CellTime[playerid] = 1;
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  You just get a Busy tone...");
		}
		return 1;
	}
	if(strcmp(cmd, "/sms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao fez o Loggin !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, COLOR_RED, "|-Voce foi mutado por um admin, nao pode falar-|");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USO: /sms [numero] [mensagem]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Voce nao tem um celular");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s enviou um SMS usando seu celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USO: /sms [numero] [mensagem]");
				return 1;
			}
			if(phonenumb == 555)
			{
				if ((strcmp("sim", result, true, strlen(result)) == 0) && (strlen(result) == strlen("sim")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Menssagem enviada !");
					if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "SMS: Eu nao tenho ideia do que voce esta falando, Remetente: Atendente (555)");
						RingTone[playerid] = 20;
						return 1;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "SMS: Envie 'sim' para 555, Remetente: Atendente (555)");
					RingTone[playerid] = 20;
					return 1;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O telefone do jogador esta desligado !");
						            return 1;
						        }
								format(string, sizeof(string), "SMS: %s, De: %s (Tel:%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, "Enviada com sucesso...");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								format(string, sizeof(string), "~r~R$ %d", txtcost);
								GameTextForPlayer(playerid, string, 5000, 1);
								GivePlayerMoney(playerid,-txtcost);
								SBizzInfo[8][sbTill] += txtcost;
								ExtortionSBiz(8, txtcost);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  O envio falhou...");
		}
		return 1;
	}
//----------------------------------[Skin]-----------------------------------------------
	if(strcmp(cmd,"/meuskin",true) == 0)
	if(PlayerToPoint(10.0,playerid,205.1173,-159.3505,1000.5234) || PlayerToPoint(10.0,playerid,207.9093,-104.6899,1005.1328) || PlayerToPoint(3.0,playerid,414.1574,2536.4773,10.00008) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047) || PlayerToPoint(12.0,playerid,210.7969,-7.6347,1001.2109))
	{
		//if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0) return SendClientMessage(playerid, COLOR_GREY, " * Voce possui uma profissao, so pode usar as skins dela,digite /trocarskin");
		new skin;
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Use: /meuskin [id da skin] - Custo R$ 100");
		skin=strval(tmp);
		if(skin==0 || skin==3 || skin==211 || skin==217 || skin>=300) /*|| skin==5 || skin==6 || skin==12 || skin==282 || skin==288 || skin==283 || skin==281 || skin==280 || skin==72 || skin==287 || skin==115 || skin==116 || skin==173 || skin==174 || skin==175 || skin==176 || skin==41 || skin==216 || skin==121 || skin==122
	    || skin==169 || skin==179 || skin==127 || skin==165 || skin==186 || skin==93 || skin==141 || skin==105  || skin==219 || skin==269 || skin==195 || skin==271 || skin==106 || skin==107 || skin==30 || skin==47 || skin==48 || skin==285 || skin==191 || skin==73 || skin==103 || skin==104
	    || skin==109 || skin==110 || skin==21 || skin==28 || skin==29 || skin==265 || skin==267 || skin==287 || skin==228 || skin==114 || skin==120 || skin==147 || skin==294 || skin==227 || skin==61 || skin==171 || skin==123 || skin==59 || skin==102 || skin==108 || skin==117
	    || skin==171 || skin==217 || skin==203 || skin==247 || skin==248 || skin==249 || skin==254 || skin==204 || skin==118 || skin==186 || skin==13 || skin==15 || skin==19 || skin==43
	    || skin==46 || skin==153 || skin==163 || skin==164 || skin==166 || skin==298 || skin==295 || skin==299 || skin==296 || skin==181 || skin==211 || skin>=300)*/ return SendClientMessage(playerid, COLOR_GREY, "Voce nao pode comprar essa Skin!");
		SetPlayerSkin(playerid,skin);
		PlayerInfo[playerid][pSkin] = skin;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce comprou novo skin por R$100");
		GivePlayerMoney(playerid,-100);
		SBizzInfo[11][sbTill] += 100;
		ExtortionSBiz(11, 100);
		return true;
	}

//----------------------------------[pickup]-----------------------------------------------
	if(strcmp(cmd, "/atender", true) == 0 || strcmp(cmd, "/at", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja esta em uma ligacao.");
				return true;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "Atendeu o celular.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s atendeu o celular.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/desligar", true) == 0 || strcmp(cmd, "/des", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "   Desligaram do outro lado da linha.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "   Voce desligou seu celular.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return true;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "   Voce guardou seu celular no bolso.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return true;
	}
//-----------------------[RONDA]--------------------
    if(strcmp(cmd,"/ronda",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
 			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
			PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
			PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
			PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
    		PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
			PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
    		{
			    if(EmpregoDuty[playerid] >= 1)
			    {
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce nao esta mais em servico.");
			        EmpregoDuty[playerid] = 0;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s nao esta mais em servico.", PlayerName(playerid));
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda -= 1;
			    }
			    else
			    {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voce esta de servico  e podera receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 2;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s esta em servico, para alguma ocorrencia digite /servico policia.", PlayerName(playerid));
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda += 1;
				}
			}
		}
		return true;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return true;
	}
	if(strcmp(cmd, "/horas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s olhou as horas.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
			if (minute < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minute);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return true;
	}
//----------------------{HouseS}-------------------
    if(strcmp(cmd, "/ircasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao tem autorizacao para usar esse comando!");
	            return true;
	        }
         	if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ircasa [ID]");
				return true;
			}
			new Casa;
			Casa = strval(tmp);
			SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
			return true;
		}
		return true;
	}
 	if(strcmp(cmd, "/iremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao tem autorizacao para usar esse comando!");
	            return true;
	        }
 			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return true;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
			return true;
		}
		return true;
	}
	if(strcmp(cmd, "/irsemp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao tem autorizacao para usar esse comando!");
	            return true;
	        }
       		if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return true;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
			return true;
		}
		return true;
	}

	if(strcmp(cmd, "/casa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /casa [numero da casa]");
					return true;
				}
				new Housenum = strval(tmp);
				SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
				SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[Housenum][hInt];
				PlayerInfo[playerid][pLocal] = Housenum;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/seditar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem autorizacao para usar esse comando!");
				return true;
			}
   			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /seditar [nome] [quantidade] (Use para casas e empresas)");
				SendClientMessage(playerid, COLOR_GREY, "Casas: Level, Preco, carro, descricao, chave(0 aberto - 1 fechado)");
				SendClientMessage(playerid, COLOR_GREY, "Empresas: Level, Preco, fundos, descricao, chave(0 aberto - 1 fechado)");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /seditar [nome] [quantidade]");
				return true;
			}
			new proplev = strval(tmp);
	        //if(strcmp(x_Emprego,"car",true) == 0)
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Casa: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
						else if(strcmp(x_Emprego,"carro",true) == 0)
					    {
							HouseInfo[i][hVec] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							HouseInfo[i][hLock] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Empresa: %d (Empresa com interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							BizzInfo[i][bLocked] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SEmpresa: %d (Empresa sem interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							SBizzInfo[i][sbLocked] =  proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "Voce ajustou: %s", x_Emprego);
			SendClientMessage(playerid, COLOR_WHITE, string);
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return true;
	}
	if(strcmp(cmd,"/dasdsadasasasdasdasdasasd",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COR_PM, "*~*~*~*~*~*~*~*~* Localizar Veiculo *~*~*~*~*~*~*~*~*");
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /meucarro [Numero do Veiculo]");
				SendClientMessage(playerid, COLOR_GRAD1, "1 =|Veiculo [1]");
				SendClientMessage(playerid, COLOR_GRAD1, "2 =|Veiculo [2]");
				return true;
			}
			new item = strval(tmp);
			if (item == 1) // localizar seu veiculo vip 1
			{
			    if(PlayerInfo[playerid][pCarKey] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COR_PM, "Seu Veiculo 1 foi marcado de Vermelho no Mapa!");
	    			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Voce nao tem um Veiculo Vip !");
				    return true;
			    }
			}
			if (item == 2) // localizar seu veiculo vip 2
			{
			    if(PlayerInfo[playerid][pCarKey] >= 1)
	        	{
			    	new Float:x,Float:y,Float:z;
			    	GetVehiclePos(PlayerInfo[playerid][pCarKey2], x, y, z);
			    	SetPlayerCheckpoint(playerid,x,y,z,6.0);
			    	SendClientMessage(playerid, COR_PM, "Seu Veiculo 1 foi marcado de Vermelho no Mapa!");
	    			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			    	return true;
			    }
			    else
			    {
			        SendClientMessage(playerid,COLOR_GRAD2,"Voce nao tem um Veiculo Vip !");
				    return true;
			    }
			}
	        return true;
	    }
	    return true;
	}
	if(strcmp(cmd, "/entrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(2.5, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(2.5, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return true;
							}
							GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-R$%d~n~~w~Digite /sair~n~Para poder sair!", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						//PayLog(string);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(1, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return true;
							}
							GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							OnPropUpdate();}}else{GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);}}}

			if (PlayerToPoint(2, playerid,1480.9403,-1770.8481,18.7958))
			{
		    	SetPlayerInterior(playerid,3);
		    	SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(PlayerToPoint(2, playerid,-2766.1321,375.6091,6.3347))
			{
		    	SetPlayerInterior(playerid,3);
		    	SetPlayerVirtualWorld(playerid, 1);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if (PlayerToPoint(2, playerid,2233.7112,-1333.1534,23.9815))
			{
		//Igreja
				SetPlayerPos(playerid, -2024.8652,1141.2629,18.0688);
				GameTextForPlayer(playerid, "~y~Igreja",5000,1);
				SetPlayerInterior(playerid,3);
				SetPlayerFacingAngle(playerid, 175.9087);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(PlayerToPoint(1, playerid,306.3995,-159.1051,999.5938))
			{
			//COFRE LOJA DE ARMAS 1 ENTRADA
				SetPlayerPos(playerid,305.05056762695,-159.16743469238,999.59375);
				GameTextForPlayer(playerid, "~w~Cofre", 5000, 1);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerInterior(playerid,6);
			}
			else if (PlayerToPoint(1, playerid,301.7848,-76.6545,1001.5156))
			{
			//COFRE Ammu Nation ENTRADA
				SetPlayerPos(playerid,301.71704101563,-75.318428039551,1001.515625);
				GameTextForPlayer(playerid, "~w~Cofre", 5000, 1);
				PlayerInfo[playerid][pInt] = 4;
				SetPlayerInterior(playerid,4);
			}
			else if(PlayerToPoint(2, playerid,2315.5200,0.3490,26.7422))
			{
		        SetPlayerInterior(playerid,1);
				SetPlayerPos(playerid,2147.7161,1603.5366,1006.1677);
				GameTextForPlayer(playerid, "~w~Cofre", 5000, 3);
			}

			else if(PlayerToPoint(2, playerid,1434.1337,-968.4908,37.3894))
			{
		        SetPlayerInterior(playerid,1);
				SetPlayerPos(playerid,2155.9976,1597.9829,999.9699);
			}

   			else if (PlayerToPoint(3.0, playerid,2147.7161,1603.5366,1006.1677))
			{
			    GameTextForPlayer(playerid, "~w~Banco", 5000, 1);
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2315.5200,0.3490,26.7422);
			}
   			else if (PlayerToPoint(3.0, playerid,2155.9976,1597.9829,999.9699))
			{
			    GameTextForPlayer(playerid, "~w~Cofre", 5000, 1);
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1434.1337,-968.4908,37.3894);
			}

			else if (PlayerToPoint(1, playerid,1570.3828,-1333.8882,16.4844))
			{
	    		SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
			}
	        else if(PlayerToPoint(3, playerid,1554.9537,-1675.6584,16.1953))
	        {
		    	GameTextForPlayer(playerid, "~w~Departamento da Policia Militar", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3, playerid,-1605.3232,711.1816,13.8672))
	        {
		    	GameTextForPlayer(playerid, "~w~Departamento da Policia Militar", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerVirtualWorld(playerid, 1);
		    	SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3, playerid,2244.5669,-1664.4495,15.4766))
	        {//Entrada Binco
	    		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
            	SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	     		SetPlayerInterior(playerid, 15);
	    		SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
	    		PlayerInfo[playerid][pInt] = 15;
	        }
	        else if(PlayerToPoint(3, playerid,-2374.2454,910.2137,45.4453))
	        {//Entrada Binco
	    		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
            	SetPlayerVirtualWorld(playerid, 1);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	     		SetPlayerInterior(playerid, 15);
	    		SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
	    		PlayerInfo[playerid][pInt] = 15;
	        }
	        else if (PlayerToPoint(3, playerid,1456.9010,-1137.6941,23.9617))
	        {//Entrada ZIP
     			SetPlayerPos(playerid, 161.3350,-95.0194,1001.8047);
	    		GameTextForPlayer(playerid, "~w~Zip",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,18);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 18;
        	}
	        else if (PlayerToPoint(3, playerid,461.3484,-1500.9084,31.0592))
	        {//Entrada VICTIM
     			SetPlayerPos(playerid, 226.293991,-7.431529,1002.210937);
	    		GameTextForPlayer(playerid, "~w~VICTIM",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
        	}
	        else if(PlayerToPoint(3, playerid,1836.4064,-1682.4403,13.3493))
	        {//Alhambra Entrance
	    		GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
	    		SetPlayerInterior(playerid, 17);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
	    		PlayerInfo[playerid][pInt] = 17;
        	}
        	else if(PlayerToPoint(3, playerid,2421.4998,-1219.2438,25.5617))
         	{//Pigpen entrada
	     		GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 2);
	    		SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
	    		PlayerInfo[playerid][pInt] = 2;
	        }
	        else if(PlayerToPoint(3, playerid,2229.9011,-1721.2582,13.5613))
	        {//Entrada Ginasio de Lutas
	     		GameTextForPlayer(playerid, "~w~Ginasio de Lutas", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
	    		PlayerInfo[playerid][pInt] = 5;
        	}
         	else if (PlayerToPoint(3, playerid,1631.8547,-1172.5637,24.0843))
         	{
	    	//Loterica entrada
	    		SetPlayerPos(playerid, 832.6270,7.2666,1004.1797);
	    		GameTextForPlayer(playerid, "~w~Loterica",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,3);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 3;
         	}
        	else if (PlayerToPoint(3, playerid,1200.4497,-918.7695,43.1105))
        	{
	    	//Entrada Burger Shot 1
	     		SetPlayerPos(playerid, 366.0324,-72.6400,1001.5078);
	    		GameTextForPlayer(playerid, "~w~Vinewood Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,10);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 10;
	    		InAFoodPlace[playerid] = 2;
	    		SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,810.4855,-1616.1888,13.5469))
        	{
	    	//Entrada Burger Shot 2
				SetPlayerPos(playerid, 681.5034,-452.0092,-25.6172);
		    	GameTextForPlayer(playerid, "~w~Marina Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,1);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 1;
	    		InAFoodPlace[playerid] = 5;
	    		SetPlayerCheckpoint(playerid, 683.9015,-456.7076,-25.6099, 1.0);
    		}
        	else if (PlayerToPoint(3, playerid,927.6217,-1353.0105,13.3438))
        	{
	    	//Entrada Cluckin Bell
	     		SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 1;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,2419.8442,-1509.4996,24.0000))
        	{
	    	//Entrada Cluckin Bell Perto da Groove
	     		SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 7;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
        	}
        	else if (PlayerToPoint(3, playerid,2105.4858,-1806.4725,13.5547))
        	{
	    	//Entrada Well Stacked Pizza
	     		SetPlayerPos(playerid, 372.4117,-130.4577,1001.4922);
	    		GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
	    		InAFoodPlace[playerid] = 3;
	    		SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
        	}
        	else if (PlayerToPoint(3, playerid,975.4691,-1335.9618,13.5319))
        	{
	    	//Entrada BPR
	     		SetPlayerPos(playerid, 377.5237,-191.6597,1000.6328);
	    		GameTextForPlayer(playerid, "~w~Lachonete", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 17);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 17;
	    		InAFoodPlace[playerid] = 4;
	    		SetPlayerCheckpoint(playerid, 379.0611,-186.6032,1000.6328, 1.0);
        	}
//=-=-=-=-=-=-=-=-=| HOTEL |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
    		else if (PlayerToPoint(3, playerid,2233.2659,-1159.8256,25.8906))
			{
				//Hotel Entrada
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3, playerid,2212.6235,-1150.4385,1025.7969))
			{
				//Hotel Entrada(dentro da porta)
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}
//=-=-=-=-=-=-=-=-=| 24/7'S|=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
            else if(PlayerToPoint(2, playerid,1833.6124,-1842.4968,13.5781))
            {//24/7 estacao entrada
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 1;
	        }
	        else if(PlayerToPoint(2, playerid,1000.5861,-919.8832,42.3281))
	        {//24/7 gas station entrance
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 4);
		    	SetPlayerPos(playerid,-27.2584,-31.6446,1003.5573);
		    	PlayerInfo[playerid][pInt] = 4;
            }
            else if(PlayerToPoint(2, playerid,1928.6006,-1776.4480,13.5469))
	        {//24/7 lado hq Elements
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 16);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,-25.1326,-139.0670,1003.5469);
		    	PlayerInfo[playerid][pInt] = 16;
	        }
	        else if (PlayerToPoint(2, playerid, 1315.5110,-898.9860,39.5781))
	        {//24/7 perto madd dogg
		   		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 2;
	        }
	        else if (PlayerToPoint(2, playerid, 1352.4357,-1759.0243,13.5078))
	        {//24/7 praca dp
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 3;
	        }
	        else if (PlayerToPoint(2, playerid, 2424.2214,-1742.7878,13.5457))
	        {//groove
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 4;
	        }
//=-=-=-=-=-=-=-=-=| HQ'S DAS ORGANIZAcoES |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
            else if (PlayerToPoint(3, playerid,691.5710,-1276.1722,13.5607))
			{//Mafia FamiliaShelby Entrada
                SetPlayerPos(playerid, -2171.3071,645.2919,1057.5938);
                GameTextForPlayer(playerid, "~w~HQ Familia Shelby",5000,1);
                SetPlayerInterior(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(2, playerid,300.2393,-1154.4464,81.3910))
			{//Mafia Cosa Nostra Entrada
                SetPlayerPos(playerid, -2636.6687,1402.7887,906.4609);
                GameTextForPlayer(playerid, "~w~HQ Mafia Cosa Nostra",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3, playerid,918.9910,-1252.1665,16.2109))
			{//PC Entrada
                SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
                GameTextForPlayer(playerid, "~w~DP Policia Civil",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3, playerid,327.9436,-1512.2135,36.0325))
			{//Entrada HQ BOPE
                GameTextForPlayer(playerid, "~w~DP BOPE", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,246.4631,110.1669,1003.2257);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3, playerid,-1528.5699,400.1840,7.1875))
			{//Entrada HQ Forcas Armadas
                GameTextForPlayer(playerid, "~w~QG Forcas Armadas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,246.4631,110.1669,1003.2257);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 2);
            }
            else if(PlayerToPoint(3, playerid,-1753.9988,963.4703,24.8828))
			{//Entrada HQ BOPE
                GameTextForPlayer(playerid, "~w~DP BOPE", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,246.4631,110.1669,1003.2257);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 1);
            }
           	else if(PlayerToPoint(1, playerid,755.4222,-1361.7944,13.5132))
	        {//Entrada Reporters HQ
				SetPlayerPos(playerid, 367.9629,194.3110,1008.3828);
				GameTextForPlayer(playerid, "~w~Hq Reporters",5000,1);
				SetPlayerInterior(playerid,3);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 3;
	        }
            else if (PlayerToPoint(3, playerid,-2456.1401,503.9361,30.0781))
			{//PF Entrada
                SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
                GameTextForPlayer(playerid, "~w~DP Policia Civil",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 1);
            }
            else if(PlayerToPoint(3, playerid,1154.9366,-1180.8309,32.8187))
			{//ENTRADA HQ BALLAS
                GameTextForPlayer(playerid, "~w~HQ Ballas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,2268.3950,-1210.5328,1047.7491);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3, playerid,-2463.6145,131.9267,35.1719))
			{//ENTRADA HQ BALLAS
                GameTextForPlayer(playerid, "~w~HQ Ballas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,2268.3950,-1210.5328,1047.7491);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 1);
            }
            else if (PlayerToPoint(3, playerid,-2457.4695,794.9935,35.1719))
			{//HQ Groove Street Entrada
                SetPlayerPos(playerid,2466.3386,-1673.6875,13.4876);
                GameTextForPlayer(playerid, "~g~HQ Groove",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 1);
            }
            else if (PlayerToPoint(3, playerid,-2356.0017,1007.9794,50.8984))
			{//HQ PCC
                SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~HQ PCC",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 2);
            }
            else if (PlayerToPoint(3, playerid,2466.3386,-1673.6875,13.4876))
			{//HQ Groove Street Entrada
                SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~HQ Groove",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(2, playerid,681.6038,-473.3587,16.5363))
			{//HQ Sons of Anarchy Entrada
                SetPlayerPos(playerid,501.8770,-67.7092,998.7578);
                GameTextForPlayer(playerid, "~r~Sons of Anarchy HQ",5000,1);
                SetPlayerInterior(playerid,11);
                SetPlayerFacingAngle(playerid, 178.1566);
                barexit[playerid] = 1;
                PlayerInfo[playerid][pInt] = 11;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(2, playerid,2309.9460,-1643.6337,14.8270))
			{//Bar Groove Entrada
                SetPlayerPos(playerid,501.8770,-67.7092,998.7578);
                GameTextForPlayer(playerid, "~r~Bar ",5000,1);
                SetPlayerInterior(playerid,11);
                SetPlayerFacingAngle(playerid, 178.1566);
                barexit[playerid] = 2;
                PlayerInfo[playerid][pInt] = 11;
                SetPlayerVirtualWorld(playerid, 0);
            }
           	else if(PlayerToPoint(3, playerid,2140.9382,-1801.9813,16.1475))
        	{//ENTRADA HQ CV
	    		GameTextForPlayer(playerid, "~w~HQ Comando Vermelho", 5000, 1);
	    		SetPlayerInterior(playerid, 6);
	    		SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
	    		PlayerInfo[playerid][pInt] = 6;
	    		SetPlayerVirtualWorld(playerid, 0);
        	}
			else if (PlayerToPoint(1, playerid,-2024.7717,1144.2822,18.0524))
			{
		//Igreja
				SetPlayerPos(playerid, 2230.7629,-1332.7106,23.9814);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
			}
        	else if(PlayerToPoint(3, playerid,-2524.4580,1216.2802,37.6552))
        	{//ENTRADA HQ CV
	    		GameTextForPlayer(playerid, "~w~HQ Comando Vermelho", 5000, 1);
	    		SetPlayerInterior(playerid, 6);
	    		SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
	    		PlayerInfo[playerid][pInt] = 6;
	    		SetPlayerVirtualWorld(playerid, 1);
        	}
	        else if (PlayerToPoint(3, playerid,2808.1106,-1189.6528,25.3436))
			{//HQ VAGOS
                SetPlayerPos(playerid,295.1389,1474.4699,1080.5198);
                GameTextForPlayer(playerid, "~w~HQ Los Vagos",5000,1);
                SetPlayerInterior(playerid,15);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 15;
                SetPlayerVirtualWorld(playerid, 0);
            }
   	        else if (PlayerToPoint(3, playerid,-1829.7848,105.8367,15.1172))
			{//HQ VAGOS
                SetPlayerPos(playerid,295.1389,1474.4699,1080.5198);
                GameTextForPlayer(playerid, "~w~HQ Los Vagos",5000,1);
                SetPlayerInterior(playerid,15);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 15;
                SetPlayerVirtualWorld(playerid, 1);
            }
           	else if(PlayerToPoint(2.0, playerid,1674.1207,-2121.9700,14.1460))
        	{//ENTRADA HQ Tropa da Turquia
	    		GameTextForPlayer(playerid, "~w~HQ Los Tropa da Turquia", 5000, 1);
	    		SetPlayerInterior(playerid, 8);
	    		SetPlayerPos(playerid,2807.8213,-1173.5691,1025.5703);
	    		PlayerInfo[playerid][pInt] = 8;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
        	else if(PlayerToPoint(2.0, playerid,-2336.6111,-166.8267,35.5547))
        	{//ENTRADA HQ Milicia
	    		GameTextForPlayer(playerid, "~w~HQ Los Tropa da Turquia", 5000, 1);
	    		SetPlayerInterior(playerid, 8);
	    		SetPlayerPos(playerid,2807.8213,-1173.5691,1025.5703);
	    		PlayerInfo[playerid][pInt] = 8;
	    		SetPlayerVirtualWorld(playerid, 1);
	        }
            else if(PlayerToPoint(2, playerid,1106.5106,-299.5384,74.5391))
			{//ENTRADA HQ HITMANS
                GameTextForPlayer(playerid, "~w~HQ Hitmans", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,343.7183,304.9376,999.1484);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(2, playerid,-1681.4905,1350.2188,7.1722))
			{//ENTRADA HQ Triads
                GameTextForPlayer(playerid, "~w~HQ Triads", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,343.7183,304.9376,999.1484);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 1);
            }

		}
		return true;
	}
	if(strcmp(cmd, "/sair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(1, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseEntered[playerid] == i)
    				{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						PlayerInfo[playerid][pInt] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pLocal] = 255;
						HouseEntered[playerid] = 255;
						return true;
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(1, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
					return true;
				}
   			}
			if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				Controle(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			else if (PlayerToPoint(3, playerid,1548.8167,-1366.2247,326.2109))
			{
	    		SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
			}
			if (PlayerToPoint(1, playerid,305.05056762695,-159.16743469238,999.59375))
			{
			//COFRE LOJA DE ARMAS 1 SAIDA
				SetPlayerPos(playerid,306.3995,-159.1051,999.5938);
				PlayerInfo[playerid][pInt] = 6;
				SetPlayerInterior(playerid,6);
			}
			if (PlayerToPoint(1, playerid,301.71704101563,-75.318428039551,1001.515625))
			{
			//COFRE Ammu Nation SAIDA
				SetPlayerPos(playerid,301.7848,-76.6545,1001.5156);
				PlayerInfo[playerid][pInt] = 4;
				SetPlayerInterior(playerid,4);
			}
	        if(PlayerToPoint(2.0, playerid,246.5878,62.7877,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
	        {
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1554.9537,-1675.6584,16.1953);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
	        if(PlayerToPoint(2.0, playerid,246.5878,62.7877,1003.6406) && GetPlayerVirtualWorld(playerid) == 1)
	        {
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,-1605.3232,711.1816,13.8672);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
        	else if (PlayerToPoint(3.0, playerid,2147.7161,1603.5366,1006.1677))
			{
			    GameTextForPlayer(playerid, "~w~Banco", 5000, 1);
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2315.5200,0.3490,26.7422);
			}
   			else if (PlayerToPoint(3.0, playerid,2155.9976,1597.9829,999.9699))
			{
			    GameTextForPlayer(playerid, "~w~Cofre", 5000, 1);
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1434.1337,-968.4908,37.3894);
			}
	        else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328) && GetPlayerVirtualWorld(playerid) == 1)
	        {//Saida Binco
            	SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-2374.2454,910.2137,45.4453);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    	}
	        else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328) && GetPlayerVirtualWorld(playerid) == 0)
	        {//Saida Binco
            	SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2244.5669,-1664.4495,15.4766);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    	}
	    	else if (PlayerToPoint(3.0, playerid,161.3350,-95.0194,1001.8047))
	        {//Saida ZIP
     			SetPlayerPos(playerid, 1456.9010,-1137.6941,23.9617);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
   			else if (PlayerToPoint(3.0, playerid,226.293991,-7.431529,1002.210937))
	        {//Saida VICTIM
     			SetPlayerPos(playerid, 459.1313,-1501.1628,31.0392);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}

	        else if(PlayerToPoint(1.0, playerid,501.8770,-67.7092,998.7578))
            {
            	if (barexit[playerid] == 1)
				{//HQ Sons of Anarchy
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerFacingAngle(playerid, 177.9001);
		    		SetPlayerPos(playerid,681.5621,-473.8558,16.5363);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		barexit[playerid] = 0;
				}
				else if(barexit[playerid] == 2)
				{//BAR PERTO DA GROOVE
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerFacingAngle(playerid, 130.5600);
				    SetPlayerPos(playerid,2309.7676,-1643.7872,14.8270);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		barexit[playerid] = 0;
				}
			}
	    	else if(PlayerToPoint(3.0, playerid,493.3891,-22.7212,1000.6797))
	        {//Saida Alhambra
	    		SetPlayerInterior(playerid, 0);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,1836.4064,-1682.4403,13.3493);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(2.0, playerid,1205.0803,-9.9519,1000.9219))
         	{//saida pigpen
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2421.4998,-1219.2438,25.5617);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if(PlayerToPoint(2.0, playerid,771.9399,-2.2574,1000.7292))
	        {//Saida Ginasio de Lutas
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2229.9011,-1721.2582,13.5613);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
         	else if(PlayerToPoint(1, playerid,367.9629,194.3110,1008.3828))
	    	{//Reporter Hq
				SetPlayerPos(playerid, 755.4222,-1361.7944,13.5132);
				GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    	}
         	else if (PlayerToPoint(2.0, playerid,832.6270,7.2666,1004.1797))
         	{
	    	//Loterica saida
	    		SetPlayerPos(playerid, 1631.8547,-1172.5637,24.084);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
         	}
        	else if (PlayerToPoint(2.0, playerid,366.0324,-72.6400,1001.5078))
        	{
	    	//Entrada Burger Shot 1
	     		SetPlayerPos(playerid, 1200.4497,-918.7695,43.1105);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(2.0, playerid,681.5034,-452.0092,-25.6172))
        	{
	    	//Saida Burger Shot 2
	     		SetPlayerPos(playerid, 810.4855,-1616.1888,13.5469);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}

	        else if(PlayerToPoint(2.0, playerid,365.7793,-9.1699,1001.8516))
            {
            	if (InAFoodPlace[playerid] == 1)
				{//clukin
	     		SetPlayerPos(playerid, 927.6217,-1353.0105,13.3438);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
				}
				else if(InAFoodPlace[playerid] == 7)
				{//perto da groove
	     		SetPlayerPos(playerid, 2419.8442,-1509.4996,24.0000);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
				}
			}
        	else if (PlayerToPoint(2.0, playerid,372.4117,-130.4577,1001.4922))
        	{
	    	//Saida Well Stacked Pizza
	     		SetPlayerPos(playerid, 2105.4858,-1806.4725,13.5547);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(2.0, playerid,377.5237,-191.6597,1000.6328))
        	{
	    	//SaidaLanchonete

	     		SetPlayerPos(playerid, 975.4691,-1335.9618,13.5319);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
//=-=-=-=-=-=-=-=-=| SAiDAS 24/7'S |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	        else if(PlayerToPoint(3.0, playerid,-30.9891,-91.5607,1003.5469))
            {
            	if (storeexit[playerid] == 1)
				{//24/7 estacao saida
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerPos(playerid,1833.6124,-1842.4968,13.5781);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 2)
				{//perto madd dogg
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1315.5110,-898.9860,39.5781);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 3)
				{//praca dp
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1352.4357,-1759.0243,13.5078);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 4)
				{//groove
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,2422.1165,-1740.3470,13.5469);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
	        }
	        else if(PlayerToPoint(1.0, playerid,-27.2584,-31.6446,1003.5573))
	        {//24/7 gas station saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1000.5861,-919.8832,42.3281);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,-25.1326,-139.0670,1003.5469))
	        {//24/7 lado hq Elements saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,1928.6006,-1776.4480,13.5469);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
	        }

//=-=-=-=-=-=-=-=-=| HOTEL SAiDA |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
    		else if (PlayerToPoint(3.0, playerid,2228.4087,-1150.5686,1025.7969))
			{
				//Hotel Saida
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2190.1182,-1179.7944,1033.7896))
			{
				//Hotel Saida 2
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2238.9316,-1192.4878,1033.7969))
			{
				//Hotel Saida 3
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2193.3254,-1138.6238,1029.7969))
			{
				//Hotel Saida 4
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
//=-=-=-=-=-=-=-=-=| SAiDA HQ'S DAS ORGANIZAcoES |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=<|
	        else if (PlayerToPoint(1.0, playerid,-2171.3071,645.2919,1057.5938))
	        {//SAIDA HQ Mafia FamiliaShelby
			    SetPlayerPos(playerid, 691.5710,-1276.1722,13.5607);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
			    PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	        }
	        else if (PlayerToPoint(1.0, playerid,-2636.6687,1402.7887,906.4609))
	        {//SAIDA Mafia Cosa Nostra
		        SetPlayerPos(playerid, 300.2393,-1154.4464,81.3910);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
		        PlayerInfo[playerid][pInt] = 0;
		        PlayerInfo[playerid][pLocal] = 255;
		        SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(2.0, playerid,238.6815,138.6710,1003.0234) && GetPlayerVirtualWorld(playerid) == 0)
	        {
	    	//Saida PC
		    	SetPlayerPos(playerid, 918.9910,-1252.1665,16.2109);
		    	SetPlayerInterior(playerid,0);
		    	SetPlayerFacingAngle(playerid, 0);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
	        if(PlayerToPoint(2.0, playerid,246.3772,107.4653,1003.2188) && GetPlayerVirtualWorld(playerid) == 0)
	        {//Saida HQ BOPE
			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid,327.9436,-1512.2135,36.0325);
			    PlayerInfo[playerid][pInt] = 0;
			    SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pLocal] = 255;
	        }
	        if(PlayerToPoint(2.0, playerid,246.3772,107.4653,1003.2188) && GetPlayerVirtualWorld(playerid) == 1)
	        {//Saida HQ BOPE
			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid,-1753.9988,963.4703,24.8828);
			    PlayerInfo[playerid][pInt] = 0;
			    SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pLocal] = 255;
	        }
	        if(PlayerToPoint(2.0, playerid,246.3772,107.4653,1003.2188) && GetPlayerVirtualWorld(playerid) == 2)
	        {//Saida HQ BOPE
			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid,-1528.5699,400.1840,7.1875);
			    PlayerInfo[playerid][pInt] = 0;
			    SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(2.0, playerid,238.6815,138.6710,1003.0234) && GetPlayerVirtualWorld(playerid) == 1)
	        {
	    	//Saida PF
	    		SetPlayerPos(playerid, -2456.1401,503.9361,30.0781);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
        	else if(PlayerToPoint(2.0, playerid,2270.1592,-1210.4899,1047.5625) && GetPlayerVirtualWorld(playerid) == 0)
        	{//SAIDA HQ BALLAS
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1154.5570,-1180.6460,32.8187);
	    		SetPlayerFacingAngle(playerid, 82.4074);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(2.0, playerid,2270.1592,-1210.4899,1047.5625) && GetPlayerVirtualWorld(playerid) == 1)
        	{//SAIDA HQ BALLAS
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-2463.6145,131.9267,35.1719);
	    		SetPlayerFacingAngle(playerid, 143.8791);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
	        else if(PlayerToPoint(1.0, playerid,2807.5945,-1174.6881,1025.5703) && GetPlayerVirtualWorld(playerid) == 0)
        	{//SAIDA HQ Tropa da Turquia
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1674.1207,-2121.9700,14.1460);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
	        else if(PlayerToPoint(1.0, playerid,2807.5945,-1174.6881,1025.5703) && GetPlayerVirtualWorld(playerid) == 1)
        	{//SAIDA HQ Tropa da Turquia
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-2336.6111,-166.8267,35.5547);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
        	}
			else if (PlayerToPoint(2, playerid,390.4640,173.8098,1008.3828) && GetPlayerVirtualWorld(playerid) == 0)
			{
		    	SetPlayerInterior(playerid,0);
		    	SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,1480.9403,-1770.8481,18.7958);
			}
			else if(PlayerToPoint(2, playerid,390.4640,173.8098,1008.3828)	&& GetPlayerVirtualWorld(playerid) == 1)
			{
		    	SetPlayerInterior(playerid,0);
		    	SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,-2766.1321,375.6091,6.3347);
			}
	        else if (PlayerToPoint(1.0, playerid,2496.0398,-1692.0844,1014.7422) && GetPlayerVirtualWorld(playerid) == 1)
        	{
	    	//HQ Groove Street Saida
	     		SetPlayerPos(playerid,-2457.4695,794.9935,35.1719);
	     		SetPlayerInterior(playerid,0);
	     		SetPlayerFacingAngle(playerid, 4.0967);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(1.0, playerid,2496.0398,-1692.0844,1014.7422) && GetPlayerVirtualWorld(playerid) == 0)
        	{
	    	//HQ Groove Street Saida
	     		SetPlayerPos(playerid,2466.3386,-1673.6875,13.4876);
	     		SetPlayerInterior(playerid,0);
	     		SetPlayerFacingAngle(playerid, 4.0967);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(1.0, playerid,2496.0398,-1692.0844,1014.7422) && GetPlayerVirtualWorld(playerid) == 2)
        	{
	    	//HQ Groove Street Saida
	     		SetPlayerPos(playerid,-2356.0017,1007.9794,50.8984);
	     		SetPlayerInterior(playerid,0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if(PlayerToPoint(1.0, playerid,343.7183,304.9376,999.1484)  && GetPlayerVirtualWorld(playerid) == 0)
        	{//SAIDA HQ HITMANS
	     		SetPlayerInterior(playerid, 0);
	     		SetPlayerPos(playerid,1106.5106,-299.5384,74.5391);
	     		PlayerInfo[playerid][pInt] = 0;
	     		SetPlayerVirtualWorld(playerid, 0);
	     		PlayerInfo[playerid][pLocal] = 255;
     		}
	        else if(PlayerToPoint(1.0, playerid,343.7183,304.9376,999.1484)  && GetPlayerVirtualWorld(playerid) == 1)
        	{//SAIDA HQ Triads
	     		SetPlayerInterior(playerid, 0);
	     		SetPlayerPos(playerid,-1681.4905,1350.2188,7.1722);
	     		PlayerInfo[playerid][pInt] = 0;
	     		SetPlayerVirtualWorld(playerid, 0);
	     		PlayerInfo[playerid][pLocal] = 255;
     		}
        	else if(PlayerToPoint(1.0, playerid,2308.5269,-1211.2737,1049.0234) && GetPlayerVirtualWorld(playerid) == 0)
        	{//SAIDA HQ CV
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2140.9382,-1801.9813,16.1475);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(1.0, playerid,2308.5269,-1211.2737,1049.0234) && GetPlayerVirtualWorld(playerid) == 1)
        	{//SAIDA HQ CV
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-2524.4580,1216.2802,37.6552);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
	        else if (PlayerToPoint(1.0, playerid,295.1739,1472.2755,1080.2578) && GetPlayerVirtualWorld(playerid) == 0)
	        {//SAIDA HQ VAGOS
			    SetPlayerPos(playerid, 2808.1106,-1189.6528,25.3436);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
	            PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	        }
	        else if (PlayerToPoint(1.0, playerid,295.1739,1472.2755,1080.2578) && GetPlayerVirtualWorld(playerid) == 1)
	        {//SAIDA HQ VAGOS
			    SetPlayerPos(playerid, -1829.7848,105.8367,15.1172);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
	            PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	        }
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/home", true) == 0 || strcmp(cmd, "/mapacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 255)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~r~Mapa da Casa Marcado!", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/compraremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce ja tem uma empresa, Digite /venderemp para comprar outra.");
				return true;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "Voce precisa ser nivel %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Voce comprou uma empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajuda para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voce nao tem grana suficiente");
						return true;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "Voce precisa ser nivel %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return true;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Voce comprou esta empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajuda para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voce nao tem grana o suficiente");
						return true;
					}
				}
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/venderemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao possui uma empresa.");
				return true;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce e casado(a), nao pode vender a empresa!");
		        return true;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey]-100;
				GivePlayerMoney(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 0;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[borse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[borse][bLocked] = 0;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,BizzInfo[borse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[borse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return true;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
			    new borse = PlayerInfo[playerid][pPbiskey];
			    format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 255;
                return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Voce nao tem uma Empresa.");
			}
		}
		return true;
	}
//==============================================================================
	if (strcmp(cmd, "/infoempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if(borse == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem uma empresa.");
				return true;
			}
			if (borse >= 100)
			{
				PrintSBizInfo(playerid,borse-100);
			}
			else
			{
				PrintBizInfo(playerid,borse);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/entradaemp", true) == 0 || strcmp(cmd, "/entradaempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem uma Empresa !");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /entradadaempresa [preco]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 10000)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Preco da entrda minmo R$0, maximo R$10000.");
				return true;
			}
			if (borse >= 10000)
			{
				SBizzInfo[borse-10000][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", SBizzInfo[borse-10000][sbEntranceCost]);
			}
			else
			{
				BizzInfo[borse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
			}
			Atualizar3Dtexts();
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/extorcao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Voce nao tem uma Empresa");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /extorcao [id] (ou 555 para Nenhum)");
			    return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s esta na extorcao de sua empresa.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* Agora voce esta na extorcao da empresa de %s.",PlayerName(playerid));
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (borse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorcao: %s",SBizzInfo[borse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorcao: %s",BizzInfo[borse][bExtortion]);
					}
					OnPropUpdate();
					Atualizar3Dtexts();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (borse >= 100)
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorcao: %s",SBizzInfo[borse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorcao: %s",BizzInfo[borse][bExtortion]);
				}
				OnPropUpdate();
				Atualizar3Dtexts();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/nomeempresa", true) == 0 || strcmp(cmd, "/nomeemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem uma Empresa");
				return true;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /nomeempresa [Nome]");
			}
			if (borse >= 100)
			{
				strmid(SBizzInfo[borse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",SBizzInfo[borse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[borse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",BizzInfo[borse][bMessage]);
			}
			OnPropUpdate();
			Atualizar3Dtexts();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return true;
	}
	if(strcmp(cmd, "/sacarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem uma Empresa");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Voce tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Voce tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return true;
			}
			if (borse >= 100)
			{
				if(cashdeposit > SBizzInfo[borse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem essa quantia.");
					return true;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem essa quantia.");
					return true;
				}
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Sua empresa esta longe de voce.");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[borse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  Voce retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Sua empresa esta longe de voce.");
					return true;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					BizzInfo[borse][bTill] -= cashdeposit;
					format(string, sizeof(string), "   Voce retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/depositarempresa", true) == 0 || strcmp(cmd, "/depositaremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem uma empresa.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Voce tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Voce tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				return true;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return true;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao tem tanto");
				return true;
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse][sbEntranceX],SBizzInfo[borse][sbEntranceY],SBizzInfo[borse][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce esta longe de sua empresa");
					return true;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[borse-100][sbTill] += cashdeposit;
					ExtortionSBiz(borse-100, cashdeposit);
					format(string, sizeof(string), "  Voce guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d");
					return true;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[borse][bTill] += cashdeposit;
					ExtortionBiz(borse, cashdeposit);
					format(string, sizeof(string), "  Voce depositou R$%d no cofre de sua empresa Total: R$%d", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return true;
				}
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/curar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "* %s pega seu colete.", PlayerName(playerid));
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							Controle(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else if(HouseInfo[location][hHel] == 1)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerInfo[playerid][pDoenca] = 0;
							SetPlayerDrunkLevel (playerid, 0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce foi curado.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY,"Este lugar nao tem lugar de se curar.");
						}
						return true;
					}
					else if(location == 101)//Restaurant
					{
					    SetPlayerHealth(playerid,100.0);
						SetPlayerArmour(playerid,100.0);
						PlayerInfo[playerid][pDoenca] = 0;
						SetPlayerDrunkLevel (playerid, 0);
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce foi curado.");
					}
					else if(location == 102 && IsACop(playerid))//Police Armorry
					{
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s Foi Curado.", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Controle(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /curar [id] [preco]");
					return true;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "USE: /curar [id] [preco]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   O Preco nao pode passar de 5000 !"); return true; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode se curar!");
				return true;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMembro]==4||PlayerInfo[playerid][pLider]==4)//model
					{
						new Veh = GetPlayerVehicleID(playerid);
						if(IsAnAmBPRanceCar(Veh) || IsAnAmBPRanceSFCar(Veh))
						{
							format(string, sizeof(string), "~y~Voce foi curado ~n~~w~%s~n~~g~R$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							GivePlayerMoney(playerid,moneys);
							GivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
						    new colete = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        colete = 0 * PlayerInfo[playerid][pPainPerk]; colete += 100;
								SetPlayerArmour(giveplayerid, colete);
						    }
						    else
						    {
						        colete = 100;
						        SetPlayerArmour(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Voce foi curado, %d de saude e %d de colete por -R$%d",hp,colete,moneys);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
							if(PlayerInfo[giveplayerid][pDoenca] > 0)
				            {
								PlayerInfo[giveplayerid][pDoenca] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Voce nao esta infectado com nenhuma doenca, por causa de cuidados medicos!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Voces dois precisam estar no veiculo!");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar o comando!");
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Esse jogador esta offline");
			}
		}
		return true;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /id [ nick ]");
				return true;
			}
			new target;
			target = ReturnUser(tmp);
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(gstring, sizeof(gstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, gstring);
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/tv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	        SendClientMessage(playerid, COLOR_GREEN, "Voce nao esta autorizado a usar este comando");
	        return true;
	        }
			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
	        if(PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~g~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SetPlayerSkin(playerid,217);
					MedicBill[playerid] = 0;
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta de TV em Ninguem !");
				    return true;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				giveplayerid = ReturnUser(tmp);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayerid);
				if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetPlayerMoney(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
						    SetPlayerToTeamColor(playerid);
						    SetPlayerVirtualWorld(playerid,world);
						    PlayerInfo[playerid][pSpawn] = 0;
							format(string, sizeof(string), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						WatchingTV[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Jogador nao esta disponivel.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   Voce nao tem permissao para usar esse comando!");
				return true;
			}
		}
		return true;
	}

	if(strcmp(cmd, "/tv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pHelper] == 1 || PlayerInfo[playerid][pMod] == 1)
	        {
	        SendClientMessage(playerid, COLOR_GREEN, "Voce nao esta autorizado a usar este comando");
	        return true;
	        }
			if(helpertrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta em modo de servico! (/shelper)");
				return true;
			}
	        if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pMod] == 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~g~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SetPlayerSkin(playerid,217);
					MedicBill[playerid] = 0;
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta de TV em Ninguem !");
				    return true;
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		new lolz[50];
		if(PlayerInfo[playerid][pAdmin] == 2)
		{
			lolz = "Administrador";
		}
		if(PlayerInfo[playerid][pAdmin] == 3)
	    {
			lolz = "Coordenador";
		}
		if(PlayerInfo[playerid][pAdmin] == 4)
		{
			lolz = "Supervisor";
		}
		if(PlayerInfo[playerid][pAdmin] == 1337)
		{
			lolz = "Gerente";
		}
		if(PlayerInfo[playerid][pAdmin] == 1340)
		{
			lolz = "Sub Fundador";
		}
		if(PlayerInfo[playerid][pAdmin] == 1341)
		{
			lolz = "Fundador";
		}
		if(PlayerInfo[playerid][pAdmin] == 3000)
		{
			lolz = "CEO";
		}
		if(PlayerInfo[playerid][pHelper] >= 1)
		{
			lolz = "Helper";
		}

		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use: /a [CHAT STAFF]");
				return true;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
				format(string, sizeof(string), "[{007ba7}STAFF - %s{FFFFFF}][{b2ffff}%s{FFFFFF}][{b2ffff}%d{FFFFFF}]: %s", lolz, PlayerName(playerid), playerid, result);
				ABroadCast(0xFFF8F8AA, string, 1);
			}
  			format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] *%d Admin %s: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerInfo[playerid][pAdmin], sendername, result);
			AChatLog(string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ha", true) == 0 || strcmp(cmd, "/helperadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ha ou /helperadmin [helpers/admins chat]");
				return true;
			}
			format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], sendername, result);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendHelperMessage(0xFFF8F8AA, string);
			}
			format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], sendername, result);
			if (PlayerInfo[playerid][pHelper] >= 1)
			{
				SendHelperMessage(0x63C3F6AA, string);
			}
			format(string, sizeof(string), "*%d Mod %s: %s", PlayerInfo[playerid][pMod], sendername, result);
			if (PlayerInfo[playerid][pMod] >= 1)
			{
				SendHelperMessage(0x63C3F6AA, string);
			}
			printf("Moderador %s: %s", sendername, result);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/h", true) == 0 || strcmp(cmd, "/hc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/h ou /hc)helper [helper chat]");
				return true;
			}
			format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], sendername, result);
			if (PlayerInfo[playerid][pHelper] >= 1)
			{
				SendHelperMessage(0x63C3F6AA, string);
			}
			printf("Helper %s: %s", sendername, result);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[100];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return true;
				}
				if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				{
					format(string, sizeof(string), "~b~Cleitin_Bitoneira[BOT]: ~w~%s",result);
				}
				else
				{
					format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 3);
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/cnn2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn2 <Digite> ");
					return true;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Nao existe 2! so 0,1,3,4!");
					return true;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[100];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn2 <Digite> [cnn2 formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return true;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/agendar",true) == 0)
    {
        if(admtrampando[playerid] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
        new jogador[128], tempo[128], str[50];
        jogador = strtok(cmdtext, idx);
        tempo = strtok(cmdtext, idx);
        new length = strlen(cmdtext);
        while ((idx < length) && (cmdtext[idx] <= ' ')) { idx++; }
        new offset = idx; new result[128];
        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) { result[idx - offset] = cmdtext[idx]; idx++; }
        result[idx - offset] = EOS;
        if(!strlen(jogador) || !strlen(tempo) || !strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "USE: /agendar [Nome] [Tempo] [Motivo]");
        for(new x = 0, y = GetMaxPlayers(); x != y; x++)
        {
            if(IsPlayerConnected(x))
            {
            new nome[24];
            GetPlayerName(x, nome, MAX_PLAYER_NAME);
            if(!strcmp(nome, jogador))  return SendClientMessage(playerid, COLOR_GREY, " O jogador esta online... Use o comando /cadeia para prendelo. !");
            }
        }
        format(str,sizeof(str), "Contas/%s.ini", jogador);
        if(!dini_Exists(str)) return SendClientMessage(playerid, COLOR_GREY, "   Nome Invalido! !");
        format(string, sizeof(string), "O admin %s agendou %s, %d minutos, Motivo: %s",PlayerName(playerid), jogador, strval(tempo), result);
        SendClientMessageToAll(COLOR_LIGHTRED, string);
        dini_IntSet(str, "pJailed", 6);
        dini_IntSet(str, "pJailTime", strval(tempo) * 60);
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	/*if(strcmp("/fundoonibus", cmdtext, true) == 0)
    {
		SetPlayerPos(playerid, 2021.9740,2235.6626,2103.9536);
 		SetPlayerFacingAngle(playerid, 355.3504);
 		SetPlayerInterior(playerid, 1);
        SendClientMessage(playerid, COLOR_GRAD2, "Voce foi teleportado ao onibus");
        return 1;
    }*/
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/cadeia",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 1 || PlayerInfo[playerid][pHelper] >= 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta autorizado para usar este comando!");
	            return true;
	        }
	        tmp = strtok(cmdtext, idx);
	        tempo = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo] [Motivo]");
				return true;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [Tempo] [Motivo]");
				return true;
			}
            /*if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}*/
			giveplayerid = ReturnUser(tmp);
			tempo2 = strval(tempo);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
   		         	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Admin %s colocou %s na Cadeia, por %s minutos, Motivo: %s",PlayerName(playerid), giveplayer, tempo, (result));
					CadeiaLog(string);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
					ResetPlayerWeaponsEx(giveplayerid);
					OnPlayerUpdate(giveplayerid);
					PlayerInfo[giveplayerid][pJailed] = 6;
					PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
					SetPlayerInterior(giveplayerid, 5);
					SetPlayerPos(giveplayerid, 318.5804,316.9043,999.1484);

					//if(_:g_WelcomeChannelId == 0)
					//g_WelcomeChannelId = DCC_FindChannelById("865653946244530186");
					new str[128];
					new stafflog[128];
					new playerlog[128];
					new motivolog[128];
					new tempolog[128];
					new DCC_Embed:embed = DCC_CreateEmbed();
					DCC_SetEmbedTitle(embed, "Log Cadeia");
					DCC_SetEmbedColor(embed, 0xFF0000);
					format(str, sizeof str, "Alguém levou cadeia in game!");
					DCC_SetEmbedDescription(embed, str);
					format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
					DCC_AddEmbedField(embed, "Staff:", stafflog, false);
					format(playerlog, sizeof playerlog, "`%s`", giveplayer);
					DCC_AddEmbedField(embed, "Player:", playerlog, false);
					format(motivolog, sizeof motivolog, "`%s`", (result));
					DCC_AddEmbedField(embed, "Motivo:", motivolog, false);
					format(tempolog, sizeof tempolog, "`%s`", tempo);
					DCC_AddEmbedField(embed, "Tempo:", tempolog, false);
					DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SendChannelEmbedMessage(logCadeia, embed);
			 	}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
			    return true;
			}
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/dvc", true) == 0)
    {
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
        	for(new x = 0; x < sizeof(CreatedCars); x++)
        	{
            	if(!CreatedCars[x]) break;
            	DestroyVehicle(CreatedCars[x]);
            	CreatedCars[x] = 0;
        	}
        	CreatedCar = 0;
        	SendClientMessage(playerid, COLOR_GREY, "   Todos os veiculos criados foram destruidos!");
  		}
		return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/sethora", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sethora [hora do dia] (0-23)");
				return true;
			}
			new hour2;
			hour2 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
	            SetWorldTime(hour2);
				format(string, sizeof(string), "   Tempo Definido Para %d Horas.", hour2);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar o comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/iniciarloteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
             	if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
	            format(string, sizeof(string), "Loteria: Ja comecou a loteria.");
	            OOCNews(COLOR_WHITE, string);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem permissao para usar esse comando!");
	            return true;
	        }
	    }
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/editar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new editarnome[MAX_PLAYER_NAME];
			new editarnome2[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD4, "1. Level           |7. Respeito        |13. Reporter   |19. Carro Vip");
				SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu          |8. ChaveCasa       |14. V.Drogas   |20. Carro Socio");
				SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar        |9. ChaveEmpresa    |15. P.Sexo     |21. Origem");
				SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas    |10. Detetive       |16. Box");
				SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco  |11. Advogado       |17. Matou");
				SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecanico       |18. Materiais");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    GetPlayerName(playerid,editarnome,sizeof(editarnome));
	    	    GetPlayerName(giveplayerid,editarnome2,sizeof(editarnome2));
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
						SendClientMessage(playerid, COLOR_GRAD4, "1. Level           |7. Respeito        |13. Reporter   |19. Carro Vip");
						SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu          |8. ChaveCasa       |14. V.Drogas   |20. Carro Socio");
						SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar        |9. ChaveEmpresa    |15. P.Sexo     |21. Origem");
						SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas    |10. Detetive       |16. Box");
						SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco  |11. Advogado       |17. Matou");
						SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecanico       |18. Materiais");
						return true;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COR_HELPER, "USE: /editar [id] [Status] [quantidade]");
						SendClientMessage(playerid, COLOR_GRAD4, "1. Level           |7. Respeito        |13. Reporter   |19. Carro Vip");
						SendClientMessage(playerid, COLOR_GRAD4, "2. Morreu          |8. ChaveCasa       |14. V.Drogas   |20. Carro Socio");
						SendClientMessage(playerid, COLOR_GRAD4, "3. Melhorar        |9. ChaveEmpresa    |15. P.Sexo     |21. Origem");
						SendClientMessage(playerid, COLOR_GRAD4, "4. HorasJogadas    |10. Detetive       |16. Box");
						SendClientMessage(playerid, COLOR_GRAD4, "5. Conta do Banco  |11. Advogado       |17. Matou");
						SendClientMessage(playerid, COLOR_GRAD4, "6. NumeroTelefone  |12. Mecanico       |18. Materiais");
						return true;
					}
					new quantidade;
					quantidade = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1337)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
							return true;
						}
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = quantidade;
								format(string, sizeof(string), "   Voce setou level %d para o jogador", quantidade);
								ScoreLevel(giveplayerid);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pDeaths] = quantidade;
								format(string, sizeof(string), "   Voce setou %d vezes que ele morreu", quantidade);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = quantidade;
								format(string, sizeof(string), "   Voce setou %d de pontos de melhoria", quantidade);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pConnectTime] = quantidade;
								format(string, sizeof(string), "   Voce setou %d horas jogadas para o jogador", quantidade);
								format(string, sizeof(string), "   Voce setou horas jogadas do player");
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pConta] = quantidade;
								format(string, sizeof(string), "   Voce setou R$%d no banco do jogador", quantidade);
								format(gstring, 128, "%s usou /editar banco em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								PayLog(gstring);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = quantidade;
								format(string, sizeof(string), "   Voce setou o celular do jogador para %d", quantidade);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = quantidade;
								format(string, sizeof(string), "   Voce setou o respeito do jogador para %d", quantidade);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPHousekey] = quantidade;
								format(string, sizeof(string), "   Voce setou a chave de casa pra %d", quantidade);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = quantidade;
								format(string, sizeof(string), "   Voce setou a chave da empresa %d", quantidade);
							}
							case 10:
							{
								PlayerInfo[giveplayerid][pDetSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou nivel de detetive para: %d", quantidade);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pLawSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou nivel de advogado para: %d", quantidade);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pMechSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou nivel de mecanico para: %d", quantidade);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou skill %d de Reporter", quantidade);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pDrogasSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou a Skill de Drogas para: %d", quantidade);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pSexSkill] = quantidade;
								format(string, sizeof(string), "  Voce setou a Skill de P.Sexo para: %d", quantidade);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = quantidade;
								format(string, sizeof(string), "   Voce setou skill %d de Box", quantidade);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pKills] = quantidade;
								format(string, sizeof(string), "   Voce setou %d vezes que ele matou alguem", quantidade);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pMats] = quantidade;
								format(string, sizeof(string), "   Voce setou Materiais para: %d", quantidade);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pCarKey] = quantidade;
								format(string, sizeof(string), "   Voce setou o [ID] Carro Vip para: %d", quantidade);
							}
							case 20:
							{
								PlayerInfo[giveplayerid][pCarKey2] = quantidade;
								format(string, sizeof(string), "   Voce setou o [ID] Carro Socio para: %d", quantidade);
							}
							case 21:
							{
								PlayerInfo[giveplayerid][pOrigem] = quantidade;
								format(string, sizeof(string), "   Voce setou a Origem do jogador para: %d", quantidade);
							}
							default:
							{
								format(string, sizeof(string), "   Codigo Invalido", quantidade);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/setint", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY," Voce nao pode trocar o interior agora!");
			return true;
		}
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setint [interiorid]");
				return true;
			}
			new intid;
			intid = strval(tmp);
			SetPlayerInterior(playerid,intid);
			PlayerInfo[playerid][pInt] = intid;
			format(string, sizeof(string), "   Interior Mudado Para %d.", intid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	/*if(strcmp(cmd, "/convidarinfohq", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new para1;
            para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444)
			{
			    new lolz = GetPlayerOrg(playerid);
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COLOR_GRAD1, "Nao ha mais vagas na lista use /limparvaga primeiro.");
					return true;
	    		}
				if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player ja participa de Org/Gang/Mafia.");
						return true;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						ShowPlayerDialog(playerid, 644, DIALOG_STYLE_INPUT, "Convidar", "Digite o nome da pessoa a ser convidada","Convidar","Cancelar");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente lideres podem usar este comando !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/convidar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /convidar [playerid/Parte-do-Nick]");
				return true;
			}
			new para1;
            para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444)
			{
			    new lolz = GetPlayerOrg(playerid);
				if(PlayerInfo[para1][pLevel] < 4) return SendClientMessage(playerid, -1, "O membro precisa ter pelo menos nivel 5.");
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COLOR_GRAD1, "Nao ha mais vagas na lista use /limparvaga primeiro.");
					return true;
	    		}
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player ja participa de Org/Gang/Mafia.");
						return true;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voce convidou %s para sua organizacao: %s.", giveplayer,NomeORG(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						new convitestring[256];
		        		format(convitestring,sizeof(convitestring), "Voce foi convidado para uma organizacao: %s\nDeseja entrar para a organizacao ?",NomeORG(playerid));
		        		ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",convitestring,"Sim","Nao");
						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente lideres podem usar este comando !");
			}
		}
		return true;
	}*/
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/Demitir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
				return true;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce nao pode demitir quem nao e da sua org.");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[100];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
								return true;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(string, sizeof(string), "* Voce foi demitido pelo lider %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora voce e um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
							if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 41; }
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Voce demitiu %s, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return true;
						}
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voce nao e um lider!");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp("/infolider", cmdtext, true, 10) == 0 || strcmp(cmd, "/orgs", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			new DialogTheus[3000];
			format(string,sizeof(string), ".=.=.=.=.=.=.=.=.=.=.=Neutras.=.=.=.=.=.=.=.=.=.=.=\n\n");
			strcat(DialogTheus,string);
    		format(string,sizeof(string), "{87CEFA}7 - Prefeito: {FFFFFF}%s\n", InfoOrg[7][Lider]);
            strcat(DialogTheus,string);
			format(string,sizeof(string), "{F08080}4 - Medicos LS:{FFFFFF} %s\n", InfoOrg[4][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{FFFF00}10 - Taxistas:{FFFFFF} %s\n", InfoOrg[10][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{FFA54F}9 - Los Santos News:{FFFFFF} %s\n", InfoOrg[9][Lider]);
            strcat(DialogTheus,string);
            
            format(string,sizeof(string), ".=.=.=.=.=.=.=.=.=.=.Policiais.=.=.=.=.=.=.=.=.=.=\n\n");
			strcat(DialogTheus,string);
			format(string,sizeof(string), "{1E90FF}1 - Policia Militar:{FFFFFF} %s\n", InfoOrg[1][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{CD853F}11 - Policia Federal:{FFFFFF} %s\n", InfoOrg[11][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{ADD618}16 - Policia Civil: {FFFFFF}%s\n", InfoOrg[16][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{696969}2 - BOPE:{FFFFFF} %s\n", InfoOrg[2][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{6B8E23}3 - Forcas Armadas:{FFFFFF} %s\n", InfoOrg[3][Lider]);
            strcat(DialogTheus,string);
            
            format(string,sizeof(string), ".=.=.=.=.=.=.=.=.=.=Criminosas.=.=.=.=.=.=.=.=.=.=\n\n");
			strcat(DialogTheus,string);
    		format(string,sizeof(string), "{00CED1}12 - Mafia Cosa Nostra:{FFFFFF} %s\n", InfoOrg[12][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{00FF00}14 - Groove Street:{FFFFFF} %s\n", InfoOrg[14][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{FFD700}18 - Vagos:{FFFFFF} %s\n", InfoOrg[18][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{FF0000}19 - Comando Vermelho:{FFFFFF} %s\n", InfoOrg[19][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{CAFF70}20 - Sons of Anarchy: {FFFFFF}%s\n", InfoOrg[20][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{8B3A3A}21 - Elements:{FFFFFF} %s\n", InfoOrg[21][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{2E8B57}22 - Triads:{FFFFFF} %s\n", InfoOrg[22][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{00868B}23 - Primeiro Comando Capital:{FFFFFF} %s\n", InfoOrg[23][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{104E8B}28 - Grota:{FFFFFF} %s\n", InfoOrg[28][Lider]);
            strcat(DialogTheus,string);
            ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_LIST, "{FFFFFF}Organizacoes do servidor", DialogTheus, "Fechar", "");
        }
		return true;
   	}
   	
   	if(strcmp(cmd, "/cornos", true) == 0)
   	{
   	    if(IsPlayerConnected(playerid))
	    {
			new DialogTheus[3000];
			format(string,sizeof(string), "{FFFFFF} Fernandin");
			strcat(DialogTheus,string);
			format(string,sizeof(string), "{FFFFFF} Thiaguin");
			strcat(DialogTheus,string);
			format(string,sizeof(string), "{FFFFFF} Luffy");
			strcat(DialogTheus,string);
			ShowPlayerDialog(playerid, 5555, DIALOG_STYLE_LIST, "Os cornos sao:", DialogTheus, "Fechar", "");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/empregos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
                if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Detetive - 1");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Advogado - 2");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Profissional de Sexo - 3");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Vendedor de Drogas - 4");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Mecanico - 5");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Seguranca - 6");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Vendedor de Armas - 7");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Motorista de Onibus - 9");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Caminhoneiro - 10");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
      		if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Use: /ip [ID]");
				SendClientMessage(playerid, COLOR_YELLOW, "Comando Para Ver o Ip Do Jogador.");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[128];
				GetPlayerIp(giveplayerid,ip,128);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "-| %s's IP: %s |-", giveplayer,ip);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse nao e um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Voce nao tem permissao para usar esse comando.");
	    	return true;
  		}
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/desbanip",true)==0 || strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
            if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbanip [IP DO JOGADOR]");
		        return true;
   			}
			format(gstring, 128, "IPsBanidos/%s.ini", tmp);
			if(!dini_Exists(gstring))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"IP nao encontrado na base de dados");
		        return true;
			}
			else
			{
			    fremove(gstring);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, "ADM: %s desbaniu o IP %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
		        return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/nomedesban",true)==0 || strcmp(cmd,"/unbannome",true)==0 || strcmp(cmd,"/desbannome",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
            if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /nomedesban [NOME DO JOGADOR]");
		        return true;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "Banidos/%s.ini",tmp);
			if(!dini_Exists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick nao encontrado na base de dados");
		        return true;
			}
			else
			{
   				dini_Remove(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, 128, "ADM: Cleitin_Bitoneira[BOT] desbaniu o Nick %s",tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
			else
			{
				format(string, 128, "ADM: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/setarmembro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarmembro [id] [Numero(1-25)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level == 0) { SendClientMessage(playerid, COLOR_GREY, "Para tirar o set desse membro use /removermembro"); return true; }
			GetPlayerName(playerid, sendername, 256);
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pMod] >= 1)
			{
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player ja participa de uma organizacao!");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
					if(level == 1) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; }
				        else if(level == 34) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; }
				        else if(level == 2) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; }
				        else if(level == 35) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; }
				        else if(level == 3) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; }
				        else if(level == 4) { PlayerInfo[para1][pTeam] = 1; gTeam[para1] = 1; }
				        else if(level == 5) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; }
				        else if(level == 6) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; }
				        else if(level == 7) { PlayerInfo[para1][pTeam] = 7; gTeam[para1] = 7; }
				        else if(level == 8) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
				        else if(level == 9) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
				        else if(level == 10) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
                        else if(level == 11) { PlayerInfo[para1][pTeam] = 25; gTeam[para1] = 2; }
                        else if(level == 12) { PlayerInfo[para1][pTeam] = 22; gTeam[para1] = 12; }
                        else if(level == 13) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
						else if(level == 14) { PlayerInfo[para1][pTeam] = 15; gTeam[para1] = 12; }
						else if(level == 24) { PlayerInfo[para1][pTeam] = 15; gTeam[para1] = 12; }
				        else if(level == 15) { PlayerInfo[para1][pTeam] = 16; gTeam[para1] = 17; }
				        else if(level == 16) { PlayerInfo[para1][pTeam] = 25; gTeam[para1] = 2; }
				        else if(level == 17) { PlayerInfo[para1][pTeam] = 18; gTeam[para1] = 12; }
				        else if(level == 18) { PlayerInfo[para1][pTeam] = 19; gTeam[para1] = 12; }
				        else if(level == 25) { PlayerInfo[para1][pTeam] = 19; gTeam[para1] = 12; }
				        else if(level == 19) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 20) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 21) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 23) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 26) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 22) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
				        else if(level == 27) { PlayerInfo[para1][pTeam] = 1; gTeam[para1] = 1; }
				        else if(level == 28) { PlayerInfo[para1][pTeam] = 20; gTeam[para1] = 12; }
				        else if(level == 29) { PlayerInfo[para1][pTeam] = 18; gTeam[para1] = 12; }
				        else if(level == 30) { PlayerInfo[para1][pTeam] = 7; gTeam[para1] = 7; }
				        else if(level == 31) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; }
				        else if(level == 32) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
				        else if(level == 33) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; }
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pMembro] = level;
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							SendClientMessage(para1, COLOR_LIGHTBLUE, "   Voce foi promovido a lider pelo admin BPR_BOT");
						}
						else
						{
							format(string, sizeof(string), "%s setou voce em alguma org!", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						SendClientMessage(para1, COLOR_LIGHTBLUE,"Setado com sucesso!");
						format(string, sizeof(string), "%s foi setado com sucesso na org!", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        //format(string, sizeof(string), "ADMIN: %s deu li9der da org:[%s] para %s.", sendername, NomeORG(level), giveplayer);
                        //ideresLog(string);
						InviteJob[para1] = level;
						ConviteInfoOrg(PlayerName(para1), InviteJob[para1], 1);
                        MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 1;
						ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
					    //SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}

	if(strcmp(cmd, "/darlider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darlider [id] [Numero(1-25)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level == 0) { SendClientMessage(playerid, COLOR_GREY, "Para tirar o lider de uma organizacao voce deve usar /limparlider"); return true; }
			if(level > 35 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Empregos de 1 a 35"); return true; }
			GetPlayerName(playerid, sendername, 256);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player ja participa de uma organizacao!");
				    return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(strcmp(InfoOrg[level][Lider],"Ninguem",true)==0)
						{
							ConviteInfoOrg(PlayerName(para1), level, 6);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "Ja tem lider nessa ORG, use /limparlider antes de colocar outro lider");
						    return true;
						}
						/*if(level == 1) { PlayerInfo[para1][pSkin] = 265; }//Policia Militar
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//BOPE
						else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Forcas Armadas
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/AmBPRance
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Tropa da Turquia
						else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//Peaky Blinders
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Reporters
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Prefeito
						else if(level == 11) { PlayerInfo[para1][pSkin] = 286; }//Policia Federal
						else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Mafia Cosa Nostra
						else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Mafia FamiliaShelby
						else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//ALQaeda
						else if(level == 16) { PlayerInfo[para1][pSkin] = 283; }//Policia Civil
                        else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                        else if(level == 20) { PlayerInfo[para1][pSkin] = 100; }//Sons of Anarchy
                        else if(level == 21) { PlayerInfo[para1][pSkin] = 292; }//Elements
                        else if(level == 22) { PlayerInfo[para1][pSkin] = 117; }//Triads
                        else if(level == 23) { PlayerInfo[para1][pSkin] = 47; }//PCC
                        else if(level == 24) { PlayerInfo[para1][pSkin] = 270; }//Bonde dos 40
                        else if(level == 25) { PlayerInfo[para1][pSkin] = 108; }//Familia do Norte
                        else if(level == 26) { PlayerInfo[para1][pSkin] = 47; }//Terceiro Comando Puro
                        else if(level == 27) { PlayerInfo[para1][pSkin] = 70; }//Medicos SF
                        else if(level == 28) { PlayerInfo[para1][pSkin] = 19; }//CV SF
                        else if(level == 29) { PlayerInfo[para1][pSkin] = 104; }//Tropa da Turquia
                        else if(level == 30) { PlayerInfo[para1][pSkin] = 147; }//Prefeito SF
                        else if(level == 31) { PlayerInfo[para1][pSkin] = 115; }//Milicia
                        else if(level == 32) { PlayerInfo[para1][pSkin] = 227; }//Reporters SF
                        else if(level == 33) { PlayerInfo[para1][pSkin] = 61; }//Taxistas SF
                        else if(level == 34) { PlayerInfo[para1][pSkin] = 265; }//Policia Rodoviaria Federal
                        else if(level == 35)	{ PlayerInfo[para1][pSkin] = 285; }//Forca Tatica*/
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							SendClientMessage(para1, COLOR_LIGHTBLUE, "   Voce foi promovido a lider pelo admin Cleitin_Bitoneira[BOT]");
						}
						else
						{
							format(string, sizeof(string), "   Voce foi promovido a lider pelo admin %s", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
						format(string, sizeof(string), "   Voce promoveu %s a Lider.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "ADMIN: %s deu li9der da org:[%s] para %s.", sendername, NomeORG(level), giveplayer);
                        LideresLog(string);
                        MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
					    //SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /forceskin [id]");
				return true;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMembro] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Este jogador nao esta em um Emprego / Familia");
				            return true;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Voce foi forcado a mudar o skin pelo Admin Cleitin_Bitoneira[BOT].");
						}
						else
						{
							format(string, sizeof(string), "* Voce foi forcado a mudar o skin pelo Admin %s.", PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "* Voce forcou o(a) %s Para muda seu skin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMembro] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMembro] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMembro] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMembro] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMembro] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMembro] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMembro] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMembro] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else if(PlayerInfo[para1][pMembro] == 22) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 118; }
				        else { return true; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						Controle(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMembro];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pSkin] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/promover", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use:  /Promover [ID/Nick] [Cargos (1-5)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 555 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "   Cargos de 1 a 555, Cargo 444 e 555 e Sub-Lider!"); return true; }
			if (PlayerInfo[playerid][pLider] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
    				for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
				  		{
					    	if(para1 != INVALID_PLAYER_ID)
					      	{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[para1][pCargo] = level;
								format(string, sizeof(string), "   Voce foi promovido pelo lider %s", PlayerName(playerid));
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "   Voce promoveu %s a cargo %d.", giveplayer,level);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								new org = PlayerInfo[playerid][pLider];
								if(level == 444)
								{
						    		if(strcmp(InfoOrg[org][Sub444],"Ninguem",true)==0)
									{
							    		DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
									else
									{
							   			strmid(string, InfoOrg[org][Sub444], 0, strlen(InfoOrg[org][Sub444]), 255);
							    		DemitirInfoOrg(giveplayer);
							    		DemitirInfoOrg(InfoOrg[org][Sub444]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
								}
        						if(level == 555)
								{
						    		if(strcmp(InfoOrg[org][Sub555],"Ninguem",true)==0)
									{
							    		DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
									else
									{
							   			strmid(string, InfoOrg[org][Sub555], 0, strlen(InfoOrg[org][Sub555]), 255);
							    		DemitirInfoOrg(giveplayer);
							    		DemitirInfoOrg(InfoOrg[org][Sub555]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
								}
								if(strcmp(InfoOrg[org][Sub444],giveplayer,true)==0)
								{
		    						if(level < 444)
									{
										DemitirInfoOrg(giveplayer);
								    	ConviteInfoOrg(giveplayer, org, level);
									}
								}
								if(strcmp(InfoOrg[org][Sub555],giveplayer,true)==0)
								{
		    						if(level < 555)
									{
										DemitirInfoOrg(giveplayer);
								    	ConviteInfoOrg(giveplayer, org, level);
									}
								}
								return true;
							}
							if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
					  		{
					  		    SendClientMessage(playerid, COLOR_GREY, "Nao pode promover quem nao e da sua org.");
					  		    return true;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao e um lider !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/settime", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /settime [id] [team 1(civ) - 2(cop)]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
      		    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						SetPlayerWeapons(para1);
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "   Voce foi setado a equipe %d pelo Sistema", level);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							format(string, sizeof(string), "   Voce foi setado a equipe %d por %s", level, PlayerName(playerid));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "   Voce ligou %s a sua equipe %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(!strcmp("/pedircontas", cmdtext, true))
	{
	 	if(PlayerInfo[playerid][pLider] >= 1)
    	{
    	}
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		MedicBill[playerid] = 0;
		DemitirInfoOrg(PlayerName(playerid));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce pediu as contas, agora e Civil novamente!");
		return 1;
	}
//==============================================================================
 	if(strcmp(cmd,"/membros",true)==0)
	{
     	if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			if (PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
			else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Voce nao e Membro de uma Equipe!");
				return true;
			}
	    	SendClientMessage(playerid,COLOR_YELLOW,"|____________[ Membros Online ]____________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(string,sizeof(string),"");
					if (PlayerInfo[i][pLider] == teamnumber) format(string,sizeof(string),"%s: Lider",sendername);
					else if (PlayerInfo[i][pMembro] == teamnumber) format(string,sizeof(string),"%s: Cargo %d.",sendername,PlayerInfo[i][pCargo]);
					if (strlen(string) > 1) SendClientMessage(playerid,0xF8FAFFAA,string);
				}
			}
		}
		return true;
	}
//==============================================================================

	if(strcmp(cmd, "/avh", true) == 0 || strcmp(cmd, "/avisarh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHelper] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Helper !");
			    return true;
			}
   			if(helpertrampando[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta em modo de servico ! (/shelper)");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/avh) [texto]");
				return true;
			}
			SendClientMessageToAll(COLOR_WHITE, "|__________________[ Aviso dos Helpers ]__________________|");
			if(helpertrampando[playerid] == 1 && helperhide[playerid] == 1)
			{
				format(string, sizeof(string), "Admin Cleitin_Bitoneira[BOT]: %s",result);
				SendClientMessageToAll(0x33FF00FF, string);
			}
			else
			{
				format(string, sizeof(string), "{52CBFF}Helper %s: %s", sendername, result);
				SendClientMessageToAll(0xFF98F4AA, string);
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/avisar", true) == 0 || strcmp(cmd, "/av", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
     	 		/*if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}*/
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[126];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/av)iso [texto]");
					return 1;
				}
				SendClientMessageToAll(COLOR_WHITE, "|______________ Aviso da Administracao ______________|");
				format(string, sizeof(string), "Admin %s: %s ", sendername, result);
				SendClientMessageToAll(COLOR_DBLUE, string);
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/limparchat", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 1)
			{
		        SendClientMessage(playerid, COLOR_GREY, "Voce nao e um admin!");
		    	return true;
		    }
     	 	if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) ClearChatbox(i, 100);
			}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{ format(string, sizeof(string), "~b~Cleitin_Bitoneira[BOT] ~n~~w~Resetou o Chat!"); }
			else
			{ format(string, sizeof(string), "~b~%s ~n~~w~Resetou o Chat!",playername); }
			GameTextForAll(string, 5000, 1);
		    return true;
		}
		return true;
	}
	
	if(strcmp(cmd, "/lchat", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
			format(string, sizeof(string), "~b~%s ~n~~w~Voce resetou seu chat!!");
			//GameTextForAll(string, 5000, 1);
			GameTextForPlayer(playerid, string, 5000, 1);
			ClearChatbox(playerid, 100);
		    return true;
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/particular", true) == 0 || strcmp(cmd, "/par", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
			return true;
		}
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[giveplayerid][pAdmin] < 1 && PlayerInfo[giveplayerid][pHelper] < 1)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao e um staff ou o player que voce digitou nao e admin/helper!");
	            return true;
	        }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
       				if(HidePM[giveplayerid] > 0)
					{
				       SendClientMessage(playerid, COLOR_GREY, "   Esse jogador Bloqueou Particulares!");
				       return true;
       				}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[100];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
						return true;
					}
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
					{
						format(string, sizeof(string), "Cleitin_Bitoneira[BOT] particular: %s", (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					print(string);
					format(string, sizeof(string), "PM enviada para %s(ID: %d).", giveplayer, giveplayerid);
					SendClientMessage(playerid,  COLOR_YELLOW, string);
					format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] PM: %s para %s: %s.", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), PlayerName(giveplayerid), (result));
					AChatLog(string);
					return true;
				}
			}
			else
			{
					SendClientMessage(playerid, COLOR_GRAD1, "   Esse jogador esta off-line.");
			}
		}
	 	return true;
	}
//==============================================================================
	if(strcmp(cmd, "/lv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc~e nao esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/sf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2720.3381,-317.2668,7.8438);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -2749.6191,377.1548,4.1328);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/hqhelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(helpertrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/shelper)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 801.2391,-1629.7733,13.3828);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 801.2391,-1629.7733,13.3828);
				}
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar o comando!");
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/spawn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1775.3850,-1896.1826,13.3859);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1775.3850,-1896.1826,13.3859);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar o comando!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/ls", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1482.3329,-1724.3885,13.5469);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1482.3329,-1724.3885,13.5469);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar o comando!");
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/esconderijo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce Foi Teleportado!");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd,"/ligarpc",true) ==0)
	{
		SetTimer("gasolina", 70000, 1);
		SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Ativado!");
		return true;
	}
//==============================================================================
	if(strcmp(cmd,"/desligarpc",true) ==0)
	{
		SetTimer("gasolina", 9000000000000, 0);
		SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Desativado!");
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/entrarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /entrarcarro [carro id]");
				return true;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/ircarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /ircarro [carro id]");
				return true;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   Local Marcado Para o Teleporte");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/irmark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SetPlayerVirtualWorld(playerid, world);
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado para onde voce marcou!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/irstad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/aviao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "Voce foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//==============================================================================
    if(strcmp(cmd, "/nc", true) == 0)
    {
    	if((PlayerInfo[playerid][pAdmin] >= 1))
    	{
			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			/*if(NCAtivo[playerid] < 1){
				OnPlayerCommandText(playerid,"/snc");
				return true;
			}*/
			if(IsCamMoving[playerid] == false)
			{
				if(GetPVarType(playerid, "FlyMode"))
				{
					CancelFlyMode(playerid);
					IsCreating[playerid] = false;
				}
				else FlyMode(playerid);
				//NCAtivo[playerid] = 1;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Voce nao pode usar esse comando!");
		return 1;
	}
	if(strcmp(cmd, "/snc", true) == 0)
	{
    	if((PlayerInfo[playerid][pAdmin] >= 1))
    	{
			//if(NCAtivo[playerid] == 1) return SendClientMessage(playerid, -1, "Voce precisa estar no no-clip para usar esse comando!");

    	    OnPlayerCommandText(playerid,"/mark");
			if(IsCreating[playerid])
			{
				CancelFlyMode(playerid);
				IsCreating[playerid] = false;
				noclipdata[playerid][cameramode] 	= CAMERA_MODE_NONE;
				noclipdata[playerid][lrold]	   	 	= 0;
				noclipdata[playerid][udold]   		= 0;
				noclipdata[playerid][mode]   		= 0;
				noclipdata[playerid][lastmove]   	= 0;
				noclipdata[playerid][accelmul]   	= 0.0;
				IsCreating[playerid] 				= false;
				IsReSettingStart[playerid] 			= false;
				IsReSettingEnd[playerid] 			= false;
				SettingFirstLoc[playerid] 			= false;
				SettingLastLoc[playerid] 			= false;
				IsCamMoving[playerid] 				= false;
				coordInfo[playerid][MoveSpeed] 		= 1000;
				coordInfo[playerid][RotSpeed] 		= 1000;
				SetTimerEx("SairNoClip", 1000, 0, "i", playerid);
				//NCAtivo[playerid] = 0;
			}
		}
		else return SendClientMessage(playerid, COLOR_WHITE, "Voce nao pode usar esse comando!");
		return 1;
	}
	
	if(strcmp(cmd, "/ir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ir [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
         				if(admtrampando[playerid] < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
							return true;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, world);
						SendClientMessage(playerid, 0x33FF00FF, "Voce foi teleportado pelo Admin !");
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{}
						else { format(string, sizeof(string), "O Admin %s Foi Ate %s.",playername,plname); }
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um player ativo.");
			}
		}
		return true;
	}
//==============================================================================
	if (strcmp(cmd, "/destruirid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando !");
			    return true;
			}
   			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoMatheus(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nao ha nenhum carro nesse raio!");
				}
				case 1:
				{
				    if(result < CAR_AMOUNT)
				    {
				    	SendClientMessage(playerid, COLOR_GREY, "Voce so pode destruir veiiculos criados");
				    	return true;
				    }
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
					DestroyVehicle(result);
				    format(string, sizeof(string), "Voce destruiu o veiculo ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
				    if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi destruido Por: Cleitin_Bitoneira[BOT]", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi destruido Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
//==============================================================================
	if (strcmp(cmd, "/dv", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando !");
			    return true;
			}
  			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoMatheus(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nao ha nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Voce deu respawn no carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi respawnado Por: Cleitin_Bitoneira[BOT]", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi respawnado Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
	
	if (strcmp(cmd, "/guardar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
 		{
 		    new getcarid;
	        new VID;
		    VID = GetPlayerVehicleID(playerid);
		    getcarid = GetPlayerVehicleID(playerid);
            if(IsPlayerInAnyVehicle(playerid))
       		{
       		    if(GetPlayerState(playerid) == 2)
       		    {
       		        if(getcarid == BikeSpawn[playerid])
       		        {
       		            BikeSpawn[playerid] = -1;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else if(getcarid == CarroPlayer[playerid])
       		        {
       		            CarroPlayer[playerid] = -1;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else if(getcarid == RetirouCarro1[playerid])
       		        {
       		            RetirouCarro1[playerid] = 0;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else if(getcarid == RetirouCarro2[playerid])
       		        {
       		            RetirouCarro2[playerid] = 0;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else if(getcarid == RetirouCarro3[playerid])
       		        {
       		            RetirouCarro3[playerid] = 0;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else if(getcarid == RetirouCarro4[playerid])
       		        {
       		            RetirouCarro4[playerid] = 0;
						DestroyVehicle(VID);
						SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
					else
					{
					    SetVehicleToRespawn(VID);
					    SendClientMessage(playerid, COLOR_WHITE, "Seu veiculo foi guardado com sucesso!");
					}
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Voce nao e o motorista do veiculo!");
       		}
       		else return SendClientMessage(playerid, COLOR_WHITE, "Voce nao esta em um carro!");
		}
		return 1;
	}
//==============================================================================
	if (strcmp(cmd, "/abid", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando !");
			    return true;
			}
   			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoMatheus(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nao ha nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(string, sizeof(string), "Voce abasteceu o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi abastecido Por: Cleitin_Bitoneira[BOT]", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi abastecido Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
//==============================================================================
	if (strcmp(cmd, "/fix", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando !");
			    return true;
			}
   			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoMatheus(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nao ha nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Voce reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi reparado Por: Cleitin_Bitoneira[BOT]", result);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi reparado Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/rc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			format(string, sizeof(string), "- {FFFFFF}Admin %s {FFFFFF}deu Respawn, todos os carros foram para seu local de inicio.", playername);
			SendClientMessageToAll(0xAAFFCC33,string);
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= MAX_VEHICLES; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/tirarbombas", true) == 0)
	{
	 	if(IsAEx(playerid))
  		{
		    tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
	  			SendClientMessage(playerid, COLOR_GRAD2, "USE: /tirarbombas [id]");
			    return true;
			}
			new Nome[MAX_PLAYER_NAME], Nome2[MAX_PLAYER_NAME];
			GetPlayerName(playerid, Nome2, sizeof(Nome2));
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, Nome, sizeof(Nome));
			format(string, sizeof(string), "Voce retirou as bombas do terrorista %s", Nome);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Oficial %s retirou suas bombas por 10 minutos", Nome2);
			SendClientMessage(giveplayerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s retirou as bombas do terrorista %s", Nome2, Nome);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SemBombas[giveplayerid] = 1;
			SetTimerEx("VoltarBombas", 600000, false, "i", giveplayerid);
			return true;
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/homembomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Voce nao pode usar homem bomba na cadeia!");
		   return true;
	    }
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15 && PlayerInfo[playerid][pMembro] != 23 && PlayerInfo[playerid][pLider] != 23)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voce nao e Terrorista !");
		    return true;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "as Forcas Armadas retirou suas bombas e voce nao podera usa-las!");
		    return true;
		}
		if(phbomba == 1)
        {
	        SendClientMessage(playerid,COLOR_GRAD2,"Ja usaram homem-bomba, aguarde 20 segundos para usar novamente!");
	        return true;
        }
 		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			SetPlayerHealth(playerid, 0);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			CreateExplosion(x, y, z, 7, 25);
			printf("[Terrorista] Usou Homem Bomba");
			format(string, sizeof(string), "Terrorista %s Usou Homem Bomba ! ID[%d]", sendername, playerid);
			ABroadCast(COLOR_YELLOW,string,1);
			phbomba = 1;
		    Tempohbomba = SetTimer("hbomba", 20000, 0);
		}
		return true;
 	}
//==============================================================================
	if(strcmp(cmd, "/carrobomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_GREY," Voce nao pode usar carro bomba na cadeia!");
		   return true;
    	}
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15 && PlayerInfo[playerid][pMembro] != 23 && PlayerInfo[playerid][pLider] != 23)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voce nao e Terrorista !");
		    return true;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "as Forcas Armadas retirou suas bombas e voce nao podera usa-las!");
		    return true;
		}
		if(pcbomba == 1)
	    {
	        SendClientMessage(playerid,COLOR_GRAD2,"Ja usaram carrobomba, aguarde 20 segundos para usar novamente!");
	        return true;
	    }
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			if(vehicle != 0)
			{
				SetPlayerHealth(playerid, 0);
				GetVehiclePos(vehicle, x, y, z);
				CreateExplosion(x, y, z, 7, 50);
				printf("[Terrorista] Usou Carro Bomba");
				format(string, sizeof(string), "Terrorista %s Usou Carro Bomba! ID[%d]", sendername, playerid);
			    ABroadCast(COLOR_YELLOW,string,1);
				pcbomba = 1;
			    Tempocbomba = SetTimer("cbomba", 20000, 0);
			}
			if(vehicle == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce precisa estar em um carro");
			    return true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao esta autorizado a usar este comando!");
		}
  		return true;
 	}
//==============================================================================
	/*if(strcmp(cmd, "/explodir", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
			return true;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					SetPlayerHealth(giveplayerid, 10);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse jogador nao esta online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao esta autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voce deve estar logado para usar o comando!");
		}
		return true;
	}*/
//==============================================================================
	if(strcmp(cmd, "/trazer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazer [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode trazer um Preso");
				return true;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
        			 	if(admtrampando[playerid] < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
							return true;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo,world);
						SendClientMessage(plo, 0x33FF00FF, "Voce foi teleportado pelo Admin !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/trazer2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazer2 [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode trazer um Preso");
				return true;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
        			 	if(admtrampando[playerid] < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
							return true;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo,world);
						ResetPlayerWeaponsEx(playerid);
						SendClientMessage(plo, 0x33FF00FF, "Voce foi teleportado pelo Admin !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/trazercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazercarro [carro id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz); LinkVehicleToInterior(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/carroantigo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
          		if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
		    	format(string, sizeof(string), "ID do ultimo carro: %d",gLastCar[playerid]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
		    	return true;
		    }
		    else
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
	            return true;
	        }
	    }
	    return true;
	}
	if(strcmp(cmd, "/aball", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
             	if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
	            for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				{
				}
				else
				{
					format(string, sizeof(string), "[Atencao]Admin: %s Abasteceu Todos os Veiculos.",PlayerName(playerid));
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
	        }
	        else
	        {
	           	SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
	            return true;
	        }
	    }
	    return true;
	}
//----------------------------------[Dar Arma]------------------------------------------------
	if(strcmp(cmd, "/dararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dararma [id] [arma id(ex. 24 = Eagle)] [municao]");
				return true;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararma [id] [arma id] [municao]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pa) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gas) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lanca Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return true;
			}
			if(gun < 1 || gun > 46 || gun==38 || gun==35 || gun==37 || gun==44 || gun==45 || gun==9  || gun==26 || gun==27 || gun==28 || gun==32)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   ID Proibido!"); return true; }
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de municao e 1 e o maximo e 999!"); return true; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerWeapon(playa, gun, ammo);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//----------------------------------[Dar Vida]------------------------------------------------
	if(strcmp(cmd, "/darvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvida [id] [quantia]");
				return true;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
       			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
 }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/darcolete", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darcolete [id] [quantia]");
				return true;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
      		    if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/jet", true) == 0 || strcmp(cmd, "/jetpack", true) == 0 || strcmp(cmd, "/jp", true) == 0)
    {
        if(PlayerInfo[playerid][pVIP] >= 2 || PlayerInfo[playerid][pAdmin] >= 2)
        {
			if(TimerJet > 0) return SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 30 segundos para pegar sua jetpack novamente!");
			TimerJet = 1;
            SetPlayerSpecialAction(playerid, 2);
            format(string, sizeof(string), "** Vip: %s Pegou seu Jetpack",PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			TempoJetpack = SetTimer("TimerJetpack", 30000, 0);
        }
        else return SendClientMessage(playerid, COLOR_GRAD1, "Voce nao e um jogador Vip.");
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=



	if(strcmp(cmdtext, "/afk", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1 || PlayerInfo[playerid][pHelper] <= 1)
        {
            SendClientMessage(playerid,COLOR_GREY," Voce nao e um admin ou um helper!");
            return 1;
        }
        if(away[playerid] == 1)
        {
            away[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Voce nao esta mais AFK");
        }
        else
        {
           SendClientMessage(playerid, COLOR_WHITE, "Voce entrou no modo afk! Para sair use /afk novamente!");
           away[playerid] = 1;
        }
        return 1;
    }

	if(strcmp(cmd, "/veh", true) == 0)
    {
		if(IsPlayerConnected(playerid))
     	{
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			if(CreatedCar >= 200)
    		{
    			SendClientMessage(playerid, COLOR_GRAD1, "Ja criaram muitos carros, destrua alguns primeiro /destruirid");
    			return true;
    		}
  			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
    			return true;
   			}
   			new car;
   			car = strval(tmp);
   			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Modelo Do Carro Tem Que Ser Entre 411 e 600 !"); return true; }
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
    			return true;
   			}
   			new COLOR1;
   			COLOR1 = strval(tmp);
   			if(COLOR1 < 0 || COLOR1 > 236) { SendClientMessage(playerid, COLOR_GREY, "   Numero Da Cor tem que ser entre 0 e 126 !"); return true; }
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [IDCARRO] [COR1] [COR2]");
    			return true;
   			}
   			new COLOR2;
   			COLOR2 = strval(tmp);
   			if(COLOR2 < 0 || COLOR2 > 236) { SendClientMessage(playerid, COLOR_GREY, "   Numero Da Cor tem que ser entre 0 e 126 !"); return true; }
   			new Float:X,Float:Y,Float:Z;
   			GetPlayerPos(playerid, X,Y,Z);
   			new carid = CreateVehicle(car, X,Y,Z, 0.0, COLOR1, COLOR2, 60000);
   			CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
   			format(string, sizeof(string), "   Veiculo %d Criado.", carid);
   			PutPlayerInVehicle(playerid,carid,0);
   			SendClientMessage(playerid, COLOR_GREY, string);
		}
  		}
  		return true;
 	}

	if(strcmp(cmd, "/irpos", true) == 0)
    {
		if(IsPlayerConnected(playerid))
     	{
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
  			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /irpos [X] [Y] [Z]");
    			return true;
   			}
   			new car;
   			car = strval(tmp);
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /irpos [X] [Y] [Z]");
    			return true;
   			}
   			new COLOR1;
   			COLOR1 = strval(tmp);
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "USE: /irpos [X] [Y] [Z]");
    			return true;
   			}
   			new COLOR2;
   			COLOR2 = strval(tmp);
			SetPlayerPos(playerid,car,COLOR1, COLOR2);
   			format(string, sizeof(string), "Teleportado com sucesso!");
   			SendClientMessage(playerid, COLOR_GREY, string);
		}
  		}
  		return true;
 	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/tempo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			    return true;
			}
   			if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /tempo [tempo id]");
			    return true;
			}
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return true; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "Tempo setado!");
		}
		return true;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/setgrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setgrana [id] [grana]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			   	if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
						PayLog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//----------------------------------[GiveMoney]------------------------------------------------
	if(strcmp(cmd, "/dargrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [grana]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
						PayLog(gstring);

						//if(_:g_WelcomeChannelId == 0)
						//g_WelcomeChannelId = DCC_FindChannelById("865653951721635881");
						new str[128];
						new stafflog[128];
						new playerlog[128];
						new motivolog[128];
						new DCC_Embed:embed = DCC_CreateEmbed();
						DCC_SetEmbedTitle(embed, "Log Dar Grana");
						DCC_SetEmbedColor(embed, 0xFF0000);
						format(str, sizeof str, "Algum Staff deu Grana para alguém in game!");
						DCC_SetEmbedDescription(embed, str);
						format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
						DCC_AddEmbedField(embed, "Staff:", stafflog, false);
						format(playerlog, sizeof playerlog, "`%s`", PlayerName(playa));
						DCC_AddEmbedField(embed, "Player:", playerlog, false);
						format(motivolog, sizeof motivolog, "`%d`", money);
						DCC_AddEmbedField(embed, "Quantidade:", motivolog, false);
						DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/limpargrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 23)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /limpargrana [quantidade]");
					return true;
				}
				new money = strval(tmp);
				new grana = money - random(500);
				
				if (money < 1500)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao pode limpar menos que 1500");
					return true;
				}
				if(PlayerInfo[playerid][pDsujo] < money) return SendClientMessage(playerid, -1, "Voce nao possui essa quantidade de Dinheiro Sujo!");
				PlayerInfo[playerid][pDsujo] -= money;
				GivePlayerMoney(playerid, grana);
				SendClientMessage(playerid, COLOR_WHITE, "Grana limpa com sucesso!");
			}
			else return SendClientMessage(playerid, -1, "Voce nao e da CV ou PCC!");
		}
		return true;
	}
	
	if(strcmp(cmd, "/dardsujo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dardsujo [id] [grana]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pDsujo] += money;
						PayLog(gstring);
						new Str[999];
				     	format(Str,sizeof(Str),"Voce enviou %d de dinheiro sujo para %s", money, playa);
				     	SendClientMessage(playerid, COLOR_WHITE,Str);
				     	
				     	new pessoa[999];
				     	format(pessoa,sizeof(pessoa),"Voce recebeu %d de dinheiro sujo do Admin %s", money, PlayerName(playerid));
				     	SendClientMessage(playa, COLOR_WHITE,pessoa);

						//if(_:g_WelcomeChannelId == 0)
						//g_WelcomeChannelId = DCC_FindChannelById("865653951721635881");
						new str[128];
						new stafflog[128];
						new playerlog[128];
						new motivolog[128];
						new DCC_Embed:embed = DCC_CreateEmbed();
						DCC_SetEmbedTitle(embed, "Log Dar Dinheiro Sujo");
						DCC_SetEmbedColor(embed, 0xFF0000);
						format(str, sizeof str, "Algum Staff deu Dinheiro Sujo para alguém in game!");
						DCC_SetEmbedDescription(embed, str);
						format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
						DCC_AddEmbedField(embed, "Staff:", stafflog, false);
						format(playerlog, sizeof playerlog, "`%s`", PlayerName(playa));
						DCC_AddEmbedField(embed, "Player:", playerlog, false);
						format(motivolog, sizeof motivolog, "`%d`", money);
						DCC_AddEmbedField(embed, "Quantidade:", motivolog, false);
						DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
	
	if(strcmp(cmd, "/darcoins", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darcoins [id] [quantidade]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pCoins] += money;
						PayLog(gstring);
						new Str[999];
				     	format(Str,sizeof(Str),"Voce enviou %d de coins para %s", money, playa);
				     	SendClientMessage(playerid, COLOR_WHITE,Str);

				     	new pessoa[999];
				     	format(pessoa,sizeof(pessoa),"Voce recebeu %d de coins do Admin %s", money, PlayerName(playerid));
				     	SendClientMessage(playa, COLOR_WHITE,pessoa);
				     	
				     	format(string, sizeof(string), "O admin %s deu %d Coins para %s", PlayerName(playerid), money, playa);
						CoinsLog(string);

						//if(_:g_WelcomeChannelId == 0)
						//g_WelcomeChannelId = DCC_FindChannelById("865653951721635881");
						new str[128];
						new stafflog[128];
						new playerlog[128];
						new motivolog[128];
						new DCC_Embed:embed = DCC_CreateEmbed();
						DCC_SetEmbedTitle(embed, "Log Dar Coins");
						DCC_SetEmbedColor(embed, 0xFF0000);
						format(str, sizeof str, "Algum Staff deu Coins para alguém in game!");
						DCC_SetEmbedDescription(embed, str);
						format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
						DCC_AddEmbedField(embed, "Staff:", stafflog, false);
						format(playerlog, sizeof playerlog, "`%s`", PlayerName(playa));
						DCC_AddEmbedField(embed, "Player:", playerlog, false);
						format(motivolog, sizeof motivolog, "`%d`", money);
						DCC_AddEmbedField(embed, "Quantidade:", motivolog, false);
						DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setskin [playerid] [skin id]");
				return true;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "id desconhecido!"); return true; }
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSkin] = level;
						format(string, sizeof(string), "Voce mudou a skin do %s para %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			}
		}
		return true;
	}

//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	/*if(strcmp(cmd, "/tapa", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "USE: /tapa [playerid/PartOfName]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerHealth(playa, shealth);
					SetPlayerHealth(playa, shealth-5);
					GetPlayerPos(playa, slx, sly, slz);
					SetPlayerPos(playa, slx, sly, slz+5);
					PlayerPlaySound(playa, 1130, slx, sly, slz+5);
					printf("ADMIN: %s meteu um tapa em %s",sendername, giveplayer);
					}
				}
			}
			else
			{
			SendClientMessage(playerid, 0xFFFFFFFF, " Voce nao pode utilizar esse comando!");
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/tapao", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "USE: /tapao [playerid/PartOfName]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerHealth(playa, shealth);
					SetPlayerHealth(playa, shealth-5);
					GetPlayerPos(playa, slx, sly, slz);
					SetPlayerPos(playa, slx, sly, slz+130);
					PlayerPlaySound(playa, 1130, slx, sly, slz+130);
					printf("ADMIN: %s meteu um tapao em %s",sendername, giveplayer);
					}
				}
			}
			else
			{
			SendClientMessage(playerid, 0xFFFFFFFF, " Voce nao pode utilizar esse comando!");
			}
		}
		return 1;
	}*/
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/matar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "USE: /matar [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(IsPlayerConnected(playa))
				{
					if(playa != INVALID_PLAYER_ID)
					{
					GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					SetPlayerHealth(playa, 0.0);
					SetPlayerVirtualWorld(playa,0);
					printf("ADMIN: %s meteu um tapao em %s",sendername, giveplayer);
					}
				}
			}
			else
			{
			SendClientMessage(playerid, 0xFFFFFFFF, " Voce nao pode utilizar esse comando!");
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/retirararmas",true)==0 || strcmp(cmd,"/rarmas",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirararmas [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
    			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeaponsEx(playa);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
						}
						else
						{
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/calar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /calar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/infoarmas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoarmas [id do player]");
				return true;
			}
			if(PlayerInfo[playerid][pAdmin] < 1 )
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Voce nao esta autorizado a usar esse comando!");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    new weapons[13][2];
				    new playerck[MAX_PLAYER_NAME];
				    GetPlayerName(giveplayerid, playerck, sizeof(playerck));
   					format(string, sizeof(string), "EXIBINDO AS INFORMACOES DAS ARMAS DE: %s",playerck);
   					SendClientMessage(playerid, TEAM_BALLAS_COLOR, string);
                    GetPlayerWeaponData(giveplayerid, 2, weapons[2][0], weapons[2][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[2][0]], weapons[2][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 3, weapons[3][0], weapons[3][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[3][0]], weapons[3][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 4, weapons[4][0], weapons[4][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[4][0]], weapons[4][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 5, weapons[5][0], weapons[5][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[5][0]], weapons[5][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 6, weapons[6][0], weapons[6][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[6][0]], weapons[6][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 7, weapons[7][0], weapons[7][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[7][0]], weapons[7][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 8, weapons[8][0], weapons[8][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[8][0]], weapons[8][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 9, weapons[9][0], weapons[9][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[9][0]], weapons[9][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 11, weapons[11][0], weapons[11][1]);
				    format(string, sizeof(string), "Arma: %s,                Municao: %d",aNames[weapons[11][0]], weapons[11][1]);
  					SendClientMessage(playerid, COLOR_WHITE, string);
		    	}
			}
        	else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador esta off-line !");
	            return true;
	        }
		}
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/infoplayer", true) == 0)
	{
	 	new armatext[30];
	    new municao;
	    new arma;
	    new Float:plrtempheal;
	    new Float:plrarmour;
	    new plrping;
	    new iplayer[MAX_PLAYER_NAME];
	    new plrIP[16];
	    new smunicao;
		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoplayer [id do player]");
				return true;
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Voce nao esta autorizado a usar esse comando!");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    GetPlayerIp(giveplayerid, plrIP, sizeof(plrIP));
   					GetPlayerName(giveplayerid, iplayer, sizeof(iplayer));
					plrping = GetPlayerPing(giveplayerid);
			    	GetPlayerArmour(giveplayerid, plrarmour);
					GetPlayerHealth(playerid,plrtempheal);
					arma = GetPlayerWeapon(giveplayerid);
					municao = GetPlayerAmmo(giveplayerid);
					SendClientMessage(playerid, COLOR_GREEN, "|__________________[ EXIBINDO INFORMACOES ]__________________|");
					format(string, sizeof(string), "Nome: %s", iplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "IP: %s", plrIP);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Ping: %d", plrping);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Colete: %1f", plrarmour);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Saude: %1f", plrtempheal);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 38) { armatext = "Minigun"; }
					else if(arma == 40) { armatext = "Detonador"; }
					else if(arma == 36) { armatext = "Lanca missil RPG"; }
					else if(arma == 35) { armatext = "Lanca missil"; }
					else if(arma == 16) { armatext = "Granada"; }
					else if(arma == 18) { armatext = "Coctel Molotov"; }
					else if(arma == 22) { armatext = "Pistola de Duas maos 9mm"; }
					else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
					else if(arma == 27) { armatext = "Escopeta de Combate"; }
					else if(arma == 28) { armatext = "Micro Uzi"; }
					else if(arma == 32) { armatext = "Tec9"; }
					else if(arma == 37) { armatext = "Lanca Chamas"; }
					else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bastao de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com silenciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma == 34) { armatext = "Rifle Sniper"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(string, sizeof(string), "Arma: %s", armatext);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 40 || arma == 36 || arma == 16 || arma == 18 || arma == 26 || arma == 28 || arma == 37)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "/tv nele, pois ele pode estar usando xiter de armas");
					}
					if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
					format(string, sizeof(string), "Municao: %d", smunicao);
					SendClientMessage(playerid, COLOR_GRAD1, string);
 				 }
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador esta off-line !");
	            return true;
	        }
		}
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/guinchar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsAMec(playerid) || IsACop(playerid))
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
					                   AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					SendClientMessage(playerid,COLOR_GREY,"Nao tem nenhum carro perto.");
			   				}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Voce precisa estar dirigindo !");
							return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce nao tem um Guincho !");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce nao esta em um guincho !");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD2,"Voce nao e mecanico ou um Policial !");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/admvcarro", true) == 0 || strcmp(cmd, "/admvc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcarro [Carro id]");
				return true;
			}
			new vehid = strval(tmp);
			if(!CarroMala(vehid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Digite o ID de um Carro VIP Valido.");
				return true;
			}
			vehid = vehid-totalveiculosc;
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
				CarInfo[vehid][cOwned] = 0;
				strmid(CarInfo[vehid][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				format(string, sizeof(string), "~w~Voce vendeu este veiculo");
				GameTextForPlayer(playerid, string, 10000, 3);
				RemovePlayerFromVehicleEx(playerid);
				DestroyVehicle(vehid+totalveiculosc);
				new carid2 = CreateVehicle(CarInfo[vehid][cModel],CarInfo[vehid][cLocationx],CarInfo[vehid][cLocationy],CarInfo[vehid][cLocationz]+1.0,CarInfo[vehid][cAngle],CarInfo[vehid][cColorOne],CarInfo[vehid][cColorTwo],60000);
				Controle(playerid, 1);
				SaveCars();
				SetVehicleToRespawn(carid2);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem permissao para usar esse comando !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/veiculo",true)==0 || strcmp(cmd,"/vh",true)==0)
	{
	    new vehid = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	        SendClientMessage(playerid,COLOR_WHITE," USE: /veiculo ajuda para ver os comandos de seu veiculo VIP");
	        return true;
	    }
		if(strcmp(tmp, "ajuda", true) == 0)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
	        	if(PlayerInfo[playerid][pCarKey] != 0 || PlayerInfo[playerid][pCarKey2] != 0)
	        	{
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo comprar: para comprar o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo vender: para vender o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo ajuda: para ver os comandos dos Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo trancar: para trancar ou destrancar o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo cor: para mudar a cor do Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo estacionar: para estacionar o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/veiculo modelo: para mudar o modelo do Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"/retirargrana: para retirar a grana do seu Veiculo");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voce precisa estar no seu carro VIP para usar esses comandos.");
					return true;
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GRAD2," Voce nao tem um Veiculo VIP! ");
				    return true;
				}
			}
			return true;
		}
		if(strcmp(tmp, "comprar", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
     			if(PlayerInfo[playerid][pVIP] == 0)
				{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao e VIP e nao pode comprar este carro !");
				RemovePlayerFromVehicleEx(playerid);
				return true;
				}
		        for(new i = 0; i < sizeof(CarInfo); i++)
		        {
					if(CarInfo[i][ownedvehicle] == vehid)
					{
     					if(PlayerInfo[playerid][pVIP] == 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "Voce nao e VIP e nao pode comprar este carro !");
							RemovePlayerFromVehicleEx(playerid);
							return true;
						}
						if(PlayerInfo[playerid][pCarKey] != 0 && PlayerInfo[playerid][pVIP] == 1)
						{
							SendClientMessage(playerid, COLOR_GREY, "Seu VIP permite que voce tenha no maximo 1 carro !");
							RemovePlayerFromVehicleEx(playerid);
							return true;
						}
						if(PlayerInfo[playerid][pCarKey] != 0 && PlayerInfo[playerid][pCarKey2] != 0 && PlayerInfo[playerid][pVIP] == 2)
						{
							SendClientMessage(playerid, COLOR_GREY, "Seu Vip permite que voce tenha no maximo 2 carros !");
							RemovePlayerFromVehicleEx(playerid);
							return true;
						}
						if(PlayerInfo[playerid][pLevel] < 2)
						{
						    SendClientMessage(playerid, COLOR_GREY, "Voce Precisa ter nivel 2 para comprar o veiculo");
						    RemovePlayerFromVehicleEx(playerid);
						    return true;
						}
						if(CarInfo[i][cOwned]==1)
						{
						    SendClientMessage(playerid, COLOR_GREY, "Este carro VIP ja tem dono");
						    return true;
						}
						if(PlayerInfo[playerid][pCarKey] == 0)
						{
							if(PlayerInfo[playerid][pVIP] < 1)
				        	{
				         	SendClientMessage(playerid, COLOR_GREY, "Voce nao e um jogador VIP");
				         	RemovePlayerFromVehicleEx(playerid);
				         	return true;
   				        	}
							if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
							{
								PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
								PlayerInfo[playerid][pVeiculo] = i;
								CarInfo[i][cOwned] = 1;
								CarOffered[playerid]=0;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
								GivePlayerMoney(playerid,-CarInfo[i][cValue]);
								GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro VIP!", 5000, 3);
								PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo ajuda para ver os comandos");
								Controle(playerid, 1);
								SaveCars();
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro para isso!");
								RemovePlayerFromVehicleEx(playerid);
							}
							return true;
						}
 				    	else if(PlayerInfo[playerid][pCarKey2] == 0)
						{
							if(PlayerInfo[playerid][pVIP] < 2)
							{
								SendClientMessage(playerid, COLOR_GREY, "Apenas Socio podem ter dois carros vips.");
								RemovePlayerFromVehicleEx(playerid);
								return true;
							}
							if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
							{
								PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
								PlayerInfo[playerid][pVeiculo2] = i;
								CarInfo[i][cOwned] = 1;
								CarOffered[playerid]=0;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
								GivePlayerMoney(playerid,-CarInfo[i][cValue]);
								GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro Vip!", 5000, 3);
								PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo ajuda para ver os comandos");
								Controle(playerid, 1);
								SaveCars();
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro para isso!");
								RemovePlayerFromVehicleEx(playerid);
							}
							return true;
						}
					}
				}
			}
			return true;
		}
		if(strcmp(tmp, "vender", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, playername, sizeof(playername));
				if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um Carro VIP.");
					return true;
				}
				if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid)
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse nao e seu Carro VIP.");
					return true;
				}
				if(PlayerInfo[playerid][pCarKey] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo]][cOwner], true) == 0)
				{
					new car = PlayerInfo[playerid][pVeiculo];
					CarInfo[car][cOwned] = 0;
					CarInfo[car][cModel] = 560;
					CarInfo[car][cColorOne] = 0;
				    CarInfo[car][cColorTwo] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					GivePlayerMoney(playerid,CarInfo[car][cValue]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
					GameTextForPlayer(playerid, string, 10000, 3);
					RemovePlayerFromVehicleEx(playerid);
					Controle(playerid, 1);
					PlayerInfo[playerid][pCarKey] = 0;
					PlayerInfo[playerid][pVeiculo] = 0;
					SaveCars();
					return true;
				}
				else if(PlayerInfo[playerid][pCarKey2] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo2]][cOwner], true) == 0)
				{
					new car = PlayerInfo[playerid][pVeiculo2];
					CarInfo[car][cOwned] = 0;
					CarInfo[car][cModel] = 560;
					CarInfo[car][cColorOne] = 0;
				    CarInfo[car][cColorTwo] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					GivePlayerMoney(playerid,CarInfo[car][cValue]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
					GameTextForPlayer(playerid, string, 10000, 3);
					RemovePlayerFromVehicleEx(playerid);
					Controle(playerid, 1);
					PlayerInfo[playerid][pCarKey2] = 0;
					PlayerInfo[playerid][pVeiculo2] = 0;
					SaveCars();
					return true;
				}
			}
			return true;
		}
		if(strcmp(tmp, "trancar", true) == 0)
	    {
            if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse nao e seu Carro VIP.");
				return true;
			}
			new keycar;
			if(vehid == PlayerInfo[playerid][pCarKey]) { keycar = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { keycar = PlayerInfo[playerid][pVeiculo2]; }
	    	if(IsPlayerConnected(playerid))
	        {
	            if(CarInfo[keycar][cLock] == 1)
				{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(CarInfo[keycar][ownedvehicle],i,0,0);
				}
				format(string, sizeof(string), "~w~Veiculo VIP~n~~g~Aberto");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, string, 10000, 3);
				CarInfo[keycar][cLock] = 0;
				return true;
				}
				else
				{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(CarInfo[keycar][ownedvehicle],i,0,1);
				}
				format(string, sizeof(string), "~w~Veiculo VIP~n~~r~Trancado");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, string, 10000, 3);
				CarInfo[keycar][cLock] = 1;
				return true;
				}

			}
			return true;
		}
		if(strcmp(tmp, "estacionar", true) == 0)
		{
		    if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse nao e seu Carro VIP.");
				return true;
			}
	    	new Float:x,Float:y,Float:z;
			new Float:a;
			new carid;
			new getcarid;
			new Veiculo;
   			if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
			if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
			    getcarid = GetPlayerVehicleID(playerid);
				GetPlayerName(playerid, playername, sizeof(playername));
				GetVehiclePos(carid, x, y, z);
				GetVehicleZAngle(carid, a);
               	if(getcarid == carid)
				{
					CarInfo[Veiculo][cLocationx] = x;
					CarInfo[Veiculo][cLocationy] = y;
					CarInfo[Veiculo][cLocationz] = z;
					CarInfo[Veiculo][cAngle] = a;
					format(string, sizeof(string), "~n~ Veiculo Estacionado Aqui! ~n~");
					GameTextForPlayer(playerid, "Veiculo Estacionado!~n~Ele vai nascer aqui!.", 10000, 3);
					DestroyVehicle(carid);
					new carid2 = CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
					Controle(playerid, 1);
					SaveCars();
					SetVehicleToRespawn(carid2);
					return true;
  				}
				return true;
			}
			return true;
		}
		if(strcmp(tmp, "modelo", true) == 0)
		{
        	if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse nao e seu Carro VIP.");
				return true;
			}
			new modelo;
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo modelo [modelo]");
				return true;
			}
			modelo = strval(tmp);
			if(modelo < 400 || modelo > 611) { SendClientMessage(playerid, COLOR_GREY, " Nossos Modelos Estao Entre 400 e 611!"); return true; }
			if(modelo == 592 || modelo == 577 || modelo == 553 || modelo == 520 || modelo == 525 || modelo == 547 || modelo == 435
			|| modelo == 441 || modelo == 449 || modelo == 450 || modelo == 460 || modelo == 464 || modelo == 465 || modelo == 501
			|| modelo == 537 || modelo == 538 || modelo == 564 || modelo == 569 || modelo == 570 || modelo == 584 || modelo == 590
			|| modelo == 591 || modelo == 594 || modelo == 606 || modelo == 607 || modelo == 608 || modelo == 610 || modelo == 611
			|| modelo == 596 || modelo == 599 || modelo == 597 || modelo == 598 || modelo == 427 || modelo == 528 || modelo == 544
			|| modelo == 407 || modelo == 455 || modelo == 502 || modelo == 503 || modelo == 494 || modelo == 582 || modelo == 470
			|| modelo == 495 || modelo == 601 || modelo == 548 || modelo == 417 || modelo == 497 || modelo == 563 || modelo == 447
			|| modelo == 469 || modelo == 488 || modelo == 557 || modelo == 556 || modelo == 444 || modelo == 573 || modelo == 406
			|| modelo == 590 || modelo == 569 || modelo == 537 || modelo == 538 || modelo == 570 || modelo == 449 || modelo == 472
			|| modelo == 473 || modelo == 493 || modelo == 595 || modelo == 484 || modelo == 430 || modelo == 453 || modelo == 452
			|| modelo == 446 || modelo == 454 || modelo == 432 || modelo == 425 || modelo == 571 || modelo == 490 || modelo == 523
		 	|| modelo == 408 || modelo == 414 || modelo == 416 || modelo == 420 || modelo == 423 || modelo == 428
			|| modelo == 431 || modelo == 433 || modelo == 437 || modelo == 438 || modelo == 443 || modelo == 456 || modelo == 476
			|| modelo == 486 || modelo == 490 || modelo == 498 || modelo == 499 || modelo == 511 || modelo == 512 || modelo == 513
			|| modelo == 514 || modelo == 515 || modelo == 519 || modelo == 523 || modelo == 524 || modelo == 530 || modelo == 531
			|| modelo == 532 || modelo == 539 || modelo == 568 || modelo == 572 || modelo == 574 || modelo == 578 || modelo == 483
			|| modelo == 583 || modelo == 588 || modelo == 593 || modelo == 609)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Este Modelo e Proibido!");
				return true;
			}
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cModel] = modelo;
				GameTextForPlayer(playerid, "Modelo do seu Carro VIP Mudado! -R$300.", 10000, 3);
				DestroyVehicle(carid);
				SendClientMessage(playerid, VERDE2, "Va buscar o seu veiculo onde voce estacionou.");
				CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
				Controle(playerid, 1);
				GivePlayerMoney(playerid,-300);
				SaveCars();
				return true;
			}
			return true;
		}
		if(strcmp(tmp, "cor", true) == 0)
	    {
			if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um Carro VIP.");
				return true;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse nao e seu Carro VIP.");
				return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /veiculo cor [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return true;
			}
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
			new cor1;
			cor1 = strval(tmp);
			if(cor1 < 0 || cor1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!"); return true; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /veiculo cor [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return true;
			}
			new cor2;
			cor2 = strval(tmp);
			if(cor2 < 0 || cor2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!"); return true; }
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cColorOne] = cor1;
				CarInfo[Veiculo][cColorTwo] = cor2;
                GameTextForPlayer(playerid, "Cor do seu Carro VIP Mudada! -R$50", 10000, 3);
                ChangeVehicleColor(carid,cor1,cor2);
                Controle(playerid, 1);
                GivePlayerMoney(playerid,-50);
				SBizzInfo[5][sbTill] += 50;
                ExtortionSBiz(5, 50);
                SaveCars();
				return true;
			}
			return true;
 	 	}
 	 	return 0;
 	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/territorio", true) == 0 || strcmp(cmd, "/tr", true) == 0)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsAPlane(carid))
		{
	   		SendClientMessage(playerid, COLOR_GRAD5, "Voce nao pode usar esse comando dentro de um heli ou aviao.");
	    	return true;
	    }
	    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Mafia Cosa Nostra
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranaEstacao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia Cosa Nostra estao dominando a Estacao!",playername);
				SendClientMessageToAll(COR_COSA, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e a Policia Federal foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZEstacao,COLORGZ_LH);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
        		TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia Cosa Nostra estao dominando o Casarao!",playername);
				SendClientMessageToAll(COR_COSA, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e a Policia Federal foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZCasarao,COLORGZ_LH);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 30000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //Mafia FamiliaShelby
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranaEstacao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia FamiliaShelby estao dominando a Estacao!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e a Policia Federal foram avisados!");
				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZEstacao,COLORGZ_FamiliaShelby);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
        		TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia FamiliaShelby estao dominando o Casarao!",playername);
				SendClientMessageToAll(COR_YAK, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e a Policia Federal foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZCasarao,COLORGZ_FamiliaShelby);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 30000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
//==================================GangZones SF================================
		if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) //Policia Rodoviaria Federal
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a PRF estao dominando o Navio!",playername);
			    SendClientMessageToAll(COR_PM, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,COR_PM);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Tropa de PRF estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(COR_PM, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,COR_PM);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Tropa de Parisestao dominando a Praia!",playername);
    			SendClientMessageToAll(COR_PM, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,COR_PM);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Tropa de PRF estao dominando a Construcao!",playername);
			    SendClientMessageToAll(COR_PM, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,COR_PM);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35) //Forca Tatica
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Forca Taticaestao dominando o Navio!",playername);
			    SendClientMessageToAll(COR_BOPE, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,COR_BOPE);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Forca Taticaestao dominando o Puteiro!",playername);
   				SendClientMessageToAll(COR_BOPE, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,COR_BOPE);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Forca Taticaestao dominando a Praia!",playername);
    			SendClientMessageToAll(COR_BOPE, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,COR_BOPE);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Forca Taticaestao dominando a Construcao!",playername);
			    SendClientMessageToAll(COR_BOPE, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,COR_BOPE);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) //Policia Federal
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Policia Federal estao dominando o Navio!",playername);
			    SendClientMessageToAll(COLORGZ_PF, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,COLORGZ_PF);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Policia Federal estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(COLORGZ_PF, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,COLORGZ_PF);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Policia Federal estao dominando a Praia!",playername);
    			SendClientMessageToAll(COLORGZ_PF, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,COLORGZ_PF);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Policia Federal estao dominando a Construcao!",playername);
			    SendClientMessageToAll(COLORGZ_PF, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,COLORGZ_PF);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //Policia Civil
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Policia Civil estao dominando o Navio!",playername);
			    SendClientMessageToAll(COR_PC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,COR_PC);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Policia Civil estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(COR_PC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,COR_PC);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Policia Civil estao dominando a Praia!",playername);
    			SendClientMessageToAll(COR_PC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,COR_PC);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Policia Civil estao dominando a Construcao!",playername);
			    SendClientMessageToAll(COR_PC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,COR_PC);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) //Groove Street SF
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Groove Street SF estao dominando o Navio!",playername);
			    SendClientMessageToAll(TEAM_GROVE_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,TEAM_GROVE_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Groove Street SF estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,TEAM_GROVE_COLOR);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Groove Street SF estao dominando a Praia!",playername);
    			SendClientMessageToAll(TEAM_GROVE_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,TEAM_GROVE_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Groove Street SF estao dominando a Construcao!",playername);
			    SendClientMessageToAll(TEAM_GROVE_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,TEAM_GROVE_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) //Familia do Norte
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Tropa do Egitoestao dominando o Navio!",playername);
			    SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,TEAM_VAGOS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Tropa do Egitoestao dominando o Puteiro!",playername);
   				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,TEAM_VAGOS_COLOR);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Tropa do Egitoestao dominando a Praia!",playername);
    			SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,TEAM_VAGOS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Tropa do Egitoestao dominando a Construcao!",playername);
			    SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,TEAM_VAGOS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) //Terceiro Comando Puro
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Terceiro Comando Puro estao dominando o Navio!",playername);
			    SendClientMessageToAll(COR_PCC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,COR_PCC);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Terceiro Comando Puro estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(COR_PCC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,COR_PCC);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Terceiro Comando Puro estao dominando a Praia!",playername);
    			SendClientMessageToAll(COR_PCC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,COR_PCC);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Terceiro Comando Puro estao dominando a Construcao!",playername);
			    SendClientMessageToAll(COR_PCC, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,COR_PCC);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //Grota
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Tropa da Turquiaestao dominando o Navio!",playername);
			    SendClientMessageToAll(0xF6000000, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,0xF6000000);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e a Tropa da Turquiaestao dominando o Puteiro!",playername);
   				SendClientMessageToAll(0xF6000000, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,0xF6000000);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e a Tropa da Turquiaestao dominando a Praia!",playername);
    			SendClientMessageToAll(0xF6000000, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,0xF6000000);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e a Tropa da Turquiaestao dominando a Construcao!",playername);
			    SendClientMessageToAll(0xF6000000, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,0xF6000000);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //Grota
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e os Tropa da MDLestao dominando o Navio!",playername);
			    SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,TEAM_BALLAS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e os Tropa da MDLestao dominando o Puteiro!",playername);
   				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,TEAM_BALLAS_COLOR);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e os Tropa da MDLestao dominando a Praia!",playername);
    			SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,TEAM_BALLAS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e os Tropa da MDLestao dominando a Construcao!",playername);
			    SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,TEAM_BALLAS_COLOR);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) //Milicia
		{
  			if(IsPlayerInNavio(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaNavio == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e os Milicia estao dominando o Navio!",playername);
			    SendClientMessageToAll(TEAM_TDT_color, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZNavio,TEAM_TDT_color);
		     	Dominando[playerid] = 1;
		     	ProvocoNavio[playerid] = 1;
				GuerranaNavio = 1;
				TempoGuerraNavio = SetTimerEx("GuerraNavio", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPuteiro(playerid))
			{
				if(Dominando[playerid] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPuteiro == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string), "%s e os Milicia estao dominando o Puteiro!",playername);
   				SendClientMessageToAll(TEAM_TDT_color, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
	     		GangZoneFlashForAll(GZPuteiro,TEAM_TDT_color);
	     		Dominando[playerid] = 1;
	     		ProvocoPuteiro[playerid] = 1;
				GuerranaPuteiro = 1;
				TempoGuerraPuteiro = SetTimerEx("GuerraPuteiro", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPraia(playerid))
			{
				if(Dominando[playerid] == 1)
	 			{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaPraia == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
 				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
   				format(string, sizeof(string), "%s e os Milicia estao dominando a Praia!",playername);
    			SendClientMessageToAll(TEAM_TDT_color, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
  				SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZPraia,TEAM_TDT_color);
		     	Dominando[playerid] = 1;
		     	ProvocoPraia[playerid] = 1;
				GuerranaPraia = 1;
				TempoGuerraPraia = SetTimerEx("GuerraPraia", 30000, 0, "i", playerid);
				return true;
			}
  			if(IsPlayerInConstrucao(playerid))
			{
   				if(Dominando[playerid] == 1)
 				{
					SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
					return true;
				}
				if(GuerranaConstrucao == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
					return true;
				}
   				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
     			format(string, sizeof(string), "%s e os Milicia estao dominando a Construcao!",playername);
			    SendClientMessageToAll(TEAM_TDT_color, string);
   	 			SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangs foram avisadas!");
	    		SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
		     	GangZoneFlashForAll(GZConstrucao,TEAM_TDT_color);
		     	Dominando[playerid] = 1;
		     	ProvocoConstrucao[playerid] = 1;
				GuerranaConstrucao = 1;
				TempoGuerraConstrucao = SetTimerEx("GuerraConstrucao", 30000, 0, "i", playerid);
 				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		//=============================== MORRO =============================================================================

		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)// PM
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
   			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estao dominando a Praca do Aeroporto!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
       			TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e a Policia Militar estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
       			TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)// PC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
		   			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_PC, string);
			    SendClientMessage(playerid, COR_PC, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PC, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,COR_PC);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e a Policia Civil estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PC, string);
			    SendClientMessage(playerid, COR_PC, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PC, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,COR_PC);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e a Policia Civil estao dominando a Praca do Aeroporto!",playername);
				SendClientMessageToAll(COR_PC, string);
			    SendClientMessage(playerid, COR_PC, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PC, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,COR_PC);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e a Policia Civil estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_PC, string);
			    SendClientMessage(playerid, COR_PC, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PC, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,COR_PC);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)// BOPE
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Voce ja esta dominando um territorio.");
	    			return true;
	   			}
	   			if(GuerranaFavela == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_BOPE, string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 30 segundos para dominar esta area .");
    		    GangZoneFlashForAll(GZFavela,COR_BOPE);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Voce ja esta dominando um territorio.");
	   				return true;
	   			}
	   			if(GuerranoSkate == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_BOPE, string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,COR_BOPE);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
    			TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Voce ja esta dominando um territorio.");
	   				return true;
	   			}
	   			if(GuerranoPark == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_BOPE, string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,COR_BOPE);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
    			TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COR_BOPE, "Voce ja esta dominando um territorio.");
	   				return true;
	   			}
	   			if(GuerranoAero == 1)
	   			{
	   				SendClientMessage(playerid, COR_BOPE, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_BOPE, string);
			    SendClientMessage(playerid, COR_BOPE, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_BOPE, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,COR_BOPE);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
    			TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)// Los Tropa da Turquia
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Tropa da Turquia estao dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,TEAM_TDT_color);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Tropa da Turquia estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZSkate,TEAM_TDT_color);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Tropa da Turquia estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZAero,TEAM_TDT_color);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Los Tropa da Turquia estao dominando o Park Glen !",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZPark,TEAM_TDT_color);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)// Elements
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Elements estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,COR_ELEMENT);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Elements estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZAero,COR_ELEMENT);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Elements estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZSkate,COR_ELEMENT);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Elements estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZPark,COR_ELEMENT);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}


			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}

		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)// PCC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os PCC estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_PCC, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_PCC, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZAero,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PCC, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZSkate,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os PCC estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_PCC, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
    	        GangZoneFlashForAll(GZPark,COR_PCC);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}


			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)// CV
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranaFavela == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Comando Vermelho estao dominando a Favela!",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
        		TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho estao dominando o Park Glen !",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)// Sons of Anarchy
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranaFavela == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e os Sons of Anarchy estao dominando a Favela!",playername);
				SendClientMessageToAll(COR_SONS, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,COR_SONS);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
        		TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_SONS, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,COR_SONS);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_SONS, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,COR_SONS);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy estao dominando o Park Glen !",playername);
				SendClientMessageToAll(COR_SONS, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,COR_SONS);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)// Groove Street
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	   			}
	   			if(GuerranaFavela == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estao dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estao dominando a Praca do Aerporto !",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street estao dominando o Park Glen!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}


			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)// Ballas
		{
			if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
	    		}
	    		if(GuerranaFavela == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estao dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
        		TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas estao dominando o Park Glen !",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}

			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)// Los Vagos
		{
            if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos estao dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZFavela,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 30000, 0, "i", playerid);
				return true;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos estao dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Poliicia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZSkate,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos estao dominando o Park Glen!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Policia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZPark,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
   				TempoGuerraPark = SetTimerEx("GuerraPark", 30000, 0, "i", playerid);
				return true;
			}

			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voce ja esta dominando um territorio.");
	    			return true;
    			}
    			if(GuerranoAero == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Ja esta tendo uma guerra nesse territorio.");
	    			return true;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos estao dominando a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Poliicia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 30 segundos para dominar esta area .");
                GangZoneFlashForAll(GZAero,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
   				TempoGuerraAero = SetTimerEx("GuerraAero", 30000, 0, "i", playerid);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voce nao esta em nenhum territorio!");
			}
			return true;
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/guerra", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid,CINZA," Voce nao pode criar guerra na cadeia!");
			return true;
    	}
  	    if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, CINZA, "   Ja esta tendo uma guerra!");
            return true;
        }
		new Float:x,Float:y,Float:z;
		if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)// EXE
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e as Forcas Armadas iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COLOR_EXE, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_EXE);
	    	VisionInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)// Peaky Blinders
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o Peaky Blinders iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_GI, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_GI);
	    	VisionInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)// F.A.R.C
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a F.A.R.C iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_FARC, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_FARC);
	    	VisionInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return true;
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[100];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN: %s foi kickado pelo Sistema(Modo Cia), Motivo: %s (%d-%d-%d)", giveplayer, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "ADMIN: %s foi kickado pelo Sistema, Motivo: %s", giveplayer, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else
						{
							format(string, sizeof(string), "ADMIN: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "ADMIN: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}

						//if(_:g_WelcomeChannelId == 0)
						//g_WelcomeChannelId = DCC_FindChannelById("865653950396891146");
						new str[128];
						new stafflog[128];
						new playerlog[128];
						new motivolog[128];
						new DCC_Embed:embed = DCC_CreateEmbed();
						DCC_SetEmbedTitle(embed, "Log Kick");
						DCC_SetEmbedColor(embed, 0xFF0000);
						format(str, sizeof str, "Algum Staff deu kick alguém in game!");
						DCC_SetEmbedDescription(embed, str);
						format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
						DCC_AddEmbedField(embed, "Staff:", stafflog, false);
						format(playerlog, sizeof playerlog, "`%s`", giveplayer);
						DCC_AddEmbedField(embed, "Player:", playerlog, false);
						format(motivolog, sizeof motivolog, "`%s`", (result));
						DCC_AddEmbedField(embed, "Motivo:", motivolog, false);
						DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SendChannelEmbedMessage(logKick, embed);
						
						Kick(giveplayerid);
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/irh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /irh [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pHelper] >= 1)
					{
					    if(helpertrampando[playerid] < 1 && PlayerInfo[playerid][pHelper] != 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando ! (/shelper)");
							return true;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, world);
						SendClientMessage(playerid, 0x33FF00FF, "Voce foi teleportado pelo Admin !");
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						if(helpertrampando[playerid] == 1 && helperhide[playerid] == 1)
						{}
						else { format(string, sizeof(string), "O Helper %s Foi Ate %s.",playername,plname); }
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um player ativo.");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/trazerh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazerh [id]");
				return true;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode trazer um Preso");
				return true;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pHelper] >= 1)
					{
					    if(helpertrampando[playerid] < 1 && PlayerInfo[playerid][pHelper] != 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando ! (/shelper)");
							return true;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo,world);
						SendClientMessage(plo, 0x33FF00FF, "Voce foi teleportado pelo Admin !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/aviso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
    			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[100];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
							return true;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pWarns] >= 3)
						{
							getdate(year, month, day);
							if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
							{
								BanLog(string);
							}
							getdate(Ano, Mes, Dia);
							PlayerInfo[giveplayerid][pBan] = 1;
							SBan(giveplayerid, "Terceiro aviso", PlayerName(playerid));
							return true;
						}
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	/*if(PlayerInfo[giveplayerid][pAdmin] >= 1340)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode banir um Admin Dono !");
							return true;
						}*/
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[100];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
							return true;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN: %s foi banido pelo Sistema(Modo Cia), Motivo: %s (%d-%d-%d)", giveplayer,(result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "ADMIN: %s foi banido pelo Sistema, Motivo: %s", giveplayer,(result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
      					}
 						else
						{
							format(string, sizeof(string), "ADMIN: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "ADMIN: %s foi banido por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						
						//if(_:g_WelcomeChannelId == 0)
						//g_WelcomeChannelId = DCC_FindChannelById("865653948093038603");
						new str[128];
						new stafflog[128];
						new playerlog[128];
						new motivolog[128];
						new DCC_Embed:embed = DCC_CreateEmbed();
						DCC_SetEmbedTitle(embed, "Log Banimento");
						DCC_SetEmbedColor(embed, 0xFF0000);
						format(str, sizeof str, "Algum Staff deu Ban alguém in game!");
						DCC_SetEmbedDescription(embed, str);
						format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
						DCC_AddEmbedField(embed, "Staff:", stafflog, false);
						format(playerlog, sizeof playerlog, "`%s`", giveplayer);
						DCC_AddEmbedField(embed, "Player:", playerlog, false);
						format(motivolog, sizeof motivolog, "`%s`", (result));
						DCC_AddEmbedField(embed, "Motivo:", motivolog, false);
						DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
						DCC_SendChannelEmbedMessage(logBan, embed);

						PlayerInfo[giveplayerid][pBan] = 1;
						SBan(giveplayerid, result, PlayerName(playerid));
						new banstring[2000];
						format(banstring, sizeof(banstring), "{FFFFFF}Voce esta banido do servidor!\nMotivo: %s\nDia: %s\tHora: %s\n\nPara revisao do seu banimento va em nosso Discord! Lembrando, sera desbanido somente se for inocente!", BanInfo[playerid][pMotivo], BanInfo[playerid][pData], BanInfo[playerid][pHora]);
						ShowPlayerDialog(giveplayerid, 5062, DIALOG_STYLE_MSGBOX, "{FFFFFF}Aviso Brasil {0000FF}Play {FFFFFF}Real", banstring, "Entendido", "Cancelar");
						SetTimerEx("KickarWL", 2000, 0, "i", giveplayerid);
						return true;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
			}
		}
		return true;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/payday", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    for(new i=0;  i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) PlayerInfo[i][pPayDay] = 6;
			}
			PayDay();
			format(gstring, 128, "ADM AVISO: %s ID[%d] usou o comando /payday", PlayerName(playerid), playerid);
			SendClientMessage(playerid, COLOR_GRAD1, gstring);
			PayLog(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta autorizado a usar este comando!");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/congelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /congelar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
   				if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 0);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}

//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/descongelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /descongelar [id]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/desbugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbugar [playerid]");
				return true;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						Controle(playa, 1);
						MedicBill[playa] = 0;
			            NeedMedicTime[playa] = 0;
			            SetCameraBehindPlayer(playa);
		                sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                    	interior[playa] = GetPlayerInterior(playa);
                    	skinneg[playa] = GetPlayerSkin(playa);
                    	GetPlayerArmour(playa,APP[playa]);
                     	GetPlayerHealth(playa,PlayerHPP[playa]);
                     	GetPlayerFacingAngle(playa,FaceAngle[playa]);
                      	GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                     	GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                     	GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                    	GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                     	GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                     	GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                    	GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                    	GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                     	GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                    	GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                     	GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                    	GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                      	GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                      	SpawnPlayer(playa);
                      	TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
	                    if(IsPlayerInAnyVehicle(playa))
                     	{
                    		vehicledd[playa] = 1;
                     		VehicleIDD[playa] = GetPlayerVehicleID(playa);
                     	}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar este comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/setemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setemprego [playerid/ParteDoNome] [empregoid)]");
				return true;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
       			if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pEmprego] = jobid;
						SendClientMessage(playerid, COLOR_GRAD1, "   Emprego setado com sucesso !");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta autorizado a usar esse comando!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/savefiles", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
      		if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
				return true;
			}
			OnPropUpdate();
			Atualizar3Dtexts();
			SaveCars();
			SaveHelper();
			SaveAdm();
			SaveVip();
			SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce Salvou os Arquivos!");
			return true;
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(admtrampando[playerid] < 1) { return SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)"); }
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
		    		if(IsPlayerConnected(i))
		    		{ OnPlayerSave(i); }
				}
				GameTextForPlayer(playerid, "~p~Servidor reiniciando em 10 segundos", 3000, 3);
				SetTimerEx("gmxtimer", 10000, 0, "i", playerid);
				/*GameModeExitFunc();
				SaveAccounts();
				OnPlayerSave(playerid);*/
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce nao tem autorizacao para dar GMX!");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmdtext, "/votacao", true, 8))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(!votacao[iniciada])
		    {
				if(!cmdtext[9])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Use: /votacao [pergunta]");
					return 1;
				}
				format(string, sizeof string, "==> Votacao: %s ?", cmdtext[9]);
				SendClientMessageToAll(0xFFFFFFAA, string);
				SendClientMessageToAll(0xFFF000AA, "> Se voce concorda digite: /sim");
				SendClientMessageToAll(0xFFF000AA, "> Se voce discorda digite: /nao");
				votacao[iniciada] = true;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; i++)
				{	votou[i] = false; }
			} else {
				SendClientMessage(playerid, COLOR_GREY,"Ja existe uma votacao em andamento!");
			}
		} else {
			SendClientMessage(playerid, COLOR_GREY,"Voce nao tem permissao para usar este comando!");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmdtext, "/sim", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, 0xFFFFFFAA, "Seu voto foi computado com sucesso!");
			votacao[sim]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmdtext, "/nao", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, 0xFFFFFFAA, "Seu voto foi computado com sucesso!");
			votacao[nao]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(!strcmp(cmdtext, "/encerrar", true))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(votacao[iniciada])
			{
				SendClientMessageToAll(0xFFFFFFAA, "==> Votacao encerrada!");
				format(string, sizeof string, "> %d pessoas responderam Sim;", votacao[sim]);
				SendClientMessageToAll(0xFFF000AA,string);
				format(string, sizeof string, "> %d pessoas responderam Nao;", votacao[nao]);
				SendClientMessageToAll(0xFFF000AA, string);
				if(votacao[sim] == votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> Houve um empate!");
				} else if(votacao[sim] > votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> A maioria CONCORDA com a  pergunta.");
				} else if(votacao[sim] < votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> A maioria DISCORDA da  pergunta.");
				}
				votacao[iniciada] = false;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; i++)
					votou[i] = false;
			} else {
				SendClientMessage(playerid, 0xFFFFFFAA, "Nenhuma votacao criada!");
			}
		} else {
			SendClientMessage(playerid, 0xFFFFFFAA, "Voce nao tem permissao para usar este comando!");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/online", true) == 0)
	{
		{
		    new DialogTheus[3000];
			format(string, sizeof(string), "Jogadores: {00FFFF}%d\n", ContarJogadores());
			strcat(DialogTheus,string);
			format(string, sizeof(string), "{FF0000}Admins: {00FFFF}%d\n", ContarAdm());
			strcat(DialogTheus,string);
			format(string, sizeof(string), "{1E90FF}Policiais: {00FFFF}%d\n", ContarPM());
			strcat(DialogTheus,string);
			format(string, sizeof(string), "{696969}Criminosos: {00FFFF}%d\n", ContarBandido());
			strcat(DialogTheus,string);
			ShowPlayerDialog(playerid, 6666, DIALOG_STYLE_LIST, "Jogadores Online", DialogTheus, "Ok", "Fechar");
		}
		return true;
	}
	if(strcmp(cmd, "/cops", true) == 0)
	{
		format(string, sizeof(string), "Policias na cidade : %d.", ContarPM());
		SendClientMessage(playerid, COR_PM, string);
		return true;
	}
	if(strcmp(cmd, "/bandidos", true) == 0)
	{
		format(string, sizeof(string), "Bandidos na cidade : %d.", ContarBandido());
		SendClientMessage(playerid, COR_WHITE, string);
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/admins", true) == 0)
	{
	    new DialogTheus[3000];
		SendClientMessage(playerid, COLOR_YELLOW, "Admins online....");
		for(new i = 0; i <= MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0)
			{
				if(admhide[i] == 0)
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					new lolz[50];
					if(PlayerInfo[i][pAdmin] == 2)
				    {
						lolz = "Administrador";
					}
					if(PlayerInfo[i][pAdmin] == 3)
				    {
						lolz = "Coordenador";
					}
					if(PlayerInfo[i][pAdmin] == 4)
				    {
						lolz = "Supervisor";
					}
					if(PlayerInfo[i][pAdmin] == 1337)
				    {
						lolz = "Gerente";
					}
					if(PlayerInfo[i][pAdmin] == 1340)
				    {
						lolz = "Sub Fundador";
					}
					if(PlayerInfo[i][pAdmin] == 1341)
				    {
						lolz = "Fundador";
					}
					if(PlayerInfo[i][pAdmin] == 3000)
				    {
						lolz = "CEO";
					}
					if(PlayerInfo[i][pScripter] >= 1)
				    {
						lolz = "Developer";
					}
					if(PlayerInfo[i][pMapper] >= 1)
				    {
						lolz = "Modeler";
					}
					if(PlayerInfo[i][pHelper] >= 1)
					{
						lolz = "Helper";
					}
					if(PlayerInfo[i][pHelper] >= 1)
					{
						if(away[i] == 0)
						{
							if(helpertrampando[i] == 1)
							{
								format(string,sizeof(string), "Admin | Nivel | Modo");
								format(string,sizeof(string), "%s\t%s\tTRABALHANDO\n", sendername, lolz);
								strcat(DialogTheus,string);
							}
							else
							{
								format(string,sizeof(string), "%s\t%s\tJOGANDO\n", sendername, lolz);
								strcat(DialogTheus,string);
							}
						}
						else
						{
							format(string,sizeof(string), "%s\t%s\tAUSENTE\n", sendername, lolz);
							strcat(DialogTheus,string);
						}
					}
					if(PlayerInfo[i][pAdmin] > 1)
					{
						if(away[i] == 0)
						{
							if(admtrampando[i] == 1)
							{
								format(string,sizeof(string), "Admin | Nivel | Modo");
								format(string,sizeof(string), "%s\t%s\tTRABALHANDO\n", sendername, lolz);
								strcat(DialogTheus,string);
							}
							else
							{
								format(string,sizeof(string), "%s\t%s\tJOGANDO\n", sendername, lolz);
								strcat(DialogTheus,string);
							}

						}
						else
						{
							format(string,sizeof(string), "%s\t%s\tAUSENTE\n", sendername, lolz);
							strcat(DialogTheus,string);
						}
					}
					ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_LIST, "{FFFFFF}Admins Online", DialogTheus, "Fechar", "");
				}
			}
		}
		return true;
	}
	if(strcmp(cmd, "/niveladm", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
			new DialogTheus[3000];
			format(string,sizeof(string), "{FFFFFF}2 - Administrador\n3 - Coordenador\n4 - Supervisor\n1337 - Gerente\n1340 - Sub Fundador\n1341 - Fundador\n3000 - CEO");
			strcat(DialogTheus,string);
			ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_MSGBOX, "{FFFFFF}Nivel de ADM", DialogTheus, "Entendido", "Fechar");
		}
		else return SendClientMessage(playerid, -1, "Voce nao pode usar esse comando!");
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

	if(strcmp(cmd, "/darmod", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] > 1340)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darmod [ id ] [Level 0 a 300]");
				return true;
			}
			new para2;
			new level2;
			para2 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
            level2 = strval(tmp);
            GetPlayerName(playerid, sendername, 256);
   			{
			    if(IsPlayerConnected(para2))
			    {
			        if(para2 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para2, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para2][pMod] = level2;
						printf("ADMIN CMD: %s promoveu %s a level %d de Moderador.", sendername, giveplayer, level2);
						format(string, sizeof(string), "   Voce foi promovido para level  %d de Moderador - Por %s", level2, PlayerName(playerid));
						SendClientMessage(para2, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Voce promoveu o(a) %s Para o level %d de Moderador.", giveplayer,level2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s Promoveu %s a Moderador level %d ",sendername,giveplayer,level2);
					}
				}
			}
		}
		return true;
	}

	if(strcmp(cmd, "/darhelper", true) ==0 )
	{
		if(PlayerInfo[playerid][pAdmin] > 1340)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darhelper [ id ] [Level 0 a 300]");
				return true;
			}
			new para2;
			new level2;
			para2 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
            level2 = strval(tmp);
            GetPlayerName(playerid, sendername, 256);
   			{
			    if(IsPlayerConnected(para2))
			    {
			        if(para2 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para2, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para2][pHelper] = level2;
						printf("ADMIN CMD: %s promoveu %s a level %d de helper.", sendername, giveplayer, level2);
						format(string, sizeof(string), "   Voce foi promovido para level  %d de Helper - Por %s", level2, PlayerName(playerid));
						SendClientMessage(para2, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Voce promoveu o(a) %s Para o level %d de Helper.", giveplayer,level2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s Promoveu %s a Helper level %d ",sendername,giveplayer,level2);
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

//>-=-==-=-=-=-==-=--=-=-=-==-=-=-=-=-==-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-
	if(strcmp(cmd, "/relatorio", true) == 0 || strcmp(cmd, "/relato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao esta logado!");
	            return 1;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /relatorio [texto]");
				return 1;
			}
            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "-> Relatorio VIP de %s - ID[%d]: %s <-", sendername, playerid, lol, (result));
				ABroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Relatorio Vip enviado com sucesso! Em breve sera atendido");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "-> Relatorio Socio de %s - ID[%d]: %s <-", sendername, playerid, lol, (result));
				ABroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Relatorio Socio Master enviado com sucesso! Em breve sera atendido");
            }
            else
            {
				format(string, sizeof(string), "-> Relatorio de %s(%d): %s <-", sendername, playerid, (result));
				ABroadCast(0xFFFF66FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Relatorio enviado com sucesso! Em breve sera atendido");
			}
		}
	    return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/tra", true) == 0 || strcmp(cmd, "/trabalhar", true) == 0)
	{
	    new lolz[50];
		if(PlayerInfo[playerid][pAdmin] == 2)
		{
			lolz = "Administrador";
		}
		if(PlayerInfo[playerid][pAdmin] == 3)
		{
			lolz = "Coordenador";
		}
		if(PlayerInfo[playerid][pAdmin] == 4)
		{
			lolz = "Supervisor";
		}
		if(PlayerInfo[playerid][pAdmin] == 1337)
		{
			lolz = "Gerente";
		}
		if(PlayerInfo[playerid][pAdmin] == 1340)
		{
			lolz = "Sub Fundador";
		}
		if(PlayerInfo[playerid][pAdmin] == 1341)
		{
			lolz = "Fundador";
		}
		if(PlayerInfo[playerid][pAdmin] == 3000)
		{
			lolz = "CEO";
		}

	    new minuto, hora, segundo;
		gettime(hora, minuto, segundo);
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
			SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode trabalhar na cadeia!");
	      	return true;
	    }
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(admtrampando[playerid] > 0)
			{
				admtrampando[playerid] = 0;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				/*SendClientMessageToAll(COLOR_WHITE, "|_______________ Administracao _______________|");
				format(string, 128, "[BPR] %s %s ID(%d) esta Jogando, por isso nao ira atende-los!",lolz,sendername, playerid);
				SendClientMessageToAll(COLOR_DBLUE, string);
				format(string, 128, "[BPR] Para ver os admins disponiveis use /admins",sendername, playerid);
				SendClientMessageToAll(COLOR_DBLUE, string);*/
				SendClientMessage(playerid, COLOR_WHITE, "Voce saiu do modo trabalho e nao ira mais atender!");
				KillTimer(TempoAdministrador);
				SetPlayerToTeamColor(playerid);
				ResetPlayerWeaponsEx(playerid);
				SetPlayerHealth(playerid,100);
				Delete3DTextLabel(nivellabel[playerid]);
				TirarAureola(playerid);
				SetPlayerSkin(playerid,skinadm[playerid]);

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653965353386024");
				new str[128];
				new stafflog[128];
				new playerlog[128];
				new motivolog[128];
				new datalog[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Sistema de Ponto");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Algum Staff Saiu do Modo Trabalho!");
				DCC_SetEmbedDescription(embed, str);
				format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Staff:", stafflog, false);
				format(playerlog, sizeof playerlog, "`%s`", lolz);
				DCC_AddEmbedField(embed, "Cargo:", playerlog, false);
				format(motivolog, sizeof motivolog, "`%02d:%02d:%02d`", hora, minuto, segundo);
				DCC_AddEmbedField(embed, "Hora:", motivolog, false);
				format(datalog, sizeof datalog, "`%d/%d/%d`", day,month,year);
				DCC_AddEmbedField(embed, "Data:", datalog, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logPonto, embed);
			}
			else
			{
				admtrampando[playerid] = 1;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				/*SendClientMessageToAll(COLOR_WHITE, "|_______________ Administracao _______________|");
				format(string, 128, "[BPR] %s %s ID(%d) esta Trabalhando, e estara disponivel para atende-los",lolz,sendername, playerid);
     			SendClientMessageToAll(COLOR_DBLUE, string);
     			format(string, 128, "[BPR] Para ver os outros admins online use /admins",sendername, playerid);
				SendClientMessageToAll(COLOR_DBLUE, string);*/
				SendClientMessage(playerid, COLOR_WHITE, "Voce entrou em modo trabalho, atenda os jogadores!");
       			SetPlayerToTeamColor(playerid);
       			TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
			    skinadm[playerid] = GetPlayerSkin(playerid);
			    SetPlayerSkin(playerid,217);
			    ColocarAureola(playerid);
			    format(string, sizeof(string), "%s", lolz);
				nivellabel[playerid] = Create3DTextLabel(string, 0x005FFFFF, 30.0, 35.0, 50.0, 3.0, 0, 0);
			    Attach3DTextLabelToPlayer(nivellabel[playerid], playerid, 0.0, 0.0, 0.7);

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653965353386024");
				new str[128];
				new stafflog[128];
				new playerlog[128];
				new motivolog[128];
				new datalog[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Sistema de Ponto");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Algum Staff entrou em modo Trabalho!");
				DCC_SetEmbedDescription(embed, str);
				format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Staff:", stafflog, false);
				format(playerlog, sizeof playerlog, "`%s`", lolz);
				DCC_AddEmbedField(embed, "Cargo:", playerlog, false);
				format(motivolog, sizeof motivolog, "`%02d:%02d:%02d`", hora, minuto, segundo);
				DCC_AddEmbedField(embed, "Hora:", motivolog, false);
				format(datalog, sizeof datalog, "`%d/%d/%d`", day,month,year);
				DCC_AddEmbedField(embed, "Data:", datalog, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logPonto, embed);
           }
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/trah", true) == 0)
	{
		new minuto, hora, segundo;
		gettime(hora, minuto, segundo);
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
			SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode entrar em servico na cadeia!");
	      	return true;
	    }
		if(PlayerInfo[playerid][pHelper] >= 1)
		{
			if(helpertrampando[playerid] > 0)
			{
				helpertrampando[playerid] = 0;
				/*GetPlayerName(playerid,sendername,sizeof(sendername));
				SendClientMessageToAll(COLOR_AZULBB, "|_______________ Administracao _______________|");
				format(string, 128, "BPR Staff: %s ID(%d) esta Jogando, portanto nao ira atende-los!",sendername, playerid);
     			SendClientMessageToAll(COLOR_DBLUE, string);
     			format(string, 128, "BPR Staff: Para ver os outros Helpers online use /helpers",sendername, playerid);
				SendClientMessageToAll(COLOR_DBLUE, string);*/
				SendClientMessage(playerid, COLOR_WHITE, "Voce nao esta mais em modo trabalho!");
				KillTimer(TempoHelper);
				SetPlayerToTeamColor(playerid);
				ResetPlayerWeaponsEx(playerid);
				SetPlayerHealth(playerid,100);
				//Delete3DTextLabel(nivellabel[playerid]);
				TirarAureola(playerid);
				SetPlayerSkin(playerid,skinadm[playerid]);

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653965353386024");
				new str[128];
				new stafflog[128];
				new playerlog[128];
				new motivolog[128];
				new datalog[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Sistema de Ponto");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Algum Staff Saiu do Modo Trabalho!");
				DCC_SetEmbedDescription(embed, str);
				format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Staff:", stafflog, false);
				format(playerlog, sizeof playerlog, "`Helper`");
				DCC_AddEmbedField(embed, "Cargo:", playerlog, false);
				format(motivolog, sizeof motivolog, "`%02d:%02d:%02d`", hora, minuto, segundo);
				DCC_AddEmbedField(embed, "Hora:", motivolog, false);
				format(datalog, sizeof datalog, "`%d/%d/%d`", day,month,year);
				DCC_AddEmbedField(embed, "Data:", datalog, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logPonto, embed);
			}
			else
			{
				helpertrampando[playerid] = 1;
				/*GetPlayerName(playerid,sendername,sizeof(sendername));
    			SendClientMessageToAll(COLOR_AZULBB, "|_____________ Administracao _____________|");
				format(string, 128, "BPR Staff: %s ID(%d) esta Trabalhando, e estara disponivel para atende-los",sendername, playerid);
     			SendClientMessageToAll(COLOR_DBLUE, string);
     			format(string, 128, "BPR Staff: Para ver os outros Helpers online use /helpers",sendername, playerid);
				SendClientMessageToAll(COLOR_DBLUE, string);*/
				SendClientMessage(playerid, COLOR_WHITE, "Voce entrou em modo trabalho, atenda os players!");
       			SetPlayerToTeamColor(playerid);
       			TempoHelper = SetTimerEx("Helper", 100, true, "i", playerid);
          		skinadm[playerid] = GetPlayerSkin(playerid);
			    SetPlayerSkin(playerid,171);
       			ColocarAureola(playerid);
			    format(string, sizeof(string), "Helper");
				nivellabel[playerid] = Create3DTextLabel(string, 0x005FFFFF, 30.0, 35.0, 50.0, 3.0, 0, 0);
			    Attach3DTextLabelToPlayer(nivellabel[playerid], playerid, 0.0, 0.0, 0.7);

				//if(_:g_WelcomeChannelId == 0)
				//g_WelcomeChannelId = DCC_FindChannelById("865653965353386024");
				new str[128];
				new stafflog[128];
				new playerlog[128];
				new motivolog[128];
				new datalog[128];
				new DCC_Embed:embed = DCC_CreateEmbed();
				DCC_SetEmbedTitle(embed, "Sistema de Ponto");
				DCC_SetEmbedColor(embed, 0xFF0000);
				format(str, sizeof str, "Algum Staff entrou em modo Trabalho!");
				DCC_SetEmbedDescription(embed, str);
				format(stafflog, sizeof stafflog, "`%s`", PlayerName(playerid));
				DCC_AddEmbedField(embed, "Staff:", stafflog, false);
				format(playerlog, sizeof playerlog, "`Helper`");
				DCC_AddEmbedField(embed, "Cargo:", playerlog, false);
				format(motivolog, sizeof motivolog, "`%02d:%02d:%02d`", hora, minuto, segundo);
				DCC_AddEmbedField(embed, "Hora:", motivolog, false);
				format(datalog, sizeof datalog, "`%d/%d/%d`", day,month,year);
				DCC_AddEmbedField(embed, "Data:", datalog, false);
				DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
				DCC_SendChannelEmbedMessage(logPonto, embed);
           }
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if (strcmp(cmd,"/lideres",true) == 0)
	{
	    new DialogTheus[3000];
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2, "|___[Lideres Online]___|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
        			if(PlayerInfo[i][pLider] == 1)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Policia Militar)\n",sendername);
						//SendClientMessage(playerid,GCOP_COLOR,string);
						strcat(DialogTheus,string);
					}
        			else if(PlayerInfo[i][pLider] == 34)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Policia Rodoviaria Federal)\n",sendername);
						//SendClientMessage(playerid,GCOP_COLOR,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(BOPE)\n",sendername);
						//SendClientMessage(playerid,COR_BOPE,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 35)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Forca Tatica)\n",sendername);
						//SendClientMessage(playerid,COR_BOPE,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 3)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Forcas Armadas)\n",sendername);
						//SendClientMessage(playerid,COR_EXE,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 4)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Medicos LS)\n",sendername);
						//SendClientMessage(playerid,COR_MEDE,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 27)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Medicos SF)\n",sendername);
						//SendClientMessage(playerid,COR_MEDE,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Tropa da Turquia)\n",sendername);
						//SendClientMessage(playerid,Cor_TDT,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 31)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Milicia)\n",sendername);
						//SendClientMessage(playerid,Cor_TDT,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 6)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Peaky Blinders)\n",sendername);
						//SendClientMessage(playerid,COR_GI,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 7)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Prefeito)\n",sendername);
						//SendClientMessage(playerid,COR_PRE,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 30)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Prefeito SF)\n",sendername);
						//SendClientMessage(playerid,COR_PRE,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 8)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Hitmans)\n",sendername);
						//SendClientMessage(playerid,COR_HITMAN,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 9)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Los Santos News)\n",sendername);
						//SendClientMessage(playerid,COR_REP,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 32)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(San Fierro News)\n",sendername);
						//SendClientMessage(playerid,COR_REP,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 10)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Taxistas)\n",sendername);
						//SendClientMessage(playerid,COR_TAXI,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 33)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Taxistas SF)\n",sendername);
						//SendClientMessage(playerid,COR_TAXI,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 11)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Policia Federal)\n",sendername);
						//SendClientMessage(playerid,COR_PF,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 12)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Mafia Cosa Nostra)\n",sendername);
						//SendClientMessage(playerid,COR_COSA,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 13)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(FamiliaShelby)\n",sendername);
						//SendClientMessage(playerid,COR_YAK,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 14)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Groove)\n",sendername);
						//SendClientMessage(playerid,COR_GRO,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 24)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Bonde dos 40)\n",sendername);
						//SendClientMessage(playerid,COR_GRO,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 15)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(FARC)\n",sendername);
						//SendClientMessage(playerid,COR_FARC,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 16)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Policia Civil)\n",sendername);
						//SendClientMessage(playerid,COR_PC,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 17)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Ballas)\n",sendername);
						//SendClientMessage(playerid,COR_BALLAS,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 29)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Tropa da Turquia)\n",sendername);
						//SendClientMessage(playerid,COR_BALLAS,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 18)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Vagos)\n",sendername);
						//SendClientMessage(playerid,COR_VAGOS,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 25)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Familia do Norte)\n",sendername);
						//SendClientMessage(playerid,COR_VAGOS,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 19)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Comando Vermelho)\n",sendername);
						//SendClientMessage(playerid,0xF6000000,string);
						strcat(DialogTheus,string);
					}
     				else if(PlayerInfo[i][pLider] == 28)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Grota)\n",sendername);
						//SendClientMessage(playerid,0xF6000000,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 20)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Sons of Anarchy)\n",sendername);
						//SendClientMessage(playerid,COR_SONS,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 21)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Elements)\n",sendername);
						//SendClientMessage(playerid,COR_ELEMENT,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 23)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Primeiro Comando Capital)\n",sendername);
						//SendClientMessage(playerid,COR_PCC,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 26)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Terceiro Comando Puro)\n",sendername);
						//SendClientMessage(playerid,COR_PCC,string);
						strcat(DialogTheus,string);
					}
					else if(PlayerInfo[i][pLider] == 22)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256,"Lider: %s(Triads)\n",sendername);
						//SendClientMessage(playerid,COR_TDR,string);
						strcat(DialogTheus,string);
					}
					ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_LIST, "{FFFFFF}|__________________[Lideres Online]__________________|", DialogTheus, "Fechar", "");

				}
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if (strcmp(cmd,"/sublideres",true) == 0)
   	{
   		if(IsPlayerConnected(playerid))
       	{
         SendClientMessage(playerid, COLOR_GRAD2, "|__________________[Sub Lideres Online]__________________|");
         for(new i = 0; i < MAX_PLAYERS; i++)
         {
            if(IsPlayerConnected(i))
            {
            	if(PlayerInfo[i][pMembro] == 1 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Policia Militar)",sendername);
                  SendClientMessage(playerid,GCOP_COLOR,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 2 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(BOPE)",sendername);
                  SendClientMessage(playerid,COR_BOPE,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 3 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Forcas Armadas)",sendername);
                  SendClientMessage(playerid,COR_EXE,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 4 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Medicos LS)",sendername);
                  SendClientMessage(playerid,COR_MEDE,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 27 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Medicos SF)",sendername);
                  SendClientMessage(playerid,COR_MEDE,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 5 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Tropa da Turquia)",sendername);
                  SendClientMessage(playerid,Cor_TDT,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 31 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Milicia)",sendername);
                  SendClientMessage(playerid,Cor_TDT,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 6 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Peaky Blinders)",sendername);
                  SendClientMessage(playerid,COR_GI,string);
               	}
                else if(PlayerInfo[i][pMembro] == 7 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Prefeitura LS)",sendername);
                  SendClientMessage(playerid,COR_PRE,string);
               	}
                else if(PlayerInfo[i][pMembro] == 30 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Prefeitura SF)",sendername);
                  SendClientMessage(playerid,COR_PRE,string);
               	}
                else if(PlayerInfo[i][pMembro] == 8 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Hitmans)",sendername);
                  SendClientMessage(playerid,COR_HITMAN,string);
               	}
                else if(PlayerInfo[i][pMembro] == 9 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Los Santos News)",sendername);
                  SendClientMessage(playerid,COR_REP,string);
               	}
                else if(PlayerInfo[i][pMembro] == 32 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(San Fierro News)",sendername);
                  SendClientMessage(playerid,COR_REP,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 10 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Taxistas)",sendername);
                  SendClientMessage(playerid,COR_TAXI,string);
               	}
                else if(PlayerInfo[i][pMembro] == 11 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Policia Federal)",sendername);
                  SendClientMessage(playerid,COR_PF,string);
               	}
                else if(PlayerInfo[i][pMembro] == 12 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Mafia Cosa Nostra)",sendername);
                  SendClientMessage(playerid,COR_COSA,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 13 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(FamiliaShelby)",sendername);
                  SendClientMessage(playerid,COR_YAK,string);
               	}
                else if(PlayerInfo[i][pMembro] == 14 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Groove)",sendername);
                  SendClientMessage(playerid,COR_GRO,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 24 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Bonde dos 40)",sendername);
                  SendClientMessage(playerid,COR_GRO,string);
               	}
                else if(PlayerInfo[i][pMembro] == 15 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(FARC)",sendername);
                  SendClientMessage(playerid,COR_FARC,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 16 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Policia Civil)",sendername);
                  SendClientMessage(playerid,COR_PC,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 17 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Ballas)",sendername);
                  SendClientMessage(playerid,COR_BALLAS,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 29 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Tropa da Turquia)",sendername);
                  SendClientMessage(playerid,COR_BALLAS,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 18 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Vagos)",sendername);
                  SendClientMessage(playerid,COR_VAGOS,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 25 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Familia do Norte)",sendername);
                  SendClientMessage(playerid,COR_VAGOS,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 19 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Comando Vermelho)",sendername);
                  SendClientMessage(playerid,0xF6000000,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 28 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Grota)",sendername);
                  SendClientMessage(playerid,0xF6000000,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 20 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Sons of Anarchy)",sendername);
                  SendClientMessage(playerid,COR_SONS,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 21 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Elements)",sendername);
                  SendClientMessage(playerid,COR_ELEMENT,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 23 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Primeiro Comando Capital)",sendername);
                  SendClientMessage(playerid,COR_PCC,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 26 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Terceiro Comando Puro)",sendername);
                  SendClientMessage(playerid,COR_PCC,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 22 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
                {
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Triads)",sendername);
                  SendClientMessage(playerid,COR_TDR,string);
           		}
               	else if(PlayerInfo[i][pMembro] == 33 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Taxistas SF)",sendername);
                  SendClientMessage(playerid,COR_TAXI,string);
               	}
               	else if(PlayerInfo[i][pMembro] == 35 && PlayerInfo[i][pCargo] == 555 || PlayerInfo[i][pCargo] == 444)
               	{
                  GetPlayerName(i,sendername,sizeof(sendername));
                  format(string,256,"Sub-Lider: %s(Forca Tatica)",sendername);
                  SendClientMessage(playerid,COR_BOPE,string);
               		}
            	}
         	}
		}
 		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/vips", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2, "|__________________[Vips Online]__________________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pVIP] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s [VIP]", sendername);
                        SendClientMessage(playerid, COLOR_YELLOW, string);
					}
					else if(PlayerInfo[i][pVIP] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128, "%s [Socio]",sendername);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/ajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        TogglePlayerControllable(playerid, 0);
	    	ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Ajuda", "Ajuda Player\nAjuda Empresa\nAjuda Casa\nAjuda Aluguel\nAjuda Celular\nAjuda Lider\nAjuda Emprego\nAjuda Casamento\nDiscord\nCreditos\nAjuda VIP\n*** Conta VIP ***", "Selecionar", "Cancelar");
		}
		return 1;
	}
	if(strcmp(cmd, "/continuar", true) == 0){
		new Float:poscontx = PlayerInfo[playerid][pPos_x];
		new Float:posconty = PlayerInfo[playerid][pPos_y];
		new Float:poscontz = PlayerInfo[playerid][pPos_z];
		if(IsPlayerConnected(playerid)){
			if(timecont[playerid] != 1){
				SetPlayerPos(playerid,poscontx, posconty, poscontz);
				SendClientMessage(playerid, -1, "[{00a613}SUCESSO{FFFFFF}] Voce voltou para seu lugar antigo!");
				timecont[playerid] = 1;
			}
			else return SendClientMessage(playerid, -1, "[{bd0404}ERRO{FFFFFF}] Voce ja continuou ou seu tempo acabou!");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pp", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 247.005905 , 72.448440 , 1003.640625) || PlayerInfo[playerid][pEmprego] == 2)
		{
			MoveObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3,0.0,0.0,1260.0);
			GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~Aberto", 4000, 3);
			SetTimer("GaragemDpClosed", 4000, false);
		}
		else
		{
			//SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto do portao ou nao e um Oficial ");
	  	}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pr", true) == 0)
    {
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 250.774871 , 60.822799 , 1003.640625))
		{ //GateGaragem
			MoveObject( PDDOORb, 250.774871 , 60.822799 , 1006.862670,3,0.0,0.0,5130.0);
			GameTextForPlayer(playerid, "~w~Porta da Recepcao ~n~~b~Aberto", 5000, 3);
			SetTimer("GaragemDpClosed2", 5000, false);
		}
		else
		{
			//SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto do portao ou nao e um Oficial ");
  		}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/FEVEREIRO", true) == 0)
    {
		if (PlayerToPoint(15.0, playerid, 2105.34399, 1862.65869, 12.71300))
		{ //Portao Dreigon
			MoveObject( PortaoDreigon, 2105.34399, 1862.65869, 6.64100,3,0.0,0.0,5130.0); //Portao Dreigon 1
			GameTextForPlayer(playerid, "~w~Portao Dreigon ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoDreigon3", 5000, false);
		}
		else
		{
			//SendClientMessage(playerid, COLOR_GREY, "Voce nao esta perto do portao do Dreigon!");
  		}
  		return true;
	}
	//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/FEVEREIRO2", true) == 0)
    {
		if (PlayerToPoint(15.0, playerid, 2108.12549, 1969.66614, 12.71300))
		{ //Portao Dreigon
			MoveObject( PortaoDreigon2, 2108.12549, 1969.66614, 6.64100,3,0.0,0.0,5130.0); //Portao Dreigon 2
			GameTextForPlayer(playerid, "~w~Portao Dreigon ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoDreigon3", 5000, false);
		}
		else
		{
			//SendClientMessage(playerid, COLOR_GREY, "Voce nao esta perto do portao do Dreigon!");
  		}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pv", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 248.142105 , 78.125961 , 1003.640625))
		{ //GateGaragem
			MoveObject( PDDOORc, 248.142105 , 78.125961 , 1007.248718,3,0.0,0.0,12690.0);
			GameTextForPlayer(playerid, "~w~Porta do Vestiario ~n~~b~Aberto", 5000, 3);
			SetTimer("pd1", 5000, false);
		}
		else
		{
			//SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto do portao ou nao e um Oficial ");
  		}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pe", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1545.50000000,-1628.40002441,15.19999981))
		{
			MoveObject( PDPMLS, 1544.400,-1628.097, 7.353,3);
			GameTextForPlayer(playerid, "~w~Garagem Externa ~n~~b~Aberta", 4200, 3);
			SetTimer("pd2", 4200, false);
		}
	  	return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
		{
			MoveObject( PDGARAGE, 1588.195,-1637.969, 20.086790,3);
			GameTextForPlayer(playerid, "~w~Garagem Interna ~n~~b~Aberta", 5000, 3);
			SetTimer("pd3", 5000, false);
		}
	  	return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pc", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(20.0, playerid, 923.5170, -1209.0148, 18.7499))
		{
			MoveObject( portaoPC1, 923.56256103516, -1209.1229248047, 18.749954223633,3,0.0,0.0,270.0);
            MoveObject( portaoPC2, 923.56256103516, -1209.1229248047, 18.749954223633,3,0.0,0.0,270.0);
			GameTextForPlayer(playerid, "~w~Portao PC ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoPoliciaC1", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ptpc",true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 922.45611572266, -1208.7191162109, 17.982734680176) || PlayerInfo[playerid][pEmprego] == 2)
 		{
			MoveObject( PortaooPC, 922.40142822266, -1209.5806884766, 22.020156860352,3);
			GameTextForPlayer(playerid, "~w~Portao~n~~b~Aberto", 5000, 3);
			SetTimer("PortaooPC2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pb", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294) || PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353) && PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
		{ //GateGaragem
			MoveObject( gt3gate, 283.095062, -1542.899170, 33.385311,3,0.0, 0.0, 326.2500);
			MoveObject( gt3gate3, 321.832672, -1488.615112, 33.777353,3,0.0, 0.0, 323.6717);
			GameTextForPlayer(playerid, "~w~Portao BOPE ~n~~b~Aberto", 5000, 3);
			SetTimer("gt3gate2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/psfn", true) == 0)
	{
		if ((IsASFN(playerid)) && PlayerToPoint(15.0, playerid, -2262.5871582031, 553.69573974609, 36.789016723633))
		{ 
			MoveObject( PortaoSFN, -2251.8955078125, 554.75073242188, 36.789016723633,3);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("PortaoSFN2", 5000, false);
  		}
  		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/abrirgn", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1531.3978271484, 482.25979614258, 8.9530792236328))
		{ 
			MoveObject(PDEx, -1531.3978271484, 482.25979614258, 13.9530792236328,3,0.0,0.0,360);
			GameTextForPlayer(playerid, "~w~Portaas Forcas Armadas ~n~~b~Aberto", 5000, 3);
			SetTimer("PDEx2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pgprf", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1631.8209,688.8629,7.1875))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			MoveObject(prf1,-1634.97338867,688.00781250,14.92179298,3);
			MoveObject(prf2,-1628.28771973,688.00781250,14.92179298,3);
			MoveObject(prf3,-1618.96203613,688.54772949,12.55290413,3);
			format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("prfClosed", 5000, false);
  		}
  		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pesf", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1572.6410,663.2080,7.1875))
		{ 
			GetPlayerName(playerid, sendername, sizeof(sendername));
			MoveObject(prf4,-1572.03344727,661.12640381,12.46089172,3);
			format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("prfClosed2", 5000, false);
  		}
  		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pfs", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
		    if(PlayerToPoint(15.0, playerid, 664.8344,-1309.7133,13.4609))
		    {
		        MoveObject(pFamiliaShelby1, 677.862,-1309.311,15.234,3,0.0,0.0,0.0);
				GameTextForPlayer(playerid, "~w~Portao FamiliaShelby ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharFamiliaShelby1", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 785.5371,-1157.6627,23.5792))
		    {
                MoveObject( pFamiliaShelby3, 785.128,-1162.442,25.430,3,0.0,0.0,88.522);
				GameTextForPlayer(playerid, "~w~Portao FamiliaShelby ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharFamiliaShelby3", 5000, false);
		    }
  		}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/acn", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
		    if(PlayerToPoint(15.0, playerid, 321.39999389648, -1188.1999511719, 77.099998474121))
		    {
		        MoveObject(acn, 321.39999389648, -1188.1999511719, 66.099998474121,3,0.0,359, 37.996215);
				GameTextForPlayer(playerid, "~w~Portao Cosa Nostra ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharacn", 5000, false);
			}
  		}
  		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ptaxisf", true) == 0)
	{
		if ((IsATaxiSF(playerid)) && PlayerToPoint(15.0, playerid, -2016.2495117188, 395.068359375, 36.945266723633))
		{ 
			MoveObject( PortaoTaxiSF, -2016.2670898438, 384.15716552734, 36.945266723633,3);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("PortaoTaxiSF2", 5000, false);
  		}
  		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pft", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1742.06445312,985.41320801,25.73790550))
		{
			MoveObject( PortaoBOPE, -1742.06445312,985.41320801,25.73790550,3);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("PortaoBOPE2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ffarnningCS", true) == 0)
	{
		if (PlayerToPoint(15.0, playerid, 2979.81348, -769.83441, 18.01630))
		{
			MoveObject( PortaoSlander, 2979.81348, -769.83441, 1.00000,3);
			GameTextForPlayer(playerid, "~g~Portao Aberto", 5000, 3);
			SetTimer("PortaoCoyote", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ptaxi", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) && PlayerToPoint(15.0, playerid, 1803.40002441,-1721.19995117,16.10000038))
		{
			MoveObject( PortaoTaxi, 1795.19995117,-1721.30004883,16.100000383,3);
			GameTextForPlayer(playerid, "~w~Portao Taxi ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoTaxi2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/pgov", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 1539.2235107422, -1838.2176513672, 15.320266723633))
		{ //Portao Governo
			MoveObject( PortaoGov, 1539.2235107422, -1848.2176513672, 15.320266723633,3,0.0, 0.0, 91.30950);
			GameTextForPlayer(playerid, "~w~Portao Governo ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoGov2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/portaoreporter", true) == 0 || strcmp(cmd, "/preporter", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 14.200000762939))
		{ //PortaoAdmin
			MoveObject( PortaoReporter, 777.80017089844, -1330.2664794922, 20.200000762939,3,0.0,0.0,0.0);
			GameTextForPlayer(playerid, "~w~Portao ~y~Reporteres ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoReporter2", 5000, false);
		}
	  	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ppf", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -2425.26635742,502.76617432,33.00000000))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			MoveObject(pfdoor,-2433.97338867,496.39559937,26.20938301,3);
			MoveObject(pfdoor2,-2424.72973633,500.50247192,30.89804077,3);
			format(string, sizeof(string), "* %s Abriu Este Portao!", sendername);
			ProxDetector(4.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~g~Aberto", 5000, 3);
			SetTimer("PoliciaFederalClosed", 5000, false);
  		}
  		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/vhelp", true) == 0 || strcmp(cmd, "/vipajuda", true) == 0 || strcmp(cmd, "/ajudavip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pVIP] >= 1)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda VIPs ]______________|");
				SendClientMessage(playerid, 0xCDB38BAA, "-> /kitvip /mala /desativar celular /v(chat) /relatorio (cor destacada)");
				SendClientMessage(playerid, COLOR_GRAD1, "-> Carros VIPS: /veiculo ajuda");
				SendClientMessage(playerid, COLOR_GRAD1, "-> Casas VIPS: /ajuda");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

    if(strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/admajuda", true) == 0 || strcmp(cmd, "/adminajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new StrChatADM[2000];
	        strcat(StrChatADM, "Ajuda Admin\n");
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				strcat(StrChatADM, "{FF0000}Administrador: /settime /tempo /sethora /ip /desbugar /rcarro /setarmembro /removermembro\n\n");
				strcat(StrChatADM, "Administrador: /tv /par /verrg /calar /kick /ir /trazer /trazer2(sem armas) /veh /matar /infovip\n");
				strcat(StrChatADM, "Administrador: (/av)iso /congelar /descongelar /infoarmas /infoplayer /kitadm /darkit /ls\n");
				strcat(StrChatADM, "Administrador: /cnn /desativar celular /avisar /orgs /spawn /sf /lv /esconderijo /cadeia\n\n");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				strcat(StrChatADM, "{00BFF}Coordenador: /agendar /explode /votacao /encerrar /dvc\n");
				strcat(StrChatADM, "Coordenador: /dv /abid /fix /destruirid /entrarcarro /rc\n\n");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
                strcat(StrChatADM, "{FFFF00}Supervisor: /mark /irmark /carroantigo /ircarro /trazercarro /respawncarros /aball /retirararma\n");
                strcat(StrChatADM, "Supervisor: /darvida /darcolete /dararma /forceskin /iniciarloteria /irtunning /ban\n\n");
			}
            if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
                strcat(StrChatADM, "{00FFFF}Gerente: /editar /admvemp /admvsemp /dargrana /setgrana /darlicencas /limparlider /respawncarros\n");
                strcat(StrChatADM, "Gerente: /cnn2 /seditar /ircasa /iremp /irsemp /online /darlider /desbanip /nomedesban  /amudarsenha\n\n");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
                strcat(StrChatADM, "{F5F5DC}Sub-Fundador: /savefiles /loadfiles /admvcasa /admvemp /admvsemp\n");
                strcat(StrChatADM, "Sub-Fundador: /setskin /setemprego /limparvip /gmx /adicionarwl /removewl\n\n");
            }
            if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
                strcat(StrChatADM, "{0000CD}Fundador: /atualizar3dtext /deletarconta /trazercasa /descricao\n");
                strcat(StrChatADM, "Fundador: /daradmin /limparadmin /infoadm /carid\n");
			}
			ShowPlayerDialog(playerid, 5478, DIALOG_STYLE_MSGBOX, "COMANDOS ADMINS", StrChatADM, "OK", "");
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ah", true) == 0 || strcmp(cmd, "/ajudahelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Helper ]______________|");
			if(PlayerInfo[playerid][pHelper] >= 1)
			{
				new StrChatADM[2000];
				strcat(StrChatADM, "HELPER: /shelper/trazerh /avh /irh /hqhelper /kick /cadeia /setarmembro /removermembro\n");
				ShowPlayerDialog(playerid, 5478, DIALOG_STYLE_MSGBOX, "COMANDOS HELPER", StrChatADM, "OK", "");
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao e helper! Seu idiota.");
		}
		return true;
	}

	if(strcmp(cmd, "/am", true) == 0 || strcmp(cmd, "/ajudamoderador", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|______________[ Ajuda Moderador ]______________|");
			if(PlayerInfo[playerid][pMod] >= 1)
			{
				new StrChatADM[2000];
				strcat(StrChatADM, "MODERADOR: /setarmembro /removermembro\n");
				ShowPlayerDialog(playerid, 5478, DIALOG_STYLE_MSGBOX, "COMANDOS Moderador", StrChatADM, "OK", "");
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "Voce nao e Moderador!");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/habilidades",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Skill Info ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /Habilidades [numero]");
		  		SendClientMessage(playerid, COLOR_GREY, "| 1: Detetive            7: Mecanico");
		  		SendClientMessage(playerid, COLOR_GREY, "| 2: Advogado               8: Vendedor De Carros");
		  		SendClientMessage(playerid, COLOR_GREY, "| 3: Profissional do sexo             ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 4: Vendedor De Drogas		  9: Pesca");
		  		SendClientMessage(playerid, COLOR_GREY, "| 5: Ladrao De Carros            ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 6: Reporter");
				return true;
			}
		    if(strcmp(x_nr,"1",true) == 0)//Detetive
			{
			    new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de detetive = 1."); format(string, sizeof(string), "Voce precisa procurar mais %d para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de detetive = 2."); format(string, sizeof(string), "Voce precisa procurar mais %d para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de detetive = 3."); format(string, sizeof(string), "Voce precisa procurar mais %d para passar de nivel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de detetive = 4."); format(string, sizeof(string), "Voce precisa procurar mais %d para passar de nivel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de detetive = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//Advogado
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de advogado = 1."); format(string, sizeof(string), "Voce precisa soltar mais %d pessoas para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de advogado = 2."); format(string, sizeof(string), "Voce precisa soltar mais %d pessoas para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de advogado = 3."); format(string, sizeof(string), "Voce precisa soltar mais %d pessoas para passar de nivel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de advogado = 4."); format(string, sizeof(string), "Voce precisa soltar mais %d pessoas para passar de nivel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de advogado = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//Profissional do sexo
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de profissional do sexo = 1."); format(string, sizeof(string), "Voce precisa fazer mais %d sexos para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de profissional do sexo = 2."); format(string, sizeof(string), "Voce precisa fazer mais %d sexos para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de profissional do sexo = 3."); format(string, sizeof(string), "Voce precisa fazer mais %d sexos para passar de nivel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de profissional do sexo = 4."); format(string, sizeof(string), "Voce precisa fazer mais %d sexos para passar de nivel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de profissional do sexo = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//Vendedor De Drogas
			{
			    new level = PlayerInfo[playerid][pDrogasSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de vendedor de drogas = 1."); format(string, sizeof(string), "Voce precisa vender mais %d drogas para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de vendedor de drogas = 2."); format(string, sizeof(string), "Voce precisa vender mais %d drogas para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de vendedor de drogas = 3."); format(string, sizeof(string), "Voce precisa vender mais %d drogas para passar de nivel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de vendedor de drogas = 4."); format(string, sizeof(string), "Voce precisa vender mais %d drogas para passar de nivel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de vendedor de drogas = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//noticias Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de reporter = 1."); format(string, sizeof(string), "Voce precisar mandar mais %d noticias para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de reporter = 2."); format(string, sizeof(string), "Voce precisar mandar mais %d noticias para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de reporter = 3."); format(string, sizeof(string), "Voce precisar mandar mais %d noticias para passar de nivel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de reporter = 4."); format(string, sizeof(string), "Voce precisar mandar mais %d noticias para passar de nivel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de reporter = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//Mecanico
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de mecanico = 1."); format(string, sizeof(string), "Voce precisa concertar/abastecer mais %d carros para passar de nivel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de mecinico = 2."); format(string, sizeof(string), "Voce precisa concertar/abastecer mais %d carros para passar de nivel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nivel de mec�nico = 3."); format(string, sizeof(string), "Voce precisa concertar/abastecer mais %d carros para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de mec�nico = 4."); format(string, sizeof(string), "Voce precisa concertar/abastecer mais %d carros para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de mec�nico = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   N�mero de habilidade invalido !");
			    return true;
			}
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/darlicencas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >=1337)
	        {
                if(admtrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao esta trabalhando! (/tra)");
					return true;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /darlicencas [id]");
				    return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Voce deu todas as licencas para %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				        {
				        	format(string, sizeof(string), "* Admin Cleitin_Bitoneira[BOT] lhe deu todas as licencas.");
						}
				        else
				        {
				        	format(string, sizeof(string), "* Admin %s lhe deu todas as licencas.",PlayerName(playerid));
				        }
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        PlayerInfo[giveplayerid][pGunLic] = 1;
				        PlayerInfo[giveplayerid][pBoatLic] = 1;
				        PlayerInfo[giveplayerid][pFlyLic] = 1;
				        PlayerInfo[giveplayerid][pCarLic] = 1;
				        return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta autorizado a usar este comando !");
	            return true;
	        }
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/arrombar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsAHit(playerid) || IsATriad(playerid))
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Oficial ou um Hitman !");
			    return true;
            }
		}
		return true;
 	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/camera", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid))
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta no painel de seguranca do carandiru !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /camera [numero 1 - 6]  (6 = Desligar)");
					return true;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   N�mero da c�mera m�nimo 1 maximo 6 !"); return true; }
				Controle(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    MedicBill[playerid] = 0;
					Controle(playerid, 1);
					SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial !");
			    return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/divorcio",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!PlayerToPoint(10.0, playerid, -2023.5865,1097.1720,18.0524))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na igreja de Los Santos !");
			    return true;
			}
			if(PlayerInfo[playerid][pMarried] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta casado !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /divorcio [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se pedir em divorcio!"); return true; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* Voce enviou papeis de divorcio para %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s pediu papeis de divorcio (Digite /aceitar divorcio) para aceitar.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  Esse jogador nao esta casado com voce !");
						    return true;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de voce !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
			    return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/casar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, -2023.5865,1097.1720,18.0524))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na igreja de Los Santos !");
			    return true;
			}
	        if(GetPlayerMoney(playerid) < 100)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Para se Casar Custa R$100 !");
	            return true;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce ja e casado !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /casar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador(a) ja e casado(a) !");
			            return true;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode propor a si mesmo!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voce propos casamento a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Voce foi pedida em casamento (Digite /aceitar casamento) para aceitar.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
			    return true;
			}
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/padrinho",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, -2023.5865,1097.1720,18.0524))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na igreja de Los Santos !");
			    return true;
			}
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /padrinho [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode ser marido e padrinho do casamento!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voce chamou %s para ser seu padrinho de casamento.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Voce foi chamado para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						return true;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return true;
			}
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/setartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7 || PlayerInfo[playerid][pLider] != 30)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e o Prefeito !");
				return true;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /setartaxa [quantidade]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "   O Dinheiro da Taxa nao pode ser menor que 1 ou maior que 10000 !"); return true; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* Cada Jogador vai pagar uma taxa de R$%d, apartir de agora!", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Not�cias: O Prefeito acaba de mudar a Taxa por Pessoa para: R$%d.", Tax);
			SendClientMessageToAll(COLOR_LIGHTBLUE, string);
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/dartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e o Prefeito !");
				return true;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nao ha Dinheiro suficiente no banco de Impostos !");
				return true;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(IsACop(i))
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new price = Tax / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Voce deu a taxa para todos os policiais online!");
				            format(string, sizeof(string), "* Voce recebeu R$%d do banco de Impostos pelo Prefeito.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							GivePlayerMoney(i, price);
							Tax = 0;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Nao ha nenhum Policial Online no Momento !");
				return true;
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/mudarlocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPHousekey] != 255)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce esta na TV, nao pode mudar o spawn !");
	                return true;
	            }
	            if(PlayerInfo[playerid][pSpawn] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce vai nascer no local normal de nascimento ou em sua HQ !");
	                PlayerInfo[playerid][pSpawn] = 0;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "  Agora voce vai nascer em sua casa !");
	                PlayerInfo[playerid][pSpawn] = 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem casa, nao pode mudar o local !");
		        return true;
	        }
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/duvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce nao esta logado!");
	            return true;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /duvida [texto]");
				return true;
			}
            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Duvida VIP de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				HelperBroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua D�vida VIP foi enviado aos Helpers, aguarde uma resposta...");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Relatorio Socio de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				HelperBroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua D�vida VIP foi enviado aos Helpers, aguarde uma resposta...");
            }
            else
            {
				format(string, sizeof(string), "==> Relatorio de %s(%d): %s <==", sendername, playerid, (result));
				HelperBroadCast(0xFFFF66FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua D�vida foi enviado aos Helpers, aguarde uma resposta...");
			}
		}
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	/*if(strcmp(cmd, "/trocarskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] >= 1 || PlayerInfo[playerid][pLider] >= 1)
	        {
	            if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pMembro] == 1) { ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }// Policia Militar
				    else if(PlayerInfo[playerid][pMembro] == 34) { ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }// Policia Militar
					else if(PlayerInfo[playerid][pMembro] == 2) { ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pMembro] == 35) { ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pMembro] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Forcas Armadas
					else if(PlayerInfo[playerid][pMembro] == 4) { ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }//Medicos
					else if(PlayerInfo[playerid][pMembro] == 5) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 115); }//Tropa da Turquia
					else if(PlayerInfo[playerid][pMembro] == 31) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 115); }//Tropa da Turquia
					else if(PlayerInfo[playerid][pMembro] == 6) { ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }//Peaky Blinders
					else if(PlayerInfo[playerid][pMembro] == 7) { ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }//Prefeitura
					else if(PlayerInfo[playerid][pMembro] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }//Hitmans
					else if(PlayerInfo[playerid][pMembro] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }//Reporters
					else if(PlayerInfo[playerid][pMembro] == 10) { ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }//Taxistas
					else if(PlayerInfo[playerid][pMembro] == 11) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }//Policia Federal
					else if(PlayerInfo[playerid][pMembro] == 12) { ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }//Mafia Cosa Nostra
					else if(PlayerInfo[playerid][pMembro] == 13) { ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }//Mafia FamiliaShelby
					else if(PlayerInfo[playerid][pMembro] == 14) { ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }//Groove Street
					else if(PlayerInfo[playerid][pMembro] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }//F.A.R.C
					else if(PlayerInfo[playerid][pMembro] == 16) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }//Policia Civil
					else if(PlayerInfo[playerid][pMembro] == 17) { ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }//Ballas
					else if(PlayerInfo[playerid][pMembro] == 18) { ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }//Vagos
					else if(PlayerInfo[playerid][pMembro] == 25) { ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }//Vagos
					else if(PlayerInfo[playerid][pMembro] == 23) { ChosenSkin[playerid] = 206; SetPlayerSkin(playerid, 206); }//PCC
					else if(PlayerInfo[playerid][pMembro] == 24) { ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }//Groove
					else if(PlayerInfo[playerid][pMembro] == 26) { ChosenSkin[playerid] = 206; SetPlayerSkin(playerid, 206); }//PCC
					else if(PlayerInfo[playerid][pMembro] == 27) { ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }//Medicos
					else if(PlayerInfo[playerid][pMembro] == 29) { ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }//Ballas
					else if(PlayerInfo[playerid][pMembro] == 30) { ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }//Prefeitura
					else if(PlayerInfo[playerid][pMembro] == 32) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }//Reporters
					else if(PlayerInfo[playerid][pMembro] == 33) { ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }//Taxistas
					else if(PlayerInfo[playerid][pLider] == 1) { ChosenSkin[playerid] = 283; SetPlayerSkin(playerid, 283); }//Policia Militar
					else if(PlayerInfo[playerid][pLider] == 34) { ChosenSkin[playerid] = 283; SetPlayerSkin(playerid, 283); }//Policia Militar
					else if(PlayerInfo[playerid][pLider] == 2)	{ ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pLider] == 35)	{ ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pLider] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Forcas Armadas
					else if(PlayerInfo[playerid][pLider] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }//Fire/AmBPRance
					else if(PlayerInfo[playerid][pLider] == 5) { ChosenSkin[playerid] = 115; SetPlayerSkin(playerid, 115); }//Varrios Los Tropa da Turquia
					else if(PlayerInfo[playerid][pLider] == 31) { ChosenSkin[playerid] = 115; SetPlayerSkin(playerid, 115); }//Varrios Los Tropa da Turquia
					else if(PlayerInfo[playerid][pLider] == 6) { ChosenSkin[playerid] = 249; SetPlayerSkin(playerid, 249); }//Peaky Blinders
					else if(PlayerInfo[playerid][pLider] == 7) { ChosenSkin[playerid] = 147; SetPlayerSkin(playerid, 147); }//Prefeito
					else if(PlayerInfo[playerid][pLider] == 8) { ChosenSkin[playerid] = 294; SetPlayerSkin(playerid, 294); }//Hitmans
					else if(PlayerInfo[playerid][pLider] == 9) { ChosenSkin[playerid] = 227; SetPlayerSkin(playerid, 227); }//Reporters
					else if(PlayerInfo[playerid][pLider] == 10) { ChosenSkin[playerid] = 61; SetPlayerSkin(playerid, 61); }//Taxistas
					else if(PlayerInfo[playerid][pLider] == 11) { ChosenSkin[playerid] = 295; SetPlayerSkin(playerid, 295); }//Policia Federal
					else if(PlayerInfo[playerid][pLider] == 12) { ChosenSkin[playerid] = 113; SetPlayerSkin(playerid, 113); }//Mafia Cosa Nostra
					else if(PlayerInfo[playerid][pLider] == 13) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 120); }//Mafia FamiliaShelby
					else if(PlayerInfo[playerid][pLider] == 14) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }//Groove
					else if(PlayerInfo[playerid][pLider] == 24) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }//Groove
                    else if(PlayerInfo[playerid][pLider] == 15) { ChosenSkin[playerid] = 123; SetPlayerSkin(playerid, 123); }//ALQaeda
					else if(PlayerInfo[playerid][pLider] == 16) { ChosenSkin[playerid] = 186; SetPlayerSkin(playerid, 186); }//Policia Civil
                    else if(PlayerInfo[playerid][pLider] == 17) { ChosenSkin[playerid] = 104; SetPlayerSkin(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 18) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }//Vagos
                    else if(PlayerInfo[playerid][pLider] == 25) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }//Familia do Norte
                    else if(PlayerInfo[playerid][pLider] == 23) { ChosenSkin[playerid] = 47; SetPlayerSkin(playerid, 47); }//PCC
                    else if(PlayerInfo[playerid][pLider] == 26) { ChosenSkin[playerid] = 47; SetPlayerSkin(playerid, 47); }//PCC
                    else if(PlayerInfo[playerid][pLider] == 27) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }//Fire/AmBPRance
                    else if(PlayerInfo[playerid][pLider] == 29) { ChosenSkin[playerid] = 104; SetPlayerSkin(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 30) { ChosenSkin[playerid] = 147; SetPlayerSkin(playerid, 147); }//Prefeito
                    else if(PlayerInfo[playerid][pLider] == 32) { ChosenSkin[playerid] = 227; SetPlayerSkin(playerid, 227); }//Reporters
                    else if(PlayerInfo[playerid][pLider] == 33) { ChosenSkin[playerid] = 61; SetPlayerSkin(playerid, 61); }//Taxistas
	                else { return true; }
	                if(PlayerInfo[playerid][pLider] < 1)
	                {
	                    new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid, x, y, z);
	                	SetPlayerCameraPos(playerid, x + 3, y, z);
						SetPlayerCameraLookAt(playerid,x, y, z);
						Controle(playerid, 0);
						SelectChar[playerid] = 255;
						SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
						SelectCharPlace[playerid] = 1;
						PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para trocar a skin.");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Quando Voce achar a Skin preferida, Digite 'Confirma'.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao esta em uma loja de roupas !");
					return true;
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Civis nao podem usar esse comando !");
				return true;
			}
	    }
	    return true;
	}*/
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/loteria", true) == 0)
	{
	    if(PlayerToPoint(1, playerid,822.0201,4.2154,1004.1797) || PlayerToPoint(1, playerid,822.0099,6.3927,1004.1797) || PlayerToPoint(1, playerid,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, playerid,822.0237,1.7826,1004.1797))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce ja tem um bilhete de loteria !");
	            return true;
	        }
	        if(GetPlayerMoney(playerid) < 10)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem R$10 para pagar o n�mero de loteria !");
	            return true;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE,"USE: /loteria [n�mero]");
				return true;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   N�mero da loteria, de 1 a 80 !"); return true; }
			format(string, sizeof(string), "* Voce comprou um bilhete de loteria com n�mero: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerMoney(playerid, - 10);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	     }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta na Loterica !");
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/retirar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
	        if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
	        {
	            if(PlayerInfo[playerid][pCargo] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2 para usar este comando !");
	                return true;
	            }
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Take Licenses ]__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar [nome] [id]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Dispon�veis: Motorista, Piloto, Marujo, PorteLegal, Armas, Drogas, Materiais");
					return true;
				}
			    if(strcmp(x_nr,"Motorista",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Motorista [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou a licenca de motorista de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licenca de motorista.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Piloto",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Piloto [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou a licenca de Voo de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licenca de Voo.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"PorteLegal",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar portelegal [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou a licenca de Porte de Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licenca de Porte de Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Marujo",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Marujo [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou a licenca de Navegacao de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licenca de Navegacao.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Armas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Armas [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
                                new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou as Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeaponsEx(giveplayerid);
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Drogas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Drogas [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou as Drogas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Drogas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrogas] = 0;
						        PlayerInfo[giveplayerid][pDrogas2] = 0;
						        PlayerInfo[giveplayerid][pDrogas3] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else if(strcmp(x_nr,"Materiais",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Materiais [id]");
						return true;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voce retirou os Materiais de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou seus Materiais.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
							    return true;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nome invalido !");
					return true;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao e COP !");
	            return true;
	        }
	    }
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/beber", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerInfo[playerid][pDorgado2] >= 70)
	            {
	            	PlayerInfo[playerid][pDoenca] = 4;
	            	PlayerInfo[playerid][pDorgado2] = 0;
	            	SendClientMessage(playerid, COLOR_GRAD2, "* Voce esta infectado com cirrose, va ate um hospital se tratar !");
	            	return 1;
				}
	            if(PlayerDrunk[playerid] < 10)
	            {
	            	if(PlayerInfo[playerid][pDoenca] == 4)
  					{
			    		SendClientMessage(playerid, COLOR_GRAD2, "* Voce esta com cirrose, va ate um hospital se tratar !");
			    		return 1;
  	        		}
	                new Float:health;
	                new x_nr[32];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|__________________ Sons Drinks __________________|");
						SendClientMessage(playerid, COLOR_WHITE, "Use: /beber [Bebida]");
				  		SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Cerveja (R$6), Vodka (R$10), Whisky (R$25), Coca-Cola (R$2), agua (R$1)");
						return 1;
					}
				    if(strcmp(x_nr,"Cerveja",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voce Nao Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 6);
					    PlayerDrunk[playerid] += 1;
					    PlayerInfo[playerid][pDorgado2] += 2;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
						ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"Vodka",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voce Nao Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 10);
					    PlayerDrunk[playerid] += 2;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 25.0); }
						}
					}
					else if(strcmp(x_nr,"Whisky",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voce Nao Tem 18 Anos ou mais Para Poder Beber");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 25);
					    PlayerDrunk[playerid] += 3;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 27.0); }
						}
					}
					else if(strcmp(x_nr,"Coca-Cola",true) == 0)
					{
					    GivePlayerMoney(playerid, - 2);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else if(strcmp(x_nr,"agua",true) == 0)
					{
					    GivePlayerMoney(playerid, - 1);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Nao nao vendemos essa bebida.");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s bebeu um(a) %s.", sendername ,x_nr);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode beber mais, Voce vai vomitar...!");
	                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em um bar !");
	            return 1;
	        }
	    }
	    return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/musica", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Musica ]__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /musica [nome]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Dispon�veis: On, Off, Proximo");
					return true;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"Proximo",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Comando Musical Desconhecido !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao possui um CD-Player !");
			    return true;
			}
	    }
	    return true;
	}
	if(strcmp(cmd, "/servico", true) == 0 || strcmp(cmd, "/servico", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Nomes dos Servicos ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /servico [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Servicos: Taxi, Onibus,Medico,Mecanico,Policia");
				return true;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nao tem taxista online agora, tente /servico onibus...");
		            return true;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ligar para um Taxi agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar taxi - Para Aceitar a Chamada)", PlayerName(playerid));
		    	SendFamilyMessage(10, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou um Taxista,espere a resposta...");
		    	TaxiCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"moto-taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "  Nao tem nenhum Moto-Taxi online agora, espere algum entrar !");
		            return true;
      		  	}
          		if(TransportDuty[playerid] > 0)
 		      	{
		            SendClientMessage(playerid, COLOR_GREY, "  Voce nao pode ligar para um Moto-Taxi agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar moto-taxi - Para Aceitar a Chamada)", PlayerName(playerid));
		    	SendFamilyMessage(10, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou um Moto-Taxi... Agora espere a resposta.");
		    	TaxiCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"onibus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nao tem motorista de onibus online neste momento, espere um entrar !");
		            return true;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode chamar um onibus agora !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Onibus. (Use /aceitar onibus - Para aceitar a chamada)", PlayerName(playerid));
		    	SendEmpregoMessage(10, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou um Onibus... Agora espere a resposta.");
		    	BusCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"medico",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nao tem nenhum medico online neste momento, espere um entrar !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita da Medicos. (Use /aceitar medico - Para aceitar a chamada)", PlayerName(playerid));
		    	SendFamilyMessage(4, TEAM_TDT_color, string);
		    	SendFamilyMessage(27, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou a Medicos.... Agora espere por resposta.");
		    	MedicCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"policia",true) == 0)
			{
			    if(Copsronda < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nenhum Policial em ronda no momento.");
		            return true;
		        }
		        for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsACop(i) && IsPlayerConnected(i))
				    {
				        if(PolicialInRonda[i] == 1)
				        {
				            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Estao fazendo uma chamada.");
				            return true;
				        }
					}
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s esta precisando de um Policial. (Digite /aceitar chamada para aceitar a chamada)", PlayerName(playerid));
		    	SendFamilyMessage(1, TEAM_TDT_color, string);
		    	SendFamilyMessage(2, TEAM_TDT_color, string);
		    	SendFamilyMessage(3, TEAM_TDT_color, string);
		    	SendFamilyMessage(16, TEAM_TDT_color, string);
		    	SendFamilyMessage(11, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou um Policial Aguarde a Resposta.");
		    	CopsrondaCall = playerid;
		    	return true;
			}
			else if(strcmp(x_nr,"mecanico",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nenhum mecanico online neste momento, espere um entrar !");
		            return true;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Mecanico. (Use /aceitar mecanico - Para aceitar a chamada)", PlayerName(playerid));
		    	SendEmpregoMessage(5, TEAM_TDT_color, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce chamou um Mecanico... Agora espere por uma resposta.");
		    	MechanicCall = playerid;
		    	return true;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Servico Inexistente !");
			    return true;
			}
		}
		return true;
	}
//Amarrar
    if(strcmp(cmd, "/amarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
    		{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return true;
			    }
			    if(pamarrar == 1)
                {
                	SendClientMessage(playerid,COLOR_GRAD2,"Sequestraram recentemente, so pode sequestrar a cada 3 minutos!");
                    return true;
                }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /amarrar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode sequestrar novatos!");
							return true;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador ja esta amarrado !");
					        return true;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se amarrar !"); return true; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Voce foi sequestrado por %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce sequestrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s sequestra %s, entao ele nao ira � lugar algum.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
								Controle(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								PlayerInfo[giveplayerid][pMuted] = 1;
        						pamarrar = 1;
			                    TempoAmarrar = SetTimer("Amarrar",180000, 0);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta no seu carro, ou voce nao e o motorista !");
						        return true;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mafioso !");
			}
		}
		return true;
	}
//Desamarrar Mafia
	if(strcmp(cmd, "/desamarrarm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrarm [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode desamarrar si mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voce foi libertado por %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mafioso !");
			}
		}
		return true;
	}
//==============================================================================
    if(strcmp(cmd, "/sequestrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new playa;
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
			|| PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
 			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /sequestrar [ID da Vitima] [Valor do Resgate] ");
					return true;
				}
				new money;
				new orgintegrante;
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				money = strval(tmp);
				if(money < 1 || money > 3000000) { SendClientMessage(playerid, COLOR_GREY, "   Preco maior que 1, menor que 3000000!"); return true; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode se sequestrar !");
						        return true;
						    }

						    if(PlayerInfo[playerid][pMembro] >= 1)
					        {
					            orgintegrante = PlayerInfo[playerid][pMembro];
					        }
					        if(PlayerInfo[playerid][pLider] >= 1)
					        {
					            orgintegrante = PlayerInfo[playerid][pLider];
					        }
						    new Integrante[MAX_INTEGRANTE_NOMES];
	        				DefineOrgNameSequestro(orgintegrante, Integrante, MAX_INTEGRANTE_NOMES);
						    Controle(playa, 0);
		                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    GetPlayerName(playerid, sendername, sizeof(sendername));
	                        format(string, sizeof(string), "* Voce foi sequestrado por %s.", sendername);
						    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						    format(string, sizeof(string), "* Voce sequestrou %s.", giveplayer);
					     	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					     	format(string, sizeof(string), "[SEQUESTRO] O %s do %s , esta sequestrando %s, e pede o resgate no valor de R$%d.", sendername, Integrante, giveplayer, money);
					     	SendClientMessageToAll(COLOR_LIGHTRED, string);
						    format(string, sizeof(string), "* %s sequestra %s, entao ele nao ira � lugar algum.", sendername ,giveplayer);
						    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						    GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
						    Controle(giveplayerid, 0);
						    PlayerTied[giveplayerid] = 1;
	  						PlayerCuffedTime[giveplayerid] = 99999999999999;
	  						PlayerInfo[giveplayerid][pMuted] = 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta Offline!");
				}
			}
			else
			{
   				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e de uma gangue !");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/empurrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
			|| PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3 ou mais para empurrar as pessoas. !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /empurrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador ja foi empurrado !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode empurrar � voce mesmo.!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Voce foi empurrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce empurrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s empurrou %s, pra evitar anti RP.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Empurrado pro veiculo", 2500, 3);
								PlayerTied[giveplayerid] = 1;
        						PlayerCuffedTime[giveplayerid] = 99999999999999;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta no seu carro, ou voce nao e o motorista !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de voce !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e de uma Org. criminosa !");
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/salvar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
 			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 ||
			PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 ||
			PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 ||
			PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 ||
    		PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3 ||
			PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34 ||
			PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 35)
    		{
			    if(PlayerInfo[playerid][pCargo] < 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2 ou mais para salvar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /salvar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode salvar si mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voce foi salvo por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "[SEQUESTRO] Oficial %s salvo o refem %s ! Fim de sequestro.",sendername,giveplayer);
	                            SendClientMessageToAll(0x2641FEAA, string);
								format(string, sizeof(string), "* Voce salvou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Oficial !");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/desamarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
			|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
			|| PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
 			{
			    if(PlayerInfo[playerid][pCargo] < 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2 ou mais para desamarrar as pessoas !");
			        return true;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode desamarrar � s� mesmo!"); return true; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voce foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta sequestrado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Gangster !");
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd,"/corrida",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10||PlayerInfo[playerid][pMembro] == 33||PlayerInfo[playerid][pLider] == 33||PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce esta de folga e recebeu R$%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return true;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(IsATaxiCar(Veh)||IsATaxiSFCar(Veh))
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preco]");
							return true;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preco da corrida m�nimo R$1 Maximo R$999!"); return true; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Taxista %s esta em servico, Corrida: R$%d - Chame um taxi /servico taxi", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e o motorista!");
					    return true;
					}
				}
				else if(IsAOniCar(Veh) && PlayerInfo[playerid][pEmprego] == 9)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preco]");
							return true;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preco da corrida M�nimo R$1 Maximo R$999!"); return true; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Motorista de onibus %s esta em servico, Corrida: R$%d - Chame um onibus /servico onibus", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e o motorista!");
					    return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em um taxi/onibus!");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce nao e um taxista/motorista de onibus!");
			    return true;
			}
	    }
	    return true;
 	}
	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return true;
 	}
 	if(strcmp(cmd,"/mostrarlicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /mostrarlicencas [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Para ver suas licencas Use: /minhaslicencas!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }

						if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
				        format(string, sizeof(string), "|__________ Licencas de %s __________|", PlayerName(playerid));
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** Motorista: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Piloto: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Marujo: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Armas: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s mostrou suas licencas para voce.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Voce mostrou suas licencas para %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
					    return true;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
	            return true;
	        }
		}
	    return true;
 	}
	if(strcmp(cmd,"/laptop",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 22)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce desligou seu laptop, e se desconectou de sua Agencia.");
			        ConnectedToPC[playerid] = 0;
			        return true;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce ligou seu laptop, e se conectou a sua Agencia.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ *Agencia dos Assasinos* ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| * Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Assasino!");
		        return true;
		    }
		}
	    return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/mafiamateriais",true)==0)
	{
    	new x_nr[128];
    	x_nr = strtok(cmdtext, idx);
    	if(!strlen(x_nr))
    	{
        	SendClientMessage(playerid, COLOR_WHITE, "USE: /mafiamateriais [Nome]");
        	SendClientMessage(playerid, COLOR_WHITE, "Nomes Disponiveis: Obter, Entregar.");
        	return 1;
    	}
    	if(strcmp(x_nr,"obter",true) == 0)
    	{
        	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafiosos
        	{
            	if(IsaMafMatObterPlace(playerid))
            	{
                	if(MatsHolding[playerid] >= 10)
                    return SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode obter mais pacotes de Materiais!");
                	tmp = strtok(cmdtext, idx);
                	if(!strlen(tmp))
                    return SendClientMessage(playerid, COLOR_WHITE, "USE: /mafiamateriais obter [Quantia]");
                	moneys = strval(tmp);
                	if(moneys < 1 || moneys > 10)
                    return SendClientMessage(playerid, COLOR_GREY, "   Pacote Minimo 1 Maximo 10 !");

                	new price = moneys * 100;
                	if(GetPlayerMoney(playerid) > price)
                	{
                    	format(string, sizeof(string), "* Voce comprou %d Pacotes de Materiais por $%d.", moneys, price);
                    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    	GivePlayerMoney(playerid, - price);
                    	MatsHolding[playerid] = moneys;
                	}
                	else
                	{
                    	format(string, sizeof(string), "   Voce nao tem essa grana $%d !", price);
                    	SendClientMessage(playerid, COLOR_GREY, string);
                	}
            	}
            	else
                return SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na distribuicao de pacote de Materiais!");
        	}
       	 	else
            return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um membro da mafia");
    	}
    	else if(strcmp(x_nr,"entregar",true) == 0)
    	{
        	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafiosos
        	{
            	if(IsaMafMatEntregarPlace(playerid))
            	{
                	if(MatsHolding[playerid] > 0)
                	{
                    	new payout = (100)*(MatsHolding[playerid]);
                    	format(string, sizeof(string), "* A Fabrica comprou %d Pacotes de Materiais de voce e te deu %d Materiais.",MatsHolding[playerid], payout);
                    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    	PlayerInfo[playerid][pMats] += payout;
                    	MatsHolding[playerid] = 0;
                	}
                	else
                    return SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem nenhum pacote de material!");
            	}
            	else
                return SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na entrega de pacote de Materiais!");
        	}
        	else
            return SendClientMessage(playerid, COLOR_GREY, "Voce nao e membro da mafia");
    	}
    	return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/materiais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce nao e um Vendedor de Armas!");
			    return 1;
			}
			new x_nr[128];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /materiais [Nome]");
				SendClientMessage(playerid, COLOR_WHITE, "Nomes Disponiveis: Obter, Entregar.");
				return 1;
			}
			if(strcmp(x_nr,"obter",true) == 0)
			{
			    if(IsaMatObterPlace(playerid))
			    {
			        if(MatsHolding[playerid] >= 10)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode obter mais pacotes de Materiais!");
				        return 1;
			        }
			        tmp = strtok(cmdtext, idx);
			        if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /materiais obter [Quantia]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 10) { SendClientMessage(playerid, COLOR_GREY, "   Pacote Minimo 1 Maximo 10 !"); return 1; }
					new price = moneys * 100;
					if(GetPlayerMoney(playerid) > price)
					{
					    format(string, sizeof(string), "* Voce comprou %d Pacotes de Materiais por $%d.", moneys, price);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    GivePlayerMoney(playerid, - price);
					    MatsHolding[playerid] = moneys;
					}
					else
					{
					    format(string, sizeof(string), "   Voce nao tem essa grana $%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na distribuicao de pacote de Materiais!");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"entregar",true) == 0)
			{
			    if(IsaMatEntregarPlace(playerid))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (100)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* A Fabrica comprou %d Pacotes de Materiais de voce e te deu %d Materiais.",MatsHolding[playerid], payout);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem nenhum pacote de material!");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na entrega de pacote de Materiais!");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nome de Materiais Invalido!");
			    return 1;
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd,"/venderarmas",true)==0 || strcmp(cmd,"/venderarma",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce nao e um vendedor de Armas!");
			    return 1;
			}
			new x_weapon[128],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /venderarmas [ID/Nome] [Nome da Arma]");
				SendClientMessage(playerid, COLOR_GREY, "Armas: flowers(25) sdpistol(100) eagle(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid, COLOR_GREY, "Armas: ak47(600) m4(600) rifle (600)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext, idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						SendClientMessage(playerid, COLOR_WHITE, "*** Venda de Armas ***");
						SendClientMessage(playerid, COLOR_GREY, "USE: /venderarmas [ID/Nome] [Nome da Arma]");
						SendClientMessage(playerid, COLOR_GREY, "Armas: flowers(25) sdpistol(100) eagle(200) mp5(200) shotgun(200)");
						SendClientMessage(playerid, COLOR_GREY, "Armas: ak47(600) m4(600) rifle(600)");
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						return 1;
					}
				}
				if(strcmp(x_weapon,"sdpistol",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 150; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 24; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"   Voce nao possui materiais suficientes para vender essa arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"   Nome de Arma desconhecido!"); return 1; }
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode vender armas para si mesmo!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "   Voce vendeu uma %s, a %s com %d balas, por %d Materiais.", giveplayer,x_weapon, ammo[playerid], price[playerid]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   Voce recebeu uma %s com %d Balas de %s.", x_weapon, ammo[playerid], sendername);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s Vendeu armas para %s.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Esse jogador esta longe.");
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nao e um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/mafiavkit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode vender armas na cadeia!");
	   			return 1;
    		}
			new carid = GetPlayerVehicleID(playerid);
			if(!IsACaminhaozinhoCar(carid))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Voce precisa estar dentro do BoxVille");
				return 1;
			}
	        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
					SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
					SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
					return 1;
				}
				else if(strcmp(x_nr,"1",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se vender armas!"); return 1; }
					new carid1 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Voce nao pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid1))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem voce vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            if(PlayerInfo[playerid][pMats] > 399)
							{
					    		GivePlayerMoney(giveplayerid, -10000);
					    		GivePlayerMoney(playerid, 10000);
					    		PlayerInfo[playerid][pMats] -= 399;
				    			GivePlayerWeapon(giveplayerid, 31, 300);
				    			GivePlayerWeapon(giveplayerid, 29, 200);
				    			GivePlayerWeapon(giveplayerid, 25, 100);
				    			format(string,sizeof(string),"Voce vendeu o kit 1,para %s.",giveplayer);
				    			SendClientMessage(playerid,COLOR_GRAD1,string);
				    			format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    			return 1;
							}
							else
							{
								SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
								return 1;
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se vender armas!"); return 1; }
					new carid2 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Voce nao pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid2))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem voce vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
		       			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 499)
						{
					    	GivePlayerMoney(giveplayerid, -12000);
					    	GivePlayerMoney(playerid, 12000);
					    	PlayerInfo[playerid][pMats] -= 499;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		format(string,sizeof(string),"Voce vendeu o kit 2,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se vender armas!"); return 1; }
					new carid3 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Voce nao pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid3))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem voce vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 599)
						{
					    	GivePlayerMoney(giveplayerid, -15000);
					    	GivePlayerMoney(playerid, 15000);
					    	PlayerInfo[playerid][pMats] -= 599;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 34, 80);
				    		GivePlayerWeapon(giveplayerid, 4, 1);
				    		format(string,sizeof(string),"Voce vendeu o kit 3,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Voce nao e de nenhuma Organizacao Mafiosa!");
	            return 1;
	        }
	    }
	    return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/mafiavarma",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13 && PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Voce nao e de nenhuma Organizacao Mafiosa!");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"USE: /mafiavarma [ID do Player] [weaponname]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) granada(500) shotgun(150)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavarma [ID do Player] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) granada(500) shotgun(150)");
						return 1;
					}
				}
				if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 23; price[playerid] = 50; ammo[playerid] = 240; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 240; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flores",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 100; ammo[playerid] = 220; PlayerInfo[giveplayerid][pGun2] = 24; PlayerInfo[giveplayerid][pAmmo2] = 220; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 29; price[playerid] = 100; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 190; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 190; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 30; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 31; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 33; price[playerid] = 200; ammo[playerid] = 230; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 230; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"faca",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 4; price[playerid] = 50; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"sniper",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 34; price[playerid] = 200; ammo[playerid] = 100; PlayerInfo[giveplayerid][pGun2] = 34; PlayerInfo[giveplayerid][pAmmo2] = 100; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"fumaca",true) == 0) { if(PlayerInfo[playerid][pMats] > 399) { weapon[playerid] = 17; price[playerid] = 200; ammo[playerid] = 12; PlayerInfo[giveplayerid][pGun2] = 17; PlayerInfo[giveplayerid][pAmmo2] = 12; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"granada",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 16; price[playerid] = 200; ammo[playerid] = 5; PlayerInfo[giveplayerid][pGun2] = 16; PlayerInfo[giveplayerid][pAmmo2] = 5; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma invalida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Voce recebeu uma %s com %d a partir de municao %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente nao esta proximo de voce.");
					return 1;
				}
			}
			else
			{
				format(string,sizeof(string),"%d nao esta online este player.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/abastecer", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsAtGasStation(playerid))
            {
                GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Abastecendo, Aguarde!",2000,3);
				Controle(playerid, 0);
                SetTimer("Fillup",RefuelWait,0);
                Refueling[playerid] = 1;
            }
            else
            {
                SendClientMessage(playerid,COLOR_GREY,"   Voce nao esta em um posto de Gasolina");
            }
        }
        return 1;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/imo", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Nao e possivel imobilizar de dentro do carro !");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Suspeito Imobilizado !");
				        return 1;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 3)
					{
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O suspeito esta em um carro, faca ele descer antes !");
					        return 1;
					    }
    					if(IsACop(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode dar imo em Policiais!");
							return 1;
						}
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voce foi imobilizado por %s por 20 segundos.", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Voce imobilizou o(a) %s por 20 segundos.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Imobilizou %s, para nao fugir.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Imobilizado", 2500, 3);
						TogglePlayerControllable(suspect, 0);
						ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 20;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Ele nao esta perto de Voce!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Oficial !");
			}
		}
	    return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/algemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /algemar [ID/Nome]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode algemar um Oficial!");
					        return 1;
				        }
					    if(PlayerCuffed[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Jogador foi algemado!");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se algemar!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Voce foi algemado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce algemou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s algema %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
								SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerCuffed[giveplayerid] = 2;
								PlayerCuffedTime[giveplayerid] = 180;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Jogador nao esta em seu carro ou voce nao e o motorista!");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador esta longe de voce!");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um jogador ativo!");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um oficial!");
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if (strcmp(cmd, "/arrastar", true) == 0)
    {
        new car;
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "USE: /arrastar [id]");
                    return true;
                }
                if(!IsPlayerInAnyVehicle(playerid))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta em um Veiculo !");
                    return true;
                }
                //giveplayerid = strval(tmp);
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerInAnyVehicle(giveplayerid))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   O Jogador esta em um Veiculo !");
                    return 1;
                }
                if(PlayerCuffedTime[giveplayerid] <= 0)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode arrastar e algemar pessoas que nao estao Imobilizadas!");
                    return 1;
                }
                if(giveplayerid == playerid)
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode se arrastar e algemar!");
                    return 1;
                }
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        car = GetPlayerVehicleID(playerid);
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* Voce foi arrastado e algemado pelo: %s.", sendername);
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Voce arrastou e algemou %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s arrastou e algemou %s, para nao fugir.", sendername ,giveplayer);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
                        PutPlayerInVehicle(giveplayerid, car, 3);
                        TogglePlayerControllable(giveplayerid, 0);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador nao esta ativo !");
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao e Policial !");
            }
        }
        return true;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/desalgemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Use: /desalgemar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se desalgemar!"); return true; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voce foi desalgemado pelo: %s.", PlayerName(playerid));
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce desalgemou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Desalgemado", 2500, 3);
								Controle(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta algemado !");
							    return true;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de voce !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
				    return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e PM/PR/PC/Forcas Armadas !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/localizar", true) == 0)
    {
		if(!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Policial !");
			return 1;
		}
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_WHITE, "USE: /localizar [id]");
		    return 1;
		}
		new Nome[MAX_PLAYER_NAME];
		giveplayerid = ReturnUser(tmp);
		GetPlayerName(giveplayerid, Nome, sizeof(Nome));
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(giveplayerid, location, MAX_ZONE_NAME);
        format(string, sizeof(string), "%s foi visto perto de %s", Nome,location);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    if(strcmp(cmd, "/procurar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Detetive !");
				return 1;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce so pode procurar novamente, daqui a 2 Minutos !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /procurar [ id ]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se procurar!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora e 2, Voce pode procurar mais rapido e encontrar mais rapido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora e 3, Voce pode procurar mais rapido e encontrar mais rapido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora e 4, Voce pode procurar mais rapido e encontrar mais rapido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de detetive agora e 5, Voce pode procurar mais rapido e encontrar mais rapido."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalido NICK/ID !");
			}
		}
	    return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/proteger", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 6)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um seguranca!");
				return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /proteger [id] [preco]");
				return true;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return true; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco m�nimo 1, maximo 99999!"); return true; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode se proteger !");
					        return true;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voce se ofereceu para proteger %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Seguranca %s ofereceu seguranca por R$%d, (Digite /aceitar seguranca) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta Offline!");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/soltar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, " Voce nao e um advogado!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 401)
		    {
		        ApprovedAdvogado[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /soltar [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode libertar voce mesmo!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] == 1 || PlayerInfo[giveplayerid][pJailed] == 7 || PlayerInfo[giveplayerid][pJailed] == 4 || PlayerInfo[giveplayerid][pJailed] == 3 && PlayerToPoint(5.0, playerid, 267.4805,77.6161,1001.0391))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Voce libertou %s esta livre.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Voce foi liberado pelo advogado %s.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						ApprovedAdvogado[playerid] = 0;
						WantAdvogado[giveplayerid] = 0;
						CallAdvogado[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "*Seu advogado esta agora Skill N�vel 2, voce vai ganhar mais dinheiro e mais rapidamente do Tempo de Recarga."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "*Seu advogado esta agora Skill N�vel 3, voce vai ganhar mais dinheiro e mais rapidamente do Tempo de Recarga."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "*Seu advogado esta agora Skill N�vel 4, voce vai ganhar mais dinheiro e mais rapidamente do Tempo de Recarga."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "*Seu advogado esta agora Skill N�vel 5, voce vai ganhar mais dinheiro e mais rapidamente do Tempo de Recarga."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " Jogador nao precisa de um advogado ou voce nao esta nas celas !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/cancelar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Cancelar ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: /cancelar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Sexo, Drogas, reparo, seguranca, aovivo, Abastecimento, Carro");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Taxi, Onibus, Medico, Mecanico, Policia, convite");
				return true;
			}
			if(strcmp(x_Emprego,"sexo",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"convite",true) == 0) { InviteOffer[playerid] = 999; InviteJob[playerid] = 0; }
			else if(strcmp(x_Emprego,"drogas",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_Emprego,"reparo",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_Emprego,"proposta",true) == 0) { AdvOffer[playerid] = 999; AdvPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"seguranca",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"aovivo",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"abastecercarro",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"carro",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_Emprego,"padrinho",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"casamento",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"multa",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"bus",true) == 0 || strcmp(x_Emprego,"onibus",true) == 0)
			{
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BusCallTime[playerid] = 0;


						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
			{
			        if(MechanicCallTime[playerid] > 0)
			        {
			            MechanicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MechanicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MechanicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MechanicAccepted[i] < 999)
						        {
							        if(MechanicAccepted[i] == playerid)
							        {
							            MechanicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            MechanicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			        if(MedicCallTime[playerid] > 0)
			        {
			            MedicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MedicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MedicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MedicAccepted[i] < 999)
						        {
							        if(MedicAccepted[i] == playerid)
							        {
							            MedicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
							            MedicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"policia",true) == 0)
			{
			        if(CopsrondaCallTime[playerid] > 0)
			        {
			            CopsrondaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						CopsrondaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						CopsrondaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(CopsrondaAccepted[i] < 999)
						        {
							        if(CopsrondaAccepted[i] == playerid)
							        {
							            CopsrondaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            CopsrondaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else { return true; }
			format(string, sizeof(string), "* Voce cancelou: %s.", x_Emprego);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd,"/aceitar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Aceitar ]__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: aceitar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Transa, drogas, Reparo, seguranca, proposta, emprego, aovivo, abastecimento , Assalto");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Carro, Taxi, Onibus, Medico, Mecanico, Multa ,divorcio, convite");
				return true;
			}
			if(strcmp(x_Emprego,"convite",true) == 0)
			{
				if(InviteOffer[playerid] < 999)
			    {
					if(IsPlayerConnected(InviteOffer[playerid]))
					{
				        if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 34) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 35) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
						else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; }
						else if(PlayerInfo[InviteOffer[playerid]][pLider] == 24) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 25) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 27) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 29) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 30) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 31) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 32) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 33) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
						PlayerInfo[playerid][pMembro] = InviteJob[playerid];
						PlayerInfo[playerid][pCargo] = 1;
					    //SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
					   	format(gstring, 128, "* %s aceitou seu convite para entrar na sua organizacao.", PlayerName(playerid));
					   	SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, gstring);
						//new rand = random(sizeof(gInviteSpawns));
						/*SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);*/
						//Controle(playerid, 0);
					    //PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
					    SetPlayerHealth(playerid, 0.0);
					    format(gstring, sizeof(gstring), "* Voce aceitou o convite de %s para entrar para a org: %s, parabens.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
					   	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    O jogador que lhe convidou nao esta conectado.");
						return true;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "    Voce nao foi convidado para nenhuma organizacao.");
					return true;
				}
			}
			else if(strcmp(x_Emprego,"proposta",true) == 0)
			{
			    if(AdvOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > AdvPrice[playerid])
				    {
					    if(IsPlayerConnected(AdvOffer[playerid]))
					    {
					        GetPlayerName(AdvOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce foi solto por R$%d pelo Advogado: %s.",AdvPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua proposta, e R$%d sera adcionado no seu Salario.",sendername,AdvPrice[playerid]);
							SendClientMessage(AdvOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, -AdvPrice[playerid]);
							ApprovedAdvogado[AdvOffer[playerid]] = 0;
						    WantAdvogado[playerid] = 0;
						    CallAdvogado[playerid] = 0;
						    JailPrice[playerid] = 0;
						    PlayerInfo[playerid][pJailTime] = 1;
						    PlayerInfo[AdvOffer[playerid]][pLawSkill] ++;
					        AdvOffer[playerid] = 999;
							AdvPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode permitir isso !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Nao tem nenhuma oferta de Advogado !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"divorcio",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", PlayerName(playerid));
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPHousekey] = 255;
							PlayerInfo[playerid][pPbiskey] = 255;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que te enviou os papeis do divorcio nao esta perto de voce!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te enviou qualquer papel de divorcio!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"padrinho",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", PlayerName(playerid));
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que pediu para ser padrinho de seu casamento nao esta perto de voce!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem pediu para ser padrinho de seu casamento!");
				    return true;
				}
			}
	        else if(strcmp(x_Emprego,"casamento",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, -2023.5865,1097.1720,18.0524))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na igreja de Los Santos !");
			            return true;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O jogador nao possui um padrinho de casamento!");
						        return true;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s aceitou o seu pedido para ser sua esposa.", PlayerName(playerid));
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return true;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   O padrinho de casamento nao esta perto de sua noiva/noivo!");
								    return true;
								}
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  O jogador nao esta perto de voce!");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te fez uma proposta!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"multa",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce pagou a multa de R$%d para o Oficial %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s pagou a multa de R$%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
							GivePlayerMoney(playerid, - TicketMoney[playerid]);
							GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "O policial nao esta perto de voce !");
						    return true;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ninguem lhe deu uma multa !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"mototaxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em corrida, USE: /corrida !");
				    return true;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce ja aceitou uma chamada de Moto-Taxi !");
				    return true;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Moto-Taxi : %s aceitou sua chamada, se mantenha neste local e espere chegar.",PlayerName(playerid));
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Nao tem nenhuma chamada de taxi no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em corrida, USE: /corrida !");
				    return true;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce ja aceitou uma chamada de Taaxi !");
				    return true;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar taxi !");
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Nao tem nenhuma chamada de taxi no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"onibus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em corrida, USE: /corrida !");
				    return true;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce ja aceitou a chamada de Onibus !");
				    return true;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar onibus !");
						BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return true;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Nao tem nenhuma chamada de onibus no momento !");
			    	return true;
	            }
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Voce ja aceitou um chamado medico!");
					    return true;
		            }
                    if(MedicCall < 999)
	                {
	                if(IsPlayerConnected(MedicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Medico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Ir Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar medico !");
						MedicCallTime[playerid] = 1;
						MedicAccepted[playerid] = MedicCall;
						MedicCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de medico no momento !");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Medico !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
            {
   			 if(PlayerInfo[playerid][pEmprego] == 5)
   			 {
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voce ja aceitou uma chamada de mecanico!");
				    return true;
	            }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar mecanico !");
						MechanicCallTime[playerid] = 1;
						MechanicAccepted[playerid] = MechanicCall;
						MechanicCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de mec�nico no momento !");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mec�nico !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"chamada",true) == 0)
			{
			    if(IsACop(playerid))
			    {
		            if(CopsrondaCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Voce aceitou o chamado!");
					    return true;
		            }
				    if(PolicialInRonda[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce ja esta em um chamado...");
				        return true;
				    }
                    if(CopsrondaCall < 999)
	                {
	                if(IsPlayerConnected(CopsrondaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(CopsrondaCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara vis�vel ate voce chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Policial : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",PlayerName(playerid));
						SendClientMessage(CopsrondaCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar policia !");
						CopsrondaCallTime[playerid] = 1;
						CopsrondaAccepted[playerid] = CopsrondaCall;
						CopsrondaCall = 999;
						return true;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Ninguem solicitou um policial ");
				    	return true;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Policial !");
				    return true;
				}
			}
		    else if(strcmp(x_Emprego,"emprego",true) == 0)
			{
				if(PlayerInfo[playerid][pEmprego] != 0)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce tem um emprego digite /sairdoemprego para sair do emprego.");
					return 1;
				}
			    if(GettingEmprego[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce ja completou seu tempo de contrato!.");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Parabens com seu novo emprego,digite /ajuda para saber seus comandos!");
			        PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
			        GettingEmprego[playerid] = 0;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voce ainda nao esta no lugar de um emprego!");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"abastecimento",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > RefillPrice[playerid])
			            {
			                if(IsPlayerInAnyVehicle(playerid))
							{
			                	GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
			                	new car = GetPlayerVehicleID(playerid);
			                	new fuel;
			                	PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                	if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mec�nico agora e n�vel 2, agora voce pode abastecer com 40 de combustivel"); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mec�nico agora e n�vel 3, agora voce pode abastecer com 60 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mec�nico agora e n�vel 4, agora voce pode abastecer com 80 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mec�nico agora e n�vel 5, agora voce pode abastecer com 100 de combustivel."); }
								new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
								if(level >= 0 && level <= 50)
								{ fuel = 15; }
								else if(level >= 51 && level <= 100)
								{ fuel = 40; }
								else if(level >= 101 && level <= 200)
								{ fuel = 60; }
								else if(level >= 201 && level <= 400)
								{ fuel = 80; }
								else if(level >= 401)
								{ fuel = 100; }
			                	format(string, sizeof(string), "* Seu ve�culo foi abastecido com %d% de combust�vel por R$%d pelo mec�nico %s.",fuel,RefillPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce abasteceu o carro de %s com %d% de combust�vel por R$%d, esse dinheiro sera adicionado ao seu salario.",sendername,fuel,RefillPrice[playerid]);
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
								GivePlayerMoney(playerid, -RefillPrice[playerid]);
								if(Gas[car] < 100) { Gas[car] += fuel; }
								if(Gas[car] > 100) { Gas[car] = 100; }
					        	RefillOffer[playerid] = 999;
								RefillPrice[playerid] = 0;
								return true;
							}
							else
							{
						    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce nao esta em um carro!");
						    	return true;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar pelo abastecimento !");
						    return true;
						}
			        }
			        return true;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"aovivo",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce esta congelado ate o final da conversa.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Voce esta congelado ate o final da conversa (use /aovivo denovo).");
							Controle(playerid, 0);
							Controle(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce esta longe do reporter !");
							return true;
						}
					}
					return true;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma conversa ao vivo!");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"seguranca",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou a protecao por R$%d do Seguranca: %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua protecao, e R$%d sera adicionado no seu salario.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
							GivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return true;
						}
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar pela protecao !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu protecao!");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"maconha",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* voce comprou %d gramas de maconha do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de maconha, e R$%d sera adicionado no seu salario.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 2, e voce pode comprar mais erva por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 3, e voce pode comprar mais erva por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 4, e voce pode comprar mais erva por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 5, e voce pode comprar mais erva por um preco mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce esta totalmente carregado com maconha, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar essas maconhas !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu maconha !");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"cocaina",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas2] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* voce comprou %d gramas de coca�na do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de coca�na, e R$%d sera adicionado no seu salario.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas2] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas2] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 2, e voce pode comprar mais po por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 3, e voce pode comprar mais po por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 4, e voce pode comprar mais po por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 5, e voce pode comprar mais po por um preco mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce esta carregado com crack, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar por essa coca�na !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu coca�na !");
			        return true;
			    }
			}
   			else if(strcmp(x_Emprego,"crack",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas3] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* voce comprou %d pedras de crack do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d pedras de crack, e R$%d sera adicionado no seu salario.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas3] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas3] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 2, e voce pode comprar mais pedras por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 3, e voce pode comprar mais pedras por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 4, e voce pode comprar mais pedras por um preco mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora e 5, e voce pode comprar mais pedras por um preco mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return true;
							}
							return true;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce esta carregado com crack, use ou venda primeiro !");
						    return true;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar por esse crack !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu crack !");
			        return true;
			    }
			}
			else if(strcmp(x_Emprego,"transa",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Voce fez sexo com a profissional do sexo %s, por R$%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s teve relac�es sexuais com voce, R$%d foi adicionado em seu salario.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pSalario] += SexPrice[playerid];
								GivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora e 2, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora e 3, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora e 4, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora e 5, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								if(PlayerInfo[playerid][pDoenca] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 80) {
											SetPlayerHealth(playerid, health + 20.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD1));
											PlayerInfo[playerid][pDoenca] = STD1[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de e nao pegou nenhuma DST durante o sexo."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Pereba no CU devido ao sexo."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Duenca na Cabeca do Pau devido ao sexo."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Duenca na Buceta devido ao sexo."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 60) {
											SetPlayerHealth(playerid, health + 40.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD2));
											PlayerInfo[playerid][pDoenca] = STD2[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de e nao pegou nenhuma DST durante o sexo."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 40) {
											SetPlayerHealth(playerid, health + 60.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD3));
											PlayerInfo[playerid][pDoenca] = STD3[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de e nao pegou nenhuma DST durante o sexo."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 20) {
											SetPlayerHealth(playerid, health + 80.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD4));
											PlayerInfo[playerid][pDoenca] = STD4[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + DST enquanto nao ter relac�es sexuais."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 401)
										{
											SetPlayerHealth(playerid, 100.0);
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seu n�vel de sexo e tao alto que voce ganhou 100% de sa�de e nenhuma DST.");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* A Prostitura tem um n�vel de sexo tao alto que voce ganhou 100% de sa�de e nenhuma DST.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* O Jogador usou camisinha.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce esta usando camisinha.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Este jogador ja esta infectado com DST, no pode pegar mais uma.");
								    return true;
								}
								SexOffer[playerid] = 999;
								return true;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Voce ou a Profissional do sexo nao estao em um carro !");
							    return true;
							}
						}//Connected ou not
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode pagar o sexo!");
					    return true;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem nenhuma oferta de sexo !");
				    return true;
				}
			}
			else if(strcmp(x_Emprego,"tunagem",true) == 0)
			{
			    if(TunarOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TunarOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > TunarPrice[playerid])
			            {
			            	new car;
			                GetPlayerName(TunarOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
			                PlayerInfo[TunarOffer[playerid]][pMechSkill] ++;
			                if(PlayerInfo[TunarOffer[playerid]][pMechSkill] == 50)
							{ SendClientMessage(TunarOffer[playerid], COLOR_YELLOW, "* Sua Habilidade de Mecanico e Nivel 2, agora voce pode abastecer com mais combustivel."); }
							else if(PlayerInfo[TunarOffer[playerid]][pMechSkill] == 100)
							{ SendClientMessage(TunarOffer[playerid], COLOR_YELLOW, "* Sua Habilidade de Mecanico e Nivel 3, agora voce pode abastecer com mais combustivel."); }
							else if(PlayerInfo[TunarOffer[playerid]][pMechSkill] == 200)
							{ SendClientMessage(TunarOffer[playerid], COLOR_YELLOW, "* Sua Habilidade de Mecanico e Nivel 4, agora voce pode abastecer com mais combustivel."); }
							else if(PlayerInfo[TunarOffer[playerid]][pMechSkill] == 400)
							{ SendClientMessage(TunarOffer[playerid], COLOR_YELLOW, "* Sua Habilidade de Mecanico e Nivel 5, agora voce pode abastecer com mais combustivel."); }
			                format(string, sizeof(string), "* Seu veiculo foi tudo por R$%d pelo mecanico %s.",TunarPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Voce tunou o carro de %s por $%d esse dinheiro sera adicionado ao seu salario.",sendername,TunarPrice[playerid]);
							SendClientMessage(TunarOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[TunarOffer[playerid]][pPayDay] += TunarPrice[playerid];
							GivePlayerMoney(playerid, -TunarPrice[playerid]);
							if(gLastCar[playerid] == gLastCar[TunarOffer[playerid]])
							{
								AddVehicleComponent(car,1010);
							}
							else
							{
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "O Mecanico nao esta no seu Carro!");
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voce nao esta no carro do seu Cliente!");
							}
					        TunarOffer[playerid] = 999;
							TunarPrice[playerid] = 0;
							return 1;
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce nao possui essa grana!");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"reparo",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
						        RepairVehicle(RepairCar[playerid]);
								format(string, sizeof(string), "* O mec�nico %s reparou seu ve�culo por R$%d.",giveplayer,RepairPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voce reparou o ve�culo de %s, e R$%d foi adicionado no seu salario.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 2, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 3, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 4, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 5, Agora ele pode adicionar combustivel para qualquer carro."); }
								PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
								GivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return true;
							}
							return true;
						}
						return true;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode permitir o reparo !");
					    return true;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Falta uma oferta para Voce reparar o carro !");
			        return true;
			    }
			}
			else { return true; }
		}
		return true;
	}
	if(strcmp(cmd, "/reparo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 5)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mecanico!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /reparo [ID/Nome] [Preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, Maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao e possivel fazer isso!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voce ofereceu a %s para reparar seu carro por $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s Ofereceu reparo por $%d, (USE /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador esta longe de voce, ou nao esta em um carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tunar", true) == 0)
	/*{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 5)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mecanico!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /tunar [ID/Nome] [Preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 100000) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, maximo 100000!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao e possivel fazer isso!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voce ofereceu a %s Para tunar seu carro por $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s Ofereceu tunagem por $%d, (USE /aceitar tunagem) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						TunarOffer[playa] = playerid;
						TunarPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador esta longe de voce, ou nao esta em um carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um jogador ativo.");
			}
		}
		return 1;
	}*/
	if(strcmp(cmd, "/abastecimento", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 5)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um mecanico!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /abastecimento [ID/Nome] [Preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao e possivel fazer isso!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voce ofereceu a %s Para abastecer seu carro por $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s Ofereceu re-abastecimento por $%d, (USE /aceitar abastecimento) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Esse jogador esta longe de voce, ou nao esta em um carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/reparar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce nao e mecanico!");
		        return true;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /reparar [id] [preco]");
				return true;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return true; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "  Nao posso fazer isso!"); return true; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voce ofereceu ao(a) %s para concertar seu carro por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s quer reparar seu carro por R$%d, (Digite /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de Voce ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline.");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz); LinkVehicleToInterior(CarID[playerid], 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Borght Car has arrived.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* You can call Your Borght Car for %d times more.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Invalido Acao !");
		    }
		}
	    return true;
	}
//==============================================================================
	if(strcmp(cmd, "/alianca", true) == 0 || strcmp(cmd, "/al", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/al)ianca [chat da alianca]");
				return 1;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
			    if(IsAGroove(playerid) || IsAB40(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(14, COLOR_ALIANCA, string);
					SendFamilyMessage(24, COLOR_ALIANCA, string);
			    }
			    else if(IsAVagos(playerid) || IsAFDN(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(18, COLOR_ALIANCA, string);
					SendFamilyMessage(25, COLOR_ALIANCA, string);
			    }
			    else if(IsABallas(playerid) || IsAada(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(17, COLOR_ALIANCA, string);
					SendFamilyMessage(29, COLOR_ALIANCA, string);
			    }
			    else if(IsATDT(playerid) || IsAmilicia(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(5, COLOR_ALIANCA, string);
					SendFamilyMessage(31, COLOR_ALIANCA, string);
			    }
			    else if(IsAComandoVermelho(playerid) || IsAgrota(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(19, COLOR_ALIANCA, string);
					SendFamilyMessage(28, COLOR_ALIANCA, string);
			    }
			    else if(IsAComandoVermelho(playerid) || IsAgrota(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(19, COLOR_ALIANCA, string);
					SendFamilyMessage(28, COLOR_ALIANCA, string);
			    }
			    else if(IsAPCC(playerid) || IsAtcp(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(23, COLOR_ALIANCA, string);
					SendFamilyMessage(26, COLOR_ALIANCA, string);
			    }
			    else if(IsACopLS(playerid) || IsACopSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(1, COLOR_ALIANCA, string);
					SendFamilyMessage(34, COLOR_ALIANCA, string);
			    }
			    else if(IsAAmbu(playerid) || IsAAmbuSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(4, COLOR_ALIANCA, string);
					SendFamilyMessage(27, COLOR_ALIANCA, string);
			    }
			    else if(IsATaxi(playerid) || IsATaxiSF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(10, COLOR_ALIANCA, string);
					SendFamilyMessage(33, COLOR_ALIANCA, string);
			    }
			    else if(IsABOPE(playerid) || IsABOPESF(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(2, COLOR_ALIANCA, string);
					SendFamilyMessage(34, COLOR_ALIANCA, string);
			    }
			    else if(IsAJornal(playerid) || IsASFN(playerid))
			    {
           			format(string, sizeof(string), "[%s] %s: %s. ))  **", OrgPlayerCity(playerid), sendername, result);
					SendFamilyMessage(9, COLOR_ALIANCA, string);
					SendFamilyMessage(32, COLOR_ALIANCA, string);
			    }
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce nao faz parte de nenhuma fam�lia!");
				return 1;
			}
		}
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/familia", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/f)amilia [ORG CHAT]");
				return true;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
				format(string, sizeof(string), "* %s falou algo no radio da familia.", PlayerName(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    new leader = PlayerInfo[playerid][pLider];
			    new member = PlayerInfo[playerid][pMembro];
			    if(member==9)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Producao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Editor Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Reporter Nacional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Reporter Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Humorista %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Humorista %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_REP, string);
			    }
			    if(member==32)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Producao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Editor Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Reporter Nacional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Reporter Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Humorista %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Humorista %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_REP, string);
			    }
			    if(member==10)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Supervisor Mestre %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Supervisor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Taxista Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Taxista Semi-Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Taxista Amador %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Taxista em Treinamento %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_TAXI, string);
				}
                if(member==33)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Supervisor Mestre %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Supervisor %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Taxista Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Taxista Semi-Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Taxista Amador %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Taxista em Treinamento %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_TAXI, string);
				}
				if(leader==9)
				{
				    format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_REP, string);
				}
				if(leader==32)
				{
				    format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_REP, string);
				}
				if(leader==10)
				{
				    format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_TAXI, string);
				}
				if(leader==33)
				{
				    format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_TAXI, string);
				}
				printf("%s", string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce nao faz parte de nenhuma fam�lia!");
				return true;
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/gangue", true) == 0 || strcmp(cmd, "/ga", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, pois foi calado");
				return true;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ga)ngue [ORG CHAT]");
				return true;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
				format(string, sizeof(string), "* %s falou algo no radio da gangue.", PlayerName(playerid));
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    new leader = PlayerInfo[playerid][pLider];
			    new member = PlayerInfo[playerid][pMembro];
			    if(member==5)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], Cor_TDT, string);
			    }
			    if(member==31)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], Cor_TDT, string);
			    }
			    if(member==6)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombardeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GI, string);
			    }
			    if(member==8)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assassino %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_HITMAN, string);
			    }
			    if(member==22)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Vice-Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assassino %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_TDR, string);
			    }
				if(member==14)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GRO, string);
				}
				if(member==24)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GRO, string);
				}
				if(member==15)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_FARC, string);
				}
				if(member==17)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_BALLAS, string);
				}
				if(member==29)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_BALLAS, string);
				}
				if(member==18)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_VAGOS, string);
				}
				if(member==25)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_VAGOS, string);
				}
				if(member==19)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0xF6000000, string);
				}
				if(member==28)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0xF6000000, string);
				}
				if(member==23)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_PCC, string);
				}
				if(member==26)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_PCC, string);
				}
				if(member==20)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Matador Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Psicotico %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Olheiro %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Olheiro %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_SONS, string);
				}
				if(member==21)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Element Chefe %s: %s. ", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Sub Chefe Element %s: %s. ", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Element Experiente %s: %s. ", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Element Intermediario %s: %s. ", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Element Membro %s: %s. ", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Element Novato %s: %s. ", sendername, result); }
					else { format(string, sizeof(string), "** Element Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_ELEMENT, string);
				}
				if(member==13)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444) { format(string, sizeof(string), "** Consiglieri %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Soldatto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assossiado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novizio %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novizio %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_YAK, string);
				}
				if(member==12)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 555 ||  PlayerInfo[playerid][pCargo] == 444){ format(string, sizeof(string), "** Capo Bastone %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo Regime %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sgarrista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Picciotto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Associate %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_COSA, string);
				}
				if(leader==5)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], Cor_TDT, string);
				}
				if(leader==31)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], Cor_TDT, string);
				}
				if(leader==6)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GI, string);
				}
				if(leader==8)
				{
				    format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_HITMAN, string);
				}
				if(leader==22)
				{
				    format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_TDR, string);
				}
				if(leader==14)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GRO, string);
				}
				if(leader==24)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GRO, string);
				}
				if(leader==15)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_FARC, string);
				}
				if(leader==20)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_SONS, string);
				}
				if(leader==21)
				{
				    format(string, sizeof(string), "** Element Chefe %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_ELEMENT, string);
				}
				if(leader==17)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_BALLAS, string);
				}
				if(leader==29)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_BALLAS, string);
				}
				if(leader==18)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}
				if(leader==23)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}
				if(leader==26)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_PCC, string);
				}
				if(leader==25)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}
				if(leader==19)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], 0xF6000000, string);
				}
				if(leader==28)
				{
				    format(string, sizeof(string), "** Chefao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], 0xF6000000, string);
				}
				if(leader==13)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_YAK, string);
				}
    			if(leader==12)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_COSA, string);
				}
				printf("%s", string);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce nao faz parte de nenhuma fam�lia!");
				return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/noticias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
			{
			    //new tmpcar = GetPlayerVehicleID(playerid);
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao poder falar, Voce foi calado");
					return true;
				}
                /*if(IsAJornalCar(tmpcar)||IsASFNCar(tmpcar))
				{*/
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[100];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /noticias [Texto]");
					return true;
				}
				format(string, sizeof(string), "Reporter %s: %s", sendername, result);
				OOCNews(COLOR_NEWS,string);
				PlayerInfo[playerid][pNewsSkill] ++;
				if(PlayerInfo[playerid][pNewsSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 2, logo logo ja pode voar no helicoptero e falar AoVivo."); }
				else if(PlayerInfo[playerid][pNewsSkill] == 100)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 3, logo logo ja pode voar no helicoptero e falar AoVivo."); }
				else if(PlayerInfo[playerid][pNewsSkill] == 200)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 4 e pode fazer coberturas com helicoptero"); }
				else if(PlayerInfo[playerid][pNewsSkill] == 400)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 5 e pode conversar AoVivo com quem ele quizer."); }
				/*}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta na Van de Noticias !");
				    return true;
				}*/
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Reporter !");
			}
		}
		return true;
	}
	if(strcmp(cmd, "/aovivo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        Controle(playerid, 1);
			        Controle(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return true;
			    }
			    if(PlayerInfo[playerid][pNewsSkill] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Seu Cargo e baixo para falar com alguem AoVivo !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /aovivo [id]");
					return true;
				}

		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode falar AoVivo com voce mesmo!"); return true; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce ofereceu a %s para ter uma conversa AoVivo.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s Voce tem uma oferta para conversas ao vivo, Digite (/aceitar aovivo) para aceitar.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voce esta longe deste player !");
						    return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick - Invalido !");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um reporter !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/venderdrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Vender Drogas] __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /venderdrogas [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes: Maconha, Crack, Cocaina");
				return true;
			}
			if(strcmp(x_nr,"cocaina",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /venderdrogas [id] [quantidade] [preco]");
					return true;
				}
				if(PlayerInfo[playerid][pEmprego] != 4)
		    	{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Vendedor De Drogas!");
					return true;
		    	}
				new playa;
				new money;
				new needed;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				needed = strval(tmp);
				if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de cocaina 1, e Maximo de cocaina 99!"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return true; }
				if(needed > PlayerInfo[playerid][pDrogas2]) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem esta quantidade de cocaina com Voce !"); return true; }
				if(IsPlayerConnected(playa))
				{
			    	if(playa != INVALID_PLAYER_ID)
			    	{
						if (ProxDetectorS(8.0, playerid, playa))
						{
					    	if(playa == playerid)
					    	{
					        	SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode vender maconha pra voce mesmo!");
					        	return true;
					    	}
					    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					    	format(string, sizeof(string), "* Voce ofereceu para %s com %d gramas de cocaina por R$%d .", giveplayer, needed, money);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* O Traficante %s quer vender %d gramas de cocaina por R$%d, (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							DrugOffer[playa] = playerid;
							DrugPrice[playa] = money;
							DrugGram[playa] = needed;
						}
						else
						{
					    	SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						}
					}
				}
				else
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
				}
			}
			if(strcmp(x_nr,"crack",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /venderdrogas [id] [quantidade] [preco]");
					return true;
				}
				if(PlayerInfo[playerid][pEmprego] != 4)
		    	{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Vendedor De Drogas!");
					return true;
		    	}
				new playa;
				new money;
				new needed;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				needed = strval(tmp);
				if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de crack 1, e Maximo de crack 99!"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return true; }
				if(needed > PlayerInfo[playerid][pDrogas3]) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem esta quantidade de crack com Voce !"); return true; }
				if(IsPlayerConnected(playa))
				{
			    	if(playa != INVALID_PLAYER_ID)
			    	{
						if (ProxDetectorS(8.0, playerid, playa))
						{
					    	if(playa == playerid)
					    	{
					        	SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode vender maconha pra voce mesmo!");
					        	return true;
					    	}
					    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					    	format(string, sizeof(string), "* Voce ofereceu para %s com %d gramas de crack por R$%d .", giveplayer, needed, money);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* O Traficante %s quer vender %d gramas de crack por R$%d, (Digite /aceitar crack) para comprar.", sendername, needed, money);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							DrugOffer[playa] = playerid;
							DrugPrice[playa] = money;
							DrugGram[playa] = needed;
						}
						else
						{
					    	SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						}
					}
				}
				else
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
				}
			}
			else if(strcmp(x_nr,"maconha",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /venderdrogas [id] [quantidade] [preco]");
					return true;
				}
				if(PlayerInfo[playerid][pEmprego] != 4)
		    	{
					SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Vendedor De Drogas!");
					return true;
		    	}
				new playa;
				new money;
				new needed;
				playa = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				needed = strval(tmp);
				if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de maconha 1, e Maximo de maconha 99!"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) { return true; }
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return true; }
				if(needed > PlayerInfo[playerid][pDrogas]) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem esta quantidade de maconha com Voce !"); return true; }
				if(IsPlayerConnected(playa))
				{
			    	if(playa != INVALID_PLAYER_ID)
			    	{
						if (ProxDetectorS(8.0, playerid, playa))
						{
					    	if(playa == playerid)
					    	{
					        	SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode vender maconha pra voce mesmo!");
					        	return true;
					    	}
					    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					    	format(string, sizeof(string), "* Voce ofereceu para %s com %d gramas de maconha por R$%d .", giveplayer, needed, money);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* O Traficante %s quer vender %d gramas de maconha por R$%d, (Digite /aceitar maconha) para comprar.", sendername, needed, money);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							DrugOffer[playa] = playerid;
							DrugPrice[playa] = money;
							DrugGram[playa] = needed;
						}
						else
						{
					    	SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao esta perto de voce !");
						}
					}
				}
				else
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/usardrogas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[128];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pegar __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /usardrogas [Nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponiveis: maconha, cocaina, crack");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}
			if(strcmp(x_job,"maconha",true) == 0)
			{
				if(PlayerInfo[playerid][pDrogas] > 1)
   				{
   				    if(DrogasCombate(playerid,GetPlayerOrg(playerid))) { } else { SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode usar drogas perto de seus inimigos!"); return 1;}
			    	if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Voce esta~n~~p~Lezado",4000,1); }
			    	new Float:PlayersArmour;
			    	GetPlayerArmour(playerid,PlayersArmour);
                	new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
                	if(DrogasCombate(playerid,GetPlayerOrg(playerid))) { } else { SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode usar drogas perto de seus inimigos!"); return 1;}
			    	if(PlayersArmour >= 100)
    				{
			    	    SetPlayerArmour(playerid, 100);
			    	    SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode mais usar drogas!");
			    	    return 1;
       	        	}
		        	else
		        	{
			    		SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    	}
			    	PlayerInfo[playerid][pDrogas] -= 2;
			    	GetPlayerName(playerid, sendername, sizeof(sendername));
		    		format(string, sizeof(string), "* %s Fumou Maconha.", sendername);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	if(Condom[playerid]==1)
					{
					     Condom[playerid] = 0;
					     SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce ja nao estao infectados com uma doenca sexualmente transmiss�vel mais por causa das Drogas !");
					}
					else if(Condom[playerid]==2)
					{
					    Condom[playerid] = 1;
		     			SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST a clam�dia,devido � Drogas!");
					}
					else if(Condom[playerid]==3)
					{
 			 		Condom[playerid] = 2;
    				SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST e a gonorreia devido �s Drogas!");
					}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"Voce nao tem Gramas de Drogas Suficiente.!");
				}
				return 1;
			}
			if(strcmp(x_job,"cocaina",true) == 0)
			{
				if(PlayerInfo[playerid][pDrogas2] > 2)
   				{
   				    if(DrogasCombate(playerid,GetPlayerOrg(playerid))) { } else { SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode usar drogas perto de seus inimigos!"); return 1;}
			    	if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Voce esta~n~~p~Cherado",4000,1); }
			    	new Float:PlayersArmour;
			    	GetPlayerArmour(playerid,PlayersArmour);
                	new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    	if(PlayersArmour >= 100)
    				{
			    	    SetPlayerArmour(playerid, 100);
			    	    SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode mais usar drogas!");
			    	    return 1;
       	        	}
		        	else
		        	{
			    		SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    	}
			    	PlayerInfo[playerid][pDrogas2] -= 2;
			    	GetPlayerName(playerid, sendername, sizeof(sendername));
		    		format(string, sizeof(string), "* %s Cherou Cocaina.", sendername);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	if(Condom[playerid]==1)
					{
					     Condom[playerid] = 0;
					     SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce ja nao estao infectados com uma doenca sexualmente transmiss�vel mais por causa das Drogas !");
					}
					else if(Condom[playerid]==2)
					{
					    Condom[playerid] = 1;
		     			SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST a clam�dia,devido � Drogas!");
					}
					else if(Condom[playerid]==3)
					{
 			 		Condom[playerid] = 2;
    				SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST e a gonorreia devido �s Drogas!");
					}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"Voce nao tem Gramas de Drogas Suficiente.!");
				}
				return 1;
			}
			if(strcmp(x_job,"crack",true) == 0)
			{
				if(PlayerInfo[playerid][pDrogas3] > 2)
   				{
   				    if(DrogasCombate(playerid,GetPlayerOrg(playerid))) { } else { SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode usar drogas perto de seus inimigos!"); return 1;}
			    	if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Voce esta~n~~p~Noiado!",4000,1); }
			    	new Float:PlayersArmour;
			    	GetPlayerArmour(playerid,PlayersArmour);
                	new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    	if(PlayersArmour >= 100)
    				{
			    	    SetPlayerArmour(playerid, 100);
			    	    SendClientMessage(playerid,COLOR_LIGHTRED,"* Voce nao pode mais usar drogas!");
			    	    return 1;
       	        	}
		        	else
		        	{
			    		SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    	}
			    	PlayerInfo[playerid][pDrogas3] -= 2;
			    	GetPlayerName(playerid, sendername, sizeof(sendername));
		    		format(string, sizeof(string), "* %s Fumou Crack.", sendername);
			    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	if(Condom[playerid]==1)
					{
					     Condom[playerid] = 0;
					     SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce ja nao estao infectados com uma doenca sexualmente transmiss�vel mais por causa das Drogas !");
					}
					else if(Condom[playerid]==2)
					{
					    Condom[playerid] = 1;
		     			SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST a clam�dia,devido � Drogas!");
					}
					else if(Condom[playerid]==3)
					{
 			 		Condom[playerid] = 2;
    				SendClientMessage(playerid,COLOR_LIGHTBLUE,"* Voce baixou a DST e a gonorreia devido �s Drogas!");
					}
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GREY,"Voce nao tem Gramas de Drogas Suficiente.!");
				}
				return 1;
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/livrardrogas", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "* %s Livrou-se das Drogas.", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pDrogas]= 0;
		PlayerInfo[playerid][pDrogas2]= 0;
		PlayerInfo[playerid][pDrogas3]= 0;
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/pegardrogas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[128];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pegar Drogas __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /pegardrogas [Nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponiveis: maconha, cocaina, crack");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}
			if(strcmp(x_job,"maconha",true) == 0)
			{
		        new tel;
			    new price;
			    new ammount;
			    new playerdrogas;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegardrogas maconha [gramas]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 15; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 100 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 15; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 200 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 15; if(ammount < 1 || ammount > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 350 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 15; if(ammount < 1 || ammount > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 500 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 401)
				{ tel = 15; if(ammount < 1 || ammount > 800) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 800 gracas ao lvl de sua Habilidade!"); return 1; } }
				if (PlayerInfo[playerid][pEmprego] == 4)
				{
					if(PlayerToPoint(2.0,playerid,1980.1150,-1234.9983,20.0469) || PlayerToPoint(2.0,playerid,-2110.7590,158.7641,34.8597))
					{
						if(PlayerInfo[playerid][pDrogas] > 4)
    					{
		        		    format(string, sizeof(string), "  Voce ainda tem gramas de %d maconha, Vende tudo primeiro !", PlayerInfo[playerid][pDrogas]);
							SendClientMessage(playerid, COLOR_GREY, string);
		        		    return 1;
		        		}
						price = ammount * tel;
						playerdrogas = PlayerInfo[playerid][pDrogas];
						if(GetPlayerMoney(playerid) > price)
						{
							format(string, sizeof(string), "* Voce comprou %d gramas de maconha por $%d.", ammount, price);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						    GivePlayerMoney(playerid, -price);
							PlayerInfo[playerid][pDrogas] = ammount+playerdrogas;
	    				}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro para isso !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no Park Glen ou na Construcao de SF!");
				    	return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� nao e Vendedor de Drogas!");
					return 1;
				}
				return 1;
   			}
   			if(strcmp(x_job,"cocaina",true) == 0)
			{
		        new tel;
			    new price;
			    new ammount;
			    new playerdrogas;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegardrogas cocaina [gramas]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 15; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 100 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 15; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 200 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 15; if(ammount < 1 || ammount > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 350 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 15; if(ammount < 1 || ammount > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 500 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 401)
				{ tel = 15; if(ammount < 1 || ammount > 800) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 800 gracas ao lvl de sua Habilidade!"); return 1; } }
				if (PlayerInfo[playerid][pEmprego] == 4)
				{
					if(PlayerToPoint(2.0,playerid,1921.7291,-1412.0062,13.1667)	|| PlayerToPoint(2.0,playerid,-1475.5909,152.0156,18.7734))
					{
						if(PlayerInfo[playerid][pDrogas2] > 4)
    					{
		        		    format(string, sizeof(string), "  Voce ainda tem %d gramas de cocaina, Vende tudo primeiro !", PlayerInfo[playerid][pDrogas]);
							SendClientMessage(playerid, COLOR_GREY, string);
		        		    return 1;
		        		}
						price = ammount * tel;
						playerdrogas = PlayerInfo[playerid][pDrogas2];
						if(GetPlayerMoney(playerid) > price)
						{
							format(string, sizeof(string), "* Voce comprou %d gramas de cocaina por $%d.", ammount, price);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						    GivePlayerMoney(playerid, -price);
							PlayerInfo[playerid][pDrogas2] = ammount+playerdrogas;
	    				}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro para isso !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Pista de Skate ou no Navio!");
				    	return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� nao e Vendedor de Drogas!");
					return 1;
				}
				return 1;
   			}
   			if(strcmp(x_job,"crack",true) == 0)
			{
		        new tel;
			    new price;
			    new ammount;
			    new playerdrogas;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegardrogas crack [gramas]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 15; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 100 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 15; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 200 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 15; if(ammount < 1 || ammount > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 350 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 15; if(ammount < 1 || ammount > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 500 gracas ao lvl de sua Habilidade!"); return 1; } }
				else if(level >= 401)
				{ tel = 15; if(ammount < 1 || ammount > 800) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao pode ir abaixo de 1 ou superior 800 gracas ao lvl de sua Habilidade!"); return 1; } }
				if (PlayerInfo[playerid][pEmprego] == 4)
				{
					if(PlayerToPoint(2.0,playerid,2152.4707,-1013.1613,62.4262) || PlayerToPoint(2.0,playerid,-2994.1809,471.5032,4.6881))
					{
						if(PlayerInfo[playerid][pDrogas3] > 4)
    					{
		        		    format(string, sizeof(string), "  Voce ainda tem %d pedras de crack, Vende tudo primeiro !", PlayerInfo[playerid][pDrogas]);
							SendClientMessage(playerid, COLOR_GREY, string);
		        		    return 1;
		        		}
						price = ammount * tel;
						playerdrogas = PlayerInfo[playerid][pDrogas3];
						if(GetPlayerMoney(playerid) > price)
						{
							format(string, sizeof(string), "* Voce comprou %d pedras de crack por $%d.", ammount, price);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						    GivePlayerMoney(playerid, -price);
							PlayerInfo[playerid][pDrogas3] = ammount+playerdrogas;
	    				}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem dinheiro para isso !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no Morro ou na Praia Abandonada de SF!");
				    	return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� nao e Vendedor de Drogas!");
					return 1;
				}
				return 1;
   			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/curarme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1172.6522,-1327.9591,15.4025)	|| PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512) || PlayerToPoint(3, playerid,-2656.8376,638.4153,14.4531))
			{
	            if(PlayerInfo[playerid][pDoenca] > 0)
	            {
					PlayerInfo[playerid][pDoenca] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce esta infectado com uma DST, va ate um hospital se tratar !");
					GivePlayerMoney(playerid, -500);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dr.Bezerra de Menezes: Retiramos as suas doencas! Tenha um otimo dia!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital: Foram cobrados R$500 para ajudar o Hospital!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital: Procure um medico que eles cobram mais barato!!");
					SetPlayerDrunkLevel (playerid, 0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma Doenca para ser curada !");
				    return true;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta em um Hospital !");
	        }
        }
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/ejetar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"   Voce nao e o motorista do carro !");
		            return true;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /ejetar [id]");
					return true;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se expulsar... Aperte Enter ��!"); return true; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Voce expulsou o(a) %s para fora do carro!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Voce foi retirado do carro por %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta em seu carro !");
						    return true;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ID/Nick - Invalido!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce precisa estar em um carro para usar este comando !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/transar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pEmprego] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   Voce so pode transar em um carro !");
					return true;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /transar [id] [price]");
					return true;
				}

				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 20000) { SendClientMessage(playerid, COLOR_GREY, "   Preco da transa nao pode ser menor que R$1, ou maior que R$20000!"); return true; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode ter relacao sexual com voce mesma, mais pode bater uma siririca!"); return true; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Voce ofereceu ao %s para dar uma *Foda* com voce por R$%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Profissional do sexo %s Perguntou se voce aceita dar uma *Foda*, por R$%d (Digite /aceitar transa) Para Aceitar.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   Voce e o seu cliente devem estar juntos em um carro !");
				                return true;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de voce !");
							return true;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
					return true;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao e Profissional do sexo !");
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd,"/bafometro",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial !");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao !");
			    return true;
			}
 			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /bafometro [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0,playerid,giveplayerid))
					{
  	  					if(giveplayerid == playerid) { SendClientMessage(playerid,COLOR_GREY,"Voce nao pode fazer o teste em si mesmo!"); return true; }
				    	GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
						GetPlayerName(playerid,sendername,sizeof(sendername));
				    	new bebado[32], bebado2[32];
					    if(PlayerDrunk[giveplayerid] > 0) { bebado = "Bebado."; } else { bebado = "| Sobrio "; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| Sobrio "; }
				    	format(string,sizeof(string),"|__________[ %s ]__________|",giveplayer);
			        	SendClientMessage(playerid,COLOR_WHITE,string);
			        	format(string,sizeof(string),"%s.",bebado);
						SendClientMessage(playerid,COLOR_GREY,string);
						format(string,sizeof(string),"%s.",bebado2);
						format(string,sizeof(string),"* %s faz o teste do Bafometro em %s.",sendername ,giveplayer);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
				    	SendClientMessage(playerid,COLOR_GREY,"O jogador nao esta perto de voce !");
				    	return true;
    				}
				}
			}
        	else
       		{
            	SendClientMessage(playerid,COLOR_GREY,"Esse jogador esta off-line !");
            	return true;
       		}
    		return true;
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/reforco",true)==0 || strcmp(cmd,"/rf",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
				if(!IsACop(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
				    return true;
				}
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
				    return true;
				}
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Todas as unidades: %s esta pedindo reforco,veja o mapa e digite /procurar %d!.", sendername,playerid);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i))
							{
                    			new Float:plocx,Float:plocy,Float:plocz;
								new plo;
								plo = ReturnUser(tmp);
								GetPlayerPos(plo, plocx, plocy, plocz);
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Digite /rcr pra retirar o alerta.");
                    SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce ja tem um pedido de reforco ativo!");
				}
		}
		return true;
	}

//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd,"/reforcoretirar",true)==0 || strcmp(cmd,"/rcr",true)==0)
	{
		BackupClear(playerid, 0);
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd,"/revistar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
  			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /revistar [id]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
				    	if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode se Revistar!"); return true; }
				    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
         				if(PlayerInfo[giveplayerid][pDrogas] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas2] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas3] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { text4 = "| Materiais."; } else { text4 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text7 = "| MP10."; } else { text7 = "| Vazio."; }
				    	format(string, sizeof(string), "|__________ Itens %s __________|", giveplayer);
			        	SendClientMessage(playerid, COLOR_WHITE, string);
			        	format(string, sizeof(string), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayerid][pDrogas]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayerid][pDrogas2]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayerid][pDrogas3]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayerid][pMats]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text6);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text7);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Voce !");
					    return true;
					}
				}
			}
     	   	else
      	  	{
            	SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
            	return true;
        	}
		}
    	return true;
 	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/presos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE, "|______________[ Presos ]______________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Policia Militar - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 7)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Tropa de Paris- Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 2)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Carandiru - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 3)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : BOPE - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 4)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Policia Civil - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
	                if(PlayerInfo[i][pJailed] == 5)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Policia Federal - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
                    if(PlayerInfo[i][pJailed] == 6)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Cadeia Admin - Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/procurados", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			new x;
			SendClientMessage(playerid, COLOR_WHITE, "|______________[ Suspeitos ]______________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(WantedPoints[i] > 0)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s%s(%d): %d", string,giveplayer,i,WantedPoints[i]);
						x++;
						if(x > 3)
						{
						    SendClientMessage(playerid, COLOR_YELLOW, string);
						    x = 0;
							format(string, sizeof(string), "");
						}
						else
						{
							format(string, sizeof(string), "%s, ", string);
						}
					}
				}
			}
			if(x <= 3 && x > 0)
			{
				string[strlen(string)-2] = '.';
			    SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/sairdoemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pEmprego] > 0)
		    {
		        if(PlayerInfo[playerid][pVIP] > 0)
		        {
		            if(PlayerInfo[playerid][pContractTime] < 0)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce tem mais 1 hora de contrato para poder sair do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    PlayerInfo[playerid][pSkin] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 2 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Voce ainda tem %d horas de contrato para cumprir.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Voce cumpriu as 5 horas de contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    PlayerInfo[playerid][pSkin] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Ainda restam %d horas para acabar o contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Voce nao tem um emprego!");
			}
		}
		return 1;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/fianca", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetPlayerMoneyEx(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "Voce pagou sua fianca por: $%d", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoneyEx(playerid, -JailPrice[playerid]);
						JailPrice[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao pode pagar a fianca!");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   Sua fianca foi desativada!");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao esta preso!");
			}
		}//not connected
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/limpar", true) == 0 || strcmp(cmd, "/limparficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
			new member = PlayerInfo[playerid][pMembro];
			new lider = PlayerInfo[playerid][pLider];
			new rank = PlayerInfo[playerid][pCargo];
	 		if((gTeam[playerid] == 2 || 1 || 3))
			{
				if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406) && !PlayerToPoint(3.0, playerid, 198.9671,168.1982,1003.0234) && !PlayerToPoint(3.0, playerid, 234.8419,111.2194,1003.2257) && !PlayerToPoint(3.0, playerid, 326.8282,304.4166,999.1484) && !PlayerToPoint(3.0, playerid, 699.6252,-553.2016,-3.5950))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voce nao esta na recepcao do Departamento de Policia !");
					return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao limpar sua propria ficha!"); return true; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voce limpou a ficha de %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s Limpou a Ficha.", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Invalido ID/NICK!");
				}
			}
			else if(member == 12||member == 13||lider == 12||lider == 13)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voce nao pode limpar-se!"); return true; }
					    if(rank < 3) { SendClientMessage(playerid, COLOR_GREY, "   Apenas Cargo 3+ Podem Limpar Ficha !"); return true; }
					    if(GetPlayerMoney(playerid) < 100) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de R$100 para limpar a ficha !"); return true; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMembro] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao e da sua fam�lia !");
								return true;
							}
							format(string, sizeof(string), "* Voce limpou a ficha do(a) %s por R$100.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Membro %s cargo %d, limpou sua ficha.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						else if(lider > 0)
						{
			                if(PlayerInfo[giveplayerid][pMembro] != lider)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador nao e da sua fam�lia !");
								return true;
							}
						    format(string, sizeof(string), "* Voce limpou a ficha do(a) %s por R$100.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Lider %s, limpou sua ficha.", PlayerName(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						GivePlayerMoney(playerid, - 100);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ID/Nick! Invalido");
				}
			}

		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/multar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
			    return true;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return true;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 30000) { SendClientMessage(playerid, COLOR_GREY, "Custo entre 1000 e 30000 !"); return true; }
			if(IsPlayerConnected(giveplayerid))
			{
				if(IsACop(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode multar Policiais!");
					return true;
				}
				if(PlayerInfo[giveplayerid][pJailed] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voce nao pode multar jogadores que estejam presos!");
					return true;
				}
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(25.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[100];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
							return true;
						}
						format(string, sizeof(string), "* Voce multou %s por R$%d, Razao: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s lhe deu uma multa no valor de R$%d, Razao: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Use /aceitar multa, para aceita-la.");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Se em 5 minutos voce nao pagar, ira preso!");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						SetTimerEx("PresoMulta", 300000, false, "i", giveplayerid);
						return true;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "O jogador esta longe !");
						return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "O jogador esta Offline !");
			    return true;
			}
		}
		return true;
    }
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/barreira", true)==0 || strcmp(cmd, "/br", true)==0)
	{
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
		if(PlayerInfo[playerid][pJailed] != 0)
		{
		SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!");
		return true;
		}
		if (pRoadblock[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voce so pode criar 1 barreira por vez, /rbr - para remover sua barreira");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadblock[playerid] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barreira ~r~Criada", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Barreira Implantada... Use /rbr Para Remove-la!");
		format(string, sizeof(string), "Estado: Uma barreira foi posta por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 444 || PlayerInfo[i][pLider] > 0)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, "Voce pode remover todas as barreiras usando /rbrall");
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/removerbarreira", true)==0 || strcmp(cmd, "/rbr", true)==0)
	{
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
		if (pRoadblock[playerid] != 0)
		{
			RemoveRoadblock(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Voce retirou a sua barreira!");
		}
		else { return SendClientMessage(playerid, COLOR_GREY, "Voce nao criou uma barreira!"); }
		format(string, sizeof(string), "Estado: Uma barreira foi destru�da por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/removertodasbarreiras", true)==0 || strcmp(cmd, "/rbrall", true)==0)
	{
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26 && PlayerInfo[playerid][pAdmin] >= 1) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(pRoadblock[i] != 0)
				{
					RemoveRoadblock(i);
				}
			}
			format(string, sizeof(string), "Estado: Todas as barreiras foram retiradas por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
  		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/removerprego", true)==0 || strcmp(cmd, "/rpr", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um Policial!");
		if (SpikeInfo[playerid][sCreated] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao criou nenhum tapete de pregos!");
			return true;
		}
  		RemoveRoadPregos(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Voce retirou seu tapete de pregos!");
		format(string, sizeof(string), "Estado: %s removeu seu tapete de pregos.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  	if(strcmp(cmd, "/removerprall", true)==0 || strcmp(cmd, "/rprall", true)==0)
	{
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
		{
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
                if(IsPlayerConnected(i))
                {
					if(SpikeInfo[playerid][sCreated] != 0)
					{
     					RemoveRoadPregos(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os pregos foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if (IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 	if(strcmp(cmd, "/prego", true)==0 || strcmp(cmd, "/pregos", true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
		SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!");
		return true;
		}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e COP!");
		if (SpikeInfo[playerid][sCreated] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voce so pode implantar 1 prego por vez, /rpr - para remover seu tapete de pregos.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		SpikeInfo[playerid][sCreated]=1;
        SpikeInfo[playerid][sX]=X;
        SpikeInfo[playerid][sY]=Y;
        SpikeInfo[playerid][sZ]=Z-0.7;
        SpikeInfo[playerid][sObject] = CreateDynamicObject(2899, X, Y, Z-0.9, 0, 0, A-90);
		GameTextForPlayer(playerid, "~w~Pregos ~r~Criados", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pregos Implantados... Use /rpr Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um prego foi bem plantado por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 444 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Voce pode remover todos os pregos usando /rprall");
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/bloqueio", true)==0 || strcmp(cmd, "/bq", true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
		SendClientMessage(playerid,COLOR_YELLOW," Voce nao pode usar esse comando na cadeia!");
		return true;
		}
		if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
		 && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
		if (pRoadCones[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voce so pode implantar 1 Bloqueio por vez, /rbq - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadCones[playerid] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
		SetPlayerPos(playerid, X, Y, Z+1);
		GameTextForPlayer(playerid, "~w~Bloqueio ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um Bloqueio foi posto por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 444 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Voce pode remover todos os Bloqueios usando /rbqall");
					}
				}
			}
		}
		return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/removerbloqueio", true)==0 || strcmp(cmd, "/rbq", true)==0)
	{
	if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
 	&& PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
 	{
		if (pRoadCones[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voce nao criou nenhum bloqueio Bloqueio!");
			return true;
		}
		SendClientMessage(playerid, COLOR_GREY, "Voce retirou o seu Bloqueio!");
		RemoveRoadCones(playerid);
		format(string, sizeof(string), "Estado: %s removeu seu bloqueio.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		}
	return true;
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if(strcmp(cmd, "/removerbloqueioall", true)==0 || strcmp(cmd, "/rbqall", true)==0)
	{
    if (PlayerInfo[playerid][pMembro] != 1 && PlayerInfo[playerid][pLider] != 1 && PlayerInfo[playerid][pMembro] != 2 && PlayerInfo[playerid][pLider] != 2 && PlayerInfo[playerid][pMembro] != 3 && PlayerInfo[playerid][pLider] != 3 && PlayerInfo[playerid][pMembro] != 11 && PlayerInfo[playerid][pLider] != 11
        && PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16 && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24 && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26) return SendClientMessage(playerid, COLOR_GREY, "Voce nao e um oficial !");
    {
        for(new i = 0; i < MAX_PLAYERS; i++) {
            if(IsPlayerConnected(i)) {
                if(pRoadCones[i] != 0) {
                    RemoveRoadCones(i);
                }
            }
        }
        format(string, sizeof(string), "Estado: Todos os Bloqueios foram retirados por: %s.", PlayerName(playerid));
        for(new i = 0; i < MAX_PLAYERS; i++) {
            if(IsPlayerConnected(i)) {
                if(IsACop(i)) {
                    SendClientMessage(i, TEAM_BLUE_COLOR, string);
                }
            }
        }
    }
    return true;
	}
//==============================================================================
	if(strcmp(cmd,"/pararanime",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
            ClearAnimations(playerid);
        }
        return 1;
    }
//==============================================================================
	if(strcmp("/animes", cmd, true) == 0)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Lista de Animes");
		SendClientMessage(playerid, COLOR_GRAD2, "/render /ligar /desligar /bebado /bomba /apontar /merda /mascararse");
		SendClientMessage(playerid, COLOR_GRAD2, "/roubar /cruzarb /deitar /abaixar /vomitar /comer /rap /passaramao");
		SendClientMessage(playerid, COLOR_GRAD2, "/cobrar /overdose /fumar /fumar2 /sentar /conversar /fodase /taichi");
		SendClientMessage(playerid, COLOR_GRAD2, "/observar /gro /creu /de4 /mijar");
		SendClientMessage(playerid, COLOR_YELLOW, "Lista de Animes");
		return 1;
	}
//==============================================================================
    if(strcmp("/gro", cmd, true) == 0)
    {
		animm[playerid] = true;
        ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
        return 1;
    }
//==============================================================================
	if(strcmp("/de4", cmd, true) == 0)
	{
		animm[playerid] = true;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "* %s esta de 4 ^^!.", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1);
		return 1;
	}
//==============================================================================
    if(strcmp(cmd, "/creu", true) == 0 || strcmp(cmd, "/creu", true) == 0)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "* %s esta dancando o Creu.", sendername);
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,1,1,1,1,1);
        SendClientMessage(playerid, COLOR_DBLUE, "eeee Creeeeeeu!");
		animm[playerid] = true;
        return 1;
    }
//==============================================================================
	if(strcmp("/render", cmd, true) == 0)
	{
		animm[playerid] = true;
		//SetPlayerSpecialAction(playerid, 10);
		ApplyAnimation(playerid, "PED", "handsup", 4.1, 0, 1, 1, 1, 60000, 1);
		new data[128];
		GetPlayerName(playerid, sendername, sizeof(sendername));
    	format(data, sizeof(data),"%s levanta as maos e se rende.",sendername);
		ProxDetector(15.0, playerid, data, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
//==============================================================================
	if(strcmp("/ligar", cmd, true) == 0)
	{
		animm[playerid] = true;
		SetPlayerSpecialAction(playerid, 11);
		return 1;
	}
//==============================================================================
	if(strcmp("/desligar", cmd, true) == 0)
	{
		animm[playerid] = true;
		SetPlayerSpecialAction(playerid, 13);
		return 1;
	}
//==============================================================================
	if(strcmp("/bebado", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/bomba", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/apontar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
		return 1;
	}
//==============================================================================
	if(strcmp("/merda", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/mascararse", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/roubar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/cruzarb", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
		return 1;
	}
//==============================================================================
	if(strcmp("/deitar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/abaixar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/vomitar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/comer", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/rap", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/passaramao", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/cobrar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/overdose", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/fumar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/fumar2", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/mijar", cmd, true) == 0)
	{
		animm[playerid] = true;
		SetPlayerSpecialAction(playerid, 68);
		return true;
	}
//==============================================================================
	if(strcmp("/sentar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/conversar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/fodase", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/taichi", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp("/observar", cmd, true) == 0)
	{
		animm[playerid] = true;
		ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}
//==============================================================================
	if(strcmp(cmd, "/ajustar",true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new tempo[20];
            new tempo2;
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "Voce nao esta autorizado para usar este comando!");
                return 1;
            }
			if(OnDuty[playerid] != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
				return true;
			}
			if(!PlayerToPoint(12.0, playerid, 339.3437,-1501.7695,36.0391) && !PlayerToPoint(12.0, playerid, -23.1269,-270.3593,5.4297) && !PlayerToPoint(12.0, playerid, 846.2830,-1292.9236,13.6528) &&  !PlayerToPoint(12.0, playerid, 190.5879,178.8082,1003.0234) && !PlayerToPoint(12.0, playerid, 267.5573,81.8416,1001.0391)
			&& !PlayerToPoint(12.0, playerid, -1299.3954,490.6682,11.1953))
			{// Jail spot
   				SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto da cela, nao pode ajustar o suspeito !");
				return true;
			}
            tmp = strtok(cmdtext, idx);
            tempo = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [ Tempo ]");
                return 1;
            }
            if(!strlen(tempo))
            {
                SendClientMessage(playerid, COLOR_GRAD2, "USE: /ajustar [id] [ Tempo ]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tempo2 = strval(tempo);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "* Voce Ajustou o(a) %s Na Cadeia.", giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTRED, string);
                    format(string, sizeof(string), "* Voce foi ajustado por %s.", sendername);
                    SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
                    GameTextForPlayer(giveplayerid, "~b~Ajustado com ~n~~r~~Sucesso", 5000, 3);
                    PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
                return 1;
            }
        }
        return 1;
    }
//==============================================================================
	if(strcmp(cmd, "/prender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao Bateu o cartao!");
				    return true;
				}
		        if(!PlayerToPoint(12.0, playerid, 1529.5420,-1677.7013,5.8906) && !PlayerToPoint(12.0, playerid, 339.3437,-1501.7695,36.0391) && !PlayerToPoint(12.0, playerid, -23.1269,-270.3593,5.4297) && !PlayerToPoint(12.0, playerid, 846.2830,-1292.9236,13.6528) &&  !PlayerToPoint(12.0, playerid, 190.5879,178.8082,1003.0234) && !PlayerToPoint(12.0, playerid, 267.5573,81.8416,1001.0391)
			    && !PlayerToPoint(12.0, playerid, -1299.3954,490.6682,11.1953))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   Voce nao esta perto da cela, nao pode prender o suspeito !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo nao pode ser menor que 1 nem maior que 20 !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
                new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Fianca Tem Que ser 0=Nao ou 1=Sim !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return true;
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 300000) { SendClientMessage(playerid, COLOR_GREY, "   O Preco nao pode ser menor que 0 nem maior que R$300000 !"); return true; }
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
					{
 					    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no m�nimo 1 n�vel de procurado!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==1||PlayerInfo[playerid][pLider]==1)
							{
								format(string, sizeof(string), "<< Policial Militar %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 6);
							SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 1;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return true;
						}
 					    if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no m�nimo 1 n�vel de procurado!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==1||PlayerInfo[playerid][pLider]==1)
							{
								format(string, sizeof(string), "<< Policial Militar SF %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 6);
							SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 7;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							Controle(suspect, 1);
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return true;
						}
					    if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==2||PlayerInfo[playerid][pLider]==2)
							{
								format(string, sizeof(string), "<< BOPE %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,223.5335,110.3779,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 3;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
      						SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							Controle(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
					        PlayerInfo[suspect][pDrogas2] = 0;
					        PlayerInfo[suspect][pDrogas3] = 0;
					        PlayerInfo[suspect][pMats] = 0;
							return true;
       					}
					    if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==35||PlayerInfo[playerid][pLider]==35)
							{
								format(string, sizeof(string), "<< Forca Tatica%s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,223.5335,110.3779,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 8;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
      						SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							Controle(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
					        PlayerInfo[suspect][pDrogas2] = 0;
					        PlayerInfo[suspect][pDrogas3] = 0;
					        PlayerInfo[suspect][pMats] = 0;
							return true;
       					}
         				if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==11||PlayerInfo[playerid][pLider]==11)
							{
								format(string, sizeof(string), "<< Policial Federal %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 3);
							SetPlayerVirtualWorld(playerid,1);
							SetPlayerPos(suspect,198.1076,175.0731,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 5;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							Controle(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
	                        WantAdvogado[suspect] = 1;
	                        PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return true;
						}
                        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==3||PlayerInfo[playerid][pLider]==3)
							{
								format(string, sizeof(string), "<< Forcas Armadas %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 0);
							
							SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 2;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							Controle(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return true;
	                    }
					    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return true;
							}
							format(string, sizeof(string), "* Voce Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", PlayerName(playerid));
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==16||PlayerInfo[playerid][pLider]==16)
							{
								format(string, sizeof(string), "<< Policial Civil %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 3);
							SetPlayerPos(suspect,198.1076,175.0731,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voce foi preso por %d Segundos.   Fianca: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 4;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							Controle(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
	                        WantAdvogado[suspect] = 1;
	                        PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return true;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um jogador ativo.");
				    return true;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Oficial !");
			    return true;
			}
		}
		return true;
	}
//==============================================================================
	if(strcmp(cmd, "/contrato", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            new money2;
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato[ID/Nome] [Quantia] [agencia]");
                return 1;
            }
            giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato[ID/Nome] [Quantia] [agencia]");
                return 1;
            }
            moneys = strval(tmp);
            if(moneys < 10000) { SendClientMessage(playerid, COLOR_GREY, "   Seu contrato nao pode ser menor que 10000"); return 1; }
            new agencia[8];
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia] [agencia = hitmans ou Triads]");
                return 1;
            }
            strmid(agencia, tmp, 0, strlen(cmdtext), 255);
            if (IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(PlayerInfo[giveplayerid][pMembro] == 8 || PlayerInfo[giveplayerid][pLider] == 8)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Nao pode colocar contrato em Hitmans na Agencia Hitmans");
                        return 1;
                    }
                    if(PlayerInfo[giveplayerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 22)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Nao pode colocar contrato em Triads na Agencia Triads");
                        return 1;
                    }
                    else if(PlayerInfo[giveplayerid][pAdmin] >= 1)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Nao pode colocar contrato em Admins!");
                        return 1;
                    }
                    if(gTeam[giveplayerid] == 2 && moneys <= 100000)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Preco Minimo de $100000 em oficiais!");
                        return 1;
                    }
                    if(giveplayerid == playerid)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "Nao pode colocar contrato em si mesmo!");
                        return 1;
                    }
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    money2 = GetPlayerMoney(playerid);
                    if (moneys > 0 && money2 >= moneys)
                    {
                        GivePlayerMoney(playerid, (0 - moneys));
                        if(strcmp(agencia, "hitman", true, strlen(agencia)) == 0 || strcmp(agencia, "hitmans", true, strlen(agencia)) == 0)
                        {
                            PlayerInfo[giveplayerid][pHeadValue]+=moneys;
                            format(string, sizeof(string), "[Contrato Hitman]: %s Colocou um contrato Hitman em %s, por $%d.",sendername, giveplayer, moneys);
                            SendFamilyMessage(8, COLOR_YELLOW, string);
                        }
                        if(strcmp(agencia, "triad", true, strlen(agencia)) == 0 || strcmp(agencia, "Triads", true, strlen(agencia)) == 0)
                        {
                            PlayerInfo[giveplayerid][pHeadValueT]+=moneys;
                            format(string, sizeof(string), "[Contrato Triad]: %s Colocou um contrato Triad em %s, por $%d.",sendername, giveplayer, moneys);
                            SendFamilyMessage(22, COLOR_YELLOW, string);
                        }
                        format(string, sizeof(string), "* Voce colocou um contrato %s, por $%d.",giveplayer, moneys);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao possui essa grana.");
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Esse nao e um jogador ativo.");
            }
        }
        return 1;
    }
	typedef 
	{
	    new strcmd[MAX_STRING];
	    format(strcmd, sizeof(strcmd), "Este comando nao existe!");
	    SendClientMessage(playerid,COLOR_LIGHTRED ,strcmd);
	}
	return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}
	return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::CustomPickups()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    new tmpcar = GetPlayerVehicleID(i);
			if(PlayerToPoint(15.0, i, 63.4227,-1525.4623,4.9099) || PlayerToPoint(15.0, i, 39.9876,-1537.8563,5.2190) || PlayerToPoint(15.0, i, 50.8741,-1531.4620,5.2977))
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -1133.7361,1094.6746,38.5247) || PlayerToPoint(15.0, i, -1159.4485,1090.8225,39.4211))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 500);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -2672.4253,1280.6934,55.9456) || PlayerToPoint(15.0, i, -2690.4136,1268.3032,55.9456))
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(22.0, i, 2514.2334,292.2852,29.3627) || PlayerToPoint(22.0, i, 2540.9075,310.9224,28.8231))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 81.8500,-1259.7455,14.3465) || PlayerToPoint(15.0, i, 96.9080,-1280.1302,14.1135))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 1745.8721,525.1683,27.6760) || PlayerToPoint(15.0, i, 1752.5485,523.1072,27.6667) || PlayerToPoint(15.0, i, 1734.7725,529.1494,27.6652) || PlayerToPoint(15.0, i, 1728.3962,531.7761,27.6392))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 519.0666,468.8470,18.9297) || PlayerToPoint(15.0, i, 524.3035,472.9212,18.9297) || PlayerToPoint(15.0, i, -181.2493,329.5744,12.0781) || PlayerToPoint(15.0, i, -175.0119,327.9676,12.0781))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedagio Pago! -R$20!");
					GivePlayerMoney(i, - 20);
					SBizzInfo[13][sbTill] += 20;
					ExtortionSBiz(13, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			if (IsAPlane(tmpcar))
			{// Ganhar Paraquedas Aeronaves
				GivePlayerWeapon(i, 46, 1);
			}	
			else if (PlayerToPoint(3, i,-1707.3776,1018.2072,17.5859) || PlayerToPoint(3, i,-1746.0360,972.7875,95.8438))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /esf", 5000, 5);
			}
			else if (IsaMatObterPlace(i))
			{//Materiais obter
			    GameTextForPlayer(i, "~w~USE /materiais ~b~obter~n~~w~Para obter ~r~Materiais", 5000, 3);
			}
			else if (IsaMatEntregarPlace(i))
			{//Mafia Materiais obter
			    GameTextForPlayer(i, "~w~USE /materiais ~b~entregar~n~~w~Para entregar ~r~Materiais", 5000, 3);
			}
			else if (IsaMafMatObterPlace(i))
			{//Mafia Materiais obter
			    GameTextForPlayer(i, "~w~USE /mafiamateriais ~b~obter~n~~w~Para obter ~r~Materiais", 5000, 3);
			}
			else if (IsaMafMatEntregarPlace(i))
			{//Materiais obter
			    GameTextForPlayer(i, "~w~USE /mafiamateriais ~b~entregar~n~~w~Para entregar ~r~Materiais", 5000, 3);
			}
			else if (PlayerToPoint(1, i,1980.1150,-1234.9983,20.0469)) //Maconha
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas maconha ~n~~w~Para pegar ~r~Maconha", 5000, 3);
			}
			else if (PlayerToPoint(1, i,1921.7291,-1412.0062,13.1667))//Cocaina
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas cocaina ~n~~w~Para pegar ~r~Cocaina", 5000, 3);
			}
			else if (PlayerToPoint(1, i,2152.4707,-1013.1613,62.4262))//Crack
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas crack ~n~~w~Para pegar ~r~Crack", 5000, 3);
			}
			else if (PlayerToPoint(1, i,-2994.1809,471.5032,4.6881))//Crack
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas crack ~n~~w~Para pegar ~r~Crack", 5000, 3);
			}
			else if (PlayerToPoint(1, i,-1475.5909,152.0156,18.7734))//Cocaina
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas cocaina ~n~~w~Para pegar ~r~Cocaina", 5000, 3);
			}
			else if (PlayerToPoint(1, i,-2110.7590,158.7641,34.8597)) //Maconha
			{
			    GameTextForPlayer(i, "~w~USE /pegardrogas maconha ~n~~w~Para pegar ~r~Maconha", 5000, 3);
			}
			else if(PlayerToPoint(1,i,822.0201,4.2154,1004.1797) || PlayerToPoint(1, i,822.0099,6.3927,1004.1797) || PlayerToPoint(1, i,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, i,822.0237,1.7826,1004.1797))
			{//loterica
			    GameTextForPlayer(i, "~y~Digite ~r~/loteria ~y~para comprar um bilhete!", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2268.0308,2449.0750,3.5313))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /subirlv", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2267.2820,2458.2598,38.6837))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /descerlv", 5000, 5);
			}
			else if (PlayerToPoint(3, i,901.4695,-1276.5393,23.0861) || PlayerToPoint(3, i,903.3665,-1272.1648,14.5035))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epc", 5000, 5);
			}
   			else if (PlayerToPoint(3, i,-54.8425,-237.7034,31.6468) || PlayerToPoint(3, i,-50.5607,-233.6536,6.7646))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epf", 5000, 5);
			}
			else if (PlayerToPoint(3, i,221.1146,-234.2171,8.0786) || PlayerToPoint(3, i,221.1805,-237.8225,1.5781))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eElements", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1225.5535,-1811.9352,16.5938) || PlayerToPoint(3, i,1235.1705,-1768.2770,33.6559))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /ebomb", 5000, 5);
			}
			else if (PlayerToPoint(3, i,346.8519,-1494.9565,36.0391) || PlayerToPoint(3, i,345.1602,-1482.8597,76.5391))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epr", 5000, 5);
			}
			else if (PlayerToPoint(3, i,965.7349,-1465.6044,21.3783) || PlayerToPoint(3, i,964.0209,-1465.8312,13.4589))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /etaxi", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2041.6371,-1392.5150,48.3359) || PlayerToPoint(3, i,2037.6494,-1404.6544,17.2538))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eMedicos", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2522.9346,-1679.4137,15.4970) || PlayerToPoint(3, i,2524.4297,-1681.8153,19.9302))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /egroove", 5000, 5);
			}
			else if (PlayerToPoint(3, i,599.3150,-1520.4652,15.0129) || PlayerToPoint(3, i,594.9153,-1528.5319,30.8906))
			{
			    GameTextForPlayer(i, "~g~ELEVADOR, ~n~ ~w~ Digite ~y~/elevadortaxi", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2233.8225,-1333.2725,23.981))
			{
			    GameTextForPlayer(i, "~y~Igreja ~n~~r~Para entrar use Enter", 5000, 5);
			}
			else if(PlayerToPoint(2.0, i,1106.5106,-299.5384,74.5391) && GetPlayerOrg(i) == 8 || PlayerToPoint(2.0,i,-1681.4905,1350.2188,7.1722) && GetPlayerOrg(i) == 22)
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 300); GivePlayerWeapon(i, 33, 50); GivePlayerWeapon(i, 4, 1);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 2:
			            {
			                GivePlayerWeapon(i, 24, 100); GivePlayerWeapon(i, 29, 400); GivePlayerWeapon(i, 34, 100); GivePlayerWeapon(i, 4, 1);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 3:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 200); GivePlayerWeapon(i, 30, 200); GivePlayerWeapon(i, 4, 1);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 4:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 300); GivePlayerWeapon(i, 31, 300); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 5:
			            {
			                GivePlayerWeapon(i, 24, 400); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 400); GivePlayerWeapon(i, 30, 400); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 6:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
							SetPlayerArmour(i, 100);
							SetPlayerHealth(i, 100);
							SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
			            case 7:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu pacote.");
			            }
		            	case 8:
			            {
			                GivePlayerWeapon(i, 24, 900); GivePlayerWeapon(i, 29, 900); GivePlayerWeapon(i, 27, 900); GivePlayerWeapon(i, 30, 900); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 900);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                GivePlayerMoney(i, 1000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voce pegou o seu Bonus Especial, Paranens !");
			            }
			        }
			        OrderReady[i] = 0;
				}
			}
		}
	}
	return true;
}
//==============================================================================
BPR::OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[128];
	new string[360];
	new giveplayerid;
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voce nao pode falar, voce foi calado");
		return 0;
	}
   	if(strfind(text,"!kill",true) == 0) return Kick(playerid);
   	if(strfind(text,"www.samphax.tk",true) == 0) return Kick(playerid);
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Proximo", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Proximo")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Policia Militar
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 266); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 266; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 266); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 266; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 281; }
				}
				case 2: //BOPE
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 284); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 284; }
    			}
				case 3: //Forcas Armadas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
				}
				case 4: //Medicos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
				}
				case 5: //Tropa da Turquia
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 6: //Peaky Blinders
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 122); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 122; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 272); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 272; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 131); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 131; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 128); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 128; }
				}
				case 7: //Prefeito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 150); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 150; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 148; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 141; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 17; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 187; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 227); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 227; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 166); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 166; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 127); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 127; }
				}
				case 9: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 10: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
				}
				case 11: //Policia federal
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 59); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 59; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 186); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 185; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 185); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 186; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 295); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 295; }
				}
				case 12: //Mafia CN
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 17; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 43); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 43; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 46); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 46; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 98); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 98; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 223); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 223; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 126); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 126; }
				}
				case 13: //FamiliaShelby
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 203); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 203; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 204); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 204; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 118; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
				}
				case 14: //Groove
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 269; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 107; }
				}
				case 15: //F.A.R.C
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 30; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 47); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 47; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 192); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 192; }
				}
				case 16: //Policia Civil
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 288); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 288; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 282; }
				}
				case 17: //Ballas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
				}
				case 18: //Vagos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
				}
				case 19: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
    			}
				case 20: //Sons of Anarchy
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 247); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 247; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 248); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 248; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 181); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 181; }
				}
				case 21: //Elements
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 101); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 101; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 293); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 293; }
				}
				case 22: //Triads
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 118; }
				}
				case 23: //PCC
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 206); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = 206; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = 141; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 261); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = 261; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 263); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = 263; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 32); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 32; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 136); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 136; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, 230); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 230; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, 55); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 55; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, 150); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 150; }
				}
				case 24: //Bonde dos 40
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 269; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 107; }
				}
				case 25: //Familia do Norte
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
				}
				case 26: //Terceiro Comando Puro
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 206); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = 206; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = 141; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 261); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = 261; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 263); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = 263; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 32); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 32; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 136); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 136; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, 230); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 230; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, 55); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 55; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, 150); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 150; }
				}
				case 27: //Medicos SF
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
				}
				case 28: //Grota
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
    			}
				case 29: //Tropa da Turquia
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
				}
				case 30: //Prefeito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 150); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 150; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 148; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 141; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 17; }
					else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 187; }
					else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 227); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 227; }
				}
				case 31: //Tropa da Turquia
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 32: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 33: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
				}
				case 34: //Policia Militar
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 35: //BOPE
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 284); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 284; }
    			}
			}
		    return 0;
		}
		else if ((strcmp("Confirma", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Confirma")))
		{
		    if(IsAtClothShop(playerid))
		    {
		        PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SelectCharPlace[playerid] = 0;
		    	SelectCharID[playerid] = 0;
		    	SelectChar[playerid] = 0;
		        return 0;
		    }
		    if(ChangePos2[playerid][1] == 1)
		    {
			    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, TEAM_VAGOS_COLOR, "* Use 'Proximo', ou 'Confirma'.");
		    return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "Padre: %s Voce aceita %s como sua amada esposa? (Digite 'sim', qualquer outra coisa cancela o casamento).", giveplayer,PlayerName(playerid));
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return true;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar o Noivo.", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Gay, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva", giveplayer, PlayerName(playerid));
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Lesbico, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", PlayerName(playerid));
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerMoney(playerid, - 100);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPHousekey] = PlayerInfo[playerid][pPHousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return true;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Voce deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Voce, um 'sim' foi dito.",PlayerName(playerid));
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Voce deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Voce, um 'sim' foi dito.",PlayerName(playerid));
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contratos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contratos")))
		{
			if(GetPlayerOrg(playerid) == 8) { FH = 1; }
			if(GetPlayerOrg(playerid) == 22) { FK = 1; }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("noticias", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("noticias")))
		{
		    	new x_nr[256];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Noticia da agencia dos Assasinos __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: noticias [Numero] ou noticias apagar [Numero] ou noticias apagar tudo");
					format(string, sizeof(string), "1: %s :: Assasino: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Assasino: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Assasino: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Assasino: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Assasino: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 1 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 2 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 3 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 4 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 5 ocupado !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"apagar",true) == 0)
				{
				    if(PlayerInfo[playerid][pCargo] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para apagar mensagens!");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[256];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (1) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (2) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (3) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (4) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (5) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"tudo",true) == 0)
                    {
                        format(string, sizeof(string), "Nada"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nada"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Ninguem");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						PlacedNews[playerid] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou todas as mensagens da agencia dos Assasinos.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("darcont", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("darcont")))
		{
		    if(PlayerInfo[playerid][pCargo] < 4)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para dar contrato!");
		        return 0;
		    }
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Nao ha contratos, USE contratos em seu laptop primeiro!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: darcont [ID/Nome]");
				return 0;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(GetPlayerOrg(playerid) != GetPlayerOrg(giveplayerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse Jogador nao e um Assassino!");
						return 0;
				    }
				    if(GoChase[giveplayerid] < 999)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse assasino ja possui um contrato!");
						return 0;
				    }
				    if(IsPlayerConnected(hitid))
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giver, sizeof(giver));
				        GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
		    			format(string, sizeof(string), "* Assasino %s, deu um contrato para %s matar: %s(ID:%d), por R$%d.", sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    			SendFamilyMessage(GetPlayerOrg(playerid), COLOR_YELLOW, string);
		    			GoChase[giveplayerid] = hitid;
		    			GetChased[hitid] = giveplayerid;
		    			GotHit[hitid] = 1;
		    			hitid = 0;
		    			hitfound = 0;
				        return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
				        return 0;
				    }
				}
				return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um assasino ativo!");
			    return 0;
			}
		}
		else if ((strcmp("membros", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("membros")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Membros da Agencia __________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 22)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: Cargo %d", giveplayer,PlayerInfo[i][pCargo]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("pedido", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("pedido")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {

			        SendClientMessage(playerid, COLOR_GREY, "Seu pacote foi entregue a sua HQ, verifique na Caixa de Pacotes !");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voce nao possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("8", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("8")))
			{
			    if(GanhouArmamento == GetPlayerOrg(playerid))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu Bonus foi entregue a sua HQ, verifique na Caixa de Pacotes !");
					OrderReady[playerid] = 8;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   A sua organizacao nao ganhou o Bonus Especial por contratos concluidos!");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________[ Pedidos Disponiveis ]__________________|");
			    if(PlayerInfo[playerid][pCargo] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) Cargo 1 - 6: Knife, Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) Cargo 2 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) Cargo 2 - 6: Knife, Eagle, AK47, MP5, Shotgun, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) Cargo 3 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) Cargo 3 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) Cargo 4 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper, Colete"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) Cargo 4 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper, Colete"); }
			    SendClientMessage(playerid, COLOR_LIGHTRED, "|(8) Bonus: Knife, Eagle, AK47, MP5, Combat Shotgun, Sniper, Colete, e 100 mil.");
			    return 0;
			}
		}
		else if ((strcmp("sair", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sair")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce desligou seu laptop e se desconectou de sua agencia.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
			    SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assasinos ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
			    return 0;
		}
	    return 0;
	}
	if(CallAdvogado[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s esta na prisao e precisa de um advogado, olhe /presos.", PlayerName(playerid));
	    	SendEmpregoMessage(2, TEAM_TDT_color, string);
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "A Mensagem foi enviada para todos os advogados online, Por favor espere.");
	    	WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Sua sentenca foi iniciada.");
		    WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
 			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s diz (Celular): %s", sendername, text);
		SetPlayerChatBubble(playerid, string, COLOR_AZULBB, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Desculpe, Nao Entendi");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Temos alertado todas as unidades na area.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Obrigado por Relatar o Ocorrido");
			format(wanted, sizeof(wanted), "Denuncia: Todas Unidades IA: Chamador: %s",turner);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "Denuncia: %s",text);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGeNCIA: Desculpe eu nao entendo");
				return 0;
			}
			if ((strcmp("nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "COP: Alertamos todos as unidades perto do local.");
				SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por ter relatado o Ocorrido");
				format(wanted, sizeof(wanted), "HQ: Todas as unidades: Denunciante: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "HQ: Crime: %s, Suspeito: Desconhecido",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha.....");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Voce tera que entrar em contato com os assuntos internos. Esta e uma linha de emergencia");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninghem na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Unidades ja estao atribu�dos a esse caso.");
						SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguemm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Esta linha e de emergencia.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguemm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Temos alertado todas as unidades na area.");
					SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else
					{
						WantedPoints[badguy] += 1;
      					SetPlayerWantedLevel(badguy, WantedPoints[badguy]);
				  	}
					SendClientMessage(playerid, COLOR_GRAD2, "   Ninguemm na linha...");
					Mobile[playerid] = 255;
					return 0;
				}
				return 0;
			}
			else
			{
				format(string, sizeof(string), "Police HQ: Nenhuma informacao sobre %s, o nome citado esta correto?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe, nao entendi.");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Se voce souber o nome do assaltante ou de parte dele, me fale, ou simplesmente dizer nao");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 190)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe nao entendo... Policia ou Medicos?");
				return 0;
			}
			else if ((strcmp("policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("policia")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Voce optou por Policia, Espere.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Por favor me de uma breve descricao do crime.");
				return 0;
			}
			else if ((strcmp("Medicos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Medicos")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Voce optou por Medicos, Espere.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Por favor me de uma breve descricao do Incidente.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe nao entendo... Policia ou Medicos?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Ninguem la");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		if(PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Mascarado diz: %s", text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pHelper] >= 1 && helpertrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{de5d83}HELPER][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 2 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{006a4e}ADMIN{FFFFFF}}[{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 3 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{006a4e}COORDENADOR{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 4 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{006a4e}SUPERVISOR{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 1337 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{006a4e}GERENTE{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 1340 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{318ce7}SUB FUND{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 1341 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{0000ff}FUNDADOR{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pAdmin] == 3000 && admtrampando[playerid] >= 1)
		{
			format(string, sizeof(string), "[{6e0000}CEO{FFFFFF}][{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else
		{
		   	format(string, sizeof(string), "[{007aa5}%s{FFFFFF}][{007aa5}%d{FFFFFF}]: %s", PlayerName(playerid),playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		return 0;
  	}
	return true;
}
//==============================================================================
BPR::SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}
//==============================================================================
BPR::Fixhour(hora)
{
	hora = timeshift+hora;
	if (hora < 0)
	{
		hora = hora+24;
	}
	else if (hora > 23)
	{
		hora = hora-24;
	}
	shifthour = hora;
	return true;
}
//==============================================================================
/*BPR::IsAPoliciaCivilCar(carid)
{
	if((carid >= 235) && (carid <= 255))
	{
		return true;
	}
	return 0;
}*/
//==============================================================================
BPR::IsAGI(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==6 || member==6)
		{
		    return true;
		}
		else if(lider==6 || lider==6)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAGICar(carid)
{
	if((carid >= 97) && (carid <= 114))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAPCC(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==23 || member==23)
		{
		    return true;
		}
		else if(lider==23 || lider==23)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAPCCCar(carid)
{
	if((carid >= 321) && (carid <= 331))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAtcp(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==26 || member==26)
		{
		    return true;
		}
		else if(lider==26 || lider==26)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAgrota(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==28 || member==28)
		{
		    return true;
		}
		else if(lider==28 || lider==28)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAComandoVermelho(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
		if(member==19 || member==19)
		{
		    return true;
		}
  		else if(lider==19 || lider==19)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAtcpCar(carid)
{
	if((carid >= 513) && (carid <= 523))
	{
		return true;
	}
	return 0;
}*/
BPR::IsASONS(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==20 || member==20)
		{
		    return true;
		}
		else if(lider==20 || lider==20)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsASONSCar(carid)
{
	if((carid >= 289) && (carid <= 298))
	{
		return true;
	}
	return 0;
}*/
BPR::IsATriad(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==22 || member==22)
		{
		    return true;
		}
		else if(lider==22 || lider==22)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsATriadCar(carid)
{
	if((carid >= 310) && (carid <= 320))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAYa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==13|| member==13)
		{
		    return true;
		}
		else if(lider==13 || lider==13)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAYaCar(carid)
{
	if((carid >= 197) && (carid <= 207))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAPFCar(carid)
{
	if((carid >= 164) && (carid <= 177))
	{
		return true;
	}
	return 0;
}


BPR::IsACosaNostra(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==12 || member==12)
		{
		    return true;
		}
		else if(lider==12 || lider==12)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAGOV(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==7 || lider==7)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAGOVCar(carid)//Carros Governo
{
	if((carid >= 115) && (carid <= 123))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAGOVSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==30 || lider==30)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAGOVSFCar(carid)
{
	if((carid >= 553) && (carid <= 560))
	{
		return true;
	}
	return 0;
}
BPR::IsACosaNostraCar(carid)//Mafia Cosa Nostra Carros
{
	if((carid >= 186) && (carid <= 196))
	{
		return true;
	}
	return 0;
}*/

BPR::IsAAl(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==15 || member==15)
		{
		    return true;
		}
		else if(lider==15 || lider==15)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAAlCar(carid)
{
	if((carid >= 219) && (carid <= 234))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAElements(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==21 || member==21)
		{
		    return true;
		}
		else if(lider==21 || lider==21)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAElementsCar(carid)
{
	if((carid >= 299) && (carid <= 309))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAOni(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==9)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAOniCar(carid)
{//11, 10, 12, 13
	if((carid >= 10) && (carid <= 13))
	{
		return true;
	}
	return 0;
}

/*forward IsAConceVipCar(carid);
BPR::IsAConceVipCar(carid)
{
	if((carid >= 10) && (carid <= 13))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAJornal(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==9 || member==9)
		{
		    return true;
		}
		else if(lider==9 || lider==9)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAJornalCar(carid)
{
	if((carid >= 135) && (carid <= 145))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAGroove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==14)
		{
		    return true;
		}
		else if(lider==14 || lider==14)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAB40(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==24 || member==24)
		{
		    return true;
		}
		else if(lider==24 || lider==24)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsATaxiSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==33 || member==33)
		{
		    return true;
		}
		else if(lider==33 || lider==33)
		{
		    return true;
		}
	}
	return 0;
}

BPR::IsATaxiSFCar(carid)
{
	if((carid >= 583) && (carid <= 596))
	{
		return 1;
	}
	return 0;
}
forward IsAGang(playerid);
BPR::IsAGang(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==17 || member==18 || member==19 || member==20 || member==21 || member==5)
		{
		    return true;
		}
		else if(lider==14 || lider==17 || lider==18 || lider==19 || lider==20 || lider==21 || lider==5)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAGrooveCar(carid)
{
	if((carid >= 208) && (carid <= 218))
	{
		return true;
	}
	return 0;
}
BPR::IsAB40Car(carid)
{
	if((carid >= 492) && (carid <= 501))
	{
		return true;
	}
	return 0;
}*/
BPR::IsATaxi(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==10 || member==10)
		{
		    return true;
		}
		else if(lider==10 || lider==10)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsATaxiCar(carid)
{
	if((carid >= 146 && carid <= 163))
	{
		return true;
	}
	return 0;
}
BPR::IsAVagos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==18 || member==18)
		{
		    return true;
		}
		else if(lider==18 || lider==18)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAVagosCar(carid)
{
	if((carid >= 267) && (carid <= 277))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAFDN(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==25 || member==25)
		{
		    return true;
		}
		else if(lider==25 || lider==25)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAFDNCar(carid)
{
	if((carid >= 502) && (carid <= 512))
	{
		return true;
	}
	return 0;
}*/
BPR::IsABallas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==17 || member==17)
		{
		    return true;
		}
		else if(lider==17 || lider==17)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAada(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==29 || member==29)
		{
		    return true;
		}
		else if(lider==29 || lider==29)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsABallasCar(carid)
{
	if((carid >= 256) && (carid <= 266))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAHelper(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new helper = PlayerInfo[playerid][pHelper];
	    if(helper>=1 || helper>=1)
		{
		    return true;
		}
	}
	return 0;
}
forward IsAMod(playerid);
BPR::IsAMod(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new moderador = PlayerInfo[playerid][pMod];
	    if(moderador>=1 || moderador>=1)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsAHelperCar(carid)
{
	if((carid >= 673) && (carid <= 690))
	{
		return true;
	}
	return 0;
}
/*BPR::IsAadaCar(carid)
{
	if((carid >= 542) && (carid <= 552))
	{
		return true;
	}
	return 0;
}*/
BPR::IsASFN(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==32 || member==32)
		{
		    return true;
		}
		else if(lider==32 || lider==32)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsASFNCar(carid)
{
	if((carid >= 571) && (carid <= 582))
	{
		return 1;
	}
	return 0;
}
BPR::IsATDT(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==5)
		{
		    return true;
		}
		else if(lider==5 || lider==5)
		{
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsACopSF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==34 || member==34)
		{
		    return true;
		}
		else if(lider==34 || lider==34)
		{
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsACopLS(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==1)
		{
		    return true;
		}
		else if(lider==1 || lider==1)
		{
		    return true;
		}
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
/*BPR::IsATDTCar(carid)
{
	if((carid >= 87) && (carid <= 96))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAmilicia(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==31 || member==31)
		{
		    return true;
		}
		else if(lider==31 || lider==31)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAmiliciaCar(carid)
{
	if((carid >= 561) && (carid <= 570))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAMec(playerid)
{
	if(PlayerInfo[playerid][pEmprego] == 5)
	{
		return true;
	}
	return 0;
}
/*BPR::IsAMecCar(carid)
{
	if((carid >= 388 && carid <= 392) || (carid >= 466 && carid <= 476) || (carid >= 628 && carid <= 639))
	{
		return true;
	}
	return 0;
}*/
BPR::IsABOPE(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==2 || member==2)
		{
		    return true;
		}
		else if(lider==2 || lider==2)
		{
		    return true;
		}
	}
	return 0;
}
BPR::IsABOPESF(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==35 || member==35)
		{
		    return true;
		}
		else if(lider==35 || lider==35)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsABOPESFCar(carid)
{
	if((carid >= 655) && (carid <= 672))
	{
		return true;
	}
	return 0;
}
BPR::IsABOPECar(carid)
{
	if((carid >= 36) && (carid <= 55))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAEx(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==3 || member==3)
		{
		    return true;
		}
		else if(lider==3 || lider==3)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAExCar(carid)
{
	if((carid >= 56) && (carid <= 79))
	{
		return true;
	}
	return 0;
}*/
BPR::IsAHit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==8 || member==8)
		{
		    return true;
		}
		else if(lider==8 || lider==8)
		{
		    return true;
		}
	}
	return 0;
}
/*BPR::IsAHitCar(carid)
{
	if((carid >= 124) && (carid <= 134))
	{
		return true;
	}
	return 0;
}*/
BPR::IsABikeCar(carid)
{
	if((carid >= 425 && carid <= 448))
	{
		return true;
	}
	return 0;
}
BPR::IsAVIP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vip = PlayerInfo[playerid][pVIP];
	    if(vip >= 1)
		{
		    return true;
		}
	}
	return 0;
}
BPR::GaragemDpClosed2()
{
	MoveObject(PDDOORb,250.774871 , 60.822799 , 1003.640625, 2);//GaragemClosed
	return true;
}
BPR::PortaoDreigon3()
{
	MoveObject(PortaoDreigon,2105.34399, 1862.65869, 12.71300, 2);//Portao Dreigon 1
	MoveObject(PortaoDreigon2,2108.12549, 1969.66614, 12.71300, 2);//Portao Dreigon 2
}
BPR::prfClosed()
{
    MoveObject(prf1,-1635.46447754,688.27337646,10.10410309, 3);
    MoveObject(prf2,-1627.49902344,688.27178955,10.10148048, 3);
    MoveObject(prf3,-1619.85461426,688.06866455,6.18750000, 3);
	return 1;
}
BPR::prfClosed2()
{
    MoveObject(prf4,-1572.03344727,661.12640381,8.96089172, 3);
	return 1;
}
BPR::gasolina(playerid)
{
    new string[128];
    new vehicle = GetPlayerVehicleID(playerid);
    new Nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nick, sizeof(Nick));
	new wanted = WantedPoints[playerid];
    SendClientMessage(playerid, COLOR_YELLOW2, "| Computador De Bordo |");
    format(string, sizeof(string), "  Motorista: %s", Nick);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Veiculo: %s", NomeCarro[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Combustivel: %d", Gas[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Nivel De Procura: %d", wanted);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Horas: %d", hour);
    SendClientMessage(playerid, COLOR_WHITE, string);
    Gas[vehicle]--;
    return true;
}
BPR::GaragemDpClosed()
{
	MoveObject(PDDOORa,247.005905 , 72.448440 , 1003.640625, 2);//GaragemClosed
	return true;
}
BPR::Elementslosed()
{
    MoveObject(PDDOORb,248.142105 , 78.125961 , 1003.640625, 2);//CelaClosed
	return true;
}
BPR::pd1()
{
	MoveObject(PDDOORc,248.142105 , 78.125961 , 1003.640625, 2);//GaragemClosed
	return true;
}
BPR::pd2()
{
	MoveObject(PDPMLS,1545.50000000,-1628.40002441,15.19999981, 2);//GaragemClosed
	return true;
}
BPR::pd3()
{
	MoveObject(PDGARAGE,1588.195,-1637.969,15.193, 2);//GaragemClosed
	return true;
}
BPR::pd4()
{
	MoveObject(PDELEVATOR,1549.049804 , -1697.787109 , 12.5514954, 2);//GaragemClosed
	return true;
}
BPR::PortaoPoliciaC1()
{
	MoveObject(portaoPC1,923.80151367188, -1224.8518066406, 18.749954223633, 2);//GateClosed
	MoveObject(portaoPC2,923.73193359375, -1217.4801025391, 18.749954223633, 2);//GateClosed
	return true;
}
BPR::PortaoSFN2()
{
	MoveObject(PortaoSFN,-2262.5871582031, 553.69573974609, 36.789016723633, 2);
	return 1;
}
BPR::PortaooPC2() {
	MoveObject(PortaooPC,922.45611572266, -1208.7191162109, 17.982734680176, 2);// portaooPC Closed
	return true;
}
BPR::PortaoTaxiSF2()
{
	MoveObject(PortaoTaxiSF,-2016.2495117188, 395.068359375, 36.945266723633, 2);//Portao Taxi Closed
	return 1;
}
BPR::PortaoTaxi2() {
	MoveObject(PortaoTaxi,1803.40002441,-1721.19995117,16.10000038, 2);//Portao Taxi Closed
	return true;
}
BPR::PortaoBOPE2() {
	MoveObject(PortaoBOPE,-1742.13061523,985.34228516,19.34956932, 2);//Portao Forca TaticaClosed
	return true;
}
BPR::PortaoCoyote() {
	MoveObject(PortaoSlander,2979.81348, -769.83441, 18.01630, 2);//Portao Farnning
	return true;
}
BPR::PDEx2()
{
	MoveObject(PDEx,-1531.3978271484, 482.25979614258, 8.9530792236328, 2);//GateClosed
	return true;
}
BPR::gt3gate2()
{
	MoveObject(gt3gate,283.095062, -1542.899170, 25.510294, 2);//GateClosed
	MoveObject(gt3gate3,321.832672, -1488.615112, 25.527353, 2);//GateClosed
	return true;
}
BPR::PortaoGov2()
{
	MoveObject(PortaoGov,1539.2235107422, -1838.2176513672, 15.320266723633, 2);//Portao Gov Closed
	return true;
}
BPR::PortaoReporter2() {
	MoveObject(PortaoReporter,777.80017089844, -1330.2664794922, 14.200000762939, 2);//Portao Reporter Closed
	return true;
}
BPR::PoliciaFederalClosed()
{
    MoveObject( pfdoor, -2433.97338867,496.39559937,31.70938301,3);
    MoveObject( pfdoor2, -2424.72973633,500.50247192,30.89804077,3);
	return 1;
}
forward AntiSpam(playerid);
BPR::AntiSpam(playerid)
{
    RecentlyShot[playerid] = 0;
    return 1;
}
//==============================================================================
BPR::OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
    return 0;
}
//==============================================================================
BPR::OnPlayerKeyStateChange(playerid,newkeys,oldkeys)
{
	KeyAtivada[playerid] = true;
	if(newkeys & KEY_SECONDARY_ATTACK && animm[playerid] == true)
	{
        ClearAnimations(playerid);
        animm[playerid] = false;
   	 	return true;
	}
	if((newkeys == KEY_SECONDARY_ATTACK) && (IsPlayerInAnyVehicle(playerid)))
    {
        RemovePlayerFromVehicle(playerid);
        return 1;
    }
    if(newkeys & KEY_FIRE && newkeys & KEY_HANDBRAKE)
	{
        if(RecentlyShot[playerid] == 0)
		{
            RecentlyShot[playerid] = 1;
            SetTimerEx("AntiSpam", 1000, false, "d", playerid);
            if(GetPlayerWeapon(playerid) == 34 || GetPlayerWeapon(playerid) == 31 || GetPlayerWeapon(playerid) == 30)
			{
                new Float:blahx, Float:blahy, Float:blahz;
                HeadshotCheck(playerid, blahx, blahy, blahz);
                return 1;
            }
            return 1;
        }
        return 1;
    }
	if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
    	if(PlayerToPoint(2.0,playerid,268.2108,77.4440,1001.0391) || PlayerToPoint(2.0,playerid,225.9554,114.1761,999.0156) || PlayerToPoint(2.0,playerid,195.4466,158.4840,1003.0234) || PlayerToPoint(2.0,playerid,197.2001,179.2701,1003.0234) || PlayerToPoint(2.0,playerid,709.5348,-568.6559,-6.1966))
	 	{
	 	    if(PlayerInfo[playerid][pEmprego] != 2)
	 		{
	    		SendClientMessage(playerid, COLOR_GRAD2, "Voce nao e advogado !");
	    		return 1;
		 	}
			if(Advogando == char)
	 		{
	    		SendClientMessage(playerid, COLOR_GRAD2, "[BPR] Alguem ja esta soltando presos !");
	    		return 1;
		 	}
		 	new string[100];
		 	format(Cidadao, sizeof(Cidadao),"");
		 	format(PresoNome1, sizeof(PresoNome1),"");
		 	format(PresoNome2, sizeof(PresoNome2),"");
		 	format(PresoNome3, sizeof(PresoNome3),"");
		 	format(PresoNome4, sizeof(PresoNome4),"");
		 	format(PresoNome5, sizeof(PresoNome5),"");
		 	format(PresoNome6, sizeof(PresoNome6),"");
		 	format(PresoNome7, sizeof(PresoNome7),"");
		 	format(PresoNome8, sizeof(PresoNome8),"");
		 	format(PresoNome9, sizeof(PresoNome9),"");
		 	format(PresoNome10, sizeof(PresoNome10),"");
		 	PenaEscolhida = void; Diminuir = void; PrecoAdvogado = void; Advogando = void; Presidiarios = void; Ownado = void; SoltandoPreso = void;
	 	    for(new	x = 0; x < MAX_PLAYERS; x++){if(PlayerInfo[x][pJailed] > 0 && PlayerInfo[x][pJailed] != 1337){Presidiarios ++;}}
		 	for(new	w = 0; w < MAX_PLAYERS; w++)
		 	{
		 	    if(PlayerInfo[w][pJailed] > 0 && PlayerInfo[w][pJailed] != 1337)
		 	    {
		 	        Ownado++;
					if(Ownado == 1){PresoID1 = w;format(PresoNome1, sizeof(PresoNome1), GetName(w));}
					else if(Ownado == 2){PresoID2 = w;format(PresoNome2, sizeof(PresoNome2), GetName(w));}
					else if(Ownado == 3){PresoID3 = w;format(PresoNome3, sizeof(PresoNome3), GetName(w));}
					else if(Ownado == 4){PresoID4 = w;format(PresoNome4, sizeof(PresoNome4), GetName(w));}
					else if(Ownado == 5){PresoID5 = w;format(PresoNome5, sizeof(PresoNome5), GetName(w));}
					else if(Ownado == 6){PresoID6 = w;format(PresoNome6, sizeof(PresoNome6), GetName(w));}
					else if(Ownado == 7){PresoID7 = w;format(PresoNome7, sizeof(PresoNome7), GetName(w));}
					else if(Ownado == 8){PresoID8 = w;format(PresoNome8, sizeof(PresoNome8), GetName(w));}
					else if(Ownado == 9){PresoID9 = w;format(PresoNome9, sizeof(PresoNome9), GetName(w));}
					else if(Ownado == 10){PresoID10 = w;format(PresoNome10, sizeof(PresoNome10), GetName(w));}
			 	}
		 	}
		 	Advogando = char;
		 	if(Presidiarios == 0)
	 		{
	    		SendClientMessage(playerid, COLOR_GRAD2, "[BPR] Nao ha ninguem que possa ser solto !");
	    		Advogando = void;
	    		Ownado = void;
	    		return 1;
		 	}
		 	else if(Presidiarios == 1)
			{
	        	format(string, sizeof(string), "%s [ID %d] %s",
		 		PresoNome1, PresoID1, GetTempo(1));
		 	}
		 	else if(Presidiarios == 2)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2, GetTempo(2));
		 	}
		 	else if(Presidiarios == 3)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2, GetTempo(2), PresoNome3, PresoID3, GetTempo(3));
		 	}
		 	else if(Presidiarios == 4)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4, GetTempo(4));
		 	}
		 	else if(Presidiarios == 5)
	   		{
		 		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			  	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5));
			}
		 	else if(Presidiarios == 6)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5), PresoNome6, PresoID6, GetTempo(6));
		 	}
		 	else if(Presidiarios == 7)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5), PresoNome6, PresoID6, GetTempo(6),
			   	PresoNome7, PresoID7, GetTempo(7));
		 	}
		 	else if(Presidiarios == 8)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5), PresoNome6, PresoID6, GetTempo(6),
			   	PresoNome7, PresoID7, GetTempo(7), PresoNome8, PresoID8, GetTempo(8));
		 	}
		 	else if(Presidiarios == 9)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5), PresoNome6, PresoID6, GetTempo(6),
			   	PresoNome7, PresoID7, GetTempo(7), PresoNome8, PresoID8, GetTempo(8),
			   	PresoNome9, PresoID9, GetTempo(9));
		 	}
		 	else if(Presidiarios == 10)
	   		{
	    		format(string, sizeof(string), "%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s\n%s [ID %d] %s",
			 	PresoNome1, PresoID1, GetTempo(1), PresoNome2, PresoID2,
			 	GetTempo(2), PresoNome3, PresoID3, GetTempo(3), PresoNome4, PresoID4,
			  	PresoNome5, PresoID5, GetTempo(5), PresoNome6, PresoID6, GetTempo(6),
			   	PresoNome7, PresoID7, GetTempo(7), PresoNome8, PresoID8, GetTempo(8),
			   	PresoNome9, PresoID9, GetTempo(9), PresoNome10, PresoID10, GetTempo(10));
		 	}
		 	ShowPlayerDialog(playerid, DIALOG_ADVOGADO,DIALOG_STYLE_LIST,"Lista Atual de Presos",string,"Soltar", "Cancelar");
 		}
    }
   	if((newkeys == KEY_SECONDARY_ATTACK))
    {
		if(PlayerToPoint(1.0,playerid,249.0358,74.6236,1003.6406) || PlayerToPoint(1.0,playerid,247.4305,77.2490,1003.6406))
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pv");
		}
		if(PlayerToPoint(1.0,playerid,249.9555,64.5031,1003.6406) || PlayerToPoint(1.0,playerid,251.3744,64.5719,1003.6406))
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pr");
		}
		if(PlayerToPoint(1.0,playerid,925.3904,-1210.9376,16.9796) || PlayerToPoint(1.0,playerid,921.4904,-1211.2009,16.9832)) //
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/ptpc");
		}
		if(PlayerToPoint(1.0,playerid,923.5170, -1209.0148, 18.7499))
		{
            ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pc");
		}
		if(PlayerToPoint(1.0,playerid,925.3904,-1210.9376,16.9796) || PlayerToPoint(1.0,playerid,921.4904,-1211.2009,16.9832)) //
		{
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/ptpc");
		}
	}
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		OnPlayerCommandText(playerid,"/entrar");
        OnPlayerCommandText(playerid,"/sair");
        OnPlayerCommandText(playerid,"/banco");
		if (InAFoodPlace[playerid] != 0)
		{
			if(PlayerToPoint(1.5,playerid,368.9714,-6.2486,1001.8516))
			{
				ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Cluckin' Bell", "Coracao no Espeto R$2\nCarne de Vaca R$4\nCarne de Jacare R$5\nCarne de Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,683.9015,-456.7076,-25.6099))
			{
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Burger Shot", "X-Baycon R$2\nX-Tudo R$4\nX-Especial R$5\nX-Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,375.6895,-118.9683,1001.4995))
			{
				ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Well Stacked Pizza", "Presunto e Mussarela - Pequena R$2\nPresunto e Mussarela - Grande R$4\nFrango e Azeitona R$5\nBacon e Chocolate R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,379.0611,-186.6032,1000.6328))
			{
				ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Jim's sticky ring", "Rosquinha Pequena R$2\nRosquinha Normal R$4\nRosquinha de Chefe R$5\nSuper Rosquinha R$4\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
				SetPlayerFacingAngle(playerid, 280);
			}
			SetCameraBehindPlayer(playerid);
		}
		if (PlayerToPoint(2, playerid, 361.8300,173.5202,1008.3828))
    	{
			OnPlayerCommandText(playerid,"/empregos");
    	}
    	if (PlayerToPoint(2, playerid, 359.5626,177.2621,1008.3828))
    	{
			OnPlayerCommandText(playerid,"/licencas");
    	}
    	if (PlayerToPoint(2.0, playerid, -26.8819,-89.6936,1003.5469) || PlayerToPoint(2.0, playerid, -22.2540,-55.6456,1003.5469)
    	|| PlayerToPoint(2.0, playerid, -22.3265,-138.4765,1003.5469) || PlayerToPoint(2.0, playerid, -30.3140,-28.3121,1003.5573)
		|| PlayerToPoint(2.0, playerid, 1101.9957,-1373.0579,13.7591))
    	{
    	    Controle(playerid, 0);
			ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Mercado 24/7", "Celular - R$100\nAgenda - R$2\nDado - R$2\nCamisinha - R$2\nCD-Player - R$2\nFrango - R$10\nHamburguer - R$10\nPizza - R$10", "Confirmar", "Cancelar");
    	}
    	if (PlayerToPoint(2.0, playerid, 312.1259,-166.1339,999.6010) || PlayerToPoint(2.0, playerid, 295.7041,-80.3617,1001.5156))
    	{
    	    Controle(playerid, 0);
    	    ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Loja de Armas", "Kit Vip\nEagle\nMP5\nShotgun\nAk-47\nM4t\nRifle", "Confirmar", "Cancelar");
        }
 		if(PlayerToPoint(15.0, playerid, 360.4069,169.9995,1008.3893))
		{
 			OnPlayerCommandText(playerid,"/mudarorigem");
		}
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    Controle(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "Estilos De Luta", "Cotoveladas\nRua\nKickBoxing\nKarate\nNormal", "confirma", "Cancela");
		}
        if(PlayerToPoint(2.0,playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334))
		{
		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
			    Controle(playerid, 0);
		    	ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Menu Mafia", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Voce nao e um mafioso");
			}
		}
        if (PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188) || PlayerToPoint(2.0, playerid, 1565.1235,-1666.9944,28.3956) || PlayerToPoint(2.0, playerid, 246.2975,87.4735,1003.6406))
		{
		    Controle(playerid, 0);
    		ShowPlayerDialog(playerid, 2585, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento", "Confirma", "Cancela");
 		}
 		if(PlayerToPoint(3.0,playerid,-1606.2809,672.5350,-5.2422) || PlayerToPoint(3.0,playerid,-1606.2809,672.5350,-5.2422))
 		{
		    Controle(playerid, 0);
    		ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento", "Confirma", "Cancela");
 		}
    	if(PlayerToPoint(1, playerid, 1531.4355,-1692.0564,6.2252) || PlayerToPoint(1, playerid, 238.2739,108.0566,1003.2257) || PlayerToPoint(1, playerid, -1540.8984,409.8900,7.3371)
		|| PlayerToPoint(1, playerid, 919.3007,-1259.4362,15.6641) || PlayerToPoint(1, playerid, -2446.5398,515.9565,30.2340) || PlayerToPoint(1, playerid, 608.6080,-592.8043,17.2330)
		|| PlayerToPoint(1,playerid,-1622.2772,677.4626,-4.9063))
    	{
    	    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
    	    {
    	        Controle(playerid, 0);
    	        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
    	    {
    	        Controle(playerid, 0);
    	        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
    	    {
    	        Controle(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
    	    }
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um policial !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2279.0664,2286.4050,4.9650))
    	{
    	    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e do Peaky Blinders !"); }
		}
		if(PlayerToPoint(1, playerid, 400.0611,2539.5366,16.5448))
		{
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da F.A.R.C !"); }
    	}
    	if(PlayerToPoint(1, playerid, 2811.7102,-1166.1824,1025.5703))
    	{
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Tropa da Turquia !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2323.5017,-158.8510,35.5547))
    	{
			if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Tropa da Turquia !"); }
    	}
    	if(PlayerToPoint(1, playerid, 2465.0017,-1680.2899,13.5217))
    	{
			if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da Groove Street !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2458.0613,785.0059,35.1719))
    	{
			if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da Groove Street !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1074.7671,-1204.1219,18.1446))
    	{
			if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Ballas !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2456.1233,126.3469,35.1719))
    	{
			if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Ballas !"); }
    	}
    	if(PlayerToPoint(1, playerid, 296.2728,1489.4459,1080.2578))
    	{
			if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Vagos !"); }
    	}
    	if(PlayerToPoint(1, playerid, -1827.8589,100.6187,15.1172))
    	{
			if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e dos Vagos  !"); }
    	}
    	if(PlayerToPoint(1, playerid, 2151.3218,-1789.1669,13.5097))
    	{
			if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e do Comando Vermelho !"); }
		}
    	if(PlayerToPoint(1, playerid, -2543.3452,1216.0988,37.4219))
    	{
			if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e do Comando Vermelho !"); }
		}
		if(PlayerToPoint(1, playerid, 681.3650,-445.1725,16.3359))
    	{
			if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao faz parte dos Sons of Anarchy !"); }
		}

		if(PlayerToPoint(1, playerid, 2768.6760,-1626.2833,10.9272))
    	{
			if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao faz parte dos Elements !"); }
		}
		if(PlayerToPoint(1, playerid, 1304.8378,-866.4293,39.5781))
    	{
			if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao faz parte do PCC !"); }
		}
		if(PlayerToPoint(1, playerid, -2354.0254,996.4910,50.8984))
    	{
			if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
			{
		    	Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao faz parte do PCC !"); }
		}
    	if(PlayerToPoint(1, playerid, 2041.6974,-1430.1006,17.1641))
    	{
			if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Medico !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2670.2769,638.8124,14.4531))
    	{
			if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Medico !"); }
    	}
    	if(PlayerToPoint(1, playerid, -1678.0742,1353.1334,7.1722))
    	{
			if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Triad !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1500.5797,-1848.5518,13.5469))
    	{
			if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Servidor P�blico !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2765.6533,382.5093,6.3281))
    	{
			if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Servidor P�blico !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1106.2151,-303.7052,73.9922))
    	{
			if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Hitman !"); }
    	}
    	if(PlayerToPoint(1, playerid, 752.1580,-1358.9927,13.5000))
    	{
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da Los Santos News !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2276.8560,541.4446,35.1719))
    	{
			if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da San Fierro News !"); }
    	}
    	if(PlayerToPoint(1, playerid, 1797.1150,-1704.7645,13.5278))
    	{
			if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Taxista !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2025.7383,379.5803,35.1719))
    	{
			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e um Taxista !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2634.2791,1409.7692,906.4647))
    	{
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da Cosa Nostra !"); }
    	}
    	if(PlayerToPoint(1, playerid, -2167.5757,644.8060,1057.7687))
    	{
			if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
    	        Controle(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Info HQ", "Lista de Membros\nAdministrar Membros\nAdministrar Gang/Org\nInformac�es\nArmas e Drogas\nEquipar", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da FamiliaShelby !"); }
    	}
    }
//==============================================================================
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		if(IsACop(playerid))
		{
			OnPlayerCommandText(playerid,"/pp");
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
//==============================================================================
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		if(IsACop(playerid))
		{
			OnPlayerCommandText(playerid,"/rocam");
			OnPlayerCommandText(playerid,"/fardapm");
			OnPlayerCommandText(playerid,"/fardapc");
			OnPlayerCommandText(playerid,"/fardafa");
			OnPlayerCommandText(playerid,"/fardaft");
			OnPlayerCommandText(playerid,"/fardapf");
			OnPlayerCommandText(playerid,"/fardabope");
		}
		else if(IsAGOV(playerid) || IsAGOVSF(playerid))
		{
            OnPlayerCommandText(playerid,"/menugov");
            OnPlayerCommandText(playerid,"/menugovsf");
		}
		else if(IsACop(playerid))
		{
		    OnPlayerCommandText(playerid,"/menupm");
			OnPlayerCommandText(playerid,"/menupf");
			OnPlayerCommandText(playerid, "/menupc");
			OnPlayerCommandText(playerid, "/menubope");
			OnPlayerCommandText(playerid, "/menufa");
		}
		else if(PlayerInfo[playerid][pLider] == 4 || PlayerInfo[playerid][pMembro] == 4)
		{
		    OnPlayerCommandText(playerid,"/menumedicos");
		}
		else if(PlayerInfo[playerid][pLider] == 27 || PlayerInfo[playerid][pMembro] == 27)
		{
		    OnPlayerCommandText(playerid,"/menumedicossf");
		}
		else if(PlayerInfo[playerid][pLider] == 10 || PlayerInfo[playerid][pMembro] == 10)
		{
		    OnPlayerCommandText(playerid,"/menutaxi");
		}
		else if(PlayerInfo[playerid][pLider] == 9 || PlayerInfo[playerid][pMembro] == 9)
		{
		    OnPlayerCommandText(playerid,"/menulsnews");
		}
		else if(PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12)
		{
		    OnPlayerCommandText(playerid,"/menumcn");
		}
		else if(PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 14)
		{
		    OnPlayerCommandText(playerid,"/menugroove");
		}
		else if(PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 18)
		{
		    OnPlayerCommandText(playerid,"/menuvagos");
		}
		else if(PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 19)
		{
		    OnPlayerCommandText(playerid,"/menucv");
		}
		else if(PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 20)
		{
		    OnPlayerCommandText(playerid,"/menusoa");
		}
		else if(PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 21)
		{
		    OnPlayerCommandText(playerid,"/menuelements");
		}
		else if(PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 22)
		{
		    OnPlayerCommandText(playerid,"/menutriads");
		}
		else if(PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 23)
		{
		    OnPlayerCommandText(playerid,"/menupcc");
		}
		else if(PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 28)
		{
		    OnPlayerCommandText(playerid,"/menugrota");
		}
	}
	
	
	if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		if(IsPlayerInCaixa(playerid))
		{
		    OnPlayerCommandText(playerid,"/banco");
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
		if(gTeam[playerid] == 2  || IsACop(playerid) || IsAGOV(playerid))
		{
			OnPlayerCommandText(playerid,"/pe");
			OnPlayerCommandText(playerid,"/pg");
			OnPlayerCommandText(playerid,"/abrirgn");
			OnPlayerCommandText(playerid,"/pgprf");
			OnPlayerCommandText(playerid,"/pesf");
			OnPlayerCommandText(playerid,"/pc");
			OnPlayerCommandText(playerid,"/pb");
			OnPlayerCommandText(playerid,"/ppf");
		}
	}
	if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(IsAGOV(playerid))
		{
			if(PlayerToPoint(15.0, playerid, 1539.2235107422, -1838.2176513672, 15.320266723633))
			{
				OnPlayerCommandText(playerid,"/pgov");
		    }
		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(IsAJornal(playerid))
		{
			if(PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 14.200000762939))
			{
				OnPlayerCommandText(playerid,"/portaoreporter");
			}
		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(IsASFN(playerid))
		{
			if(PlayerToPoint(15.0, playerid, -2262.5871582031, 553.69573974609, 36.789016723633))
			{
				OnPlayerCommandText(playerid,"/psfn");
			}
		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(IsATaxiSF(playerid))
		{
			if(PlayerToPoint(15.0, playerid, -2016.2495117188, 395.068359375, 36.945266723633))
  			{
				OnPlayerCommandText(playerid,"/ptaxisf");
			}
		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  		if(IsATaxi(playerid))
		{
			if(PlayerToPoint(15.0, playerid, 1803.40002441,-1721.19995117,16.10000038))
  			{
				OnPlayerCommandText(playerid,"/ptaxi");
		    }
		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
			if(PlayerToPoint(15.0, playerid, 664.8344,-1309.7133,13.4609) || PlayerToPoint(15.0, playerid, 785.5371,-1157.6627,23.5792))
    		{
 				OnPlayerCommandText(playerid,"/pfs");
			}
 		}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
		if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
			if(PlayerToPoint(15.0, playerid, 321.39999389648, -1188.1999511719, 77.099998474121))
			{
 				OnPlayerCommandText(playerid,"/acn");
	 		}
		}
	}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	KeyAtivada[playerid] = false;
	return true;
}
BPR::ScoreLevel(playerid)
{
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	SetPlayerScore(playerid, LevScore);
}

forward velocimetro();
BPR::velocimetro()
{
    new string[500];
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInAnyVehicle(i))
            {
				format(string,sizeof(string),"%d ~w~km/h",GetPlayerSpeed(i));
				PlayerTextDrawSetString(i,velo[i][1],string);
				new Float:health;
				GetVehicleHealth(GetPlayerVehicleID(i),health);
				if(health == 1000) for(new a=26; a<36; a++) PlayerTextDrawColor(i,velo[i][a], 12582911);
				else if(health >= 900 && health < 1000) for(new a=26; a<36; a++) PlayerTextDrawColor(i,velo[i][a], 12582911),PlayerTextDrawColor(i,velo[i][35], -1);
				else if(health >= 800 && health < 900)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
					}
				}
				else if(health >= 700 && health < 800)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
					}
				}
				else if(health >= 600 && health < 700)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
					}
				}
				else if(health >= 500 && health < 600)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
					}
				}
                else if(health >= 400 && health < 500)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
						PlayerTextDrawColor(i,velo[i][30], -1);
					}
				}
                else if(health >= 300 && health < 400)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
						PlayerTextDrawColor(i,velo[i][30], -1);
						PlayerTextDrawColor(i,velo[i][29], -1);
					}
				}
				else if(health >= 200 && health < 300)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
						PlayerTextDrawColor(i,velo[i][30], -1);
						PlayerTextDrawColor(i,velo[i][29], -1);
						PlayerTextDrawColor(i,velo[i][28], -1);
					}
				}
				else if(health >= 100 && health < 200)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
						PlayerTextDrawColor(i,velo[i][30], -1);
						PlayerTextDrawColor(i,velo[i][29], -1);
						PlayerTextDrawColor(i,velo[i][28], -1);
						PlayerTextDrawColor(i,velo[i][27], -1);
					}
				}
				else if(health >= 0 && health < 100)
				{
					for(new a=26; a<36; a++)
					{
						PlayerTextDrawColor(i,velo[i][a], 12582911);
						PlayerTextDrawColor(i,velo[i][35], -1);
						PlayerTextDrawColor(i,velo[i][34], -1);
						PlayerTextDrawColor(i,velo[i][33], -1);
						PlayerTextDrawColor(i,velo[i][32], -1);
						PlayerTextDrawColor(i,velo[i][31], -1);
						PlayerTextDrawColor(i,velo[i][30], -1);
						PlayerTextDrawColor(i,velo[i][29], -1);
						PlayerTextDrawColor(i,velo[i][28], -1);
						PlayerTextDrawColor(i,velo[i][27], -1);
						PlayerTextDrawColor(i,velo[i][26], -1);
					}
				}

				switch(GetPlayerSpeed(i))
				{
				    case 0: {
  						for(new a=2; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 1..9: {
                        PlayerTextDrawColor(i,velo[i][2], 12582911);
                        PlayerTextDrawShow(i,velo[i][2]);
                        for(new a=3; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 10..19: {
				        for(new a=2; a<3; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=4; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 20..29: {
				        for(new a=2; a<4; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=5; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 30..39: {
				        for(new a=2; a<5; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=6; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 40..49: {
				        for(new a=2; a<6; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=7; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 50..59: {
				        for(new a=2; a<7; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=8; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 60..69: {
				        for(new a=2; a<8; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=9; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 70..79: {
				        for(new a=2; a<9; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=10; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 80..89: {
				        for(new a=2; a<10; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=11; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 90..99: {
				        for(new a=2; a<11; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=12; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 100..109: {
				        for(new a=2; a<12; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=13; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 110..119: {
				        for(new a=2; a<13; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=14; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 120..129: {
				        for(new a=2; a<14; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=15; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 130..139: {
				        for(new a=2; a<15; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=16; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 140..149: {
				        for(new a=2; a<16; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=17; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 150..159: {
				        for(new a=2; a<17; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=18; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 160..169: {
				        for(new a=2; a<18; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=19; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 170..179: {
				        for(new a=2; a<19; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=20; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 180..189: {
				        for(new a=2; a<20; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=21; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 190..199: {
				        for(new a=2; a<25; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=22; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 200..209: {
				        for(new a=2; a<22; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=23; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 210..219: {
				        for(new a=2; a<23; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
						for(new a=24; a<25; a++){
                       		PlayerTextDrawColor(i,velo[i][a], -1);
						}
				    }
				    case 220..229: {
				        for(new a=2; a<24; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
					   	PlayerTextDrawColor(i,velo[i][25], -1);
				    }
				    case 230..245:{
				    	for(new a=2; a<25; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
				    }
				    case 246..300:{
				    	for(new a=2; a<25; a++){
                            PlayerTextDrawColor(i,velo[i][a], 12582911);
						}
				    }
				}
				for(new a; a<37; a++) PlayerTextDrawShow(i,velo[i][a]);
			}
			else
			{
				for(new a; a<37; a++) PlayerTextDrawHide(i,velo[i][a]);
			    PlayerTextDrawSetString(i,velo[i][1],"0 ~w~km/h");
			}
        }
    }
	return 1;
}

BPR::RemoveRoadblock(playerid)
{
	DestroyObject(pRoadblock[playerid]);
	pRoadblock[playerid] = 0;
}
BPR::RemoveRoadPregos(playerid)
{
	SpikeInfo[playerid][sCreated]=0;
    SpikeInfo[playerid][sX]=0.0;
    SpikeInfo[playerid][sY]=0.0;
    SpikeInfo[playerid][sZ]=0.0;
    DestroyObject(SpikeInfo[playerid][sObject]);
}
BPR::RemoveRoadCones(playerid)
{
	DestroyObject(pRoadCones[playerid]);
	pRoadCones[playerid] = 0;
}
BPR::ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return true;
}
BPR::NSemAn(playerid)
{
	SemAn[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora voce ja usar o /an.");
}
BPR::BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
                    if(IsACop(playerid))
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforco foi cancelado.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforco foi cancelado automaticamente.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voce ainda nao pediu reforco.");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce nao e COP");
			}
		}
	}
	return true;
}
BPR::CheckHack() // Anti Xiter de Armas e Jet Pack
{
	new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	   	if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && !IsPlayerNPC(i) && spawnado[i] > 0)
	   	{
/*if(GetPlayerSpecialAction(i) == 2)
				{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Jetpack e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}*/
// Minigun
if(GetPlayerWeapon(i) == 38)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Minigun e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
// Lanca Chamas
if(GetPlayerWeapon(i) == 37)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando um Lanca Chamas e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
// Visao Noturna
else if(GetPlayerWeapon(i) == 44)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s ANTICHEAT: %s[ID %d] esta usando uma Visao Noturna e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
// Visao de Calor
else if(GetPlayerWeapon(i) == 45)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Visao de Calor e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
//Serra Eletrica
else if(GetPlayerWeapon(i) == 9)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Serra Eletrica e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
//Sawn-off
else if(GetPlayerWeapon(i) == 26)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Sawn-off e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
//Molotov
else if(GetPlayerWeapon(i) == 18)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando um Molotov e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
//Micro Uzi
else if(GetPlayerWeapon(i) == 28)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Micro Uzi e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
//Bazooca
else if(GetPlayerWeapon(i) == 36)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] esta usando uma Bazooca  e foi kickado automaticamente", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				Kick(i);
				}
    		}
	}
	return true;
}
BPR::GuerraEstacao(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia Cosa Nostra Dominaram a Estacao!",playername);
				SendClientMessageToAll(COR_COSA, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a estacao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZEstacao);
 				GangZoneShowForAll(GZEstacao,COLORGZ_LH);
 				Dominando[playerid] = 0;
 				ProvocoEstacao[playerid] = 0;
 				GuerranaEstacao = 0;
 				donoestacao = 1;
 				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Voce nao esta na estacao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a FamiliaShelby Dominaram a Estacao!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a estacao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COLORGZ_FamiliaShelby);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 2;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_YAK, "Voce nao esta na estacao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o PF Dominaram a Estacao!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a estacao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 3;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta na estacao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return true;
			}
		}
		return true;
	}
	return true;
}
BPR::GuerraCasarao(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mafia Cosa Nostra Dominaram o Casarao!",playername);
				SendClientMessageToAll(COR_COSA, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o casarao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_LH);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 1;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Voce nao esta no casarao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a FamiliaShelby Dominaram o Casarao!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o casarao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_FamiliaShelby);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 2;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_YAK, "Voce nao esta no casarao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Federal Dominaram o Casarao!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o casarao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 3;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta no casarao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return true;
			}
		}
		return true;
	}
	return true;
}
//================ GUERRA AERPORTO ===========================================================================
BPR::GuerraAero(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 1;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Elements Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_ELEMENT);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 1;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os PCC Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 1;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_SONS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 7;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_SONS, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 7;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 2;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 3;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Tropa da Turquia Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 4;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou a Praca do Aeroporto, mantenha a posicao.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_BOPE);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 5;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praca do Aeroporto, mantenha a posicao.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,GCOP_COLOR);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 6;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram a Praca do Aeroporto !",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou a Praca do Aeroporto, mantenha a posicao.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_PC);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 6;
				KillTimer(TempoGuerraAero);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Praca do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return true;
			}
		}
		return true;
	}
	return true;
}

BPR::GuerraFavela(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 1;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o PCC Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 1;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Elements Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_ELEMENT);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 1;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_SONS);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 7;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_SONS, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho Dominaram a Favela!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 7;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 2;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 3;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Tropa da Turquia Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 4;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou a Favela, mantenha a posicao.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_BOPE);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 5;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Favela, mantenha a posicao.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,GCOP_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 6;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou a Favela, mantenha a posicao.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_PC);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 6;
				KillTimer(TempoGuerraFavela);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return true;
			}
		}
		return true;
	}
	return true;
}
//==============================================================================
BPR::GuerraNavio(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street SF Dominaram o Navio!",playername);
				SendClientMessageToAll(COR_GRO, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				donoNavio = 1;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
  		 		donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram o Navio!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,COR_PCC);
				Dominando[playerid] = 0;
				donoNavio = 2;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 27)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tropa da TurquiaDominaram o Navio!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				donoNavio = 3;
				GangZoneShowForAll(GZNavio,0xF6000000);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da MDLDominaram o Navio!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				donoNavio = 4;
				GangZoneShowForAll(GZNavio,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa do EgitoDominaram o Navio!",playername);
				SendClientMessageToAll(COR_VAGOS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				donoNavio = 5;
				GangZoneShowForAll(GZNavio,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				donoNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da EscociaDominaram o Navio!",playername);
				SendClientMessageToAll(Cor_TDT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				donoNavio = 6;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Tropa de ParisDominaram o Navio!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Navio, mantenha a posicao.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,GCOP_COLOR);
				donoNavio = 7;
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				donoNavio = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Federal Dominaram o Navio!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COR_PF, "Voce dominou o Navio, mantenha a posicao.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				donoNavio = 8;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Forca TaticaDominaram o Navio!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou o Navio, mantenha a posicao.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				donoNavio = 9;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				donoNavio = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoNavio[playerid] == 1)
		{
			if(IsPlayerInNavio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram o Navio!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou o Navio, mantenha a posicao.");
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio,COR_PC);
				Dominando[playerid] = 0;
				donoNavio = 10;
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PC, "Voce nao esta no Navio.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZNavio);
				GangZoneShowForAll(GZNavio, 0xFFFFFF96);
				ProvocoNavio[playerid] = 0;
				GuerranaNavio = 0;
				donoNavio = 0;
				KillTimer(TempoGuerraNavio);
				return true;
			}
		}
		return true;
	}
	return true;
}
//==============================================================================
BPR::GuerraConstrucao(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street SF Dominaram a Construcao!",playername);
				SendClientMessageToAll(COR_GRO, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				donoConstrucao = 1;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
  		 		donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram a Construcao!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,COR_PCC);
				Dominando[playerid] = 0;
				donoConstrucao = 2;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 27)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tropa da TurquiaDominaram a Construcao!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				donoConstrucao = 3;
				GangZoneShowForAll(GZConstrucao,0xF6000000);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da MDLDominaram a Construcao!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				donoConstrucao = 4;
				GangZoneShowForAll(GZConstrucao,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa do EgitoDominaram a Construcao!",playername);
				SendClientMessageToAll(COR_VAGOS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				donoConstrucao = 5;
				GangZoneShowForAll(GZConstrucao,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				donoConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da EscociaDominaram a Construcao!",playername);
				SendClientMessageToAll(Cor_TDT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				donoConstrucao = 6;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Tropa de ParisDominaram a Construcao!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Construcao, mantenha a posicao.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,GCOP_COLOR);
				donoConstrucao = 7;
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				donoConstrucao = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Federal Dominaram a Construcao!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COR_PF, "Voce dominou a Construcao, mantenha a posicao.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				donoConstrucao = 8;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Forca TaticaDominaram a Construcao!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou a Construcao, mantenha a posicao.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				donoConstrucao = 9;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				donoConstrucao = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoConstrucao[playerid] == 1)
		{
			if(IsPlayerInConstrucao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram a Construcao!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou a Construcao, mantenha a posicao.");
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao,COR_PC);
				Dominando[playerid] = 0;
				donoConstrucao = 10;
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PC, "Voce nao esta na Construcao.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZConstrucao);
				GangZoneShowForAll(GZConstrucao, 0xFFFFFF96);
				ProvocoConstrucao[playerid] = 0;
				GuerranaConstrucao = 0;
				donoConstrucao = 0;
				KillTimer(TempoGuerraConstrucao);
				return true;
			}
		}
		return true;
	}
	return true;
}
//==============================================================================
BPR::GuerraPraia(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street SF Dominaram a Praia!",playername);
				SendClientMessageToAll(COR_GRO, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				donoPraia = 1;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
  		 		donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram a Praia!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,COR_PCC);
				Dominando[playerid] = 0;
				donoPraia = 2;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 27)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tropa da TurquiaDominaram a Praia!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				donoPraia = 3;
				GangZoneShowForAll(GZPraia,0xF6000000);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da MDLDominaram a Praia!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				donoPraia = 4;
				GangZoneShowForAll(GZPraia,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa do EgitoDominaram a Praia!",playername);
				SendClientMessageToAll(COR_VAGOS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				donoPraia = 5;
				GangZoneShowForAll(GZPraia,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				donoPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da EscociaDominaram a Praia!",playername);
				SendClientMessageToAll(Cor_TDT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				donoPraia = 6;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Tropa de ParisDominaram a Praia!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Praia, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,GCOP_COLOR);
				donoPraia = 7;
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				donoPraia = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Federal Dominaram a Praia!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COR_PF, "Voce dominou a Praia, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				donoPraia = 8;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Forca TaticaDominaram a Praia!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou a Praia, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				donoPraia = 9;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				donoPraia = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoPraia[playerid] == 1)
		{
			if(IsPlayerInPraia(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram a Praia!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou a Praia, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia,COR_PC);
				Dominando[playerid] = 0;
				donoPraia = 10;
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PC, "Voce nao esta na Praia.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPraia);
				GangZoneShowForAll(GZPraia, 0xFFFFFF96);
				ProvocoPraia[playerid] = 0;
				GuerranaPraia = 0;
				donoPraia = 0;
				KillTimer(TempoGuerraPraia);
				return true;
			}
		}
		return true;
	}
	return true;
}
//==============================================================================
BPR::GuerraPuteiro(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street SF Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_GRO, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				donoPuteiro = 1;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
  		 		donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,COR_PCC);
				Dominando[playerid] = 0;
				donoPuteiro = 2;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PCC, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 27)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tropa da Turquia Dominaram o Puteiro!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				donoPuteiro = 3;
				GangZoneShowForAll(GZPuteiro,0xF6000000);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da MDL Dominaram o Puteiro!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				donoPuteiro = 4;
				GangZoneShowForAll(GZPuteiro,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa do Egito Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_VAGOS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				donoPuteiro = 5;
				GangZoneShowForAll(GZPuteiro,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				donoPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Tropa da Escocia Dominaram o Puteiro!",playername);
				SendClientMessageToAll(Cor_TDT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				donoPuteiro = 6;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Tropa de Paris Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Puteiro, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,GCOP_COLOR);
				donoPuteiro = 7;
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				donoPuteiro = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Federal Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COR_PF, "Voce dominou o Puteiro, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				donoPuteiro = 8;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PF, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Forca Tatica Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou o Puteiro, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				donoPuteiro = 9;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				donoPuteiro = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoPuteiro[playerid] == 1)
		{
			if(IsPlayerInPuteiro(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram o Puteiro!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou o Puteiro, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro,COR_PC);
				Dominando[playerid] = 0;
				donoPuteiro = 10;
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PC, "Voce nao esta no Puteiro.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPuteiro);
				GangZoneShowForAll(GZPuteiro, 0xFFFFFF96);
				ProvocoPuteiro[playerid] = 0;
				GuerranaPuteiro = 0;
				donoPuteiro = 0;
				KillTimer(TempoGuerraPuteiro);
				return true;
			}
		}
		return true;
	}
	return true;
}
//==============================================================================
BPR::GuerraPark(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram o Park Glen !",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 1;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Elements Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_ELEMENT);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 1;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os PCC Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 1;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_SONS);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 7;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_SONS, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho Dominaram o Park Glen !",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 7;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram o Park Glen !",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 2;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram o Park Glen !",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 3;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Tropa da Turquia Dominaram o Park Glen !",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, a cada 5 minutos nela ganhara grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 4;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou o Park Glen, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_BOPE);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 5;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou o Park Glen, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,GCOP_COLOR);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 6;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}

	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram o Park Glen !",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou o Park Glen, mantenha a posicao.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,COR_PC);
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 6;
				KillTimer(TempoGuerraPark);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta no Park Glen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donopark = 0;
				KillTimer(TempoGuerraPark);
				return true;
			}
		}
		return true;
	}
	return true;
}

BPR::GuerraSkate(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 1;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Elements Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_ELEMENT, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,COR_ELEMENT);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 1;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os PCC Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PCC, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,COR_PCC);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 1;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_ELEMENT, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons of Anarchy Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,COR_SONS);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 7;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_SONS, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Comando Vermelho Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 7;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 2;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 3;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Los Tropa da Turquia Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_TDT_color, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a pista de skate, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_TDT_color);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 4;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, TEAM_TDT_color, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o BOPE Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_BOPE, string);
				SendClientMessage(playerid, COR_BOPE, "Voce dominou a Favela, mantenha a posicao.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,COR_BOPE);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 5;
				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_BOPE, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}


	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Militar Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voce dominou a Pista de Skate, mantenha a posicao.");
				GangZoneStopFlashForAll(GZSkate);
 				GangZoneShowForAll(GZSkate,GCOP_COLOR);
 				Dominando[playerid] = 0;
 				ProvocoSkate[playerid] = 0;
 				GuerranoSkate = 0;
 				donoskate = 6;
 				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
  	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Policia Civil Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PC, string);
				SendClientMessage(playerid, COR_PC, "Voce dominou a Pista de Skate, mantenha a posicao.");
				GangZoneStopFlashForAll(GZSkate);
 				GangZoneShowForAll(GZSkate,COR_PC);
 				Dominando[playerid] = 0;
 				ProvocoSkate[playerid] = 0;
 				GuerranoSkate = 0;
 				donoskate = 6;
 				KillTimer(TempoGuerraSkate);
				return true;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voce nao esta na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return true;
			}
		}
		return true;
	}
 	return true;
}


BPR::SBan(playerid, string[], string2[])
{
	new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(arquivo, sizeof(arquivo), "Banidos/%s.ini",PlayerName(playerid));
	getdate(Ano, Mes, Dia);
	format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
	gettime(Hora, Minuto, Segundo);
	format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
	format(gstring, 128, "[%d/%d/%d] [%d:%d:%d] %s IP:%s foi banido pelo admin %s, motivo: %s", v[2], v[1], v[0], v[3], v[4], v[5], PlayerName(playerid),
	ip, string2, string);
	SBanLog(gstring);
	if(dini_Exists(arquivo))
	{
		Kick(playerid);
	}
	else
	{
		dini_Create(arquivo);
		dini_Set(arquivo,"Motivo",string);
		dini_Set(arquivo,"Admin",string2);
		dini_Set(arquivo,"Data",tmp);
		dini_Set(arquivo,"Hora",tmp2);

		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		dini_Create(stri);
		dini_Set(stri,"Motivo",string);
		dini_Set(stri,"Admin",string2);
		dini_Set(stri,"Data",tmp);
		dini_Set(stri,"Hora",tmp2);
		dini_Set(stri,"Nick",PlayerName(playerid));
		Kick(playerid);
	}
	return true;
}

BPR::LoginAgora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		logouagora[playerid] = 0;
		KillTimer(TempoLogin);
	}
}
BPR::Corrida()
{
	if(pcorrida > 0)
	{
			pcorrida = 0;
	}
}
BPR::CorridaOni()
{
	if(pcorridaoni > 0)
	{
			pcorridaoni = 0;
	}
}
BPR::hbomba()
{
	if(phbomba > 0)
	{
		phbomba = 0;
	}
}

forward TimerJetpack();
BPR::TimerJetpack()
{
	if(TimerJet > 0)
	{
		TimerJet = 0;
	}
}

BPR::cbomba()
{
	if(pcbomba > 0)
	{
		pcbomba = 0;
	}
}
BPR::Sinc()
{
	if(psinc > 0)
	{
			psinc = 0;
	}
}
BPR::Sequestrar()
{
	if(psequestrar > 0)
	{
			psequestrar = 0;
	}
}
BPR::Amarrar()
{
	if(pamarrar > 0)
	{
			pamarrar = 0;
	}
}

BPR::CheckOwnerb(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Empresas Com interiores
 			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i;
	        	    return true;
	        	}
			}
			// Empresas sem interiores
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i+100;
	        	    return true;
	        	}
			}
			PlayerInfo[playerid][pPbiskey] = 255;
			return true;
	}
	return true;
}
BPR::CheckOwnerh(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Casas
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
		    new playername[MAX_PLAYER_NAME];
        	GetPlayerName(playerid,playername,sizeof(playername));
        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
        	{
        	    PlayerInfo[playerid][pPHousekey] = h;
        	    PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
        	    return true;
        	}
		}
		PlayerInfo[playerid][pPHousekey] = 255;
		return true;
	}
	return true;
}
BPR::LoadCar()
{
	new arrCoords[14][64];
	new strFromFile2[256];
	new File: file = fopen("Configuracoes/Carros.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cDescription], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] = strval(arrCoords[9]);
			CarInfo[idx][cLicense] = strval(arrCoords[10]);
			CarInfo[idx][cOwned] = strval(arrCoords[11]);
			CarInfo[idx][cLock] = strval(arrCoords[12]);
			CarInfo[idx][cGrana] = strval(arrCoords[13]);
			CarInfo[idx][cID] = totalveiculosc+idx;
			idx++;
		}
		printf("Carros do Servidor Carregados.",idx);
	}
	return true;
}
BPR::SaveCars()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CarInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%s,%d,%d,%d\n",
		CarInfo[idx][cModel],
		CarInfo[idx][cLocationx],
		CarInfo[idx][cLocationy],
		CarInfo[idx][cLocationz],
		CarInfo[idx][cAngle],
		CarInfo[idx][cColorOne],
		CarInfo[idx][cColorTwo],
		CarInfo[idx][cOwner],
		CarInfo[idx][cDescription],
		CarInfo[idx][cValue],
		CarInfo[idx][cLicense],
		CarInfo[idx][cOwned],
		CarInfo[idx][cLock],
		CarInfo[idx][cGrana]);
		if(idx == 1)
		{
			file2 = fopen("Configuracoes/Carros.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/Carros.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}
BPR::CheckOwner(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		// Veiculos
 		new var03=0;
	    for(new i = 1; i < sizeof(CarInfo); i++)
	    {
	        new playername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,playername,sizeof(playername));
	        if(strcmp(playername,CarInfo[i][cOwner],true)==0)
			{
			    if(PlayerInfo[playerid][pVeiculo] == 0)
			    {
	            	PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo] = i;
				}
				if(PlayerInfo[playerid][pVeiculo2] == 0 && PlayerInfo[playerid][pVeiculo] != i)
			    {
	            	PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo2] = i;
				}
				var03=1;
	        }
 		}
		if(var03 == 0)
		{
			PlayerInfo[playerid][pCarKey] = 0;
	    	PlayerInfo[playerid][pVeiculo] = 0;
	    	PlayerInfo[playerid][pCarKey2] = 0;
	    	PlayerInfo[playerid][pVeiculo2] = 0;
   		}
	}
	return true;
}

BPR::Administrador(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] > 0 && admtrampando[playerid] > 0)
	{
	    ResetPlayerWeaponsEx(playerid);
		SetPlayerHealth(playerid,1500);
	}
}
BPR::Sincronizar(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
		SetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		SetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		SetPlayerHealth(playerid,PlayerHPP[playerid]);
		SetPlayerVirtualWorld(playerid,virt[playerid]);
		SetPlayerInterior(playerid,interior[playerid]);
		SetPlayerSkin(playerid,skinneg[playerid]);
		SetPlayerArmour(playerid,APP[playerid]);
		ResetPlayerWeaponsEx(playerid);
		GivePlayerWeapon(playerid,gunsinc[1][playerid],ammoo[1][playerid]);
		GivePlayerWeapon(playerid,gunsinc[2][playerid],ammoo[2][playerid]);
		GivePlayerWeapon(playerid,gunsinc[3][playerid],ammoo[3][playerid]);
		GivePlayerWeapon(playerid,gunsinc[4][playerid],ammoo[4][playerid]);
		GivePlayerWeapon(playerid,gunsinc[5][playerid],ammoo[5][playerid]);
		GivePlayerWeapon(playerid,gunsinc[6][playerid],ammoo[6][playerid]);
		GivePlayerWeapon(playerid,gunsinc[7][playerid],ammoo[7][playerid]);
		GivePlayerWeapon(playerid,gunsinc[8][playerid],ammoo[8][playerid]);
		GivePlayerWeapon(playerid,gunsinc[9][playerid],ammoo[9][playerid]);
		GivePlayerWeapon(playerid,gunsinc[10][playerid],ammoo[10][playerid]);
		GivePlayerWeapon(playerid,gunsinc[11][playerid],ammoo[11][playerid]);
		GivePlayerWeapon(playerid,gunsinc[12][playerid],ammoo[12][playerid]);
		if(vehicledd[playerid] == 1) { PutPlayerInVehicle(playerid,VehicleIDD[playerid],1); vehicledd[playerid] = 0; }
		sincronizando[playerid] = 0;
		KillTimer(TempoSinc);
		SendClientMessage(playerid,COLOR_YELLOW," Sincronizado com sucesso!");
	}
}
BPR::OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new string[128];
	new pstring[128];
	new plname[MAX_PLAYER_NAME];
	VisionInfo[playerid][Tels] = 0;
    GetPlayerName(clickedplayerid, plname, sizeof(plname));
    format(string, sizeof(string), "Menu do(a) %s", plname);
    format(pstring, sizeof(pstring), "Ligar para %s\nMandar SMS para %s", plname,plname);
    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, string, pstring, "Confirmar", "Cancelar");
    VisionInfo[playerid][Tels] = PlayerInfo[clickedplayerid][pPnumber];
	return true;
}
BPR::GuerraTerrorista(playerid)
{
    new string[128];
	new plname[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, plname, MAX_PLAYER_NAME);
 	TendoGuerra = 0;
    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    {
        KillTimer(TempoGuerra);
        VisionInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e as Forcas Armadas Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_EXE, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    {
        KillTimer(TempoGuerra);
        VisionInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Peaky Blinders Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_GI, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    {
        KillTimer(TempoGuerra);
        VisionInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a F.A.R.C Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_FARC, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//Forcas Armadas ownou
 	{
        format(string, sizeof(string), "as Forcas Armadas venceu a guerra matando %d do Peaky Blinders, %d da F.A.R.C",Territorio[talmortos], Territorio[almortos]);
       	SendClientMessageToAll(COLOR_EXE, string);
 	}
 	else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//F.A.R.C ownou
 	{
      	format(string, sizeof(string), "A F.A.R.C venceu a guerra matando %d do Peaky Blinders, %d das Forcas Armadas",Territorio[talmortos], Territorio[exemortos]);
       	SendClientMessageToAll(COR_FARC, string);
 	}
 	else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//Peaky Blinders ownou
 	{
 	  	format(string, sizeof(string), "O Peaky Blinders venceu a guerra matando %d da F.A.R.C, %d membros das Forcas Armadas",Territorio[almortos], Territorio[exemortos]);
       	SendClientMessageToAll(COR_GI, string);
 	}
 	else
 	{
 	  	format(string, sizeof(string), "Houve um empate na guerra! Morreram: %d da F.A.R.C, %d das Forcas Armadas, %d do Peaky Blinders!",Territorio[almortos], Territorio[exemortos],Territorio[talmortos]);
       	SendClientMessageToAll(COLOR_YELLOW2, string);
 	}
	return true;
}
BPR::UsarNovamente(playerid)
{
	UsouComando[playerid] = 0;
}
BPR::verping()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new ping = GetPlayerPing(i);
			if(ping >= pingmaximo && gPlayerLogged[i] == 1)
			{
				SetTimerEx("kickping", 6000, 0, "i", i);
			}
		}
	}
	return true;
}
BPR::kickping(playerid)
{
	new nome[MAX_PLAYER_NAME];
	new string[128];
	new ping = GetPlayerPing(playerid);
    GetPlayerName(playerid,nome,sizeof(nome));
	if(ping >= pingmaximo)
	{
		format(string,sizeof(string),"ADMIN: %s foi kickado pelo Sistema. Motivo: 6 Segundos Com Ping (%d / %d)",nome,ping,pingmaximo);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
		SendClientMessage(playerid, COLOR_LIGHTRED,"Cleitin_Bitoneira[BOT] te kickou do servidor, e nao o contrarie novamente");
		Kick(playerid);
	}
	return true;
}

BPR::SaveTrunk()
{
	new idx;
	new File: file2;
	idx = 1;
	while (idx < sizeof(CarInfo))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
		vehTrunk[idx][1],
		vehTrunkAmmo[idx][1],
		vehTrunk[idx][2],
		vehTrunkAmmo[idx][2],
		vehTrunk[idx][3],
		vehTrunkAmmo[idx][3],
		vehTrunk[idx][4],
		vehTrunkAmmo[idx][4],
		vehTrunkCounter[idx],
		vehTrunkArmour[idx]);
		if(idx == 1)
		{
			file2 = fopen("Configuracoes/PortaMala.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configuracoes/PortaMala.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}
BPR::LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[128];
	new File: file = fopen("Configuracoes/PortaMala.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    vehTrunk[idx][1] = strval(arrCoords[0]);
		    vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
		    vehTrunk[idx][2] = strval(arrCoords[2]);
		    vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
		    vehTrunk[idx][3] = strval(arrCoords[4]);
		    vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
		    vehTrunk[idx][4] = strval(arrCoords[6]);
		    vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
		    vehTrunkCounter[idx] = strval(arrCoords[8]);
		    vehTrunkArmour[idx] = floatstr(arrCoords[9]);
		    idx++;
		}
	}
	return true;
}

BPR::RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeaponsEx(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return true;
}
BPR::ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}
BPR::CarroMala(vehicleid)
{
	if(vehicleid >= totalveiculosh && vehicleid < CAR_AMOUNT) { return true; }
	return 0;
}
BPR::VoltarBombas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(SemBombas[playerid] == 1)
	    {
			SemBombas[playerid] = 0;
	    }
	}
}
BPR::PresoMulta(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(TicketOffer[playerid] < 999)
	    {
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			PlayerInfo[playerid][pJailed] = 1;
            SetPlayerWantedLevel(playerid, 0);
            WantedPoints[playerid] = 0;
      		SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailTime] = 600000;
		}
	}
}
BPR::OnPlayerExitedMenu(playerid)
{
    Controle(playerid, 1);
	return true;
}

BPR::RouboBanco(playerid)
{
	KillTimer(tempobanco);
	if(!PlayerToPoint(8.0,playerid,2144.4177,1641.5360,993.5761))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto ao Banco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no cofre do banco.");
        ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
        return true;
    }
	ForPlayers(i)
	{
		new grana = 800 + random(3000);
		if(PlayerToPoint(10.0,i,2144.4177,1641.5360,993.5761))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBanco[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto ao Banco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubobanco = 0; ProvocoBanco[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Banco");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d do cofre do Banco!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}

forward RouboCaixa(playerid);
BPR::RouboCaixa(playerid)
{
	KillTimer(tempobanco);
	if(!PlayerToPoint(8.0,playerid,1101.7953,-1375.0850,13.7594))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no caixa da loja.");
        ProvocoCaixa[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
        return true;
	}
	ForPlayers(i)
	{
		new grana = 500 + random(1000);
		if(PlayerToPoint(10.0,i,1101.7953,-1375.0850,13.7594))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoCaixa[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubocaixa = 0; ProvocoCaixa[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Caixa");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d do caixa da loja!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	if(!PlayerToPoint(8.0,playerid,836.2842,-2061.0852,12.8752))
	{
		SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
		SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
		Controle(playerid, 1);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no caixa da loja.");
		ProvocoCaixaP[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
		return true;
	}
	ForPlayers(i)
	{
		new grana = 500 + random(1000);
		if(PlayerToPoint(10.0,i,836.2842,-2061.0852,12.8752))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoCaixaP[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubocaixa = 0; ProvocoCaixaP[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Caixa");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d do caixa da loja!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	if(!PlayerToPoint(8.0,playerid,1026.6843,-1996.4766,13.1968))
	{
		SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
		SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
		Controle(playerid, 1);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no caixa da loja.");
		ProvocoCaixaP[playerid] = 0; roubando[playerid] = 0; roubocaixa = 0; KillTimer(tempobanco); temporoubocaixa = 0;
		return true;
	}
	ForPlayers(i)
	{
		new grana = 500 + random(1000);
		if(PlayerToPoint(10.0,i,1026.6843,-1996.4766,13.1968))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoCaixaP[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto a Caixa)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o caixa da loja! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubocaixa = 0; ProvocoCaixaP[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Caixa");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d do caixa da loja!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}

BPR::RouboLot(playerid)
{
	KillTimer(tempolot);
	if(!PlayerToPoint(8.0,playerid,820.6042,8.3990,1004.1962))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Loterica)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar o cofre da Loterica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta no cofre da Loterica.");
        ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
        return true;
    }
	ForPlayers(i)
	{
		new grana = 1000 + random(6000);
		if(PlayerToPoint(5.0,i,820.6042,8.3990,1004.1962))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLot[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Loterica)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre da Loterica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubolot = 0; ProvocoLot[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loterica");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d do cofre da Loterica!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}
BPR::RouboLoja1(playerid)
{
	KillTimer(tempoloja1);
	if(!PlayerToPoint(8.0,playerid,303.9740,-168.8060,999.5938))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Loja de Armas)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Loja de Armas 1.");
        ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
        return true;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,303.9740,-168.8060,999.5938))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja1[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Loja de Armas)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
           	 	roubando[playerid] = 0; rouboloja1 = 0; ProvocoLoja1[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Armas 1");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerWeapon(i, 34, 100);
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d da Loja de Armas 1!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}
BPR::RouboLoja2(playerid)
{
	KillTimer(tempoloja2);
	if(!PlayerToPoint(8.0,playerid,294.8272,-57.8448,1001.5156))
    {
    	SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Ammu Nation{BFC0C2})=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar a Ammu Nation! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Ammu Nation.");
        ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
        return true;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,294.8272,-57.8448,1001.5156))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja2[playerid] == 1)
            {
            	SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Ammu Nation{BFC0C2})=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Ammu Nation! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; rouboloja2 = 0; ProvocoLoja2[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Ammu Nation");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerWeapon(i, 34, 100);
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d da Ammu Nation!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}
BPR::RouboBinco(playerid)
{
	KillTimer(tempobinco);
	if(!PlayerToPoint(8.0,playerid,211.3917,-96.1839,1005.2578))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Binco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar a Binco ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Binco");
        ProvocoBinco[playerid] = 0; roubando[playerid] = 0; roubobinco = 0; KillTimer(tempobinco); temporoubobinco = 0;
        return true;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,211.3917,-96.1839,1005.2578))
		{
      		new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBinco[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Binco)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Binco ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubobinco = 0; ProvocoBinco[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Roupas");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d da Binco !",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}

BPR::RouboZip(playerid)
{
	KillTimer(tempozip);
	if(!PlayerToPoint(8.0,playerid,162.1060,-79.8251,1001.8047))
    {
        SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Zip)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar a Zip ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole playboy...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Zip");
        ProvocoZip[playerid] = 0; roubando[playerid] = 0; roubozip = 0; KillTimer(tempozip); temporoubozip = 0;
        return true;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,162.1060,-79.8251,1001.8047))
		{
      		new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoZip[playerid] == 1)
            {
                SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Zip)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Zip ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubozip = 0; ProvocoZip[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Roupas");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d da Zip !",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}


BPR::RouboVictim(playerid)
{
	KillTimer(tempovictim);
	if(!PlayerToPoint(8.0,playerid,205.4029,-11.5629,1005.2109))
    {
    	SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto � Victim)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
		format(gstring, sizeof(gstring), "%s e os %s nao conseguiram roubar a Victim ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
       	GameTextForPlayer(playerid,"~r~Deu mole vagabundo do karalho...", 2500, 3);
       	Controle(playerid, 1);
       	ClearAnimations(playerid);
        SendClientMessage(playerid, COLOR_GREY, "Voce nao esta na Victim");
        ProvocoVictim[playerid] = 0; roubando[playerid] = 0; roubovictim = 0; KillTimer(tempovictim); temporoubovictim = 0;
        return true;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,205.4029,-11.5629,1005.2109))
		{
      		new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoVictim[playerid] == 1)
            {
            	SendClientMessageToAll(COLOR_WHITE, "(=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=(Assalto Victim)=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=)");
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Victim ! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	GameTextForPlayer(playerid,"~g~Vai~w~ !~n~~g~Vai~w~ !~n~~g~Vai~w~ !", 2500, 3);
            	Controle(playerid, 1);
            	ClearAnimations(playerid);
            	roubando[playerid] = 0; roubovictim = 0; ProvocoVictim[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Roupas");
				//GivePlayerMoney(i, grana);
				PlayerInfo[i][pDsujo] += grana;
				format(gstring, sizeof(gstring), "Voce e os %s roubaram R$%d da Victim !",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::OnEnterExitModShop(playerid, enterexit, interiorid)
{
    Controle(playerid,0);
    return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::AnimRouboBanco(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
//ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",3.0,0,0,0,0,0);
}
BPR::AnimRouboLot(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::AnimRouboLoja(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::AnimRouboAmmu(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::AnimRouboBinco(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::AnimRouboZip(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::AnimRouboVictim(playerid)
{
ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.0, 1, 0, 0, 1, 0);
}
BPR::Aroubo()
{
    temporoubobanco = 0;
}
BPR::Aroubo2()
{
    temporoubolot = 0;
}
BPR::Aroubo3()
{
    temporouboloja1 = 0;
}
BPR::Aroubo4()
{
    temporouboloja2 = 0;
}
BPR::Aroubo6()
{
    temporoubobinco = 0;
}
BPR::Aroubo7()
{
    temporoubozip = 0;
}
BPR::Aroubo8()
{
    temporoubovictim = 0;
}
forward Aroubo9();
BPR::Aroubo9()
{
    temporoubocaixa = 0;
}
//=================[FIM ROUBAR]================

BPR::OnGameModeExit()
{
	DOF2_Exit();
   	dini_IntSet("Eleicoes.ini","TotalCandidatos",CandidatosRegistrados);
	dini_Set("Eleicoes.ini","Candidato1",Candidato1);
	dini_Set("Eleicoes.ini","Candidato2",Candidato2);
	dini_Set("Eleicoes.ini","Candidato3",Candidato3);
	dini_IntSet("Eleicoes.ini","Votos1",Votos[0]);
	dini_IntSet("Eleicoes.ini","Votos2",Votos[1]);
	dini_IntSet("Eleicoes.ini","Votos3",Votos[2]);
	dini_IntSet("Eleicoes.ini","PassadoUmDia",PassadoUmDia);
	dini_Set("Eleicoes.ini","Partido1",Partido1);
	dini_Set("Eleicoes.ini","Partido2",Partido2);
	dini_Set("Eleicoes.ini","Partido3",Partido3);
    for(new x = 0; x < MAX_PLAYERS; x++)
	{
	    if(IsPlayerConnected(x))
	    { OnPlayerSave(x); }
	}
 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	}
	SaveAccounts();
	DestroyObject(1);
	DestroyObject(2);
	DestroyObject(3);
	DestroyObject(4);
	DestroyObject(5);
	DestroyObject(6);
	DestroyObject(7);
	DestroyObject(8);
	DestroyObject(9);
	DestroyObject(10);
	DestroyObject(11);
	DestroyObject(12);
	DestroyObject(13);
	DestroyObject(14);
	DestroyObject(15);
	DestroyObject(16);
	DestroyObject(17);
	DestroyObject(18);
	DestroyObject(19);
	DestroyObject(20);
	DestroyObject(21);
	DestroyObject(22);
	DestroyObject(23);
	DestroyObject(24);
	DestroyObject(25);
	DestroyObject(26);
	DestroyObject(27);
	DestroyObject(28);
	DestroyObject(29);
	DestroyObject(30);
	DestroyObject(31);
	DestroyObject(32);
	DestroyObject(33);
	DestroyObject(34);
	DestroyObject(35);
	DestroyObject(36);
	DestroyObject(37);
	DestroyObject(38);
	DestroyObject(39);
	DestroyObject(40);
	DestroyObject(41);
	DestroyObject(42);
	DestroyObject(43);
	DestroyObject(44);
	DestroyObject(45);
	DestroyObject(46);
	DestroyObject(47);
	DestroyObject(48);
	DestroyObject(49);
	DestroyObject(50);
	DestroyObject(51);
	DestroyObject(52);
	DestroyObject(53);
	DestroyObject(54);
	DestroyObject(55);
	DestroyObject(56);
	DestroyObject(57);
	DestroyObject(58);
	DestroyObject(59);
	DestroyObject(60);
	DestroyObject(61);
	DestroyObject(62);
	
	for(new x; x<MAX_PLAYERS; x++)
	{
		if(noclipdata[x][cameramode] == CAMERA_MODE_FLY) CancelFlyMode(x);
	}
	
	/*if(_:g_WelcomeChannelId == 0)
   	g_WelcomeChannelId = DCC_FindChannelById("865653915735293952");
	new str[128];
	new DCC_Embed:embed = DCC_CreateEmbed();
	DCC_SetEmbedTitle(embed, "AVISO");
    DCC_SetEmbedColor(embed, 0xFF0000);
    format(str, sizeof str, "Servidor ira ficar offline em breve! Avisarei quando retornar!");
    DCC_SetEmbedDescription(embed, str);
	DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
	DCC_SetEmbedFooter(embed, "Atenciosamente, Equipe Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
	DCC_SendChannelEmbedMessage(g_WelcomeChannelId, embed, "Desculpe a marcação : D @everyone");*/
	return true;
}

//=================================[pedagio]===========================================//
BPR::ReduzTempo(playerid)
{
	Reduzido[playerid] = 0;
}
stock ReturnPlayerZone(playerid)
{
	new location[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
    return location;
}

stock NomeORG(playerid)
{
	new gangtext[64];
	if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0) { gangtext = "Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1) { gangtext = "Policia Militar"; }
    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) { gangtext = "Policia Rodoviaria"; }
	else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2) { gangtext = "BOPE"; }
	else if(PlayerInfo[playerid][pMembro] == 35 || PlayerInfo[playerid][pLider] == 35) { gangtext = "Forca Tatica"; }
	else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3) { gangtext = "Forcas Armadas"; }
	else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4) { gangtext = "Medicos LS"; }
	else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) { gangtext = "Medicos SF"; }
	else if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5) { gangtext = "Tropa da Turquia"; }
	else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) { gangtext = "Milicia"; }
	else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6) { gangtext = "Peaky Blinders"; }
	else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7) { gangtext = "Servidor P�blico"; }
	else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) { gangtext = "Servidor P�blico"; }
    else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) { gangtext = "Hitmans"; }
    else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) { gangtext = "Los Santos News"; }
    else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) { gangtext = "San Fierro News"; }
    else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) { gangtext = "Taxista LS"; }
    else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33) { gangtext = "Taxista SF"; }
	else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) { gangtext = "Policia Federal"; }
   	else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) { gangtext = "Cosa Nostra"; }
   	else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) { gangtext = "FamiliaShelby"; }
    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) { gangtext = "Groove"; }
    else if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) { gangtext = "Bonde dos 40"; }
    else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) { gangtext = "F.A.R.C"; }
    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) { gangtext = "Policia Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) { gangtext = "Ballas"; }
    else if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) { gangtext = "Tropa da Turquia"; }
    else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) { gangtext = "Vagos"; }
    else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) { gangtext = "Familia do Norte"; }
    else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) { gangtext = "Comando Vermelho"; }
    else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) { gangtext = "Grota"; }
    else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) { gangtext = "Sons of Anarchy"; }
    else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) { gangtext = "Elements"; }
    else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) { gangtext = "Primeiro Comando Capital"; }
    else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) { gangtext = "Terceiro Comando Puro"; }
    else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) { gangtext = "Triads"; }
	return gangtext;
}

stock SendMessageToOthersAdmins(playerid, color, const message[])
{
	new ret=0;
	for (new i=0; i<MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i) && i!=playerid && PlayerInfo[i][pAdmin] > 0)
		{
			SendClientMessage(i, color, message);
			ret++;
		}
	}
	return ret;
}
BPR::OnVehicleSpawn(vehicleid)
{
	SaveLastPosition(vehicleid);
	return 1;
}
BPR::OnVehicleStreamIn(vehicleid, forplayerid)
{
  	if (VTrancado[vehicleid] >= 1)
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	}
	else
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	}
	return true;
}
forward LockCar(carid);
BPR::LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}
forward UnLockCar(carid);
BPR::UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,0);
		}
	}
}
encode_tires(tires1, tires2, tires3, tires4)
{
	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}
//=====================================[INFOORG]================================//
forward ConviteInfoOrg(nome[], org, cargo);
BPR::ConviteInfoOrg(nome[], org, cargo)
{
	new arquivo[256];
	format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
 	if(cargo >= 6)
	{
	    strmid(InfoOrg[org][Lider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Lider",nome);
		return true;
	}
	if(cargo == 555)
	{
		if(strcmp(InfoOrg[org][Sub555],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][Sub555], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    dini_Set(arquivo,"Sub555",nome);
			return true;
		}
	}
	if(cargo == 444)
	{
		if(strcmp(InfoOrg[org][Sub444],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][Sub444], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    dini_Set(arquivo,"Sub444",nome);
			return true;
		}
	}
	if(strcmp(InfoOrg[org][Membro1],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro1",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro2],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro2",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro3],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro3",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro4],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro4",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro5],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro5",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro6],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro6",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro7],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro7",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro8],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro8",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro9],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro9",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro10],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro10",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro11],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Membro11",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro12],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro12",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro13],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro13",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro14],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro14",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro15],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro15",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro16],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro16",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro17],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro17",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro18],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro18",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro19],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro19",nome);
		return true;
	}
	if(strcmp(InfoOrg[org][Membro20],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro20",nome);
		return true;
	}
	return 0;
}
forward CheckInfoOrg(playerid);
BPR::CheckInfoOrg(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new PlayerNick[MAX_PLAYER_NAME];
	    GetPlayerName(playerid,PlayerNick,sizeof(PlayerNick));
	    for(new i = 1; i < sizeof(InfoOrg); i++)
		{
	    	if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
		    	if(strcmp(PlayerNick,InfoOrg[i][Lider],true)==0)
		    	{
		    	    PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Sub555],true)==0)
		    	{
   					PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Sub444],true)==0)
		    	{
   					PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro1],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro2],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro3],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro4],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro5],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro6],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro7],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro8],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro9],true)==0)
		    	{
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro10],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro11],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro12],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro13],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro14],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro15],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro16],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro17],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro18],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro19],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro20],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return true;
		    	}
		    	PlayerInfo[playerid][pCheckInfoOrg] = 1;
			}
		}
		if(PlayerInfo[playerid][pCheckInfoOrg] >= 1)
		{
		    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
       			if(PlayerInfo[playerid][pLider] > 0) { SendClientMessage(playerid, COLOR_LIGHTRED, "Voce foi demitido de l�der por um admin, agora voce e um Civil !"); }
				else { SendClientMessage(playerid, COLOR_LIGHTRED, "Voce foi demitido pelo seu l�der, agora voce e um Civil !"); }
				gTeam[playerid] = 3;
				MedicBill[playerid] = 0;
				PlayerInfo[playerid][pTeam] = 3;
				PlayerInfo[playerid][pMembro] = 0;
				PlayerInfo[playerid][pLider] = 0;
				PlayerInfo[playerid][pCargo] = 0;
				if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
				PlayerInfo[playerid][pCheckInfoOrg] = 0;
				SpawnPlayer(playerid);
				return true;
			}
		}
    }
	return true;
}
forward LoadOrgs();
BPR::LoadOrgs()
{
	new arquivo[256];
	new idx = 1;
	while (idx < sizeof(InfoOrg))
	{
	    format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",idx);
		strmid(InfoOrg[idx][Lider], dini_Get(arquivo,"Lider"), 0, strlen(dini_Get(arquivo,"Lider")), 255);
		strmid(InfoOrg[idx][Sub555], dini_Get(arquivo,"Sub555"), 0, strlen(dini_Get(arquivo,"Sub555")), 255);
		strmid(InfoOrg[idx][Sub444], dini_Get(arquivo,"Sub444"), 0, strlen(dini_Get(arquivo,"Sub444")), 255);
		strmid(InfoOrg[idx][Membro1], dini_Get(arquivo,"Membro1"), 0, strlen(dini_Get(arquivo,"Membro1")), 255);
		strmid(InfoOrg[idx][Membro2], dini_Get(arquivo,"Membro2"), 0, strlen(dini_Get(arquivo,"Membro2")), 255);
		strmid(InfoOrg[idx][Membro3], dini_Get(arquivo,"Membro3"), 0, strlen(dini_Get(arquivo,"Membro3")), 255);
		strmid(InfoOrg[idx][Membro4], dini_Get(arquivo,"Membro4"), 0, strlen(dini_Get(arquivo,"Membro4")), 255);
		strmid(InfoOrg[idx][Membro5], dini_Get(arquivo,"Membro5"), 0, strlen(dini_Get(arquivo,"Membro5")), 255);
		strmid(InfoOrg[idx][Membro6], dini_Get(arquivo,"Membro6"), 0, strlen(dini_Get(arquivo,"Membro6")), 255);
		strmid(InfoOrg[idx][Membro7], dini_Get(arquivo,"Membro7"), 0, strlen(dini_Get(arquivo,"Membro7")), 255);
		strmid(InfoOrg[idx][Membro8], dini_Get(arquivo,"Membro8"), 0, strlen(dini_Get(arquivo,"Membro8")), 255);
		strmid(InfoOrg[idx][Membro9], dini_Get(arquivo,"Membro9"), 0, strlen(dini_Get(arquivo,"Membro9")), 255);
		strmid(InfoOrg[idx][Membro10], dini_Get(arquivo,"Membro10"), 0, strlen(dini_Get(arquivo,"Membro10")), 255);
		strmid(InfoOrg[idx][Membro11], dini_Get(arquivo,"Membro11"), 0, strlen(dini_Get(arquivo,"Membro11")), 255);
		strmid(InfoOrg[idx][Membro12], dini_Get(arquivo,"Membro12"), 0, strlen(dini_Get(arquivo,"Membro12")), 255);
		strmid(InfoOrg[idx][Membro13], dini_Get(arquivo,"Membro13"), 0, strlen(dini_Get(arquivo,"Membro13")), 255);
		strmid(InfoOrg[idx][Membro14], dini_Get(arquivo,"Membro14"), 0, strlen(dini_Get(arquivo,"Membro14")), 255);
		strmid(InfoOrg[idx][Membro15], dini_Get(arquivo,"Membro15"), 0, strlen(dini_Get(arquivo,"Membro15")), 255);
		strmid(InfoOrg[idx][Membro16], dini_Get(arquivo,"Membro16"), 0, strlen(dini_Get(arquivo,"Membro16")), 255);
		strmid(InfoOrg[idx][Membro17], dini_Get(arquivo,"Membro17"), 0, strlen(dini_Get(arquivo,"Membro17")), 255);
		strmid(InfoOrg[idx][Membro18], dini_Get(arquivo,"Membro18"), 0, strlen(dini_Get(arquivo,"Membro18")), 255);
		strmid(InfoOrg[idx][Membro19], dini_Get(arquivo,"Membro19"), 0, strlen(dini_Get(arquivo,"Membro19")), 255);
		strmid(InfoOrg[idx][Membro20], dini_Get(arquivo,"Membro20"), 0, strlen(dini_Get(arquivo,"Membro20")), 255);
   		idx ++;
	}
	printf("Orgs do servidor Carregadas com sucesso.",idx);
	return true;
}
forward DemitirInfoOrg(nome[]);
BPR::DemitirInfoOrg(nome[])
{
    new arquivo[256];
    for(new i = 1; i < sizeof(InfoOrg); i++)
	{
        format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",i);
    	if(strcmp(nome,InfoOrg[i][Lider],true)==0)
    	{
    	    strmid(InfoOrg[i][Lider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
    		dini_Set(arquivo,"Lider","Ninguem");
    	    return true;
    	}
		if(strcmp(nome,InfoOrg[i][Sub555],true)==0)
		{
		    strmid(InfoOrg[i][Sub555], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Sub555","Ninguem");
			return true;
   		}
		if(strcmp(nome,InfoOrg[i][Sub444],true)==0)
		{
		    strmid(InfoOrg[i][Sub444], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Sub444","Ninguem");
			return true;
   		}
    	if(strcmp(nome,InfoOrg[i][Membro1],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro1","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro2],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro2","Ninguem");
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro3],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro3","Ninguem");
 	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro4],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro4","Ninguem");
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro5],true)==0)
    	{
		    strmid(InfoOrg[i][Membro5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro5","Ninguem");
		    return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro6],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro6","Ninguem");
		    return true;
    	}
		if(strcmp(nome,InfoOrg[i][Membro7],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro7","Ninguem");
  	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro8],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro8","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro9],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro9","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro10],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro10","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro11],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro11","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro12],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro12","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro13],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro13","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro14],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro14","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro15],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro15","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro16],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro16","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro17],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro17","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro18],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro18","Ninguem");
	    	return true;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro19],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro19","Ninguem");
	    	return true;
    	}
		if(strcmp(nome,InfoOrg[i][Membro20],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro20","Ninguem");
	    	return true;
    	}
    }
	return 0;
}
stock Demitir(playerid, para1)
{
	format(gstring, sizeof(gstring), "* Voce foi demitido pelo l�der %s Motivo: Limpou sua Vaga.", PlayerName(playerid));
	SendClientMessage(para1, COLOR_LIGHTRED, gstring);
	SendClientMessage(para1, COLOR_LIGHTRED, "* Agora voce e um civil novamente.");
 	gTeam[para1] = 3;
	PlayerInfo[para1][pTeam] = 3;
	PlayerInfo[para1][pMembro] = 0;
	PlayerInfo[para1][pCargo] = 0;
	if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 41; }
    SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[para1] = 0;
	SpawnPlayer(para1);
}
stock DemitirLider(playerid)
{
	SendClientMessage(playerid, COLOR_LIGHTRED, "Voce foi demitido de l�der por um admin, agora voce e um Civil !");
	gTeam[playerid] = 3;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 40; }
    SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[playerid] = 0;
	SpawnPlayer(playerid);
}
forward TemVaga(family);
BPR::TemVaga(family)
{
	if(strcmp(InfoOrg[family][Membro1], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro2], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro3], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro4], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro5], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro6], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro7], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro8], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro9], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro10], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro11], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro12], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro13], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro14], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro15], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro16], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro17], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro18], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro19], "Ninguem", true) == 0)
   	{
		return true;
	}
	if(strcmp(InfoOrg[family][Membro20], "Ninguem", true) == 0)
   	{
		return true;
	}
	return 0;
}
BPR::OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
    if(damagedid == INVALID_PLAYER_ID) return true;
    if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(damagedid))
    {
        SendClientMessage(playerid, COR_PR, "Nao podes atirar de seu veiculo!");
        RemovePlayerFromVehicle(playerid);
        return false;
    }
    return true;
}
forward IsPlayerOnline(name[]);
BPR::IsPlayerOnline(name[])
{
	new PlayerName2[MAX_PLAYER_NAME];
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
	    	GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
	    	if(strcmp(name,PlayerName2,true)==0)
			{
		    	return true;
			}
		}
	}
	return 0;
}
forward GetPlayerID(string[]);
BPR::GetPlayerID(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
    	if(IsPlayerConnected(i))
		{
        	new testname[MAX_PLAYER_NAME];
	    	GetPlayerName(i, testname, sizeof(testname));
	    	if(strcmp(testname,string,true)==0)
	    	{
	    	    return i;
	    	}
		}
    }
    return INVALID_PLAYER_ID;
}
forward Avaliar(playerid);
BPR::Avaliar(playerid)
{
KillTimer(TempoAvaliar[playerid]);
Avaliado[playerid] = 0;
return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=//
stock IsNumero(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return true;
}
stock IsPlayerInTerritorio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= Territorio[MinX] && y >= Territorio[MinY] && x <= Territorio[MaxX] && y <= Territorio[MaxY]) return true;
    return 0;
}
BPR::fecharFamiliaShelby1()
{
	MoveObject(pFamiliaShelby1, 664.862,-1309.311,15.234,3);
}
BPR::fecharFamiliaShelby3()
{
    MoveObject(pFamiliaShelby3, 785.128,-1152.442,25.430,3);
}
forward fecharacn();
BPR::fecharacn()
{
	MoveObject(acn,321.39999389648, -1188.1999511719, 77.099998474121,3);
}
stock IsVehicleValid(id)
{
	new type=GetVehicleModel(id);
	new blocked[]={ 548, 425, 417, 487, 488, 497, 563, 447, 469, 520 };
	for(new i;i<sizeof(blocked);i++)
	{
		if(type == blocked[i])
		{
			return 0;
		}
	}
	return true;
}
stock IsPlayerInArea(playerid, Float:max_x, Float:min_x, Float:max_y, Float:min_y)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return true;
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new Float:x,Float:y,Float:pz;
	GetPlayerPos(playerid,x,y,pz);
	if (
 	(IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) //lv piratenschiff
  	|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) //lv visage
  	|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) //lv staucamm
  	|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24) //sf s�dwesten kleiner teich
  	|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) //sf gammel teich
  	|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) //ls neben dem airport
  	|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) //ls mitte teich
  	|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) //ls weiter s�d�stlich
  	|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) //lv pool �stlich
  	|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) //ls pool nordwestlich
  	|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) //pool bei maddog's haus oben
  	|| (pz < 1.5)
	)
	{
	    return true;
	}
	return 0;
}
stock SetHora()
{
	gettime(hour, minute, second);
	if(hour == 0 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
	if(hour == 1 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 2 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 3 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 4 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 5 && minute >= 0 && minute <= 39) { SetWorldTime(5); }
	if(hour == 5 && minute >= 40 && minute <= 49) { SetWorldTime(23); }
	if(hour == 5 && minute >= 50 && minute <= 59) { SetWorldTime(22); }
	if(hour == 6 && minute >= 0 && minute <= 9) { SetWorldTime(21); }
	if(hour == 6 && minute >= 30 && minute <= 59) { SetWorldTime(7); }
	if(hour == 7 && minute >= 0 && minute <= 59) { SetWorldTime(7); }
	if(hour == 8 && minute >= 0 && minute <= 59) { SetWorldTime(8); }
	if(hour == 9 && minute >= 0 && minute <= 59) { SetWorldTime(9); }
	if(hour == 10 && minute >= 0 && minute <= 59) { SetWorldTime(10); }
	if(hour == 11 && minute >= 0 && minute <= 59) { SetWorldTime(11); }
	if(hour == 12 && minute >= 0 && minute <= 59) { SetWorldTime(12); }
	if(hour == 13 && minute >= 0 && minute <= 59) { SetWorldTime(13); }
	if(hour == 14 && minute >= 0 && minute <= 59) { SetWorldTime(14); }
	if(hour == 15 && minute >= 0 && minute <= 59) { SetWorldTime(15); }
	if(hour == 16 && minute >= 0 && minute <= 59) { SetWorldTime(16); }
	if(hour == 17 && minute >= 0 && minute <= 59) { SetWorldTime(17); }
	if(hour == 17 && minute >= 35 && minute <= 39) { SetWorldTime(20); }
	if(hour == 17 && minute >= 40 && minute <= 49) { SetWorldTime(21); }
	if(hour == 17 && minute >= 55 && minute <= 59) { SetWorldTime(23); }
	if(hour == 18 && minute >= 0 && minute <= 29) { SetWorldTime(5); }
	if(hour == 19 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 20 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 21 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 22 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 23 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
}
forward Atualizar3Dtexts();
BPR::Atualizar3Dtexts()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    Delete3DTextLabel(HouseLabel[h]);
		if(HouseInfo[h][hOwned] == 0)
		{
			format(gstring, sizeof(gstring), TextCasaVenda,HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel],h);
			HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 0)
			{
				format(gstring, sizeof(gstring), TextCasa,HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
			else
			{
				format(gstring, sizeof(gstring), TextCasaAl,HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel],h);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		Delete3DTextLabel(BizzLabel[h]);
		if(BizzInfo[h][bOwned] == 0)
		{
			format(gstring, sizeof(gstring), TextEmpresaVenda,BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded],h);
			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
   			format(gstring, sizeof(gstring), TextEmpresa,BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded],h);
   			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		Delete3DTextLabel(SBizzLabel[h]);
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(gstring, sizeof(gstring), TextMEmpresaVenda,SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded],h);
			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
   			format(gstring, sizeof(gstring), TextMEmpresa,SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded],h);
   			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
	}
}
stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}


forward ContarJogadores();
BPR::ContarJogadores()
{
    new Jogadores = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i) && !IsPlayerNPC(i)){Jogadores++;}
    }
    return Jogadores;
}
forward ContarAdm();
BPR::ContarAdm()
{
    new Jogadores = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(admtrampando[i] >= 1){Jogadores++;}
    }
    return Jogadores;
}

forward ContarPM();
BPR::ContarPM()
{
    new Jogadores = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(OnDuty[i] >= 1){Jogadores++;}
    }
    return Jogadores;
}

forward ContarBandido();
BPR::ContarBandido()
{
    new Jogadores = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsABandido(i)){Jogadores++;}
    }
    return Jogadores;
}

stock RemovePlayerFromVehicleEx(playerid)
{
    RemovePlayerFromVehicle(playerid);
    Controle(playerid, 1);
}


stock GetPlayerOrg(playerid)
{
    new org;
    if(PlayerInfo[playerid][pLider] > 0) {
        org = PlayerInfo[playerid][pLider];return org;
    }
    if(PlayerInfo[playerid][pMembro] > 0) {
        org = PlayerInfo[playerid][pMembro];return org;
    }
    return 0;
}


/*IsNumeric(const string[])
{
    for (new i = 0, j = strlen(string); i < j; i++) {
        if (string[i] > '9' || string[i] < '0') return 0;
    }
    return true;
}*/


ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
    new pos = 0;
    while (text[pos] < 0x21) {
        if (text[pos] == 0) return INVALID_PLAYER_ID;
        pos++;
    }
    new userid = INVALID_PLAYER_ID;
    if (IsNumeric(text[pos])) {
        userid = strval(text[pos]);
        if (userid >=0 && userid < MAX_PLAYERS) {
            if(!IsPlayerConnected(userid)) {
                userid = INVALID_PLAYER_ID;
            }
            else {
                return userid;
            }
        }
    }

    new len = strlen(text[pos]);
    new count = 0;
    new name[MAX_PLAYER_NAME];
    for (new i = 0; i < MAX_PLAYERS; i++) {
        if (IsPlayerConnected(i)) {
            GetPlayerName(i, name, sizeof (name));
            if (strcmp(name, text[pos], true, len) == 0) {
                if (len == strlen(name)) {
                    return i;
                }
                else {
                    count++;userid = i;
                }
            }
        }
    }
    if (count != 1) {
        if (playerid != INVALID_PLAYER_ID) {
            if (count) {
                SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
            }
            else {
                SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
            }
        }
        userid = INVALID_PLAYER_ID;
    }
    return userid;
}

forward LoadCofreOrg();
BPR::LoadCofreOrg()
{
    new arquivo[64];
    new idx = 1;
    while (idx < sizeof(CofreOrg)) {
        format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",idx);
        CofreOrg[idx][Dinheiro] = dini_Int(arquivo,"Dinheiro");
        CofreOrg[idx][Materiais] = dini_Int(arquivo,"Materiais");
        CofreOrg[idx][Maconha] = dini_Int(arquivo,"Maconha");
        CofreOrg[idx][Cocaina] = dini_Int(arquivo,"Cocaina");
        CofreOrg[idx][Crack] = dini_Int(arquivo,"Crack");
        idx ++;
    }
    return true;
}


forward OnPlayerSave(playerid);
BPR::SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++) {
        OnPlayerSave(i);
        if(IsPlayerConnected(i)) {
            if(PlayerInfo[i][pContractTime] < 25) {
                PlayerInfo[i][pContractTime] ++;
            }
        }
    }
    SalvarCofreOrg();return true;
}


forward SaveAccounts();
forward SalvarCofreOrg();
BPR::SalvarCofreOrg()
{
    new arquivo[128];
    new idx = 1;
    while (idx < sizeof(CofreOrg)) {
        format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",idx);
        dini_IntSet(arquivo,"Dinheiro",CofreOrg[idx][Dinheiro]);
        dini_IntSet(arquivo,"Materiais",CofreOrg[idx][Materiais]);
        dini_IntSet(arquivo,"Maconha",CofreOrg[idx][Maconha]);
        dini_IntSet(arquivo,"Cocaina",CofreOrg[idx][Cocaina]);
        dini_IntSet(arquivo,"Crack",CofreOrg[idx][Crack]);
        idx ++;
    }
    return true;
}


stock DepositarGranaOrg(org,valor)
{
    new antes = CofreOrg[org][Dinheiro];
    CofreOrg[org][Dinheiro] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
    return true;
}


stock SacarGranaOrg(org,valor)
{
    new antes = CofreOrg[org][Dinheiro];
    CofreOrg[org][Dinheiro] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
    return true;
}


stock DepositarMaterialOrg(org,valor)
{
    new antes = CofreOrg[org][Materiais];
    CofreOrg[org][Materiais] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
    return true;
}


stock SacarMaterialOrg(org,valor)
{
    new antes = CofreOrg[org][Materiais];
    CofreOrg[org][Materiais] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
    return true;
}


stock DepositarMaconhaOrg(org,valor)
{
    new antes = CofreOrg[org][Maconha];
    CofreOrg[org][Maconha] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
    return true;
}


stock SacarMaconhaOrg(org,valor)
{
    new antes = CofreOrg[org][Maconha];
    CofreOrg[org][Maconha] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
    return true;
}


stock DepositarCocainaOrg(org,valor)
{
    new antes = CofreOrg[org][Cocaina];
    CofreOrg[org][Cocaina] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
    return true;
}


stock SacarCocainaOrg(org,valor)
{
    new antes = CofreOrg[org][Cocaina];
    CofreOrg[org][Cocaina] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
    return true;
}


stock DepositarCrackOrg(org,valor)
{
    new antes = CofreOrg[org][Crack];
    CofreOrg[org][Crack] = antes+valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
    return true;
}


stock SacarCrackOrg(org,valor)
{
    new antes = CofreOrg[org][Crack];
    CofreOrg[org][Crack] = antes-valor;
    new arquivo[64];
    format(arquivo, sizeof(arquivo), "Cofre Org/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
    return true;
}


forward IsAComandoVermelhoCar(carid);
BPR::IsAComandoVermelhoCar(carid)
{
    if((carid >= 278) && (carid <= 288)) {
        return true;
    }
    return 0;
}

forward IsAgrotaCar(carid);
BPR::IsAgrotaCar(carid)
{
    if((carid >= 525) && (carid <= 535))
	{
        return true;
    }
    return 0;
}

forward IsACaminhoneiroCar(carid);
BPR::IsACaminhoneiroCar(carid)
{
    if((carid >= 400) && (carid <= 402)) {
        return true;
    }
    return 0;
}


forward BusrouteEnd(playerid);
BPR::BusrouteEnd(playerid)
{
    if (gPlayerTerminal[playerid] == 13) {
        PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);TransportMoney[playerid] += 300;DisablePlayerCheckpoint(playerid);gPlayerTerminal[playerid] = 0;
    }
    else {
        new conta;conta = gPlayerTerminal[playerid]*50;
        format(gstring, 128, "Voce encerrou seu servico de onibus e ganhou R$%d.", conta-50);SendClientMessage(playerid, COLOR_LIGHTRED, gstring);PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);TransportMoney[playerid] += conta-50;DisablePlayerCheckpoint(playerid);gPlayerTerminal[playerid] = 0;
    }
    return true;
}


forward busstoptimer(playerid);
BPR::busstoptimer(playerid)
{
    if(IsPlayerConnected(playerid)) {
        new newcar = GetPlayerVehicleID(playerid);if(IsAOniCar(newcar)) {
            Controle(playerid, 1);SendClientMessage(playerid, TEAM_TDT_color, "Agora voce pode seguir ate a proxima parada de onibus!");
        }
    }
}

stock ResetPlayerWeaponsEx(playerid)
{
    ResetPlayerWeapons(playerid);
    PlayerInfo[playerid][pGun1] = 0;PlayerInfo[playerid][pGun2] = 0;PlayerInfo[playerid][pGun3] = 0;PlayerInfo[playerid][pGun4] = 0;PlayerInfo[playerid][pGun5] = 0;PlayerInfo[playerid][pGun6] = 0;PlayerInfo[playerid][pGun7] = 0;PlayerInfo[playerid][pGun8] = 0;PlayerInfo[playerid][pGun9] = 0;PlayerInfo[playerid][pGun10] = 0;PlayerInfo[playerid][pGun11] = 0;
    PlayerInfo[playerid][pGun12] = 0;PlayerInfo[playerid][pAmmo1] = 0;PlayerInfo[playerid][pAmmo2] = 0;PlayerInfo[playerid][pAmmo3] = 0;PlayerInfo[playerid][pAmmo4] = 0;PlayerInfo[playerid][pAmmo5] = 0;PlayerInfo[playerid][pAmmo6] = 0;PlayerInfo[playerid][pAmmo7] = 0;PlayerInfo[playerid][pAmmo8] = 0;PlayerInfo[playerid][pAmmo9] = 0;PlayerInfo[playerid][pAmmo10] = 0;PlayerInfo[playerid][pAmmo11] = 0;PlayerInfo[playerid][pAmmo12] = 0;
}
forward IsACaminhoneiro(playerid);
BPR::IsACaminhoneiro(playerid)
{
    if(IsPlayerConnected(playerid)) {
        new emprego = PlayerInfo[playerid][pEmprego];if(emprego==11) {
            return true;
        }
    }
    return 0;
}


forward ZerarRecarga(playerid);
BPR::ZerarRecarga(playerid){if(var1[playerid] != 0) var1[playerid] = 0;}


stock IPlog(playerid){new PlayerIP[17];GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));getdate(year, month, day);gettime(hour,minute);format(gstring, sizeof(gstring), "[%d/%d/%d - %d:%d] IP:tt %s - %s[%d]\n", day, month, year, hour, minute, PlayerIP, PlayerName(playerid), playerid);new File:hFile;hFile = fopen("Logs/IP.log", io_append);fwrite(hFile, gstring);fclose(hFile);}
stock AdminLog(string[]){new File:hFile;hFile = fopen("Logs/AdmTeste.log", io_append);fwrite(hFile, string);fclose(hFile);return true;}
stock LideresLog(string[]){new entry[128];format(entry, sizeof(entry), "%s\n",string);new File:hFile;hFile = fopen("Logs/Lideres.log", io_append);fwrite(hFile, entry);fclose(hFile);return true;}
stock AChatLog(string[]){new entry[128];format(entry, sizeof(entry), "%s\n",string);new File:hFile;hFile = fopen("Logs/AChat.log", io_append);fwrite(hFile, entry);fclose(hFile);return true;}
stock AComandosLog(string[]){new entry[128];format(entry, sizeof(entry), "%s\n",string);new File:hFile;hFile = fopen("Logs/ComandosAdmin.log", io_append);fwrite(hFile, entry);fclose(hFile);return true;}
forward DateProp(playerid);
BPR::DateProp(playerid)
{
    new playername[MAX_PLAYER_NAME];GetPlayerName(playerid, playername, sizeof(playername));new curdate = getdate();for(new h = 0; h < sizeof(HouseInfo); h++) {
        if (strcmp(playername, HouseInfo[h][hOwner], true) == 0) {
            HouseInfo[h][hDate] = curdate;OnPropUpdate();
        }
    }
    return true;
}


forward usarbomba();
BPR::usarbomba(){usarbombas = 0;}
BPR::usebomb(playerid){pbomba3[playerid] = 0;SendClientMessage(playerid, 0x33FF00FF, "Voce ja pode comprar bombas novamente");}
forward Checkprop();
BPR::Checkprop()
{
    new olddate;new string[128];new curdate = getdate();for(new h = 0; h < sizeof(HouseInfo); h++) {
        if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9) {
            olddate = HouseInfo[h][hDate];if(curdate-olddate >= 10) {
                getdate(v[0], v[1], v[2]);gettime(v[3], v[4], v[5]);
                format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);new File:hFile;hFile = fopen("Logs/CheckProp.log", io_append);fwrite(hFile, string);fclose(hFile);
                HouseInfo[h][hHel] = 0;HouseInfo[h][hArm] = 0;HouseInfo[h][hHealthx] = 0;HouseInfo[h][hHealthy] = 0;HouseInfo[h][hHealthz] = 0;HouseInfo[h][hArmorrx] = 0;HouseInfo[h][hArmorry] = 0;HouseInfo[h][hArmorrz] = 0;HouseInfo[h][hLock] = 1;HouseInfo[h][hOwned] = 0;HouseInfo[h][hVec] = 475;HouseInfo[h][hVcol1] = -1;HouseInfo[h][hVcol2] = -1;strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);OnPropUpdate();
            }
        }
    }
    return true;
}


BPR::IsArma(playerid)
{
    if(IsPlayerConnected(playerid)) {
        new lider = PlayerInfo[playerid][pLider];new member = PlayerInfo[playerid][pMembro];if(member==14 || member==18 || member==19 || member==5 || member==17 || member==20 || member==21 || member==22) {
            return true;
        }
        else if(lider==14 || lider==18 || lider==19 || lider==5 || lider==17 || lider==20 || lider==21 || member==22) {
            return true;
        }
    }
    return 0;
}


stock IsPlayerInLocal(playerid)
{
    if(PlayerToPoint(3.0,playerid,246.3115,121.0975,1003.2301)) {
        return true;
    }
    else if(PlayerToPoint(3.0,playerid,262.0182,71.0734,1003.2422)) {
        return true;
    }
    else if(PlayerToPoint(3.0,playerid,-10.3191,-270.1361,5.4297)) {
        return true;
    }
    else if(PlayerToPoint(3.0,playerid,211.2608,185.8552,1003.0313)) {
        return true;
    }
    else {
        return 0;
    }
}



BPR::SendHelperMessage(COLOR, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(PlayerInfo[i][pHelper] >= 1) {
                SendClientMessage(i, COLOR, string);
            }
        }
    }
}


BPR::SendStarCityMessage(COLOR, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(IsPlayerConnected(i)) {
            if(PlayerInfo[i][pAdmin] >= 1 || PlayerInfo[i][pHelper] >= 1 || PlayerInfo[i][pMod] >= 1) {
                SendClientMessage(i, COLOR, string);
            }
        }
    }
}


stock DefineOrgNameSequestro(orgid, Nome[], len)
{
    if(orgid == 5) return format(Nome, len, "Tropa da Turquia", 0);
    if(orgid == 31) return format(Nome, len, "Milicia", 0);
    if(orgid == 14) return format(Nome, len, "Groove", 0);
    if(orgid == 24) return format(Nome, len, "Bonde dos 40", 0);
    if(orgid == 17) return format(Nome, len, "Ballas", 0);
    if(orgid == 29) return format(Nome, len, "Tropa da Turquia", 0);
    if(orgid == 18) return format(Nome, len, "Vagos", 0);
    if(orgid == 25) return format(Nome, len, "Familia do Norte", 0);
    if(orgid == 19) return format(Nome, len, "Comando Vermelho", 0);
    if(orgid == 19) return format(Nome, len, "Grota", 0);
    if(orgid == 20) return format(Nome, len, "Sons Of Anarchy", 0);
    if(orgid == 21) return format(Nome, len, "Elements", 0);
    if(orgid == 22) return format(Nome, len, "Triads", 0);
    if(orgid == 23) return format(Nome, len, "Primeiro Comando Capital", 0);
    if(orgid == 26) return format(Nome, len, "Terceiro Comando Puro", 0);
    if(orgid == 6) return format(Nome, len, "Peaky Blinders", 0);
    if(orgid == 15) return format(Nome, len, "FARC", 0);
    if(orgid == 12) return format(Nome, len, "FamiliaShelby", 0);
    if(orgid == 13) return format(Nome, len, "Cosa Nostra", 0);
    return format(Nome, len, "Nenhum", 0);
}


stock GetName(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    return name;
}


stock AntiDeAMX()
{
    new a[][] = {
        "Unarmed (Fist)",
        "Brass K"
    };
#pragma unused a
}

/*BPR::Reloginho()
{
    SyncTime();
    new
        string[256],
        ano,
        mes,
        dia,
        horas,
        minutos,
        segundos;
    getdate(ano, mes, dia);gettime(horas, minutos, segundos);
    format(string, sizeof string, "~b~~h~~h~~h~%d/%s%d/2012", dia, ((mes < 10) ? ("0") : ("")), mes);TextDrawSetString(Reloginho1, string);
    format(string, sizeof string, "~b~~h~~h~~h~%s%d:%s%d:%s%d", (horas < 10) ? ("0") : (""), horas, (minutos < 10) ? ("0") : (""), minutos, (segundos < 10) ? ("0") : (""), segundos);TextDrawSetString(Reloginho2, string);
    TextDrawShowForAll(Reloginho1);TextDrawShowForAll(Reloginho2);
}*/

BPR::AcabarMochila(playerid){RemovePlayerAttachedObject(playerid,0);return true;}
stock SaveLastPosition(vehicleid){new Float:SaveCoord_X, Float:SaveCoord_Y, Float:SaveCoord_Z;GetVehiclePos(vehicleid, SaveCoord_X, SaveCoord_Y, SaveCoord_Z);sVehicle_X[vehicleid]=SaveCoord_X;sVehicle_Y[vehicleid]=SaveCoord_Y;sVehicle_Z[vehicleid]=SaveCoord_Z;}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsaMatObterPlace(playerid)
{
    if(PlayerToPoint(3.0,playerid,1949.4497,-2061.5300,13.5469)	|| PlayerToPoint(3.0,playerid,-2658.7659,1359.8953,7.0372))
    {
        return 1;
    }
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsaMatEntregarPlace(playerid)
{
    if(PlayerToPoint(3.0,playerid,1747.2849,-1944.2209,13.5674) || PlayerToPoint(3.0,playerid,-1749.5952,1316.0922,7.1797))
    {
        return 1;
    }
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsaMafMatObterPlace(playerid)
{
    if(PlayerToPoint(3.0,playerid,2748.6514,-2453.4204,13.8623))
    {
        return 1;
    }
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::IsaMafMatEntregarPlace(playerid)
{
    if(PlayerToPoint(3.0,playerid,2506.9197,-2218.9822,13.5469))
    {
        return 1;
    }
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock ChatAdmin(string[],nivel)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(PlayerInfo[i][pAdmin] >= nivel)
        {
            SendClientMessage(i, 0xFF0000AA, string);
        }
    }
    return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock GetTempo(id)
{
	new Tempo[20];
	switch(id)
	{
	    case 1:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID1][pJailTime]);return Tempo;}
		case 2:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID2][pJailTime]);return Tempo;}
		case 3:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID3][pJailTime]);return Tempo;}
		case 4:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID4][pJailTime]);return Tempo;}
		case 5:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID5][pJailTime]);return Tempo;}
		case 6:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID6][pJailTime]);return Tempo;}
		case 7:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID7][pJailTime]);return Tempo;}
		case 8:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID8][pJailTime]);return Tempo;}
		case 9:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID9][pJailTime]);return Tempo;}
		case 10:{format(Tempo,sizeof(Tempo),"Tempo: %ds", PlayerInfo[PresoID10][pJailTime]);return Tempo;}
	}
	format(Tempo, sizeof(Tempo), "");
	return Tempo;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock OrgPlayerCity(playerid)
{
	new txt[3];
	if(IsAGroove(playerid)||IsAVagos(playerid)||IsABallas(playerid)||IsATDT(playerid)||IsAComandoVermelho(playerid)||IsAPCC(playerid)||IsAJornal(playerid) || IsAAmbu(playerid)|| IsATaxi(playerid) || IsABOPE(playerid) || IsACopLS(playerid))
 	{
		format(txt, sizeof(txt),"LS");
	}
	else if(IsAB40(playerid)||IsAFDN(playerid)||IsAada(playerid)||IsAmilicia(playerid)||IsAgrota(playerid)||IsAtcp(playerid)||IsASFN(playerid)||IsAAmbuSF(playerid) || IsATaxiSF(playerid) || IsABOPESF(playerid) || IsACopSF(playerid))
 	{
        format(txt, sizeof(txt),"SF");
	}
	return txt;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock PlayerName(playerid){new Name[MAX_PLAYER_NAME];GetPlayerName(playerid, Name, MAX_PLAYER_NAME);return Name;}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock GetSpeedKM(playerid)
{
	new Float:PosX, Float:PosY, Float:PosZ, Float:PlayerSpeedDistance;
 	GetVehicleVelocity(GetPlayerVehicleID(playerid), PosX, PosY, PosZ);
	PlayerSpeedDistance = floatmul(floatsqroot(floatadd(floatadd(floatpower(PosX, 2), floatpower(PosY, 2)),  floatpower(PosZ, 2))), 170.0);
	new spe = floatround(PlayerSpeedDistance * 1);
	return spe;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::DrogasCombate(playerid,org)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(PlayerToPoint(30.0,i,x,y,z))
	    {
	    	new orgnoob = GetPlayerOrg(i);
	    	if(org == 18)
	    	{
	    	    if(org != orgnoob) { return 0; }
	    	}
	    	if(orgnoob == 18) { return 0; }
	    	if(WatchingTV[i] > 0)
	    	{
	    	    return 1;
	    	}
	    	if(org == 5)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 19) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	    }
	    	}
	    	if(org == 6)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 15) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	    }
	    	}
	    	if(org == 8)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 22) { return 0; }
	    	    }
	    	}
	    	if(org == 12)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 13) { return 0; }
	    	    }
	    	}
	    	if(org == 13)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 12) { return 0; }
	    	    }
	    	}
	    	if(org == 14)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 19) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	    }
	    	}
	    	if(org == 15)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 6) { return 0; }
	    	    }
	    	}
	    	if(org == 17)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 19) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	    }
	    	}
	    	if(org == 18)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 19) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        
	    	    }
	    	}
	    	if(org == 19)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	    }
	    	}
	    	if(org == 20)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        
	    	    }
	    	}
	    	if(org == 21)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	    }
	    	}
	    	if(org == 22)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 8) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	    }
	    	}
	    	if(org == 23)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	    }
	    	}
	    	if(org == 24)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 18) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 25) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	    }
	    	}
	    	if(org == 25)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 23) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	    }
	    	}
	    	if(org == 26)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	    }
	    	}
	    	if(org == 28)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 29) { return 0; }
	    	        if(orgnoob == 31) { return 0; }
	    	    }
	    	}
	    	if(org == 29)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 5) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 28) { return 0; }
	    	        if(orgnoob == 31) { return 0; }
	    	    }
	    	}
	    	if(org == 31)
	    	{
	    	    if(org != orgnoob)
	    	    {
	    	        if(orgnoob == 1) { return 0; }
	    	        if(orgnoob == 2) { return 0; }
	    	        if(orgnoob == 3) { return 0; }
	    	        if(orgnoob == 14) { return 0; }
	    	        if(orgnoob == 17) { return 0; }
	    	        if(orgnoob == 20) { return 0; }
	    	        if(orgnoob == 11) { return 0; }
	    	        if(orgnoob == 16) { return 0; }
	    	        if(orgnoob == 24) { return 0; }
	    	        if(orgnoob == 21) { return 0; }
	    	        if(orgnoob == 26) { return 0; }
	    	        if(orgnoob == 28) { return 0; }
	    	        if(orgnoob == 29) { return 0; }
	    	    }
	    	}
	    }
	}
	return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::OnPlayerHaveExtraCash(playerid,extraamount)
{
	return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock IsPlayerInCaixa(playerid)
{
    if(PlayerToPoint(2.0,playerid,1550.4807,-1669.7039,13.5624) || PlayerToPoint(2.0,playerid,1779.7886,-1161.1074,23.8281)
	|| PlayerToPoint(2.0,playerid,2308.8879,-13.2531,26.7422)
	//Caixinhas BPR
	|| PlayerToPoint(2.0,playerid,2127.97827, -1154.18250, 23.83960)|| PlayerToPoint(2.0,playerid,1862.84668, -1270.50769, 13.34580)|| PlayerToPoint(2.0,playerid,1833.49316, -1405.77771, 13.15980)|| PlayerToPoint(2.0,playerid,1810.37793, -1900.41040, 13.38740)|| PlayerToPoint(2.0,playerid,1468.12195, -1772.01233, 18.46230)
	|| PlayerToPoint(2.0,playerid,1363.04089, -1747.25623, 13.61550)|| PlayerToPoint(2.0,playerid,1186.46924, -1379.03796, 13.34980)|| PlayerToPoint(2.0,playerid,1523.1444,-1583.2682,13.5469)|| PlayerToPoint(2.0,playerid,1523.9661, -1583.6688, 13.85870)|| PlayerToPoint(2.0,playerid,1122.0795,-1374.7697,13.7296))
	{
	    return 1;
	}
	return 0;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock HeadshotCheck(playerid, &Float:x, &Float:y, &Float:z)
{
    new Float:fx,Float:fy,Float:fz;
    GetPlayerCameraFrontVector(playerid, fx, fy, fz);
    new Float:cx,Float:cy,Float:cz;
    GetPlayerCameraPos(playerid, cx, cy, cz);
    for(new Float:i = 0.0; i < 50; i = i + 0.5)
    {
        x = fx * i + cx;
        y = fy * i + cy;
        z = fz * i + cz;
        #if defined SHOWPATH
        CreatePickup(1239, 4, x, y, z, -1);
        #endif
        for(new player = 0; player < MAX_PLAYERS; player ++)
        {
            if(IsPlayerConnected(playerid))
            {
                if(player != playerid)
                {
                    if(GetPlayerSpecialAction(player) == SPECIAL_ACTION_DUCK)
                    {
                        if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z))
                        {
                            GameTextForPlayer(playerid, "~r~HEADSHOT!", 2000, 6);
                            GameTextForPlayer(player, "~r~HEADSHOT!", 2000, 6);

                            SetPlayerHealth(player, 0.0);
                            CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
                        }
                    }
                    else
                    {
                        if(IsPlayerInRangeOfPoint(player, 0.3, x, y, z - 0.7))
                        {

                            GameTextForPlayer(playerid, "~r~HEADSHOT!", 2000, 6);
                            GameTextForPlayer(player, "~r~HEADSHOT!", 2000, 6);
                            SetPlayerHealth(player, 0.0);
                            CallRemoteFunction("OnPlayerDeath", "ddd", player, playerid, 34);
                        }
                    }
                }
            }
        }
    }
    return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock OnConsoleSaveData(playerid, string[])
{
	if(KeyAtivada[playerid] == true){return 1;}
	if(strfind(string, "/logar", true) != -1){return 1;}
 	if(strfind(string, "/registrar", true) != -1){return 1;}
  	if(strfind(string, "/mudarsenha", true) != -1){return 1;}
   	if(strfind(string, "/bkclimacmd", true) != -1){return 1;}
   	if(strfind(string, "/sacar_input_type", true) != -1){return 1;}
	return 1;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
BPR::OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    if(newinteriorid & 18)
	{
        PlayAudioStreamForPlayer(playerid, "http://dc367.4shared.com/img/638313264/e16dd31f/dlink__2Fdownload_2FpzRk5_5FX0_3Ftsid_3D20120511-141249-b158e6f1/preview.mp3");
    }
    if(oldinteriorid & 18) {
        StopAudioStreamForPlayer(playerid);
    }
    return true;
}
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
forward OnPlayerChangeVehicle(playerid, vehicleid);
BPR::OnPlayerChangeVehicle(playerid, vehicleid)
{
    #pragma unused vehicleid
    if((GetTickCount() - vehicleTime[playerid]) < 250)
    {
        Kick(playerid);
    }

    vehicleTime[playerid] = GetTickCount();
}

BPR::OnRconLoginAttempt(ip[], password[], success)
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        new dev[MAX_PLAYER_NAME];
        new string[256];
        new pip[16];
		new minuto, hora, segundo;
        gettime(hora, minuto, segundo);
        
        GetPlayerName(i, dev, sizeof(dev));
        GetPlayerIp(i, pip, sizeof(pip));
        if(success)
        {
             if(!strcmp(ip, pip, true))
            {
                if(strcmp(dev,"Logan_Walker", true) == 0 || strcmp(dev,"Coyote_Walker", true) == 0)
                {
                    format(string, sizeof(string), "%s usou sua senha da Rcon e virou admin RCON!.", dev);
                    SendClientMessageToAll(COLOR_RED,string);

					//if(_:g_WelcomeChannelId == 0)
					//g_WelcomeChannelId = DCC_FindChannelById("865653970583420948");
					new str[128];
					new ipuser[128];
					new usuario[128];
					new horario[128];
					new dia[128];
					new DCC_Embed:embed = DCC_CreateEmbed();
					DCC_SetEmbedTitle(embed, "Aviso Rcon");
					DCC_SetEmbedColor(embed, 0xFF0000);
					format(str, sizeof str, "Conseguiu logar na Rcon!!");
					DCC_SetEmbedDescription(embed, str);
					format(usuario, sizeof usuario, "`%s`", dev);
					DCC_AddEmbedField(embed, "Usuario:", usuario, false);

					format(ipuser, sizeof ipuser, "`%s`", pip);
					DCC_AddEmbedField(embed, "IP:", ipuser, false);

					format(horario, sizeof horario, "`%02d:%02d:%02d`",hora, minuto, segundo);
					DCC_AddEmbedField(embed, "Horário:", horario, false);

					format(dia, sizeof dia, "`%d/%d/%d`", day,month,year);
					DCC_AddEmbedField(embed, "Dia:", dia, false);

					DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
                    return true;
                }
                else
                {
                    format(string, sizeof(string), "Voce nao tem permissao para logar-se como admin RCON e foi kickado.", dev);
                    SendClientMessage(i, COLOR_LIGHTRED, string);
                    format(string, sizeof(string), "%s foi Banido no servidor! Motivo: Nao esta autorizado a utilizar RCON",dev);
                    SendClientMessageToAll(COLOR_LIGHTRED, string);
                    Ban(i);

					//if(_:g_WelcomeChannelId == 0)
					//g_WelcomeChannelId = DCC_FindChannelById("865653970583420948");
					new str[128];
					new ipuser[128];
					new usuario[128];
					new horario[128];
					new dia[128];
					new DCC_Embed:embed = DCC_CreateEmbed();
					DCC_SetEmbedTitle(embed, "Aviso Rcon");
					DCC_SetEmbedColor(embed, 0xFF0000);
					format(str, sizeof str, "Senha aceita, mas não foi autorizado a logar!");
					DCC_SetEmbedDescription(embed, str);
					format(usuario, sizeof usuario, "`%s`", dev);
					DCC_AddEmbedField(embed, "Usuario:", usuario, false);

					format(ipuser, sizeof ipuser, "`%s`", pip);
					DCC_AddEmbedField(embed, "IP:", ipuser, false);

					format(horario, sizeof horario, "`%02d:%02d:%02d`",hora, minuto, segundo);
					DCC_AddEmbedField(embed, "Horário:", horario, false);

					format(dia, sizeof dia, "`%d/%d/%d`", day,month,year);
					DCC_AddEmbedField(embed, "Dia:", dia, false);

					DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
					DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
                    break;
                }
            }
        }
		else
		{
			format(gstring, 128, "RCON: %s tentou logar na Rcon mas errou a senha, Burro kkkkkkkkkkkkk",dev);
			ABroadCast(COLOR_YELLOW,gstring,1);

			//if(_:g_WelcomeChannelId == 0)
			//g_WelcomeChannelId = DCC_FindChannelById("865653970583420948");
			new str[128];
			new ipuser[128];
			new usuario[128];
			new horario[128];
			new dia[128];
			new DCC_Embed:embed = DCC_CreateEmbed();
			DCC_SetEmbedTitle(embed, "Aviso Rcon");
			DCC_SetEmbedColor(embed, 0xFF0000);
			format(str, sizeof str, "Senha errada!");
			DCC_SetEmbedDescription(embed, str);
			format(usuario, sizeof usuario, "`%s`", dev);
			DCC_AddEmbedField(embed, "Usuario:", usuario, false);
			format(ipuser, sizeof ipuser, "`%s`", pip);
			DCC_AddEmbedField(embed, "IP:", ipuser, false);
			format(horario, sizeof horario, "`%02d:%02d:%02d`",hora, minuto, segundo);
			DCC_AddEmbedField(embed, "Horário:", horario, false);
			format(dia, sizeof dia, "`%d/%d/%d`", day,month,year);
			DCC_AddEmbedField(embed, "Dia:", dia, false);
			DCC_SetEmbedThumbnail(embed, "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SetEmbedFooter(embed, "Log Brasil Play Real", "https://cdn.discordapp.com/attachments/856094328359616522/856094355869794304/21057e50ab1bbf1c4c4c0ae1b2ab845b.png");
			DCC_SendChannelEmbedMessage(logCMDAdmin, embed);
			break;
		}
    }
    return 1;
}
//==============================================================================
forward antifakekill2(playerid);
BPR::antifakekill2(playerid)
{
    antifakekill[playerid] --;
    if(antifakekill[playerid] > 2)
    {
        SendClientMessage(playerid, 0xFF0000AA, "Este servidor esta protegido por um Anti Fake Kill");
        Kick(playerid);
    }
    return 1;
}

//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock S_PutPlayerInVehicle(playerid, vehicleid, seatid)
{
    vehicleTime[playerid] = GetTickCount();
    return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
#if defined _ALS_PutPlayerInVehicle
    #undef PutPlayerInVehicle
#else
    #define _ALS_PutPlayerInVehicle
#endif
#define PutPlayerInVehicle S_PutPlayerInVehicle
//>-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
stock GivePlayerCash(playerid, quantia)
{
	GivePlayerMoney(playerid, quantia);
	SetPVarInt(playerid, "Dinheiro", GetPlayerMoney(playerid));
}